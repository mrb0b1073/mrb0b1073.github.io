[{"content":"Hey! 👋 I\u0026rsquo;m mrb0b1073 and this is my first post.\nWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\nExcited to start this adventure!\n","permalink":"http://localhost:1313/posts/hello-world/","summary":"\u003cp\u003eHey! 👋 I\u0026rsquo;m \u003cstrong\u003emrb0b1073\u003c/strong\u003e and this is my first post.\u003c/p\u003e\n\u003cp\u003eWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\u003cbr\u003e\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\u003c/p\u003e\n\u003cp\u003eExcited to start this adventure!\u003c/p\u003e","title":"Hello World"},{"content":"Introduction If you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\nIn cybersecurity there are broadly two complementary roles: Blue Team and Red Team. Blue Teams focus on defense, monitoring, incident response, hardening systems and keeping services secure, while Red Teams simulate attackers to find weaknesses and prove what an adversary could do. Ethical hacking aligns closely with Red Team operations, but cybersecurity is highly transversal across IT. There are many specialities or areas, such as cloud security, appsec, pentesting, forensics, governance, risk management, malware analysis, etc. Every topic could deserve its own post, so let\u0026rsquo;s keep it simple and focus on ethical hacking.\nHacker philosophy Let\u0026rsquo;s start with the idea of what is exactly a hacker. A hacker is someone who explores systems to understand how they work, finds creative ways to make or fix things, and solves technical problems. Historically the word describes curiosity, craft, and a drive to improve systems — not criminality. It is important to make the distinction between hacker and cracker, also called cybercriminal. A hacker explores, builds, discloses responsibly and works to improve security. They work in authorized environments or labs. On the other hand, a cracker breaks into systems for theft, vandalism or other illicit gain.\nHere you can find the most popularized ideas often summarized as the hacker ethic:\nCuriosity first: Learn by exploring and tinkering. Freedom of information: All knowledge should be shared to help progress. This fits properly with the idea of open source. Mistrust of needless authority: Centralized control sometimes blocks innovation. It is always good to question anything, specially common assumptions. Meritocracy: Skills, craft and results matter more than titles. Craftsmanship \u0026amp; elegance: Technical beauty matters. Build clean, clever and efficient solutions. Responsability \u0026amp; ethics: Use your skills to build, fix, educate and defend, not to harm. Core fundamentals Assuming you want to init yourself in hacking, you should first build competence across three basic pillars.\nOperating Systems You should learn as much as possible about Linux and Windows. Specially Linux, all the tools you will be using are meant to be used in a Linux environment. Skill with shell is required, learn basic commands and how to interact with the OS using the terminal. Research about processes, file permissions, package management and logs. A large proportion of web servers around the world run on Linux, although Windows is also widely used. Windows knowledge is really valuable too, considering active directory is strongly used in corporate environments.\nNetworking You have to understand how computers communicate each other. Understand basic networking concepts, IP adresses, subnetting, proxies, find out how internet works. Study some protocols such as TCP/IP, HTTP, DNS or SSH. This could sound confusing for beginners, but this step is not optional! Study different client/server models and how services expose attack surfaces.\nProgramming \u0026amp; scripting Is this completely required? Maybe not for complete beginners. Does it help? Absolutely yes. Understanding how web apps or any type of application works makes things much easier. You can imagine different entry points to exploit if you understand how systems are designed. Also writing scripts in bash or python makes you more productive through automation.\nEthical Hacking foundations Once you feel confident with these 3 pillars, you can go to the next step. You can study about different topics and areas. For example, binary exploiting, web pentesting, mobile pentesting, wireless hacking, etc. You should start picking a focus, in this post we focus on web pentesting, as it is beginner friendly. Also web applications are the bread and butter in companies nowadays.\nKey concepts to study:\nCIA Triad: CIA refers to Confidentiality, Integrity and Availability. These three concepts are key in information security, and describe properties we want to ensure in our systems and information. Web Security basics, OWASP: Study the OWASP Top 10, which summarizes most frequent web security risks. Authentication and session control: Understand the concepts of Authentication and Authorization, research about how session is handled in web apps, cookies, JWT tokens, etc. Input validation \u0026amp; injection attacks: Learn about SQL Injection, Cross-Site Scripting (XSS), Code Injection, SSTI, and every injection type. Secure development lifecycle: Find out how to implement security controls in code. This can be more related to Blue Team, but as Red Teamer it is important to understand. Firewall evasion: What a firewall is and some techniques/methods to bypass. Some cryptography: Understand what a chiper and a hash are, how information is encrypted to prevent access from 3rd parties. Focusing on web, read about TLS protocol. There are many more topics you can research and learn, but this could be a nice starting point.\nTools and platforms to learn Now you have an idea of what to study, let\u0026rsquo;s see how to start in practical terms.\nSome platforms I personally recommend:\nOverTheWire: Here you can find some CTFs (Capture The Flag) which are fun to play and also really instructive. Bandit games are a must for complete beginners, as you will explore some linux and bash concepts which are basic to continue. The games are leveled by difficulty, in their web you can get all the information about how to play, only a terminal and SSH is required. This helps building your foundation in Linux OS. HackTheBox: Nº 1 platform in cybersecurity. Has a lot of resources to learn all this core fundamentals, and also red team / blue team security topics. It is focused on labs where you can test your skills hacking different boxes but if you really want to learn it is worth to invest time and money in the academy. I have to say the level here is high, specially if you try to hack machines on your own without using some guide or writeup. TryHackMe: More beginner friendly than hackthebox, it provides a lot of guided learning resources. PortSwigger Labs: Practical labs about specific topics, focused on web hacking. They are great to learn and understand different types of attacks, injections, and security misconfigurations. I would recommend digging into this once you have the theoretical basis about these concepts. I have to mention a few tools I am sure you\u0026rsquo;d end up using:\nNmap: This is probably the most famous tool in hacking, allowing you to gather information about ports and services running in a machine. Burpsuite: A proxy tool widely used in web application security testing. It basically allows you to intercept and modify web requests, which can be used to perform several types of attacks. Metasploit: The most used pentesting framework. Contains a large amount of scripts and exploits ready to run. Another crucial step here is to set up your virtual lab environment to test vulnerable applications. To achieve this goal, there are some Linux distributions like Kali, Parrot or BlackArch, but that\u0026rsquo;s a topic for another post.\nFinal thoughs To sum up, this would be my personal roadmap:\nLearn the fundamentals, specially Linux and networking. Install some Linux in a virtual machine, play with it, get comfortable with the terminal. You can start with bandit wargames in OverTheWire. Complete every level and make sure to understand everything as clear as possible. Move to guided boxes on HackTheBox. I recommend you joining their Discord, ask questions, community is great there! Take notes, repeat, learn, improve your skills. Maybe use your own lab environment, create your own vulnerable apps. Hacking is a mixing of curiosity, study and practice. Being passionate and motivated about it is really helpful and will definitely speed up the process. The path is long and really challenging, so keep it going!\n\u0026ldquo;Yes, I am a criminal. My crime is that of curiosity.\u0026rdquo; — The Mentor (Loyd Blankenship) at The Hacker Manifesto\n","permalink":"http://localhost:1313/posts/starting-point/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIf you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\u003c/p\u003e","title":"Starting Point"},{"content":"Introduction In this post series we are going to solve every level from bandit in OverTheWire This guide pretends to be a writeup containing the solutions of the level, designed for beginners.\nTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing WSL, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\nEvery section will contain the solution as well as some tips for people who is absolutely beginner.\nTips First of all, some tips:\nDo not use this as first resource to solve the levels. Try on your own, make mistakes and learn from them. Only check the solution as last resource or if you are completely new and you have absolutely no idea about what to do next. Take notes from your learning. Write up commands, tips and everything which can be useful in the future. Make sure to understand everything. Is a good idea to note the passwords for every level. If you want to continue letter, you can simply log in in the desired level. It is annoying to repeat everything! Follow the tips and information provided at OverTheWire website. Levels Here is my solution for every level:\nBandit0 Bandit1 Bandit2 Bandit3 Bandit4 Bandit5 Bandit6 ","permalink":"http://localhost:1313/posts/otw/bandit/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIn this post series we are going to solve every level from bandit in \u003ca href=\"https://overthewire.org/wargames/bandit/\"\u003e\u003cem\u003eOverTheWire\u003c/em\u003e\u003c/a\u003e\nThis guide pretends to be a writeup containing the solutions of the level, designed for beginners.\u003c/p\u003e\n\u003cp\u003eTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing \u003ca href=\"https://learn.microsoft.com/en-us/windows/wsl/install\"\u003eWSL\u003c/a\u003e, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\u003c/p\u003e","title":"Bandit"},{"content":"Level description The goal of this level is for you to log into the game using SSH. The host to which you need to connect is bandit.labs.overthewire.org, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\nTips for completely beginners Read a bit about what SSH is. Research about what a port is. Solution This is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go here.\nAt Linux, we can use ssh client to connect to the server. It should be installed by default on your system. If not, please first research about how to install. Once you have the SSH client installed, you can log in into the first level as follows:\nssh bandit0@bandit.labs.overthewire.org -p 2220 Syntax is simple: ssh \u0026lt;username\u0026gt;@\u0026lt;hostname\u0026gt; -p \u0026lt;port\u0026gt;. Usually SSH runs on port 22 by default, but they changed to port 2220 so we must specify it in the command.\nOnce you try to log in, you will see something like this: NB: If it\u0026rsquo;s the first time you try to log in, you will be asked about the authenticity of the host. Just type yes.\nType the password bandit0 and press enter. Now you are inside bandit server, ready to begin with bandit1!\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit0/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe goal of this level is for you to log into the game using SSH. The host to which you need to connect is \u003cstrong\u003ebandit.labs.overthewire.org\u003c/strong\u003e, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\u003c/p\u003e\n\u003ch2 id=\"tips-for-completely-beginners\"\u003eTips for completely beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eRead a bit about what SSH is.\u003c/li\u003e\n\u003cli\u003eResearch about what a port is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go \u003ca href=\"https://en.wikipedia.org/wiki/Secure_Shell\"\u003ehere\u003c/a\u003e.\u003c/p\u003e","title":"Bandit0"},{"content":"Level description The password for the next level is stored in a file called readme located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\nTips for completely beginners Learn about home directory in Linux. Learn to use cat and ls commands. Solution First step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\nls This shows in terminal the files at the current directory. There you will see the readme file.\nNow we can to check the contents, so let\u0026rsquo;s use cat:\ncat readme To read a file, we use cat \u0026lt;filename\u0026gt;.\nNB: Not every file is human readable in Linux. We deep more about this in later levels.\nThe content of the readme file reveals the password for bandit2 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit1/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u003cstrong\u003ereadme\u003c/strong\u003e located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\u003c/p\u003e\n\u003ch2 id=\"tips-for-completely-beginners\"\u003eTips for completely beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn about home directory in Linux.\u003c/li\u003e\n\u003cli\u003eLearn to use \u003ccode\u003ecat\u003c/code\u003e and \u003ccode\u003els\u003c/code\u003e commands.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eFirst step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\u003c/p\u003e","title":"Bandit1"},{"content":"Level description The password for the next level is stored in a file called - located in the home directory\nTips for completely beginners Try to understand why previous solution is not working as you expect. Solution You may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our cat command: The terminal is waiting for something else. This happens due to character - is used to pass arguments to our commands, and the linux shell is interpreting that. To prevent that, we could use:\ncat ./- NB: Dot . is used to refer current directory. The slash / is used at the end of directory name.\nWe get the password for bandit3 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit2/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called - located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-completely-beginners\"\u003eTips for completely beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eTry to understand why previous solution is not working as you expect.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eYou may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our \u003ccode\u003ecat\u003c/code\u003e command:\n\u003cimg alt=\"bandit2\" loading=\"lazy\" src=\"/images/otw/bandit/bandit2/0.png\"\u003e\u003c/p\u003e\n\u003cp\u003eThe terminal is \u003cem\u003ewaiting\u003c/em\u003e for something else. This happens due to character \u003ccode\u003e-\u003c/code\u003e is used to pass arguments to our commands, and the linux shell is interpreting that.\nTo prevent that, we could use:\u003c/p\u003e","title":"Bandit2"},{"content":"Level description The password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\nTips for completely beginners Think about how to escape the whitespaces. Solution After login in the machine as bandit3, we can see the filename \u0026ndash;spaces in this filename\u0026ndash;.\nNow we have 2 problems:\nSame as previous level, filename starts with --, so it will be interpreted as an argument. Address this problem using ./. Filename contains whitespaces. This is an issue, as bash interpretes whitespaces to separate commands. To solve the second problem, we must escape the whitespace character in some way. Here is the solution:\ncat ./--spaces\\ in\\ this\\ filename-- NB: Little trick, you can start writting filename and press Tab to autocomplete the name. The \\ is going to be inserted automatically.\nJust using the \\ we can escape the whitespace.\nNow we can continue with the bandit4 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit3/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-completely-beginners\"\u003eTips for completely beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eThink about how to \u003cem\u003eescape\u003c/em\u003e the whitespaces.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAfter login in the machine as bandit3, we can see the filename \u003cem\u003e\u0026ndash;spaces in this filename\u0026ndash;\u003c/em\u003e.\u003c/p\u003e\n\u003cp\u003eNow we have 2 problems:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eSame as previous level, filename starts with \u003ccode\u003e--\u003c/code\u003e, so it will be interpreted as an argument. Address this problem using \u003ccode\u003e./\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003eFilename contains \u003cstrong\u003ewhitespaces\u003c/strong\u003e. This is an issue, as bash interpretes whitespaces to separate commands.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eTo solve the second problem, we must escape the whitespace character in some way. Here is the solution:\u003c/p\u003e","title":"Bandit3"},{"content":"Level description The password for the next level is stored in a hidden file in the inhere directory.\nTips for completely beginners Learn how to navigate directories in Linux. First understand what a hidden file is. Solution Listing directory files inside bandit4\u0026rsquo;s home directory, show directory inhere.\nNB: How to distinguish files and directories in Linux? Use ls -l and see the difference.\nWe have 2 options now:\nMove to inhere directory and check contens again. Check contents directly. Moving to another directory can be done using cd \u0026lt;dirName\u0026gt;. If you prefer to check directory contents directly, use ls \u0026lt;dirName\u0026gt;.\nAfter checking inhere contents via ls, we see nothing. The reason is the file is a hidden file. A hidden file in Linux is everyfile whose name starts with dot .. Hidden files are not shown by default with ls command, so we must add a special flag -a to list all files: NB: Both flags -l and -a cna be combined into a single flag -al, which is shorter to type.\nAs you can see, filename is \u0026hellip;Hidding-From-You starting with three dots. Reading file contents should be easy at this point!\nNext level is bandit5.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit4/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a hidden file in the inhere directory.\u003c/p\u003e\n\u003ch2 id=\"tips-for-completely-beginners\"\u003eTips for completely beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to navigate directories in Linux.\u003c/li\u003e\n\u003cli\u003eFirst understand what a hidden file is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eListing directory files inside bandit4\u0026rsquo;s home directory, show directory \u003cstrong\u003einhere\u003c/strong\u003e.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e How to distinguish files and directories in Linux? Use \u003ccode\u003els -l\u003c/code\u003e and see the difference.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eWe have 2 options now:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eMove to inhere directory and check contens again.\u003c/li\u003e\n\u003cli\u003eCheck contents directly.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eMoving to another directory can be done using \u003ccode\u003ecd \u0026lt;dirName\u0026gt;\u003c/code\u003e. If you prefer to check directory contents directly, use \u003ccode\u003els \u0026lt;dirName\u0026gt;\u003c/code\u003e.\u003c/p\u003e","title":"Bandit4"},{"content":"Level description The password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\nTips for completely beginners What means human-readable file? Is there any way to check filetype at Linux?. Solution Checking inhere\u0026rsquo;s contents shows some files names \u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII here\nSo now, our goal is checking if file content of every file in the folder is ASCII or not. file \u0026lt;filename\u0026gt; does the job. Note the use of *. That called a wildcard regular expression, we\u0026rsquo;ll deep into it in later levels. An easy approach could be checking every file separately:\nfile ./--file00 file ./--file01 ... file ./--file09 But that\u0026rsquo;s not funny, imagine we have 100 files to check. All the files are in the same directory, so we can use cat ./* where ./* matches every filename in the directory, applying file to every file.\nNB: Another approach is to use find with certaing flags. Try to do in different ways, don\u0026rsquo;t stick to my solution.\nThe file \u0026ndash;file00 content is not readable, so get password from \u0026ndash;file07 and continue with bandit6.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit5/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\u003c/p\u003e\n\u003ch2 id=\"tips-for-completely-beginners\"\u003eTips for completely beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eWhat means human-readable file?\u003c/li\u003e\n\u003cli\u003eIs there any way to check filetype at Linux?.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eChecking inhere\u0026rsquo;s contents shows some files names \u003cstrong\u003e\u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09\u003c/strong\u003e. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII \u003ca href=\"https://en.wikipedia.org/wiki/ASCII\"\u003ehere\u003c/a\u003e\u003c/p\u003e","title":"Bandit5"},{"content":"Level description The password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\nhuman-readable 1033 bytes in size not executable Tips for completely beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution The purpose of the level is showing us how to find for files. Listing contents of inhere, we can see some folders, containing a lot of files inside: NB: Adding -R to ls shows recursively the content of every folder inside the directory listed.\nSo this time, checking every file is not an option. We need to find a file with some properties, specific size, not excutable and human-readable. Let\u0026rsquo;s explain the command we\u0026rsquo;re using:\nfind inhere/ -size 1033c ! -executable First, we specify the directory, in this case inhere. The option -size 1033c returns files of 1033 bytes. Then, with -executable we would get executable files, but we want not executable files, that\u0026rsquo;s why we are adding ! before.\nThe property of human-readability is not implemented in find. This is not an issue, previous command returns a single file and it is human readable (we could confirm using file): NB: By default, the -size option takes as argument the number of blocks. For example, -size 2 means 2 blocks of 512 bytes, so its 1024. The c is used to specify exact bytes. Don\u0026rsquo;t ask me why it\u0026rsquo;s c and not b 😅.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit6/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ehuman-readable\u003c/li\u003e\n\u003cli\u003e1033 bytes in size\u003c/li\u003e\n\u003cli\u003enot executable\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-completely-beginners\"\u003eTips for completely beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThe purpose of the level is showing us how to find for files. Listing contents of \u003cstrong\u003einhere\u003c/strong\u003e, we can see some folders, containing a lot of files inside:\n\u003cimg alt=\"bandit6_0\" loading=\"lazy\" src=\"/images/otw/bandit/bandit6/1.png\"\u003e\u003c/p\u003e","title":"Bandit6"},{"content":"👨‍💻 whoami Hey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\nWhat is this❓​ This blog is basically my thoughts on several hacking topics. Here you’ll see:\nWriteups from CTF challenges, from platforms like HackTheBox or OverTheWire.\nWalkthroughs and notes on pentesting techniques I’m learning or testing.\nSome posts on cryptography — because math can be fun (sometimes).\nRandom topics that freaks like me may (just may) find interesting.\nThe idea is simple: share what I learn, document my journey, and maybe help others who are also diving into the exciting world of ethical hacking.\n📫 Contact Want to say hi, share ideas, or just geek out about hacking? Reach me here:\n📧 Email: mrb0b1073@proton.me 💻​ GitHub: mrb0b173 🟩​ HackTheBox: mrb0b1073 ","permalink":"http://localhost:1313/about/","summary":"\u003ch2 id=\"-whoami\"\u003e👨‍💻 whoami\u003c/h2\u003e\n\u003cp\u003eHey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\u003c/p\u003e\n\u003chr\u003e\n\u003ch2 id=\"what-is-this\"\u003eWhat is this❓​\u003c/h2\u003e\n\u003cp\u003eThis blog is basically my thoughts on several hacking topics. Here you’ll see:\u003c/p\u003e","title":"About"},{"content":"Hey! 👋 I\u0026rsquo;m mrb0b1073 and this is my first post.\nWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\nExcited to start this adventure!\n","permalink":"http://localhost:1313/posts/hello-world/","summary":"\u003cp\u003eHey! 👋 I\u0026rsquo;m \u003cstrong\u003emrb0b1073\u003c/strong\u003e and this is my first post.\u003c/p\u003e\n\u003cp\u003eWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\u003cbr\u003e\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\u003c/p\u003e\n\u003cp\u003eExcited to start this adventure!\u003c/p\u003e","title":"Hello World"},{"content":"Introduction If you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\nIn cybersecurity there are broadly two complementary roles: Blue Team and Red Team. Blue Teams focus on defense, monitoring, incident response, hardening systems and keeping services secure, while Red Teams simulate attackers to find weaknesses and prove what an adversary could do. Ethical hacking aligns closely with Red Team operations, but cybersecurity is highly transversal across IT. There are many specialities or areas, such as cloud security, appsec, pentesting, forensics, governance, risk management, malware analysis, etc. Every topic could deserve its own post, so let\u0026rsquo;s keep it simple and focus on ethical hacking.\nHacker philosophy Let\u0026rsquo;s start with the idea of what is exactly a hacker. A hacker is someone who explores systems to understand how they work, finds creative ways to make or fix things, and solves technical problems. Historically the word describes curiosity, craft, and a drive to improve systems — not criminality. It is important to make the distinction between hacker and cracker, also called cybercriminal. A hacker explores, builds, discloses responsibly and works to improve security. They work in authorized environments or labs. On the other hand, a cracker breaks into systems for theft, vandalism or other illicit gain.\nHere you can find the most popularized ideas often summarized as the hacker ethic:\nCuriosity first: Learn by exploring and tinkering. Freedom of information: All knowledge should be shared to help progress. This fits properly with the idea of open source. Mistrust of needless authority: Centralized control sometimes blocks innovation. It is always good to question anything, specially common assumptions. Meritocracy: Skills, craft and results matter more than titles. Craftsmanship \u0026amp; elegance: Technical beauty matters. Build clean, clever and efficient solutions. Responsability \u0026amp; ethics: Use your skills to build, fix, educate and defend, not to harm. Core fundamentals Assuming you want to init yourself in hacking, you should first build competence across three basic pillars.\nOperating Systems You should learn as much as possible about Linux and Windows. Specially Linux, all the tools you will be using are meant to be used in a Linux environment. Skill with shell is required, learn basic commands and how to interact with the OS using the terminal. Research about processes, file permissions, package management and logs. A large proportion of web servers around the world run on Linux, although Windows is also widely used. Windows knowledge is really valuable too, considering active directory is strongly used in corporate environments.\nNetworking You have to understand how computers communicate each other. Understand basic networking concepts, IP adresses, subnetting, proxies, find out how internet works. Study some protocols such as TCP/IP, HTTP, DNS or SSH. This could sound confusing for beginners, but this step is not optional! Study different client/server models and how services expose attack surfaces.\nProgramming \u0026amp; scripting Is this completely required? Maybe not for complete beginners. Does it help? Absolutely yes. Understanding how web apps or any type of application works makes things much easier. You can imagine different entry points to exploit if you understand how systems are designed. Also writing scripts in bash or python makes you more productive through automation.\nEthical Hacking foundations Once you feel confident with these 3 pillars, you can go to the next step. You can study about different topics and areas. For example, binary exploiting, web pentesting, mobile pentesting, wireless hacking, etc. You should start picking a focus, in this post we focus on web pentesting, as it is beginner friendly. Also web applications are the bread and butter in companies nowadays.\nKey concepts to study:\nCIA Triad: CIA refers to Confidentiality, Integrity and Availability. These three concepts are key in information security, and describe properties we want to ensure in our systems and information. Web Security basics, OWASP: Study the OWASP Top 10, which summarizes most frequent web security risks. Authentication and session control: Understand the concepts of Authentication and Authorization, research about how session is handled in web apps, cookies, JWT tokens, etc. Input validation \u0026amp; injection attacks: Learn about SQL Injection, Cross-Site Scripting (XSS), Code Injection, SSTI, and every injection type. Secure development lifecycle: Find out how to implement security controls in code. This can be more related to Blue Team, but as Red Teamer it is important to understand. Firewall evasion: What a firewall is and some techniques/methods to bypass. Some cryptography: Understand what a chiper and a hash are, how information is encrypted to prevent access from 3rd parties. Focusing on web, read about TLS protocol. There are many more topics you can research and learn, but this could be a nice starting point.\nTools and platforms to learn Now you have an idea of what to study, let\u0026rsquo;s see how to start in practical terms.\nSome platforms I personally recommend:\nOverTheWire: Here you can find some CTFs (Capture The Flag) which are fun to play and also really instructive. Bandit games are a must for complete beginners, as you will explore some linux and bash concepts which are basic to continue. The games are leveled by difficulty, in their web you can get all the information about how to play, only a terminal and SSH is required. This helps building your foundation in Linux OS. HackTheBox: Nº 1 platform in cybersecurity. Has a lot of resources to learn all this core fundamentals, and also red team / blue team security topics. It is focused on labs where you can test your skills hacking different boxes but if you really want to learn it is worth to invest time and money in the academy. I have to say the level here is high, specially if you try to hack machines on your own without using some guide or writeup. TryHackMe: More beginner friendly than hackthebox, it provides a lot of guided learning resources. PortSwigger Labs: Practical labs about specific topics, focused on web hacking. They are great to learn and understand different types of attacks, injections, and security misconfigurations. I would recommend digging into this once you have the theoretical basis about these concepts. I have to mention a few tools I am sure you\u0026rsquo;d end up using:\nNmap: This is probably the most famous tool in hacking, allowing you to gather information about ports and services running in a machine. Burpsuite: A proxy tool widely used in web application security testing. It basically allows you to intercept and modify web requests, which can be used to perform several types of attacks. Metasploit: The most used pentesting framework. Contains a large amount of scripts and exploits ready to run. Another crucial step here is to set up your virtual lab environment to test vulnerable applications. To achieve this goal, there are some Linux distributions like Kali, Parrot or BlackArch, but that\u0026rsquo;s a topic for another post.\nFinal thoughs To sum up, this would be my personal roadmap:\nLearn the fundamentals, specially Linux and networking. Install some Linux in a virtual machine, play with it, get comfortable with the terminal. You can start with bandit wargames in OverTheWire. Complete every level and make sure to understand everything as clear as possible. Move to guided boxes on HackTheBox. I recommend you joining their Discord, ask questions, community is great there! Take notes, repeat, learn, improve your skills. Maybe use your own lab environment, create your own vulnerable apps. Hacking is a mixing of curiosity, study and practice. Being passionate and motivated about it is really helpful and will definitely speed up the process. The path is long and really challenging, so keep it going!\n\u0026ldquo;Yes, I am a criminal. My crime is that of curiosity.\u0026rdquo; — The Mentor (Loyd Blankenship) at The Hacker Manifesto\n","permalink":"http://localhost:1313/posts/starting-point/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIf you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\u003c/p\u003e","title":"Starting Point"},{"content":"Introduction In this post series we are going to solve every level from bandit in OverTheWire This guide pretends to be a writeup containing the solutions of the level, designed for beginners.\nTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing WSL, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\nEvery section will contain the solution as well as some tips for people who is absolutely beginner.\nTips First of all, some tips:\nDo not use this as first resource to solve the levels. Try on your own, make mistakes and learn from them. Only check the solution as last resource or if you are completely new and you have absolutely no idea about what to do next. Take notes from your learning. Write up commands, tips and everything which can be useful in the future. Make sure to understand everything. Is a good idea to note the passwords for every level. If you want to continue letter, you can simply log in in the desired level. It is annoying to repeat everything! Follow the tips and information provided at OverTheWire website. Levels Here is my solution for every level:\nBandit0 Bandit1 Bandit2 Bandit3 Bandit4 Bandit5 Bandit6 ","permalink":"http://localhost:1313/posts/otw/bandit/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIn this post series we are going to solve every level from bandit in \u003ca href=\"https://overthewire.org/wargames/bandit/\"\u003e\u003cem\u003eOverTheWire\u003c/em\u003e\u003c/a\u003e\nThis guide pretends to be a writeup containing the solutions of the level, designed for beginners.\u003c/p\u003e\n\u003cp\u003eTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing \u003ca href=\"https://learn.microsoft.com/en-us/windows/wsl/install\"\u003eWSL\u003c/a\u003e, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\u003c/p\u003e","title":"Bandit"},{"content":"Level description The goal of this level is for you to log into the game using SSH. The host to which you need to connect is bandit.labs.overthewire.org, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\nTips for completely beginners Read a bit about what SSH is. Research about what a port is. Solution This is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go here.\nAt Linux, we can use ssh client to connect to the server. It should be installed by default on your system. If not, please first research about how to install. Once you have the SSH client installed, you can log in into the first level as follows:\nssh bandit0@bandit.labs.overthewire.org -p 2220 Syntax is simple: ssh \u0026lt;username\u0026gt;@\u0026lt;hostname\u0026gt; -p \u0026lt;port\u0026gt;. Usually SSH runs on port 22 by default, but they changed to port 2220 so we must specify it in the command.\nOnce you try to log in, you will see something like this: NB: If it\u0026rsquo;s the first time you try to log in, you will be asked about the authenticity of the host. Just type yes.\nType the password bandit0 and press enter. Now you are inside bandit server, ready to begin with bandit1!\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit0/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe goal of this level is for you to log into the game using SSH. The host to which you need to connect is \u003cstrong\u003ebandit.labs.overthewire.org\u003c/strong\u003e, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\u003c/p\u003e\n\u003ch2 id=\"tips-for-completely-beginners\"\u003eTips for completely beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eRead a bit about what SSH is.\u003c/li\u003e\n\u003cli\u003eResearch about what a port is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go \u003ca href=\"https://en.wikipedia.org/wiki/Secure_Shell\"\u003ehere\u003c/a\u003e.\u003c/p\u003e","title":"Bandit0"},{"content":"Level description The password for the next level is stored in a file called readme located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\nTips for completely beginners Learn about home directory in Linux. Learn to use cat and ls commands. Solution First step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\nls This shows in terminal the files at the current directory. There you will see the readme file.\nNow we can to check the contents, so let\u0026rsquo;s use cat:\ncat readme To read a file, we use cat \u0026lt;filename\u0026gt;.\nNB: Not every file is human readable in Linux. We deep more about this in later levels.\nThe content of the readme file reveals the password for bandit2 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit1/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u003cstrong\u003ereadme\u003c/strong\u003e located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\u003c/p\u003e\n\u003ch2 id=\"tips-for-completely-beginners\"\u003eTips for completely beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn about home directory in Linux.\u003c/li\u003e\n\u003cli\u003eLearn to use \u003ccode\u003ecat\u003c/code\u003e and \u003ccode\u003els\u003c/code\u003e commands.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eFirst step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\u003c/p\u003e","title":"Bandit1"},{"content":"Level description The password for the next level is stored in a file called - located in the home directory\nTips for completely beginners Try to understand why previous solution is not working as you expect. Solution You may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our cat command: The terminal is waiting for something else. This happens due to character - is used to pass arguments to our commands, and the linux shell is interpreting that. To prevent that, we could use:\ncat ./- NB: Dot . is used to refer current directory. The slash / is used at the end of directory name.\nWe get the password for bandit3 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit2/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called - located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-completely-beginners\"\u003eTips for completely beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eTry to understand why previous solution is not working as you expect.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eYou may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our \u003ccode\u003ecat\u003c/code\u003e command:\n\u003cimg alt=\"bandit2\" loading=\"lazy\" src=\"/images/otw/bandit/bandit2/0.png\"\u003e\u003c/p\u003e\n\u003cp\u003eThe terminal is \u003cem\u003ewaiting\u003c/em\u003e for something else. This happens due to character \u003ccode\u003e-\u003c/code\u003e is used to pass arguments to our commands, and the linux shell is interpreting that.\nTo prevent that, we could use:\u003c/p\u003e","title":"Bandit2"},{"content":"Level description The password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\nTips for completely beginners Think about how to escape the whitespaces. Solution After login in the machine as bandit3, we can see the filename \u0026ndash;spaces in this filename\u0026ndash;.\nNow we have 2 problems:\nSame as previous level, filename starts with --, so it will be interpreted as an argument. Address this problem using ./. Filename contains whitespaces. This is an issue, as bash interpretes whitespaces to separate commands. To solve the second problem, we must escape the whitespace character in some way. Here is the solution:\ncat ./--spaces\\ in\\ this\\ filename-- NB: Little trick, you can start writting filename and press Tab to autocomplete the name. The \\ is going to be inserted automatically.\nJust using the \\ we can escape the whitespace.\nNow we can continue with the bandit4 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit3/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-completely-beginners\"\u003eTips for completely beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eThink about how to \u003cem\u003eescape\u003c/em\u003e the whitespaces.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAfter login in the machine as bandit3, we can see the filename \u003cem\u003e\u0026ndash;spaces in this filename\u0026ndash;\u003c/em\u003e.\u003c/p\u003e\n\u003cp\u003eNow we have 2 problems:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eSame as previous level, filename starts with \u003ccode\u003e--\u003c/code\u003e, so it will be interpreted as an argument. Address this problem using \u003ccode\u003e./\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003eFilename contains \u003cstrong\u003ewhitespaces\u003c/strong\u003e. This is an issue, as bash interpretes whitespaces to separate commands.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eTo solve the second problem, we must escape the whitespace character in some way. Here is the solution:\u003c/p\u003e","title":"Bandit3"},{"content":"Level description The password for the next level is stored in a hidden file in the inhere directory.\nTips for completely beginners Learn how to navigate directories in Linux. First understand what a hidden file is. Solution Listing directory files inside bandit4\u0026rsquo;s home directory, show directory inhere.\nNB: How to distinguish files and directories in Linux? Use ls -l and see the difference.\nWe have 2 options now:\nMove to inhere directory and check contens again. Check contents directly. Moving to another directory can be done using cd \u0026lt;dirName\u0026gt;. If you prefer to check directory contents directly, use ls \u0026lt;dirName\u0026gt;.\nAfter checking inhere contents via ls, we see nothing. The reason is the file is a hidden file. A hidden file in Linux is everyfile whose name starts with dot .. Hidden files are not shown by default with ls command, so we must add a special flag -a to list all files: NB: Both flags -l and -a cna be combined into a single flag -al, which is shorter to type.\nAs you can see, filename is \u0026hellip;Hidding-From-You starting with three dots. Reading file contents should be easy at this point!\nNext level is bandit5.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit4/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a hidden file in the inhere directory.\u003c/p\u003e\n\u003ch2 id=\"tips-for-completely-beginners\"\u003eTips for completely beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to navigate directories in Linux.\u003c/li\u003e\n\u003cli\u003eFirst understand what a hidden file is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eListing directory files inside bandit4\u0026rsquo;s home directory, show directory \u003cstrong\u003einhere\u003c/strong\u003e.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e How to distinguish files and directories in Linux? Use \u003ccode\u003els -l\u003c/code\u003e and see the difference.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eWe have 2 options now:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eMove to inhere directory and check contens again.\u003c/li\u003e\n\u003cli\u003eCheck contents directly.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eMoving to another directory can be done using \u003ccode\u003ecd \u0026lt;dirName\u0026gt;\u003c/code\u003e. If you prefer to check directory contents directly, use \u003ccode\u003els \u0026lt;dirName\u0026gt;\u003c/code\u003e.\u003c/p\u003e","title":"Bandit4"},{"content":"Level description The password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\nTips for completely beginners What means human-readable file? Is there any way to check filetype at Linux?. Solution Checking inhere\u0026rsquo;s contents shows some files names \u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII here\nSo now, our goal is checking if file content of every file in the folder is ASCII or not. file \u0026lt;filename\u0026gt; does the job. Note the use of *. That called a wildcard regular expression, we\u0026rsquo;ll deep into it in later levels. An easy approach could be checking every file separately:\nfile ./--file00 file ./--file01 ... file ./--file09 But that\u0026rsquo;s not funny, imagine we have 100 files to check. All the files are in the same directory, so we can use cat ./* where ./* matches every filename in the directory, applying file to every file.\nNB: Another approach is to use find with certaing flags. Try to do in different ways, don\u0026rsquo;t stick to my solution.\nThe file \u0026ndash;file00 content is not readable, so get password from \u0026ndash;file07 and continue with bandit6.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit5/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\u003c/p\u003e\n\u003ch2 id=\"tips-for-completely-beginners\"\u003eTips for completely beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eWhat means human-readable file?\u003c/li\u003e\n\u003cli\u003eIs there any way to check filetype at Linux?.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eChecking inhere\u0026rsquo;s contents shows some files names \u003cstrong\u003e\u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09\u003c/strong\u003e. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII \u003ca href=\"https://en.wikipedia.org/wiki/ASCII\"\u003ehere\u003c/a\u003e\u003c/p\u003e","title":"Bandit5"},{"content":"Level description The password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\nhuman-readable 1033 bytes in size not executable Tips for completely beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution The purpose of the level is showing us how to find for files. Listing contents of inhere, we can see some folders, containing a lot of files inside: NB: Adding -R to ls shows recursively the content of every folder inside the directory listed.\nSo this time, checking every file is not an option. We need to find a file with some properties, specific size, not excutable and human-readable. Let\u0026rsquo;s explain the command we\u0026rsquo;re using:\nfind inhere/ -size 1033c ! -executable First, we specify the directory, in this case inhere. The option -size 1033c returns files of 1033 bytes. Then, with -executable we would get executable files, but we want not executable files, that\u0026rsquo;s why we are adding ! before.\nThe property of human-readability is not implemented in find. This is not an issue, previous command returns a single file and it is human readable (we could confirm using file): NB: By default, the -size option takes as argument the number of blocks. For example, -size 2 means 2 blocks of 512 bytes, so its 1024. The c is used to specify exact bytes. Don\u0026rsquo;t ask me why it\u0026rsquo;s c and not b 😅.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit6/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ehuman-readable\u003c/li\u003e\n\u003cli\u003e1033 bytes in size\u003c/li\u003e\n\u003cli\u003enot executable\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-completely-beginners\"\u003eTips for completely beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThe purpose of the level is showing us how to find for files. Listing contents of \u003cstrong\u003einhere\u003c/strong\u003e, we can see some folders, containing a lot of files inside:\n\u003cimg alt=\"bandit6_0\" loading=\"lazy\" src=\"/images/otw/bandit/bandit6/0.png\"\u003e\u003c/p\u003e","title":"Bandit6"},{"content":"👨‍💻 whoami Hey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\nWhat is this❓​ This blog is basically my thoughts on several hacking topics. Here you’ll see:\nWriteups from CTF challenges, from platforms like HackTheBox or OverTheWire.\nWalkthroughs and notes on pentesting techniques I’m learning or testing.\nSome posts on cryptography — because math can be fun (sometimes).\nRandom topics that freaks like me may (just may) find interesting.\nThe idea is simple: share what I learn, document my journey, and maybe help others who are also diving into the exciting world of ethical hacking.\n📫 Contact Want to say hi, share ideas, or just geek out about hacking? Reach me here:\n📧 Email: mrb0b1073@proton.me 💻​ GitHub: mrb0b173 🟩​ HackTheBox: mrb0b1073 ","permalink":"http://localhost:1313/about/","summary":"\u003ch2 id=\"-whoami\"\u003e👨‍💻 whoami\u003c/h2\u003e\n\u003cp\u003eHey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\u003c/p\u003e\n\u003chr\u003e\n\u003ch2 id=\"what-is-this\"\u003eWhat is this❓​\u003c/h2\u003e\n\u003cp\u003eThis blog is basically my thoughts on several hacking topics. Here you’ll see:\u003c/p\u003e","title":"About"},{"content":"Hey! 👋 I\u0026rsquo;m mrb0b1073 and this is my first post.\nWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\nExcited to start this adventure!\n","permalink":"http://localhost:1313/posts/hello-world/","summary":"\u003cp\u003eHey! 👋 I\u0026rsquo;m \u003cstrong\u003emrb0b1073\u003c/strong\u003e and this is my first post.\u003c/p\u003e\n\u003cp\u003eWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\u003cbr\u003e\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\u003c/p\u003e\n\u003cp\u003eExcited to start this adventure!\u003c/p\u003e","title":"Hello World"},{"content":"Introduction If you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\nIn cybersecurity there are broadly two complementary roles: Blue Team and Red Team. Blue Teams focus on defense, monitoring, incident response, hardening systems and keeping services secure, while Red Teams simulate attackers to find weaknesses and prove what an adversary could do. Ethical hacking aligns closely with Red Team operations, but cybersecurity is highly transversal across IT. There are many specialities or areas, such as cloud security, appsec, pentesting, forensics, governance, risk management, malware analysis, etc. Every topic could deserve its own post, so let\u0026rsquo;s keep it simple and focus on ethical hacking.\nHacker philosophy Let\u0026rsquo;s start with the idea of what is exactly a hacker. A hacker is someone who explores systems to understand how they work, finds creative ways to make or fix things, and solves technical problems. Historically the word describes curiosity, craft, and a drive to improve systems — not criminality. It is important to make the distinction between hacker and cracker, also called cybercriminal. A hacker explores, builds, discloses responsibly and works to improve security. They work in authorized environments or labs. On the other hand, a cracker breaks into systems for theft, vandalism or other illicit gain.\nHere you can find the most popularized ideas often summarized as the hacker ethic:\nCuriosity first: Learn by exploring and tinkering. Freedom of information: All knowledge should be shared to help progress. This fits properly with the idea of open source. Mistrust of needless authority: Centralized control sometimes blocks innovation. It is always good to question anything, specially common assumptions. Meritocracy: Skills, craft and results matter more than titles. Craftsmanship \u0026amp; elegance: Technical beauty matters. Build clean, clever and efficient solutions. Responsability \u0026amp; ethics: Use your skills to build, fix, educate and defend, not to harm. Core fundamentals Assuming you want to init yourself in hacking, you should first build competence across three basic pillars.\nOperating Systems You should learn as much as possible about Linux and Windows. Specially Linux, all the tools you will be using are meant to be used in a Linux environment. Skill with shell is required, learn basic commands and how to interact with the OS using the terminal. Research about processes, file permissions, package management and logs. A large proportion of web servers around the world run on Linux, although Windows is also widely used. Windows knowledge is really valuable too, considering active directory is strongly used in corporate environments.\nNetworking You have to understand how computers communicate each other. Understand basic networking concepts, IP adresses, subnetting, proxies, find out how internet works. Study some protocols such as TCP/IP, HTTP, DNS or SSH. This could sound confusing for beginners, but this step is not optional! Study different client/server models and how services expose attack surfaces.\nProgramming \u0026amp; scripting Is this completely required? Maybe not for complete beginners. Does it help? Absolutely yes. Understanding how web apps or any type of application works makes things much easier. You can imagine different entry points to exploit if you understand how systems are designed. Also writing scripts in bash or python makes you more productive through automation.\nEthical Hacking foundations Once you feel confident with these 3 pillars, you can go to the next step. You can study about different topics and areas. For example, binary exploiting, web pentesting, mobile pentesting, wireless hacking, etc. You should start picking a focus, in this post we focus on web pentesting, as it is beginner friendly. Also web applications are the bread and butter in companies nowadays.\nKey concepts to study:\nCIA Triad: CIA refers to Confidentiality, Integrity and Availability. These three concepts are key in information security, and describe properties we want to ensure in our systems and information. Web Security basics, OWASP: Study the OWASP Top 10, which summarizes most frequent web security risks. Authentication and session control: Understand the concepts of Authentication and Authorization, research about how session is handled in web apps, cookies, JWT tokens, etc. Input validation \u0026amp; injection attacks: Learn about SQL Injection, Cross-Site Scripting (XSS), Code Injection, SSTI, and every injection type. Secure development lifecycle: Find out how to implement security controls in code. This can be more related to Blue Team, but as Red Teamer it is important to understand. Firewall evasion: What a firewall is and some techniques/methods to bypass. Some cryptography: Understand what a chiper and a hash are, how information is encrypted to prevent access from 3rd parties. Focusing on web, read about TLS protocol. There are many more topics you can research and learn, but this could be a nice starting point.\nTools and platforms to learn Now you have an idea of what to study, let\u0026rsquo;s see how to start in practical terms.\nSome platforms I personally recommend:\nOverTheWire: Here you can find some CTFs (Capture The Flag) which are fun to play and also really instructive. Bandit games are a must for complete beginners, as you will explore some linux and bash concepts which are basic to continue. The games are leveled by difficulty, in their web you can get all the information about how to play, only a terminal and SSH is required. This helps building your foundation in Linux OS. HackTheBox: Nº 1 platform in cybersecurity. Has a lot of resources to learn all this core fundamentals, and also red team / blue team security topics. It is focused on labs where you can test your skills hacking different boxes but if you really want to learn it is worth to invest time and money in the academy. I have to say the level here is high, specially if you try to hack machines on your own without using some guide or writeup. TryHackMe: More beginner friendly than hackthebox, it provides a lot of guided learning resources. PortSwigger Labs: Practical labs about specific topics, focused on web hacking. They are great to learn and understand different types of attacks, injections, and security misconfigurations. I would recommend digging into this once you have the theoretical basis about these concepts. I have to mention a few tools I am sure you\u0026rsquo;d end up using:\nNmap: This is probably the most famous tool in hacking, allowing you to gather information about ports and services running in a machine. Burpsuite: A proxy tool widely used in web application security testing. It basically allows you to intercept and modify web requests, which can be used to perform several types of attacks. Metasploit: The most used pentesting framework. Contains a large amount of scripts and exploits ready to run. Another crucial step here is to set up your virtual lab environment to test vulnerable applications. To achieve this goal, there are some Linux distributions like Kali, Parrot or BlackArch, but that\u0026rsquo;s a topic for another post.\nFinal thoughs To sum up, this would be my personal roadmap:\nLearn the fundamentals, specially Linux and networking. Install some Linux in a virtual machine, play with it, get comfortable with the terminal. You can start with bandit wargames in OverTheWire. Complete every level and make sure to understand everything as clear as possible. Move to guided boxes on HackTheBox. I recommend you joining their Discord, ask questions, community is great there! Take notes, repeat, learn, improve your skills. Maybe use your own lab environment, create your own vulnerable apps. Hacking is a mixing of curiosity, study and practice. Being passionate and motivated about it is really helpful and will definitely speed up the process. The path is long and really challenging, so keep it going!\n\u0026ldquo;Yes, I am a criminal. My crime is that of curiosity.\u0026rdquo; — The Mentor (Loyd Blankenship) at The Hacker Manifesto\n","permalink":"http://localhost:1313/posts/starting-point/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIf you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\u003c/p\u003e","title":"Starting Point"},{"content":"Introduction In this post series we are going to solve every level from bandit in OverTheWire This guide pretends to be a writeup containing the solutions of the level, designed for beginners.\nTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing WSL, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\nEvery section will contain the solution as well as some tips for people who is absolutely beginner.\nTips First of all, some tips:\nDo not use this as first resource to solve the levels. Try on your own, make mistakes and learn from them. Only check the solution as last resource or if you are completely new and you have absolutely no idea about what to do next. Take notes from your learning. Write up commands, tips and everything which can be useful in the future. Make sure to understand everything. Is a good idea to note the passwords for every level. If you want to continue letter, you can simply log in in the desired level. It is annoying to repeat everything! Follow the tips and information provided at OverTheWire website. Levels Here is my solution for every level:\nBandit0 Bandit1 Bandit2 Bandit3 Bandit4 Bandit5 Bandit6 ","permalink":"http://localhost:1313/posts/otw/bandit/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIn this post series we are going to solve every level from bandit in \u003ca href=\"https://overthewire.org/wargames/bandit/\"\u003e\u003cem\u003eOverTheWire\u003c/em\u003e\u003c/a\u003e\nThis guide pretends to be a writeup containing the solutions of the level, designed for beginners.\u003c/p\u003e\n\u003cp\u003eTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing \u003ca href=\"https://learn.microsoft.com/en-us/windows/wsl/install\"\u003eWSL\u003c/a\u003e, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\u003c/p\u003e","title":"Bandit"},{"content":"Level description The goal of this level is for you to log into the game using SSH. The host to which you need to connect is bandit.labs.overthewire.org, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\nTips for completely beginners Read a bit about what SSH is. Research about what a port is. Solution This is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go here.\nAt Linux, we can use ssh client to connect to the server. It should be installed by default on your system. If not, please first research about how to install. Once you have the SSH client installed, you can log in into the first level as follows:\nssh bandit0@bandit.labs.overthewire.org -p 2220 Syntax is simple: ssh \u0026lt;username\u0026gt;@\u0026lt;hostname\u0026gt; -p \u0026lt;port\u0026gt;. Usually SSH runs on port 22 by default, but they changed to port 2220 so we must specify it in the command.\nOnce you try to log in, you will see something like this: NB: If it\u0026rsquo;s the first time you try to log in, you will be asked about the authenticity of the host. Just type yes.\nType the password bandit0 and press enter. Now you are inside bandit server, ready to begin with bandit1!\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit0/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe goal of this level is for you to log into the game using SSH. The host to which you need to connect is \u003cstrong\u003ebandit.labs.overthewire.org\u003c/strong\u003e, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\u003c/p\u003e\n\u003ch2 id=\"tips-for-completely-beginners\"\u003eTips for completely beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eRead a bit about what SSH is.\u003c/li\u003e\n\u003cli\u003eResearch about what a port is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go \u003ca href=\"https://en.wikipedia.org/wiki/Secure_Shell\"\u003ehere\u003c/a\u003e.\u003c/p\u003e","title":"Bandit0"},{"content":"Level description The password for the next level is stored in a file called readme located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\nTips for completely beginners Learn about home directory in Linux. Learn to use cat and ls commands. Solution First step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\nls This shows in terminal the files at the current directory. There you will see the readme file.\nNow we can to check the contents, so let\u0026rsquo;s use cat:\ncat readme To read a file, we use cat \u0026lt;filename\u0026gt;.\nNB: Not every file is human readable in Linux. We deep more about this in later levels.\nThe content of the readme file reveals the password for bandit2 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit1/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u003cstrong\u003ereadme\u003c/strong\u003e located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\u003c/p\u003e\n\u003ch2 id=\"tips-for-completely-beginners\"\u003eTips for completely beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn about home directory in Linux.\u003c/li\u003e\n\u003cli\u003eLearn to use \u003ccode\u003ecat\u003c/code\u003e and \u003ccode\u003els\u003c/code\u003e commands.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eFirst step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\u003c/p\u003e","title":"Bandit1"},{"content":"Level description The password for the next level is stored in a file called - located in the home directory\nTips for completely beginners Try to understand why previous solution is not working as you expect. Solution You may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our cat command: The terminal is waiting for something else. This happens due to character - is used to pass arguments to our commands, and the linux shell is interpreting that. To prevent that, we could use:\ncat ./- NB: Dot . is used to refer current directory. The slash / is used at the end of directory name.\nWe get the password for bandit3 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit2/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called - located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-completely-beginners\"\u003eTips for completely beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eTry to understand why previous solution is not working as you expect.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eYou may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our \u003ccode\u003ecat\u003c/code\u003e command:\n\u003cimg alt=\"bandit2\" loading=\"lazy\" src=\"/images/otw/bandit/bandit2/0.png\"\u003e\u003c/p\u003e\n\u003cp\u003eThe terminal is \u003cem\u003ewaiting\u003c/em\u003e for something else. This happens due to character \u003ccode\u003e-\u003c/code\u003e is used to pass arguments to our commands, and the linux shell is interpreting that.\nTo prevent that, we could use:\u003c/p\u003e","title":"Bandit2"},{"content":"Level description The password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\nTips for completely beginners Think about how to escape the whitespaces. Solution After login in the machine as bandit3, we can see the filename \u0026ndash;spaces in this filename\u0026ndash;.\nNow we have 2 problems:\nSame as previous level, filename starts with --, so it will be interpreted as an argument. Address this problem using ./. Filename contains whitespaces. This is an issue, as bash interpretes whitespaces to separate commands. To solve the second problem, we must escape the whitespace character in some way. Here is the solution:\ncat ./--spaces\\ in\\ this\\ filename-- NB: Little trick, you can start writting filename and press Tab to autocomplete the name. The \\ is going to be inserted automatically.\nJust using the \\ we can escape the whitespace.\nNow we can continue with the bandit4 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit3/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-completely-beginners\"\u003eTips for completely beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eThink about how to \u003cem\u003eescape\u003c/em\u003e the whitespaces.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAfter login in the machine as bandit3, we can see the filename \u003cem\u003e\u0026ndash;spaces in this filename\u0026ndash;\u003c/em\u003e.\u003c/p\u003e\n\u003cp\u003eNow we have 2 problems:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eSame as previous level, filename starts with \u003ccode\u003e--\u003c/code\u003e, so it will be interpreted as an argument. Address this problem using \u003ccode\u003e./\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003eFilename contains \u003cstrong\u003ewhitespaces\u003c/strong\u003e. This is an issue, as bash interpretes whitespaces to separate commands.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eTo solve the second problem, we must escape the whitespace character in some way. Here is the solution:\u003c/p\u003e","title":"Bandit3"},{"content":"Level description The password for the next level is stored in a hidden file in the inhere directory.\nTips for completely beginners Learn how to navigate directories in Linux. First understand what a hidden file is. Solution Listing directory files inside bandit4\u0026rsquo;s home directory, show directory inhere.\nNB: How to distinguish files and directories in Linux? Use ls -l and see the difference.\nWe have 2 options now:\nMove to inhere directory and check contens again. Check contents directly. Moving to another directory can be done using cd \u0026lt;dirName\u0026gt;. If you prefer to check directory contents directly, use ls \u0026lt;dirName\u0026gt;.\nAfter checking inhere contents via ls, we see nothing. The reason is the file is a hidden file. A hidden file in Linux is everyfile whose name starts with dot .. Hidden files are not shown by default with ls command, so we must add a special flag -a to list all files: NB: Both flags -l and -a cna be combined into a single flag -al, which is shorter to type.\nAs you can see, filename is \u0026hellip;Hidding-From-You starting with three dots. Reading file contents should be easy at this point!\nNext level is bandit5.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit4/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a hidden file in the inhere directory.\u003c/p\u003e\n\u003ch2 id=\"tips-for-completely-beginners\"\u003eTips for completely beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to navigate directories in Linux.\u003c/li\u003e\n\u003cli\u003eFirst understand what a hidden file is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eListing directory files inside bandit4\u0026rsquo;s home directory, show directory \u003cstrong\u003einhere\u003c/strong\u003e.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e How to distinguish files and directories in Linux? Use \u003ccode\u003els -l\u003c/code\u003e and see the difference.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eWe have 2 options now:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eMove to inhere directory and check contens again.\u003c/li\u003e\n\u003cli\u003eCheck contents directly.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eMoving to another directory can be done using \u003ccode\u003ecd \u0026lt;dirName\u0026gt;\u003c/code\u003e. If you prefer to check directory contents directly, use \u003ccode\u003els \u0026lt;dirName\u0026gt;\u003c/code\u003e.\u003c/p\u003e","title":"Bandit4"},{"content":"Level description The password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\nTips for completely beginners What means human-readable file? Is there any way to check filetype at Linux?. Solution Checking inhere\u0026rsquo;s contents shows some files names \u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII here\nSo now, our goal is checking if file content of every file in the folder is ASCII or not. file \u0026lt;filename\u0026gt; does the job. Note the use of *. That called a wildcard regular expression, we\u0026rsquo;ll deep into it in later levels. An easy approach could be checking every file separately:\nfile ./--file00 file ./--file01 ... file ./--file09 But that\u0026rsquo;s not funny, imagine we have 100 files to check. All the files are in the same directory, so we can use cat ./* where ./* matches every filename in the directory, applying file to every file.\nNB: Another approach is to use find with certaing flags. Try to do in different ways, don\u0026rsquo;t stick to my solution.\nThe file \u0026ndash;file00 content is not readable, so get password from \u0026ndash;file07 and continue with bandit6.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit5/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\u003c/p\u003e\n\u003ch2 id=\"tips-for-completely-beginners\"\u003eTips for completely beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eWhat means human-readable file?\u003c/li\u003e\n\u003cli\u003eIs there any way to check filetype at Linux?.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eChecking inhere\u0026rsquo;s contents shows some files names \u003cstrong\u003e\u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09\u003c/strong\u003e. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII \u003ca href=\"https://en.wikipedia.org/wiki/ASCII\"\u003ehere\u003c/a\u003e\u003c/p\u003e","title":"Bandit5"},{"content":"Level description The password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\nhuman-readable 1033 bytes in size not executable Tips for completely beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution The purpose of the level is showing us how to find for files. Listing contents of inhere, we can see some folders, containing a lot of files inside: NB: Adding -R to ls shows recursively the content of every folder inside the directory listed.\nSo this time, checking every file is not an option. We need to find a file with some properties, specific size, not excutable and human-readable. Let\u0026rsquo;s explain the command we\u0026rsquo;re using:\nfind inhere/ -size 1033c ! -executable First, we specify the directory, in this case inhere. The option -size 1033c returns files of 1033 bytes. Then, with -executable we would get executable files, but we want not executable files, that\u0026rsquo;s why we are adding ! before.\nThe property of human-readability is not implemented in find. This is not an issue, previous command returns a single file and it is human readable (we could confirm using file): NB: By default, the -size option takes as argument the number of blocks. For example, -size 2 means 2 blocks of 512 bytes, so its 1024. The c is used to specify exact bytes. Don\u0026rsquo;t ask me why it\u0026rsquo;s c and not b 😅.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit6/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ehuman-readable\u003c/li\u003e\n\u003cli\u003e1033 bytes in size\u003c/li\u003e\n\u003cli\u003enot executable\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-completely-beginners\"\u003eTips for completely beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThe purpose of the level is showing us how to find for files. Listing contents of \u003cstrong\u003einhere\u003c/strong\u003e, we can see some folders, containing a lot of files inside:\n\u003cimg alt=\"bandit6_0\" loading=\"lazy\" src=\"/images/otw/bandit/bandit6/0.png\"\u003e\u003c/p\u003e","title":"Bandit6"},{"content":"👨‍💻 whoami Hey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\nWhat is this❓​ This blog is basically my thoughts on several hacking topics. Here you’ll see:\nWriteups from CTF challenges, from platforms like HackTheBox or OverTheWire.\nWalkthroughs and notes on pentesting techniques I’m learning or testing.\nSome posts on cryptography — because math can be fun (sometimes).\nRandom topics that freaks like me may (just may) find interesting.\nThe idea is simple: share what I learn, document my journey, and maybe help others who are also diving into the exciting world of ethical hacking.\n📫 Contact Want to say hi, share ideas, or just geek out about hacking? Reach me here:\n📧 Email: mrb0b1073@proton.me 💻​ GitHub: mrb0b173 🟩​ HackTheBox: mrb0b1073 ","permalink":"http://localhost:1313/about/","summary":"\u003ch2 id=\"-whoami\"\u003e👨‍💻 whoami\u003c/h2\u003e\n\u003cp\u003eHey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\u003c/p\u003e\n\u003chr\u003e\n\u003ch2 id=\"what-is-this\"\u003eWhat is this❓​\u003c/h2\u003e\n\u003cp\u003eThis blog is basically my thoughts on several hacking topics. Here you’ll see:\u003c/p\u003e","title":"About"},{"content":"Hey! 👋 I\u0026rsquo;m mrb0b1073 and this is my first post.\nWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\nExcited to start this adventure!\n","permalink":"http://localhost:1313/posts/hello-world/","summary":"\u003cp\u003eHey! 👋 I\u0026rsquo;m \u003cstrong\u003emrb0b1073\u003c/strong\u003e and this is my first post.\u003c/p\u003e\n\u003cp\u003eWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\u003cbr\u003e\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\u003c/p\u003e\n\u003cp\u003eExcited to start this adventure!\u003c/p\u003e","title":"Hello World"},{"content":"Introduction If you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\nIn cybersecurity there are broadly two complementary roles: Blue Team and Red Team. Blue Teams focus on defense, monitoring, incident response, hardening systems and keeping services secure, while Red Teams simulate attackers to find weaknesses and prove what an adversary could do. Ethical hacking aligns closely with Red Team operations, but cybersecurity is highly transversal across IT. There are many specialities or areas, such as cloud security, appsec, pentesting, forensics, governance, risk management, malware analysis, etc. Every topic could deserve its own post, so let\u0026rsquo;s keep it simple and focus on ethical hacking.\nHacker philosophy Let\u0026rsquo;s start with the idea of what is exactly a hacker. A hacker is someone who explores systems to understand how they work, finds creative ways to make or fix things, and solves technical problems. Historically the word describes curiosity, craft, and a drive to improve systems — not criminality. It is important to make the distinction between hacker and cracker, also called cybercriminal. A hacker explores, builds, discloses responsibly and works to improve security. They work in authorized environments or labs. On the other hand, a cracker breaks into systems for theft, vandalism or other illicit gain.\nHere you can find the most popularized ideas often summarized as the hacker ethic:\nCuriosity first: Learn by exploring and tinkering. Freedom of information: All knowledge should be shared to help progress. This fits properly with the idea of open source. Mistrust of needless authority: Centralized control sometimes blocks innovation. It is always good to question anything, specially common assumptions. Meritocracy: Skills, craft and results matter more than titles. Craftsmanship \u0026amp; elegance: Technical beauty matters. Build clean, clever and efficient solutions. Responsability \u0026amp; ethics: Use your skills to build, fix, educate and defend, not to harm. Core fundamentals Assuming you want to init yourself in hacking, you should first build competence across three basic pillars.\nOperating Systems You should learn as much as possible about Linux and Windows. Specially Linux, all the tools you will be using are meant to be used in a Linux environment. Skill with shell is required, learn basic commands and how to interact with the OS using the terminal. Research about processes, file permissions, package management and logs. A large proportion of web servers around the world run on Linux, although Windows is also widely used. Windows knowledge is really valuable too, considering active directory is strongly used in corporate environments.\nNetworking You have to understand how computers communicate each other. Understand basic networking concepts, IP adresses, subnetting, proxies, find out how internet works. Study some protocols such as TCP/IP, HTTP, DNS or SSH. This could sound confusing for beginners, but this step is not optional! Study different client/server models and how services expose attack surfaces.\nProgramming \u0026amp; scripting Is this completely required? Maybe not for complete beginners. Does it help? Absolutely yes. Understanding how web apps or any type of application works makes things much easier. You can imagine different entry points to exploit if you understand how systems are designed. Also writing scripts in bash or python makes you more productive through automation.\nEthical Hacking foundations Once you feel confident with these 3 pillars, you can go to the next step. You can study about different topics and areas. For example, binary exploiting, web pentesting, mobile pentesting, wireless hacking, etc. You should start picking a focus, in this post we focus on web pentesting, as it is beginner friendly. Also web applications are the bread and butter in companies nowadays.\nKey concepts to study:\nCIA Triad: CIA refers to Confidentiality, Integrity and Availability. These three concepts are key in information security, and describe properties we want to ensure in our systems and information. Web Security basics, OWASP: Study the OWASP Top 10, which summarizes most frequent web security risks. Authentication and session control: Understand the concepts of Authentication and Authorization, research about how session is handled in web apps, cookies, JWT tokens, etc. Input validation \u0026amp; injection attacks: Learn about SQL Injection, Cross-Site Scripting (XSS), Code Injection, SSTI, and every injection type. Secure development lifecycle: Find out how to implement security controls in code. This can be more related to Blue Team, but as Red Teamer it is important to understand. Firewall evasion: What a firewall is and some techniques/methods to bypass. Some cryptography: Understand what a chiper and a hash are, how information is encrypted to prevent access from 3rd parties. Focusing on web, read about TLS protocol. There are many more topics you can research and learn, but this could be a nice starting point.\nTools and platforms to learn Now you have an idea of what to study, let\u0026rsquo;s see how to start in practical terms.\nSome platforms I personally recommend:\nOverTheWire: Here you can find some CTFs (Capture The Flag) which are fun to play and also really instructive. Bandit games are a must for complete beginners, as you will explore some linux and bash concepts which are basic to continue. The games are leveled by difficulty, in their web you can get all the information about how to play, only a terminal and SSH is required. This helps building your foundation in Linux OS. HackTheBox: Nº 1 platform in cybersecurity. Has a lot of resources to learn all this core fundamentals, and also red team / blue team security topics. It is focused on labs where you can test your skills hacking different boxes but if you really want to learn it is worth to invest time and money in the academy. I have to say the level here is high, specially if you try to hack machines on your own without using some guide or writeup. TryHackMe: More beginner friendly than hackthebox, it provides a lot of guided learning resources. PortSwigger Labs: Practical labs about specific topics, focused on web hacking. They are great to learn and understand different types of attacks, injections, and security misconfigurations. I would recommend digging into this once you have the theoretical basis about these concepts. I have to mention a few tools I am sure you\u0026rsquo;d end up using:\nNmap: This is probably the most famous tool in hacking, allowing you to gather information about ports and services running in a machine. Burpsuite: A proxy tool widely used in web application security testing. It basically allows you to intercept and modify web requests, which can be used to perform several types of attacks. Metasploit: The most used pentesting framework. Contains a large amount of scripts and exploits ready to run. Another crucial step here is to set up your virtual lab environment to test vulnerable applications. To achieve this goal, there are some Linux distributions like Kali, Parrot or BlackArch, but that\u0026rsquo;s a topic for another post.\nFinal thoughs To sum up, this would be my personal roadmap:\nLearn the fundamentals, specially Linux and networking. Install some Linux in a virtual machine, play with it, get comfortable with the terminal. You can start with bandit wargames in OverTheWire. Complete every level and make sure to understand everything as clear as possible. Move to guided boxes on HackTheBox. I recommend you joining their Discord, ask questions, community is great there! Take notes, repeat, learn, improve your skills. Maybe use your own lab environment, create your own vulnerable apps. Hacking is a mixing of curiosity, study and practice. Being passionate and motivated about it is really helpful and will definitely speed up the process. The path is long and really challenging, so keep it going!\n\u0026ldquo;Yes, I am a criminal. My crime is that of curiosity.\u0026rdquo; — The Mentor (Loyd Blankenship) at The Hacker Manifesto\n","permalink":"http://localhost:1313/posts/starting-point/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIf you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\u003c/p\u003e","title":"Starting Point"},{"content":"Introduction In this post series we are going to solve every level from bandit in OverTheWire This guide pretends to be a writeup containing the solutions of the level, designed for beginners.\nTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing WSL, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\nEvery section will contain the solution as well as some tips for people who is absolutely beginner.\nTips First of all, some tips:\nDo not use this as first resource to solve the levels. Try on your own, make mistakes and learn from them. Only check the solution as last resource or if you are completely new and you have absolutely no idea about what to do next. Take notes from your learning. Write up commands, tips and everything which can be useful in the future. Make sure to understand everything. Is a good idea to note the passwords for every level. If you want to continue letter, you can simply log in in the desired level. It is annoying to repeat everything! Follow the tips and information provided at OverTheWire website. Levels Here is my solution for every level:\nBandit0 Bandit1 Bandit2 Bandit3 Bandit4 Bandit5 Bandit6 ","permalink":"http://localhost:1313/posts/otw/bandit/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIn this post series we are going to solve every level from bandit in \u003ca href=\"https://overthewire.org/wargames/bandit/\"\u003e\u003cem\u003eOverTheWire\u003c/em\u003e\u003c/a\u003e\nThis guide pretends to be a writeup containing the solutions of the level, designed for beginners.\u003c/p\u003e\n\u003cp\u003eTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing \u003ca href=\"https://learn.microsoft.com/en-us/windows/wsl/install\"\u003eWSL\u003c/a\u003e, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\u003c/p\u003e","title":"Bandit"},{"content":"Level description The goal of this level is for you to log into the game using SSH. The host to which you need to connect is bandit.labs.overthewire.org, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\nTips for completely beginners Read a bit about what SSH is. Research about what a port is. Solution This is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go here.\nAt Linux, we can use ssh client to connect to the server. It should be installed by default on your system. If not, please first research about how to install. Once you have the SSH client installed, you can log in into the first level as follows:\nssh bandit0@bandit.labs.overthewire.org -p 2220 Syntax is simple: ssh \u0026lt;username\u0026gt;@\u0026lt;hostname\u0026gt; -p \u0026lt;port\u0026gt;. Usually SSH runs on port 22 by default, but they changed to port 2220 so we must specify it in the command.\nOnce you try to log in, you will see something like this: NB: If it\u0026rsquo;s the first time you try to log in, you will be asked about the authenticity of the host. Just type yes.\nType the password bandit0 and press enter. Now you are inside bandit server, ready to begin with bandit1!\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit0/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe goal of this level is for you to log into the game using SSH. The host to which you need to connect is \u003cstrong\u003ebandit.labs.overthewire.org\u003c/strong\u003e, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\u003c/p\u003e\n\u003ch2 id=\"tips-for-completely-beginners\"\u003eTips for completely beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eRead a bit about what SSH is.\u003c/li\u003e\n\u003cli\u003eResearch about what a port is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go \u003ca href=\"https://en.wikipedia.org/wiki/Secure_Shell\"\u003ehere\u003c/a\u003e.\u003c/p\u003e","title":"Bandit0"},{"content":"Level description The password for the next level is stored in a file called readme located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\nTips for completely beginners Learn about home directory in Linux. Learn to use cat and ls commands. Solution First step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\nls This shows in terminal the files at the current directory. There you will see the readme file.\nNow we can to check the contents, so let\u0026rsquo;s use cat:\ncat readme To read a file, we use cat \u0026lt;filename\u0026gt;.\nNB: Not every file is human readable in Linux. We deep more about this in later levels.\nThe content of the readme file reveals the password for bandit2 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit1/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u003cstrong\u003ereadme\u003c/strong\u003e located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\u003c/p\u003e\n\u003ch2 id=\"tips-for-completely-beginners\"\u003eTips for completely beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn about home directory in Linux.\u003c/li\u003e\n\u003cli\u003eLearn to use \u003ccode\u003ecat\u003c/code\u003e and \u003ccode\u003els\u003c/code\u003e commands.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eFirst step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\u003c/p\u003e","title":"Bandit1"},{"content":"Level description The password for the next level is stored in a file called - located in the home directory\nTips for completely beginners Try to understand why previous solution is not working as you expect. Solution You may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our cat command: The terminal is waiting for something else. This happens due to character - is used to pass arguments to our commands, and the linux shell is interpreting that. To prevent that, we could use:\ncat ./- NB: Dot . is used to refer current directory. The slash / is used at the end of directory name.\nWe get the password for bandit3 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit2/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called - located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-completely-beginners\"\u003eTips for completely beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eTry to understand why previous solution is not working as you expect.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eYou may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our \u003ccode\u003ecat\u003c/code\u003e command:\n\u003cimg alt=\"bandit2\" loading=\"lazy\" src=\"/images/otw/bandit/bandit2/0.png\"\u003e\u003c/p\u003e\n\u003cp\u003eThe terminal is \u003cem\u003ewaiting\u003c/em\u003e for something else. This happens due to character \u003ccode\u003e-\u003c/code\u003e is used to pass arguments to our commands, and the linux shell is interpreting that.\nTo prevent that, we could use:\u003c/p\u003e","title":"Bandit2"},{"content":"Level description The password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\nTips for completely beginners Think about how to escape the whitespaces. Solution After login in the machine as bandit3, we can see the filename \u0026ndash;spaces in this filename\u0026ndash;.\nNow we have 2 problems:\nSame as previous level, filename starts with --, so it will be interpreted as an argument. Address this problem using ./. Filename contains whitespaces. This is an issue, as bash interpretes whitespaces to separate commands. To solve the second problem, we must escape the whitespace character in some way. Here is the solution:\ncat ./--spaces\\ in\\ this\\ filename-- NB: Little trick, you can start writting filename and press Tab to autocomplete the name. The \\ is going to be inserted automatically.\nJust using the \\ we can escape the whitespace.\nNow we can continue with the bandit4 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit3/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-completely-beginners\"\u003eTips for completely beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eThink about how to \u003cem\u003eescape\u003c/em\u003e the whitespaces.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAfter login in the machine as bandit3, we can see the filename \u003cem\u003e\u0026ndash;spaces in this filename\u0026ndash;\u003c/em\u003e.\u003c/p\u003e\n\u003cp\u003eNow we have 2 problems:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eSame as previous level, filename starts with \u003ccode\u003e--\u003c/code\u003e, so it will be interpreted as an argument. Address this problem using \u003ccode\u003e./\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003eFilename contains \u003cstrong\u003ewhitespaces\u003c/strong\u003e. This is an issue, as bash interpretes whitespaces to separate commands.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eTo solve the second problem, we must escape the whitespace character in some way. Here is the solution:\u003c/p\u003e","title":"Bandit3"},{"content":"Level description The password for the next level is stored in a hidden file in the inhere directory.\nTips for completely beginners Learn how to navigate directories in Linux. First understand what a hidden file is. Solution Listing directory files inside bandit4\u0026rsquo;s home directory, show directory inhere.\nNB: How to distinguish files and directories in Linux? Use ls -l and see the difference.\nWe have 2 options now:\nMove to inhere directory and check contens again. Check contents directly. Moving to another directory can be done using cd \u0026lt;dirName\u0026gt;. If you prefer to check directory contents directly, use ls \u0026lt;dirName\u0026gt;.\nAfter checking inhere contents via ls, we see nothing. The reason is the file is a hidden file. A hidden file in Linux is everyfile whose name starts with dot .. Hidden files are not shown by default with ls command, so we must add a special flag -a to list all files: NB: Both flags -l and -a cna be combined into a single flag -al, which is shorter to type.\nAs you can see, filename is \u0026hellip;Hidding-From-You starting with three dots. Reading file contents should be easy at this point!\nNext level is bandit5.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit4/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a hidden file in the inhere directory.\u003c/p\u003e\n\u003ch2 id=\"tips-for-completely-beginners\"\u003eTips for completely beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to navigate directories in Linux.\u003c/li\u003e\n\u003cli\u003eFirst understand what a hidden file is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eListing directory files inside bandit4\u0026rsquo;s home directory, show directory \u003cstrong\u003einhere\u003c/strong\u003e.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e How to distinguish files and directories in Linux? Use \u003ccode\u003els -l\u003c/code\u003e and see the difference.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eWe have 2 options now:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eMove to inhere directory and check contens again.\u003c/li\u003e\n\u003cli\u003eCheck contents directly.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eMoving to another directory can be done using \u003ccode\u003ecd \u0026lt;dirName\u0026gt;\u003c/code\u003e. If you prefer to check directory contents directly, use \u003ccode\u003els \u0026lt;dirName\u0026gt;\u003c/code\u003e.\u003c/p\u003e","title":"Bandit4"},{"content":"Level description The password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\nTips for completely beginners What means human-readable file? Is there any way to check filetype at Linux?. Solution Checking inhere\u0026rsquo;s contents shows some files names \u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII here\nSo now, our goal is checking if file content of every file in the folder is ASCII or not. file \u0026lt;filename\u0026gt; does the job. Note the use of *. That called a wildcard regular expression, we\u0026rsquo;ll deep into it in later levels. An easy approach could be checking every file separately:\nfile ./--file00 file ./--file01 ... file ./--file09 But that\u0026rsquo;s not funny, imagine we have 100 files to check. All the files are in the same directory, so we can use cat ./* where ./* matches every filename in the directory, applying file to every file.\nNB: Another approach is to use find with certaing flags. Try to do in different ways, don\u0026rsquo;t stick to my solution.\nThe file \u0026ndash;file00 content is not readable, so get password from \u0026ndash;file07 and continue with bandit6.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit5/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\u003c/p\u003e\n\u003ch2 id=\"tips-for-completely-beginners\"\u003eTips for completely beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eWhat means human-readable file?\u003c/li\u003e\n\u003cli\u003eIs there any way to check filetype at Linux?.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eChecking inhere\u0026rsquo;s contents shows some files names \u003cstrong\u003e\u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09\u003c/strong\u003e. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII \u003ca href=\"https://en.wikipedia.org/wiki/ASCII\"\u003ehere\u003c/a\u003e\u003c/p\u003e","title":"Bandit5"},{"content":"Level description The password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\nhuman-readable 1033 bytes in size not executable Tips for completely beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution The purpose of the level is showing us how to find for files. Listing contents of inhere, we can see some folders, containing a lot of files inside: NB: Adding -R to ls shows recursively the content of every folder inside the directory listed.\nSo this time, checking every file is not an option. We need to find a file with some properties, specific size, not excutable and human-readable. Let\u0026rsquo;s explain the command we\u0026rsquo;re using:\nfind inhere/ -size 1033c ! -executable First, we specify the directory, in this case inhere. The option -size 1033c returns files of 1033 bytes. Then, with -executable we would get executable files, but we want not executable files, that\u0026rsquo;s why we are adding ! before.\nNB: By default, the -size option takes as argument the number of blocks. For example, -size 2 means 2 blocks of 512 bytes, so its 1024. The c is used to specify exact bytes. Don\u0026rsquo;t ask me why it\u0026rsquo;s c and not b 😅.\nThe property of human-readability is not implemented in find. This is not an issue, previous command returns a single file and it is human readable (we could confirm using file): ","permalink":"http://localhost:1313/posts/otw/bandit/bandit6/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ehuman-readable\u003c/li\u003e\n\u003cli\u003e1033 bytes in size\u003c/li\u003e\n\u003cli\u003enot executable\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-completely-beginners\"\u003eTips for completely beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThe purpose of the level is showing us how to find for files. Listing contents of \u003cstrong\u003einhere\u003c/strong\u003e, we can see some folders, containing a lot of files inside:\n\u003cimg alt=\"bandit6_0\" loading=\"lazy\" src=\"/images/otw/bandit/bandit6/0.png\"\u003e\u003c/p\u003e","title":"Bandit6"},{"content":"👨‍💻 whoami Hey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\nWhat is this❓​ This blog is basically my thoughts on several hacking topics. Here you’ll see:\nWriteups from CTF challenges, from platforms like HackTheBox or OverTheWire.\nWalkthroughs and notes on pentesting techniques I’m learning or testing.\nSome posts on cryptography — because math can be fun (sometimes).\nRandom topics that freaks like me may (just may) find interesting.\nThe idea is simple: share what I learn, document my journey, and maybe help others who are also diving into the exciting world of ethical hacking.\n📫 Contact Want to say hi, share ideas, or just geek out about hacking? Reach me here:\n📧 Email: mrb0b1073@proton.me 💻​ GitHub: mrb0b173 🟩​ HackTheBox: mrb0b1073 ","permalink":"http://localhost:1313/about/","summary":"\u003ch2 id=\"-whoami\"\u003e👨‍💻 whoami\u003c/h2\u003e\n\u003cp\u003eHey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\u003c/p\u003e\n\u003chr\u003e\n\u003ch2 id=\"what-is-this\"\u003eWhat is this❓​\u003c/h2\u003e\n\u003cp\u003eThis blog is basically my thoughts on several hacking topics. Here you’ll see:\u003c/p\u003e","title":"About"},{"content":"Hey! 👋 I\u0026rsquo;m mrb0b1073 and this is my first post.\nWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\nExcited to start this adventure!\n","permalink":"http://localhost:1313/posts/hello-world/","summary":"\u003cp\u003eHey! 👋 I\u0026rsquo;m \u003cstrong\u003emrb0b1073\u003c/strong\u003e and this is my first post.\u003c/p\u003e\n\u003cp\u003eWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\u003cbr\u003e\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\u003c/p\u003e\n\u003cp\u003eExcited to start this adventure!\u003c/p\u003e","title":"Hello World"},{"content":"Introduction If you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\nIn cybersecurity there are broadly two complementary roles: Blue Team and Red Team. Blue Teams focus on defense, monitoring, incident response, hardening systems and keeping services secure, while Red Teams simulate attackers to find weaknesses and prove what an adversary could do. Ethical hacking aligns closely with Red Team operations, but cybersecurity is highly transversal across IT. There are many specialities or areas, such as cloud security, appsec, pentesting, forensics, governance, risk management, malware analysis, etc. Every topic could deserve its own post, so let\u0026rsquo;s keep it simple and focus on ethical hacking.\nHacker philosophy Let\u0026rsquo;s start with the idea of what is exactly a hacker. A hacker is someone who explores systems to understand how they work, finds creative ways to make or fix things, and solves technical problems. Historically the word describes curiosity, craft, and a drive to improve systems — not criminality. It is important to make the distinction between hacker and cracker, also called cybercriminal. A hacker explores, builds, discloses responsibly and works to improve security. They work in authorized environments or labs. On the other hand, a cracker breaks into systems for theft, vandalism or other illicit gain.\nHere you can find the most popularized ideas often summarized as the hacker ethic:\nCuriosity first: Learn by exploring and tinkering. Freedom of information: All knowledge should be shared to help progress. This fits properly with the idea of open source. Mistrust of needless authority: Centralized control sometimes blocks innovation. It is always good to question anything, specially common assumptions. Meritocracy: Skills, craft and results matter more than titles. Craftsmanship \u0026amp; elegance: Technical beauty matters. Build clean, clever and efficient solutions. Responsability \u0026amp; ethics: Use your skills to build, fix, educate and defend, not to harm. Core fundamentals Assuming you want to init yourself in hacking, you should first build competence across three basic pillars.\nOperating Systems You should learn as much as possible about Linux and Windows. Specially Linux, all the tools you will be using are meant to be used in a Linux environment. Skill with shell is required, learn basic commands and how to interact with the OS using the terminal. Research about processes, file permissions, package management and logs. A large proportion of web servers around the world run on Linux, although Windows is also widely used. Windows knowledge is really valuable too, considering active directory is strongly used in corporate environments.\nNetworking You have to understand how computers communicate each other. Understand basic networking concepts, IP adresses, subnetting, proxies, find out how internet works. Study some protocols such as TCP/IP, HTTP, DNS or SSH. This could sound confusing for beginners, but this step is not optional! Study different client/server models and how services expose attack surfaces.\nProgramming \u0026amp; scripting Is this completely required? Maybe not for complete beginners. Does it help? Absolutely yes. Understanding how web apps or any type of application works makes things much easier. You can imagine different entry points to exploit if you understand how systems are designed. Also writing scripts in bash or python makes you more productive through automation.\nEthical Hacking foundations Once you feel confident with these 3 pillars, you can go to the next step. You can study about different topics and areas. For example, binary exploiting, web pentesting, mobile pentesting, wireless hacking, etc. You should start picking a focus, in this post we focus on web pentesting, as it is beginner friendly. Also web applications are the bread and butter in companies nowadays.\nKey concepts to study:\nCIA Triad: CIA refers to Confidentiality, Integrity and Availability. These three concepts are key in information security, and describe properties we want to ensure in our systems and information. Web Security basics, OWASP: Study the OWASP Top 10, which summarizes most frequent web security risks. Authentication and session control: Understand the concepts of Authentication and Authorization, research about how session is handled in web apps, cookies, JWT tokens, etc. Input validation \u0026amp; injection attacks: Learn about SQL Injection, Cross-Site Scripting (XSS), Code Injection, SSTI, and every injection type. Secure development lifecycle: Find out how to implement security controls in code. This can be more related to Blue Team, but as Red Teamer it is important to understand. Firewall evasion: What a firewall is and some techniques/methods to bypass. Some cryptography: Understand what a chiper and a hash are, how information is encrypted to prevent access from 3rd parties. Focusing on web, read about TLS protocol. There are many more topics you can research and learn, but this could be a nice starting point.\nTools and platforms to learn Now you have an idea of what to study, let\u0026rsquo;s see how to start in practical terms.\nSome platforms I personally recommend:\nOverTheWire: Here you can find some CTFs (Capture The Flag) which are fun to play and also really instructive. Bandit games are a must for complete beginners, as you will explore some linux and bash concepts which are basic to continue. The games are leveled by difficulty, in their web you can get all the information about how to play, only a terminal and SSH is required. This helps building your foundation in Linux OS. HackTheBox: Nº 1 platform in cybersecurity. Has a lot of resources to learn all this core fundamentals, and also red team / blue team security topics. It is focused on labs where you can test your skills hacking different boxes but if you really want to learn it is worth to invest time and money in the academy. I have to say the level here is high, specially if you try to hack machines on your own without using some guide or writeup. TryHackMe: More beginner friendly than hackthebox, it provides a lot of guided learning resources. PortSwigger Labs: Practical labs about specific topics, focused on web hacking. They are great to learn and understand different types of attacks, injections, and security misconfigurations. I would recommend digging into this once you have the theoretical basis about these concepts. I have to mention a few tools I am sure you\u0026rsquo;d end up using:\nNmap: This is probably the most famous tool in hacking, allowing you to gather information about ports and services running in a machine. Burpsuite: A proxy tool widely used in web application security testing. It basically allows you to intercept and modify web requests, which can be used to perform several types of attacks. Metasploit: The most used pentesting framework. Contains a large amount of scripts and exploits ready to run. Another crucial step here is to set up your virtual lab environment to test vulnerable applications. To achieve this goal, there are some Linux distributions like Kali, Parrot or BlackArch, but that\u0026rsquo;s a topic for another post.\nFinal thoughs To sum up, this would be my personal roadmap:\nLearn the fundamentals, specially Linux and networking. Install some Linux in a virtual machine, play with it, get comfortable with the terminal. You can start with bandit wargames in OverTheWire. Complete every level and make sure to understand everything as clear as possible. Move to guided boxes on HackTheBox. I recommend you joining their Discord, ask questions, community is great there! Take notes, repeat, learn, improve your skills. Maybe use your own lab environment, create your own vulnerable apps. Hacking is a mixing of curiosity, study and practice. Being passionate and motivated about it is really helpful and will definitely speed up the process. The path is long and really challenging, so keep it going!\n\u0026ldquo;Yes, I am a criminal. My crime is that of curiosity.\u0026rdquo; — The Mentor (Loyd Blankenship) at The Hacker Manifesto\n","permalink":"http://localhost:1313/posts/starting-point/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIf you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\u003c/p\u003e","title":"Starting Point"},{"content":"Introduction In this post series we are going to solve every level from bandit in OverTheWire This guide pretends to be a writeup containing the solutions of the level, designed for beginners.\nTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing WSL, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\nEvery section will contain the solution as well as some tips for people who is absolutely beginner.\nTips First of all, some tips:\nDo not use this as first resource to solve the levels. Try on your own, make mistakes and learn from them. Only check the solution as last resource or if you are completely new and you have absolutely no idea about what to do next. Take notes from your learning. Write up commands, tips and everything which can be useful in the future. Make sure to understand everything. Is a good idea to note the passwords for every level. If you want to continue letter, you can simply log in in the desired level. It is annoying to repeat everything! Follow the tips and information provided at OverTheWire website. Levels Here is my solution for every level:\nBandit0 Bandit1 Bandit2 Bandit3 Bandit4 Bandit5 Bandit6 ","permalink":"http://localhost:1313/posts/otw/bandit/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIn this post series we are going to solve every level from bandit in \u003ca href=\"https://overthewire.org/wargames/bandit/\"\u003e\u003cem\u003eOverTheWire\u003c/em\u003e\u003c/a\u003e\nThis guide pretends to be a writeup containing the solutions of the level, designed for beginners.\u003c/p\u003e\n\u003cp\u003eTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing \u003ca href=\"https://learn.microsoft.com/en-us/windows/wsl/install\"\u003eWSL\u003c/a\u003e, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\u003c/p\u003e","title":"Bandit"},{"content":"Level description The goal of this level is for you to log into the game using SSH. The host to which you need to connect is bandit.labs.overthewire.org, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\nTips for beginners Read a bit about what SSH is. Research about what a port is. Solution This is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go here.\nAt Linux, we can use ssh client to connect to the server. It should be installed by default on your system. If not, please first research about how to install. Once you have the SSH client installed, you can log in into the first level as follows:\nssh bandit0@bandit.labs.overthewire.org -p 2220 Syntax is simple: ssh \u0026lt;username\u0026gt;@\u0026lt;hostname\u0026gt; -p \u0026lt;port\u0026gt;. Usually SSH runs on port 22 by default, but they changed to port 2220 so we must specify it in the command.\nOnce you try to log in, you will see something like this: NB: If it\u0026rsquo;s the first time you try to log in, you will be asked about the authenticity of the host. Just type yes.\nType the password bandit0 and press enter. Now you are inside bandit server, ready to begin with bandit1!\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit0/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe goal of this level is for you to log into the game using SSH. The host to which you need to connect is \u003cstrong\u003ebandit.labs.overthewire.org\u003c/strong\u003e, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eRead a bit about what SSH is.\u003c/li\u003e\n\u003cli\u003eResearch about what a port is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go \u003ca href=\"https://en.wikipedia.org/wiki/Secure_Shell\"\u003ehere\u003c/a\u003e.\u003c/p\u003e","title":"Bandit0"},{"content":"Level description The password for the next level is stored in a file called readme located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\nTips for completely beginners Learn about home directory in Linux. Learn to use cat and ls commands. Solution First step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\nls This shows in terminal the files at the current directory. There you will see the readme file.\nNow we can to check the contents, so let\u0026rsquo;s use cat:\ncat readme To read a file, we use cat \u0026lt;filename\u0026gt;.\nNB: Not every file is human readable in Linux. We deep more about this in later levels.\nThe content of the readme file reveals the password for bandit2 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit1/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u003cstrong\u003ereadme\u003c/strong\u003e located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\u003c/p\u003e\n\u003ch2 id=\"tips-for-completely-beginners\"\u003eTips for completely beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn about home directory in Linux.\u003c/li\u003e\n\u003cli\u003eLearn to use \u003ccode\u003ecat\u003c/code\u003e and \u003ccode\u003els\u003c/code\u003e commands.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eFirst step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\u003c/p\u003e","title":"Bandit1"},{"content":"Level description The password for the next level is stored in a file called - located in the home directory\nTips for completely beginners Try to understand why previous solution is not working as you expect. Solution You may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our cat command: The terminal is waiting for something else. This happens due to character - is used to pass arguments to our commands, and the linux shell is interpreting that. To prevent that, we could use:\ncat ./- NB: Dot . is used to refer current directory. The slash / is used at the end of directory name.\nWe get the password for bandit3 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit2/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called - located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-completely-beginners\"\u003eTips for completely beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eTry to understand why previous solution is not working as you expect.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eYou may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our \u003ccode\u003ecat\u003c/code\u003e command:\n\u003cimg alt=\"bandit2\" loading=\"lazy\" src=\"/images/otw/bandit/bandit2/0.png\"\u003e\u003c/p\u003e\n\u003cp\u003eThe terminal is \u003cem\u003ewaiting\u003c/em\u003e for something else. This happens due to character \u003ccode\u003e-\u003c/code\u003e is used to pass arguments to our commands, and the linux shell is interpreting that.\nTo prevent that, we could use:\u003c/p\u003e","title":"Bandit2"},{"content":"Level description The password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\nTips for completely beginners Think about how to escape the whitespaces. Solution After login in the machine as bandit3, we can see the filename \u0026ndash;spaces in this filename\u0026ndash;.\nNow we have 2 problems:\nSame as previous level, filename starts with --, so it will be interpreted as an argument. Address this problem using ./. Filename contains whitespaces. This is an issue, as bash interpretes whitespaces to separate commands. To solve the second problem, we must escape the whitespace character in some way. Here is the solution:\ncat ./--spaces\\ in\\ this\\ filename-- NB: Little trick, you can start writting filename and press Tab to autocomplete the name. The \\ is going to be inserted automatically.\nJust using the \\ we can escape the whitespace.\nNow we can continue with the bandit4 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit3/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-completely-beginners\"\u003eTips for completely beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eThink about how to \u003cem\u003eescape\u003c/em\u003e the whitespaces.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAfter login in the machine as bandit3, we can see the filename \u003cem\u003e\u0026ndash;spaces in this filename\u0026ndash;\u003c/em\u003e.\u003c/p\u003e\n\u003cp\u003eNow we have 2 problems:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eSame as previous level, filename starts with \u003ccode\u003e--\u003c/code\u003e, so it will be interpreted as an argument. Address this problem using \u003ccode\u003e./\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003eFilename contains \u003cstrong\u003ewhitespaces\u003c/strong\u003e. This is an issue, as bash interpretes whitespaces to separate commands.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eTo solve the second problem, we must escape the whitespace character in some way. Here is the solution:\u003c/p\u003e","title":"Bandit3"},{"content":"Level description The password for the next level is stored in a hidden file in the inhere directory.\nTips for completely beginners Learn how to navigate directories in Linux. First understand what a hidden file is. Solution Listing directory files inside bandit4\u0026rsquo;s home directory, show directory inhere.\nNB: How to distinguish files and directories in Linux? Use ls -l and see the difference.\nWe have 2 options now:\nMove to inhere directory and check contens again. Check contents directly. Moving to another directory can be done using cd \u0026lt;dirName\u0026gt;. If you prefer to check directory contents directly, use ls \u0026lt;dirName\u0026gt;.\nAfter checking inhere contents via ls, we see nothing. The reason is the file is a hidden file. A hidden file in Linux is everyfile whose name starts with dot .. Hidden files are not shown by default with ls command, so we must add a special flag -a to list all files: NB: Both flags -l and -a cna be combined into a single flag -al, which is shorter to type.\nAs you can see, filename is \u0026hellip;Hidding-From-You starting with three dots. Reading file contents should be easy at this point!\nNext level is bandit5.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit4/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a hidden file in the inhere directory.\u003c/p\u003e\n\u003ch2 id=\"tips-for-completely-beginners\"\u003eTips for completely beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to navigate directories in Linux.\u003c/li\u003e\n\u003cli\u003eFirst understand what a hidden file is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eListing directory files inside bandit4\u0026rsquo;s home directory, show directory \u003cstrong\u003einhere\u003c/strong\u003e.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e How to distinguish files and directories in Linux? Use \u003ccode\u003els -l\u003c/code\u003e and see the difference.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eWe have 2 options now:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eMove to inhere directory and check contens again.\u003c/li\u003e\n\u003cli\u003eCheck contents directly.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eMoving to another directory can be done using \u003ccode\u003ecd \u0026lt;dirName\u0026gt;\u003c/code\u003e. If you prefer to check directory contents directly, use \u003ccode\u003els \u0026lt;dirName\u0026gt;\u003c/code\u003e.\u003c/p\u003e","title":"Bandit4"},{"content":"Level description The password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\nTips for completely beginners What means human-readable file? Is there any way to check filetype at Linux?. Solution Checking inhere\u0026rsquo;s contents shows some files names \u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII here\nSo now, our goal is checking if file content of every file in the folder is ASCII or not. file \u0026lt;filename\u0026gt; does the job. Note the use of *. That called a wildcard regular expression, we\u0026rsquo;ll deep into it in later levels. An easy approach could be checking every file separately:\nfile ./--file00 file ./--file01 ... file ./--file09 But that\u0026rsquo;s not funny, imagine we have 100 files to check. All the files are in the same directory, so we can use cat ./* where ./* matches every filename in the directory, applying file to every file.\nNB: Another approach is to use find with certaing flags. Try to do in different ways, don\u0026rsquo;t stick to my solution.\nThe file \u0026ndash;file00 content is not readable, so get password from \u0026ndash;file07 and continue with bandit6.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit5/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\u003c/p\u003e\n\u003ch2 id=\"tips-for-completely-beginners\"\u003eTips for completely beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eWhat means human-readable file?\u003c/li\u003e\n\u003cli\u003eIs there any way to check filetype at Linux?.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eChecking inhere\u0026rsquo;s contents shows some files names \u003cstrong\u003e\u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09\u003c/strong\u003e. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII \u003ca href=\"https://en.wikipedia.org/wiki/ASCII\"\u003ehere\u003c/a\u003e\u003c/p\u003e","title":"Bandit5"},{"content":"Level description The password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\nhuman-readable 1033 bytes in size not executable Tips for completely beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution The purpose of the level is showing us how to find for files. Listing contents of inhere, we can see some folders, containing a lot of files inside: NB: Adding -R to ls shows recursively the content of every folder inside the directory listed.\nSo this time, checking every file is not an option. We need to find a file with some properties, specific size, not excutable and human-readable. Let\u0026rsquo;s explain the command we\u0026rsquo;re using:\nfind inhere/ -size 1033c ! -executable First, we specify the directory, in this case inhere. The option -size 1033c returns files of 1033 bytes. Then, with -executable we would get executable files, but we want not executable files, that\u0026rsquo;s why we are adding ! before.\nNB: By default, the -size option takes as argument the number of blocks. For example, -size 2 means 2 blocks of 512 bytes, so its 1024. The c is used to specify exact bytes. Don\u0026rsquo;t ask me why it\u0026rsquo;s c and not b 😅.\nThe property of human-readability is not implemented in find. This is not an issue, previous command returns a single file and it is human readable (we could confirm using file): ","permalink":"http://localhost:1313/posts/otw/bandit/bandit6/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ehuman-readable\u003c/li\u003e\n\u003cli\u003e1033 bytes in size\u003c/li\u003e\n\u003cli\u003enot executable\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-completely-beginners\"\u003eTips for completely beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThe purpose of the level is showing us how to find for files. Listing contents of \u003cstrong\u003einhere\u003c/strong\u003e, we can see some folders, containing a lot of files inside:\n\u003cimg alt=\"bandit6_0\" loading=\"lazy\" src=\"/images/otw/bandit/bandit6/0.png\"\u003e\u003c/p\u003e","title":"Bandit6"},{"content":"👨‍💻 whoami Hey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\nWhat is this❓​ This blog is basically my thoughts on several hacking topics. Here you’ll see:\nWriteups from CTF challenges, from platforms like HackTheBox or OverTheWire.\nWalkthroughs and notes on pentesting techniques I’m learning or testing.\nSome posts on cryptography — because math can be fun (sometimes).\nRandom topics that freaks like me may (just may) find interesting.\nThe idea is simple: share what I learn, document my journey, and maybe help others who are also diving into the exciting world of ethical hacking.\n📫 Contact Want to say hi, share ideas, or just geek out about hacking? Reach me here:\n📧 Email: mrb0b1073@proton.me 💻​ GitHub: mrb0b173 🟩​ HackTheBox: mrb0b1073 ","permalink":"http://localhost:1313/about/","summary":"\u003ch2 id=\"-whoami\"\u003e👨‍💻 whoami\u003c/h2\u003e\n\u003cp\u003eHey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\u003c/p\u003e\n\u003chr\u003e\n\u003ch2 id=\"what-is-this\"\u003eWhat is this❓​\u003c/h2\u003e\n\u003cp\u003eThis blog is basically my thoughts on several hacking topics. Here you’ll see:\u003c/p\u003e","title":"About"},{"content":"Hey! 👋 I\u0026rsquo;m mrb0b1073 and this is my first post.\nWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\nExcited to start this adventure!\n","permalink":"http://localhost:1313/posts/hello-world/","summary":"\u003cp\u003eHey! 👋 I\u0026rsquo;m \u003cstrong\u003emrb0b1073\u003c/strong\u003e and this is my first post.\u003c/p\u003e\n\u003cp\u003eWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\u003cbr\u003e\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\u003c/p\u003e\n\u003cp\u003eExcited to start this adventure!\u003c/p\u003e","title":"Hello World"},{"content":"Introduction If you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\nIn cybersecurity there are broadly two complementary roles: Blue Team and Red Team. Blue Teams focus on defense, monitoring, incident response, hardening systems and keeping services secure, while Red Teams simulate attackers to find weaknesses and prove what an adversary could do. Ethical hacking aligns closely with Red Team operations, but cybersecurity is highly transversal across IT. There are many specialities or areas, such as cloud security, appsec, pentesting, forensics, governance, risk management, malware analysis, etc. Every topic could deserve its own post, so let\u0026rsquo;s keep it simple and focus on ethical hacking.\nHacker philosophy Let\u0026rsquo;s start with the idea of what is exactly a hacker. A hacker is someone who explores systems to understand how they work, finds creative ways to make or fix things, and solves technical problems. Historically the word describes curiosity, craft, and a drive to improve systems — not criminality. It is important to make the distinction between hacker and cracker, also called cybercriminal. A hacker explores, builds, discloses responsibly and works to improve security. They work in authorized environments or labs. On the other hand, a cracker breaks into systems for theft, vandalism or other illicit gain.\nHere you can find the most popularized ideas often summarized as the hacker ethic:\nCuriosity first: Learn by exploring and tinkering. Freedom of information: All knowledge should be shared to help progress. This fits properly with the idea of open source. Mistrust of needless authority: Centralized control sometimes blocks innovation. It is always good to question anything, specially common assumptions. Meritocracy: Skills, craft and results matter more than titles. Craftsmanship \u0026amp; elegance: Technical beauty matters. Build clean, clever and efficient solutions. Responsability \u0026amp; ethics: Use your skills to build, fix, educate and defend, not to harm. Core fundamentals Assuming you want to init yourself in hacking, you should first build competence across three basic pillars.\nOperating Systems You should learn as much as possible about Linux and Windows. Specially Linux, all the tools you will be using are meant to be used in a Linux environment. Skill with shell is required, learn basic commands and how to interact with the OS using the terminal. Research about processes, file permissions, package management and logs. A large proportion of web servers around the world run on Linux, although Windows is also widely used. Windows knowledge is really valuable too, considering active directory is strongly used in corporate environments.\nNetworking You have to understand how computers communicate each other. Understand basic networking concepts, IP adresses, subnetting, proxies, find out how internet works. Study some protocols such as TCP/IP, HTTP, DNS or SSH. This could sound confusing for beginners, but this step is not optional! Study different client/server models and how services expose attack surfaces.\nProgramming \u0026amp; scripting Is this completely required? Maybe not for complete beginners. Does it help? Absolutely yes. Understanding how web apps or any type of application works makes things much easier. You can imagine different entry points to exploit if you understand how systems are designed. Also writing scripts in bash or python makes you more productive through automation.\nEthical Hacking foundations Once you feel confident with these 3 pillars, you can go to the next step. You can study about different topics and areas. For example, binary exploiting, web pentesting, mobile pentesting, wireless hacking, etc. You should start picking a focus, in this post we focus on web pentesting, as it is beginner friendly. Also web applications are the bread and butter in companies nowadays.\nKey concepts to study:\nCIA Triad: CIA refers to Confidentiality, Integrity and Availability. These three concepts are key in information security, and describe properties we want to ensure in our systems and information. Web Security basics, OWASP: Study the OWASP Top 10, which summarizes most frequent web security risks. Authentication and session control: Understand the concepts of Authentication and Authorization, research about how session is handled in web apps, cookies, JWT tokens, etc. Input validation \u0026amp; injection attacks: Learn about SQL Injection, Cross-Site Scripting (XSS), Code Injection, SSTI, and every injection type. Secure development lifecycle: Find out how to implement security controls in code. This can be more related to Blue Team, but as Red Teamer it is important to understand. Firewall evasion: What a firewall is and some techniques/methods to bypass. Some cryptography: Understand what a chiper and a hash are, how information is encrypted to prevent access from 3rd parties. Focusing on web, read about TLS protocol. There are many more topics you can research and learn, but this could be a nice starting point.\nTools and platforms to learn Now you have an idea of what to study, let\u0026rsquo;s see how to start in practical terms.\nSome platforms I personally recommend:\nOverTheWire: Here you can find some CTFs (Capture The Flag) which are fun to play and also really instructive. Bandit games are a must for complete beginners, as you will explore some linux and bash concepts which are basic to continue. The games are leveled by difficulty, in their web you can get all the information about how to play, only a terminal and SSH is required. This helps building your foundation in Linux OS. HackTheBox: Nº 1 platform in cybersecurity. Has a lot of resources to learn all this core fundamentals, and also red team / blue team security topics. It is focused on labs where you can test your skills hacking different boxes but if you really want to learn it is worth to invest time and money in the academy. I have to say the level here is high, specially if you try to hack machines on your own without using some guide or writeup. TryHackMe: More beginner friendly than hackthebox, it provides a lot of guided learning resources. PortSwigger Labs: Practical labs about specific topics, focused on web hacking. They are great to learn and understand different types of attacks, injections, and security misconfigurations. I would recommend digging into this once you have the theoretical basis about these concepts. I have to mention a few tools I am sure you\u0026rsquo;d end up using:\nNmap: This is probably the most famous tool in hacking, allowing you to gather information about ports and services running in a machine. Burpsuite: A proxy tool widely used in web application security testing. It basically allows you to intercept and modify web requests, which can be used to perform several types of attacks. Metasploit: The most used pentesting framework. Contains a large amount of scripts and exploits ready to run. Another crucial step here is to set up your virtual lab environment to test vulnerable applications. To achieve this goal, there are some Linux distributions like Kali, Parrot or BlackArch, but that\u0026rsquo;s a topic for another post.\nFinal thoughs To sum up, this would be my personal roadmap:\nLearn the fundamentals, specially Linux and networking. Install some Linux in a virtual machine, play with it, get comfortable with the terminal. You can start with bandit wargames in OverTheWire. Complete every level and make sure to understand everything as clear as possible. Move to guided boxes on HackTheBox. I recommend you joining their Discord, ask questions, community is great there! Take notes, repeat, learn, improve your skills. Maybe use your own lab environment, create your own vulnerable apps. Hacking is a mixing of curiosity, study and practice. Being passionate and motivated about it is really helpful and will definitely speed up the process. The path is long and really challenging, so keep it going!\n\u0026ldquo;Yes, I am a criminal. My crime is that of curiosity.\u0026rdquo; — The Mentor (Loyd Blankenship) at The Hacker Manifesto\n","permalink":"http://localhost:1313/posts/starting-point/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIf you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\u003c/p\u003e","title":"Starting Point"},{"content":"Introduction In this post series we are going to solve every level from bandit in OverTheWire This guide pretends to be a writeup containing the solutions of the level, designed for beginners.\nTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing WSL, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\nEvery section will contain the solution as well as some tips for people who is absolutely beginner.\nTips First of all, some tips:\nDo not use this as first resource to solve the levels. Try on your own, make mistakes and learn from them. Only check the solution as last resource or if you are completely new and you have absolutely no idea about what to do next. Take notes from your learning. Write up commands, tips and everything which can be useful in the future. Make sure to understand everything. Is a good idea to note the passwords for every level. If you want to continue letter, you can simply log in in the desired level. It is annoying to repeat everything! Follow the tips and information provided at OverTheWire website. Levels Here is my solution for every level:\nBandit0 Bandit1 Bandit2 Bandit3 Bandit4 Bandit5 Bandit6 ","permalink":"http://localhost:1313/posts/otw/bandit/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIn this post series we are going to solve every level from bandit in \u003ca href=\"https://overthewire.org/wargames/bandit/\"\u003e\u003cem\u003eOverTheWire\u003c/em\u003e\u003c/a\u003e\nThis guide pretends to be a writeup containing the solutions of the level, designed for beginners.\u003c/p\u003e\n\u003cp\u003eTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing \u003ca href=\"https://learn.microsoft.com/en-us/windows/wsl/install\"\u003eWSL\u003c/a\u003e, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\u003c/p\u003e","title":"Bandit"},{"content":"Level description The goal of this level is for you to log into the game using SSH. The host to which you need to connect is bandit.labs.overthewire.org, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\nTips for beginners Read a bit about what SSH is. Research about what a port is. Solution This is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go here.\nAt Linux, we can use ssh client to connect to the server. It should be installed by default on your system. If not, please first research about how to install. Once you have the SSH client installed, you can log in into the first level as follows:\nssh bandit0@bandit.labs.overthewire.org -p 2220 Syntax is simple: ssh \u0026lt;username\u0026gt;@\u0026lt;hostname\u0026gt; -p \u0026lt;port\u0026gt;. Usually SSH runs on port 22 by default, but they changed to port 2220 so we must specify it in the command.\nOnce you try to log in, you will see something like this: NB: If it\u0026rsquo;s the first time you try to log in, you will be asked about the authenticity of the host. Just type yes.\nType the password bandit0 and press enter. Now you are inside bandit server, ready to begin with bandit1!\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit0/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe goal of this level is for you to log into the game using SSH. The host to which you need to connect is \u003cstrong\u003ebandit.labs.overthewire.org\u003c/strong\u003e, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eRead a bit about what SSH is.\u003c/li\u003e\n\u003cli\u003eResearch about what a port is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go \u003ca href=\"https://en.wikipedia.org/wiki/Secure_Shell\"\u003ehere\u003c/a\u003e.\u003c/p\u003e","title":"Bandit0"},{"content":"Level description The password for the next level is stored in a file called readme located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\nTips for beginners Learn about home directory in Linux. Learn to use cat and ls commands. Solution First step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\nls This shows in terminal the files at the current directory. There you will see the readme file.\nNow we can to check the contents, so let\u0026rsquo;s use cat:\ncat readme To read a file, we use cat \u0026lt;filename\u0026gt;.\nNB: Not every file is human readable in Linux. We deep more about this in later levels.\nThe content of the readme file reveals the password for bandit2 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit1/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u003cstrong\u003ereadme\u003c/strong\u003e located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn about home directory in Linux.\u003c/li\u003e\n\u003cli\u003eLearn to use \u003ccode\u003ecat\u003c/code\u003e and \u003ccode\u003els\u003c/code\u003e commands.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eFirst step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\u003c/p\u003e","title":"Bandit1"},{"content":"Level description The password for the next level is stored in a file called - located in the home directory\nTips for completely beginners Try to understand why previous solution is not working as you expect. Solution You may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our cat command: The terminal is waiting for something else. This happens due to character - is used to pass arguments to our commands, and the linux shell is interpreting that. To prevent that, we could use:\ncat ./- NB: Dot . is used to refer current directory. The slash / is used at the end of directory name.\nWe get the password for bandit3 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit2/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called - located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-completely-beginners\"\u003eTips for completely beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eTry to understand why previous solution is not working as you expect.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eYou may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our \u003ccode\u003ecat\u003c/code\u003e command:\n\u003cimg alt=\"bandit2\" loading=\"lazy\" src=\"/images/otw/bandit/bandit2/0.png\"\u003e\u003c/p\u003e\n\u003cp\u003eThe terminal is \u003cem\u003ewaiting\u003c/em\u003e for something else. This happens due to character \u003ccode\u003e-\u003c/code\u003e is used to pass arguments to our commands, and the linux shell is interpreting that.\nTo prevent that, we could use:\u003c/p\u003e","title":"Bandit2"},{"content":"Level description The password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\nTips for completely beginners Think about how to escape the whitespaces. Solution After login in the machine as bandit3, we can see the filename \u0026ndash;spaces in this filename\u0026ndash;.\nNow we have 2 problems:\nSame as previous level, filename starts with --, so it will be interpreted as an argument. Address this problem using ./. Filename contains whitespaces. This is an issue, as bash interpretes whitespaces to separate commands. To solve the second problem, we must escape the whitespace character in some way. Here is the solution:\ncat ./--spaces\\ in\\ this\\ filename-- NB: Little trick, you can start writting filename and press Tab to autocomplete the name. The \\ is going to be inserted automatically.\nJust using the \\ we can escape the whitespace.\nNow we can continue with the bandit4 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit3/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-completely-beginners\"\u003eTips for completely beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eThink about how to \u003cem\u003eescape\u003c/em\u003e the whitespaces.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAfter login in the machine as bandit3, we can see the filename \u003cem\u003e\u0026ndash;spaces in this filename\u0026ndash;\u003c/em\u003e.\u003c/p\u003e\n\u003cp\u003eNow we have 2 problems:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eSame as previous level, filename starts with \u003ccode\u003e--\u003c/code\u003e, so it will be interpreted as an argument. Address this problem using \u003ccode\u003e./\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003eFilename contains \u003cstrong\u003ewhitespaces\u003c/strong\u003e. This is an issue, as bash interpretes whitespaces to separate commands.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eTo solve the second problem, we must escape the whitespace character in some way. Here is the solution:\u003c/p\u003e","title":"Bandit3"},{"content":"Level description The password for the next level is stored in a hidden file in the inhere directory.\nTips for completely beginners Learn how to navigate directories in Linux. First understand what a hidden file is. Solution Listing directory files inside bandit4\u0026rsquo;s home directory, show directory inhere.\nNB: How to distinguish files and directories in Linux? Use ls -l and see the difference.\nWe have 2 options now:\nMove to inhere directory and check contens again. Check contents directly. Moving to another directory can be done using cd \u0026lt;dirName\u0026gt;. If you prefer to check directory contents directly, use ls \u0026lt;dirName\u0026gt;.\nAfter checking inhere contents via ls, we see nothing. The reason is the file is a hidden file. A hidden file in Linux is everyfile whose name starts with dot .. Hidden files are not shown by default with ls command, so we must add a special flag -a to list all files: NB: Both flags -l and -a cna be combined into a single flag -al, which is shorter to type.\nAs you can see, filename is \u0026hellip;Hidding-From-You starting with three dots. Reading file contents should be easy at this point!\nNext level is bandit5.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit4/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a hidden file in the inhere directory.\u003c/p\u003e\n\u003ch2 id=\"tips-for-completely-beginners\"\u003eTips for completely beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to navigate directories in Linux.\u003c/li\u003e\n\u003cli\u003eFirst understand what a hidden file is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eListing directory files inside bandit4\u0026rsquo;s home directory, show directory \u003cstrong\u003einhere\u003c/strong\u003e.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e How to distinguish files and directories in Linux? Use \u003ccode\u003els -l\u003c/code\u003e and see the difference.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eWe have 2 options now:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eMove to inhere directory and check contens again.\u003c/li\u003e\n\u003cli\u003eCheck contents directly.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eMoving to another directory can be done using \u003ccode\u003ecd \u0026lt;dirName\u0026gt;\u003c/code\u003e. If you prefer to check directory contents directly, use \u003ccode\u003els \u0026lt;dirName\u0026gt;\u003c/code\u003e.\u003c/p\u003e","title":"Bandit4"},{"content":"Level description The password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\nTips for completely beginners What means human-readable file? Is there any way to check filetype at Linux?. Solution Checking inhere\u0026rsquo;s contents shows some files names \u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII here\nSo now, our goal is checking if file content of every file in the folder is ASCII or not. file \u0026lt;filename\u0026gt; does the job. Note the use of *. That called a wildcard regular expression, we\u0026rsquo;ll deep into it in later levels. An easy approach could be checking every file separately:\nfile ./--file00 file ./--file01 ... file ./--file09 But that\u0026rsquo;s not funny, imagine we have 100 files to check. All the files are in the same directory, so we can use cat ./* where ./* matches every filename in the directory, applying file to every file.\nNB: Another approach is to use find with certaing flags. Try to do in different ways, don\u0026rsquo;t stick to my solution.\nThe file \u0026ndash;file00 content is not readable, so get password from \u0026ndash;file07 and continue with bandit6.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit5/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\u003c/p\u003e\n\u003ch2 id=\"tips-for-completely-beginners\"\u003eTips for completely beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eWhat means human-readable file?\u003c/li\u003e\n\u003cli\u003eIs there any way to check filetype at Linux?.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eChecking inhere\u0026rsquo;s contents shows some files names \u003cstrong\u003e\u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09\u003c/strong\u003e. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII \u003ca href=\"https://en.wikipedia.org/wiki/ASCII\"\u003ehere\u003c/a\u003e\u003c/p\u003e","title":"Bandit5"},{"content":"Level description The password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\nhuman-readable 1033 bytes in size not executable Tips for completely beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution The purpose of the level is showing us how to find for files. Listing contents of inhere, we can see some folders, containing a lot of files inside: NB: Adding -R to ls shows recursively the content of every folder inside the directory listed.\nSo this time, checking every file is not an option. We need to find a file with some properties, specific size, not excutable and human-readable. Let\u0026rsquo;s explain the command we\u0026rsquo;re using:\nfind inhere/ -size 1033c ! -executable First, we specify the directory, in this case inhere. The option -size 1033c returns files of 1033 bytes. Then, with -executable we would get executable files, but we want not executable files, that\u0026rsquo;s why we are adding ! before.\nNB: By default, the -size option takes as argument the number of blocks. For example, -size 2 means 2 blocks of 512 bytes, so its 1024. The c is used to specify exact bytes. Don\u0026rsquo;t ask me why it\u0026rsquo;s c and not b 😅.\nThe property of human-readability is not implemented in find. This is not an issue, previous command returns a single file and it is human readable (we could confirm using file): ","permalink":"http://localhost:1313/posts/otw/bandit/bandit6/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ehuman-readable\u003c/li\u003e\n\u003cli\u003e1033 bytes in size\u003c/li\u003e\n\u003cli\u003enot executable\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-completely-beginners\"\u003eTips for completely beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThe purpose of the level is showing us how to find for files. Listing contents of \u003cstrong\u003einhere\u003c/strong\u003e, we can see some folders, containing a lot of files inside:\n\u003cimg alt=\"bandit6_0\" loading=\"lazy\" src=\"/images/otw/bandit/bandit6/0.png\"\u003e\u003c/p\u003e","title":"Bandit6"},{"content":"👨‍💻 whoami Hey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\nWhat is this❓​ This blog is basically my thoughts on several hacking topics. Here you’ll see:\nWriteups from CTF challenges, from platforms like HackTheBox or OverTheWire.\nWalkthroughs and notes on pentesting techniques I’m learning or testing.\nSome posts on cryptography — because math can be fun (sometimes).\nRandom topics that freaks like me may (just may) find interesting.\nThe idea is simple: share what I learn, document my journey, and maybe help others who are also diving into the exciting world of ethical hacking.\n📫 Contact Want to say hi, share ideas, or just geek out about hacking? Reach me here:\n📧 Email: mrb0b1073@proton.me 💻​ GitHub: mrb0b173 🟩​ HackTheBox: mrb0b1073 ","permalink":"http://localhost:1313/about/","summary":"\u003ch2 id=\"-whoami\"\u003e👨‍💻 whoami\u003c/h2\u003e\n\u003cp\u003eHey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\u003c/p\u003e\n\u003chr\u003e\n\u003ch2 id=\"what-is-this\"\u003eWhat is this❓​\u003c/h2\u003e\n\u003cp\u003eThis blog is basically my thoughts on several hacking topics. Here you’ll see:\u003c/p\u003e","title":"About"},{"content":"Hey! 👋 I\u0026rsquo;m mrb0b1073 and this is my first post.\nWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\nExcited to start this adventure!\n","permalink":"http://localhost:1313/posts/hello-world/","summary":"\u003cp\u003eHey! 👋 I\u0026rsquo;m \u003cstrong\u003emrb0b1073\u003c/strong\u003e and this is my first post.\u003c/p\u003e\n\u003cp\u003eWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\u003cbr\u003e\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\u003c/p\u003e\n\u003cp\u003eExcited to start this adventure!\u003c/p\u003e","title":"Hello World"},{"content":"Introduction If you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\nIn cybersecurity there are broadly two complementary roles: Blue Team and Red Team. Blue Teams focus on defense, monitoring, incident response, hardening systems and keeping services secure, while Red Teams simulate attackers to find weaknesses and prove what an adversary could do. Ethical hacking aligns closely with Red Team operations, but cybersecurity is highly transversal across IT. There are many specialities or areas, such as cloud security, appsec, pentesting, forensics, governance, risk management, malware analysis, etc. Every topic could deserve its own post, so let\u0026rsquo;s keep it simple and focus on ethical hacking.\nHacker philosophy Let\u0026rsquo;s start with the idea of what is exactly a hacker. A hacker is someone who explores systems to understand how they work, finds creative ways to make or fix things, and solves technical problems. Historically the word describes curiosity, craft, and a drive to improve systems — not criminality. It is important to make the distinction between hacker and cracker, also called cybercriminal. A hacker explores, builds, discloses responsibly and works to improve security. They work in authorized environments or labs. On the other hand, a cracker breaks into systems for theft, vandalism or other illicit gain.\nHere you can find the most popularized ideas often summarized as the hacker ethic:\nCuriosity first: Learn by exploring and tinkering. Freedom of information: All knowledge should be shared to help progress. This fits properly with the idea of open source. Mistrust of needless authority: Centralized control sometimes blocks innovation. It is always good to question anything, specially common assumptions. Meritocracy: Skills, craft and results matter more than titles. Craftsmanship \u0026amp; elegance: Technical beauty matters. Build clean, clever and efficient solutions. Responsability \u0026amp; ethics: Use your skills to build, fix, educate and defend, not to harm. Core fundamentals Assuming you want to init yourself in hacking, you should first build competence across three basic pillars.\nOperating Systems You should learn as much as possible about Linux and Windows. Specially Linux, all the tools you will be using are meant to be used in a Linux environment. Skill with shell is required, learn basic commands and how to interact with the OS using the terminal. Research about processes, file permissions, package management and logs. A large proportion of web servers around the world run on Linux, although Windows is also widely used. Windows knowledge is really valuable too, considering active directory is strongly used in corporate environments.\nNetworking You have to understand how computers communicate each other. Understand basic networking concepts, IP adresses, subnetting, proxies, find out how internet works. Study some protocols such as TCP/IP, HTTP, DNS or SSH. This could sound confusing for beginners, but this step is not optional! Study different client/server models and how services expose attack surfaces.\nProgramming \u0026amp; scripting Is this completely required? Maybe not for complete beginners. Does it help? Absolutely yes. Understanding how web apps or any type of application works makes things much easier. You can imagine different entry points to exploit if you understand how systems are designed. Also writing scripts in bash or python makes you more productive through automation.\nEthical Hacking foundations Once you feel confident with these 3 pillars, you can go to the next step. You can study about different topics and areas. For example, binary exploiting, web pentesting, mobile pentesting, wireless hacking, etc. You should start picking a focus, in this post we focus on web pentesting, as it is beginner friendly. Also web applications are the bread and butter in companies nowadays.\nKey concepts to study:\nCIA Triad: CIA refers to Confidentiality, Integrity and Availability. These three concepts are key in information security, and describe properties we want to ensure in our systems and information. Web Security basics, OWASP: Study the OWASP Top 10, which summarizes most frequent web security risks. Authentication and session control: Understand the concepts of Authentication and Authorization, research about how session is handled in web apps, cookies, JWT tokens, etc. Input validation \u0026amp; injection attacks: Learn about SQL Injection, Cross-Site Scripting (XSS), Code Injection, SSTI, and every injection type. Secure development lifecycle: Find out how to implement security controls in code. This can be more related to Blue Team, but as Red Teamer it is important to understand. Firewall evasion: What a firewall is and some techniques/methods to bypass. Some cryptography: Understand what a chiper and a hash are, how information is encrypted to prevent access from 3rd parties. Focusing on web, read about TLS protocol. There are many more topics you can research and learn, but this could be a nice starting point.\nTools and platforms to learn Now you have an idea of what to study, let\u0026rsquo;s see how to start in practical terms.\nSome platforms I personally recommend:\nOverTheWire: Here you can find some CTFs (Capture The Flag) which are fun to play and also really instructive. Bandit games are a must for complete beginners, as you will explore some linux and bash concepts which are basic to continue. The games are leveled by difficulty, in their web you can get all the information about how to play, only a terminal and SSH is required. This helps building your foundation in Linux OS. HackTheBox: Nº 1 platform in cybersecurity. Has a lot of resources to learn all this core fundamentals, and also red team / blue team security topics. It is focused on labs where you can test your skills hacking different boxes but if you really want to learn it is worth to invest time and money in the academy. I have to say the level here is high, specially if you try to hack machines on your own without using some guide or writeup. TryHackMe: More beginner friendly than hackthebox, it provides a lot of guided learning resources. PortSwigger Labs: Practical labs about specific topics, focused on web hacking. They are great to learn and understand different types of attacks, injections, and security misconfigurations. I would recommend digging into this once you have the theoretical basis about these concepts. I have to mention a few tools I am sure you\u0026rsquo;d end up using:\nNmap: This is probably the most famous tool in hacking, allowing you to gather information about ports and services running in a machine. Burpsuite: A proxy tool widely used in web application security testing. It basically allows you to intercept and modify web requests, which can be used to perform several types of attacks. Metasploit: The most used pentesting framework. Contains a large amount of scripts and exploits ready to run. Another crucial step here is to set up your virtual lab environment to test vulnerable applications. To achieve this goal, there are some Linux distributions like Kali, Parrot or BlackArch, but that\u0026rsquo;s a topic for another post.\nFinal thoughs To sum up, this would be my personal roadmap:\nLearn the fundamentals, specially Linux and networking. Install some Linux in a virtual machine, play with it, get comfortable with the terminal. You can start with bandit wargames in OverTheWire. Complete every level and make sure to understand everything as clear as possible. Move to guided boxes on HackTheBox. I recommend you joining their Discord, ask questions, community is great there! Take notes, repeat, learn, improve your skills. Maybe use your own lab environment, create your own vulnerable apps. Hacking is a mixing of curiosity, study and practice. Being passionate and motivated about it is really helpful and will definitely speed up the process. The path is long and really challenging, so keep it going!\n\u0026ldquo;Yes, I am a criminal. My crime is that of curiosity.\u0026rdquo; — The Mentor (Loyd Blankenship) at The Hacker Manifesto\n","permalink":"http://localhost:1313/posts/starting-point/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIf you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\u003c/p\u003e","title":"Starting Point"},{"content":"Introduction In this post series we are going to solve every level from bandit in OverTheWire This guide pretends to be a writeup containing the solutions of the level, designed for beginners.\nTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing WSL, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\nEvery section will contain the solution as well as some tips for people who is absolutely beginner.\nTips First of all, some tips:\nDo not use this as first resource to solve the levels. Try on your own, make mistakes and learn from them. Only check the solution as last resource or if you are completely new and you have absolutely no idea about what to do next. Take notes from your learning. Write up commands, tips and everything which can be useful in the future. Make sure to understand everything. Is a good idea to note the passwords for every level. If you want to continue letter, you can simply log in in the desired level. It is annoying to repeat everything! Follow the tips and information provided at OverTheWire website. Levels Here is my solution for every level:\nBandit0 Bandit1 Bandit2 Bandit3 Bandit4 Bandit5 Bandit6 ","permalink":"http://localhost:1313/posts/otw/bandit/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIn this post series we are going to solve every level from bandit in \u003ca href=\"https://overthewire.org/wargames/bandit/\"\u003e\u003cem\u003eOverTheWire\u003c/em\u003e\u003c/a\u003e\nThis guide pretends to be a writeup containing the solutions of the level, designed for beginners.\u003c/p\u003e\n\u003cp\u003eTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing \u003ca href=\"https://learn.microsoft.com/en-us/windows/wsl/install\"\u003eWSL\u003c/a\u003e, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\u003c/p\u003e","title":"Bandit"},{"content":"Level description The goal of this level is for you to log into the game using SSH. The host to which you need to connect is bandit.labs.overthewire.org, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\nTips for beginners Read a bit about what SSH is. Research about what a port is. Solution This is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go here.\nAt Linux, we can use ssh client to connect to the server. It should be installed by default on your system. If not, please first research about how to install. Once you have the SSH client installed, you can log in into the first level as follows:\nssh bandit0@bandit.labs.overthewire.org -p 2220 Syntax is simple: ssh \u0026lt;username\u0026gt;@\u0026lt;hostname\u0026gt; -p \u0026lt;port\u0026gt;. Usually SSH runs on port 22 by default, but they changed to port 2220 so we must specify it in the command.\nOnce you try to log in, you will see something like this: NB: If it\u0026rsquo;s the first time you try to log in, you will be asked about the authenticity of the host. Just type yes.\nType the password bandit0 and press enter. Now you are inside bandit server, ready to begin with bandit1!\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit0/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe goal of this level is for you to log into the game using SSH. The host to which you need to connect is \u003cstrong\u003ebandit.labs.overthewire.org\u003c/strong\u003e, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eRead a bit about what SSH is.\u003c/li\u003e\n\u003cli\u003eResearch about what a port is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go \u003ca href=\"https://en.wikipedia.org/wiki/Secure_Shell\"\u003ehere\u003c/a\u003e.\u003c/p\u003e","title":"Bandit0"},{"content":"Level description The password for the next level is stored in a file called readme located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\nTips for beginners Learn about home directory in Linux. Learn to use cat and ls commands. Solution First step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\nls This shows in terminal the files at the current directory. There you will see the readme file.\nNow we can to check the contents, so let\u0026rsquo;s use cat:\ncat readme To read a file, we use cat \u0026lt;filename\u0026gt;.\nNB: Not every file is human readable in Linux. We deep more about this in later levels.\nThe content of the readme file reveals the password for bandit2 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit1/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u003cstrong\u003ereadme\u003c/strong\u003e located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn about home directory in Linux.\u003c/li\u003e\n\u003cli\u003eLearn to use \u003ccode\u003ecat\u003c/code\u003e and \u003ccode\u003els\u003c/code\u003e commands.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eFirst step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\u003c/p\u003e","title":"Bandit1"},{"content":"Level description The password for the next level is stored in a file called - located in the home directory\nTips for beginners Try to understand why previous solution is not working as you expect. Solution You may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our cat command: The terminal is waiting for something else. This happens due to character - is used to pass arguments to our commands, and the linux shell is interpreting that. To prevent that, we could use:\ncat ./- NB: Dot . is used to refer current directory. The slash / is used at the end of directory name.\nWe get the password for bandit3 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit2/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called - located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eTry to understand why previous solution is not working as you expect.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eYou may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our \u003ccode\u003ecat\u003c/code\u003e command:\n\u003cimg alt=\"bandit2\" loading=\"lazy\" src=\"/images/otw/bandit/bandit2/0.png\"\u003e\u003c/p\u003e\n\u003cp\u003eThe terminal is \u003cem\u003ewaiting\u003c/em\u003e for something else. This happens due to character \u003ccode\u003e-\u003c/code\u003e is used to pass arguments to our commands, and the linux shell is interpreting that.\nTo prevent that, we could use:\u003c/p\u003e","title":"Bandit2"},{"content":"Level description The password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\nTips for completely beginners Think about how to escape the whitespaces. Solution After login in the machine as bandit3, we can see the filename \u0026ndash;spaces in this filename\u0026ndash;.\nNow we have 2 problems:\nSame as previous level, filename starts with --, so it will be interpreted as an argument. Address this problem using ./. Filename contains whitespaces. This is an issue, as bash interpretes whitespaces to separate commands. To solve the second problem, we must escape the whitespace character in some way. Here is the solution:\ncat ./--spaces\\ in\\ this\\ filename-- NB: Little trick, you can start writting filename and press Tab to autocomplete the name. The \\ is going to be inserted automatically.\nJust using the \\ we can escape the whitespace.\nNow we can continue with the bandit4 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit3/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-completely-beginners\"\u003eTips for completely beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eThink about how to \u003cem\u003eescape\u003c/em\u003e the whitespaces.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAfter login in the machine as bandit3, we can see the filename \u003cem\u003e\u0026ndash;spaces in this filename\u0026ndash;\u003c/em\u003e.\u003c/p\u003e\n\u003cp\u003eNow we have 2 problems:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eSame as previous level, filename starts with \u003ccode\u003e--\u003c/code\u003e, so it will be interpreted as an argument. Address this problem using \u003ccode\u003e./\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003eFilename contains \u003cstrong\u003ewhitespaces\u003c/strong\u003e. This is an issue, as bash interpretes whitespaces to separate commands.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eTo solve the second problem, we must escape the whitespace character in some way. Here is the solution:\u003c/p\u003e","title":"Bandit3"},{"content":"Level description The password for the next level is stored in a hidden file in the inhere directory.\nTips for completely beginners Learn how to navigate directories in Linux. First understand what a hidden file is. Solution Listing directory files inside bandit4\u0026rsquo;s home directory, show directory inhere.\nNB: How to distinguish files and directories in Linux? Use ls -l and see the difference.\nWe have 2 options now:\nMove to inhere directory and check contens again. Check contents directly. Moving to another directory can be done using cd \u0026lt;dirName\u0026gt;. If you prefer to check directory contents directly, use ls \u0026lt;dirName\u0026gt;.\nAfter checking inhere contents via ls, we see nothing. The reason is the file is a hidden file. A hidden file in Linux is everyfile whose name starts with dot .. Hidden files are not shown by default with ls command, so we must add a special flag -a to list all files: NB: Both flags -l and -a cna be combined into a single flag -al, which is shorter to type.\nAs you can see, filename is \u0026hellip;Hidding-From-You starting with three dots. Reading file contents should be easy at this point!\nNext level is bandit5.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit4/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a hidden file in the inhere directory.\u003c/p\u003e\n\u003ch2 id=\"tips-for-completely-beginners\"\u003eTips for completely beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to navigate directories in Linux.\u003c/li\u003e\n\u003cli\u003eFirst understand what a hidden file is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eListing directory files inside bandit4\u0026rsquo;s home directory, show directory \u003cstrong\u003einhere\u003c/strong\u003e.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e How to distinguish files and directories in Linux? Use \u003ccode\u003els -l\u003c/code\u003e and see the difference.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eWe have 2 options now:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eMove to inhere directory and check contens again.\u003c/li\u003e\n\u003cli\u003eCheck contents directly.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eMoving to another directory can be done using \u003ccode\u003ecd \u0026lt;dirName\u0026gt;\u003c/code\u003e. If you prefer to check directory contents directly, use \u003ccode\u003els \u0026lt;dirName\u0026gt;\u003c/code\u003e.\u003c/p\u003e","title":"Bandit4"},{"content":"Level description The password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\nTips for completely beginners What means human-readable file? Is there any way to check filetype at Linux?. Solution Checking inhere\u0026rsquo;s contents shows some files names \u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII here\nSo now, our goal is checking if file content of every file in the folder is ASCII or not. file \u0026lt;filename\u0026gt; does the job. Note the use of *. That called a wildcard regular expression, we\u0026rsquo;ll deep into it in later levels. An easy approach could be checking every file separately:\nfile ./--file00 file ./--file01 ... file ./--file09 But that\u0026rsquo;s not funny, imagine we have 100 files to check. All the files are in the same directory, so we can use cat ./* where ./* matches every filename in the directory, applying file to every file.\nNB: Another approach is to use find with certaing flags. Try to do in different ways, don\u0026rsquo;t stick to my solution.\nThe file \u0026ndash;file00 content is not readable, so get password from \u0026ndash;file07 and continue with bandit6.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit5/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\u003c/p\u003e\n\u003ch2 id=\"tips-for-completely-beginners\"\u003eTips for completely beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eWhat means human-readable file?\u003c/li\u003e\n\u003cli\u003eIs there any way to check filetype at Linux?.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eChecking inhere\u0026rsquo;s contents shows some files names \u003cstrong\u003e\u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09\u003c/strong\u003e. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII \u003ca href=\"https://en.wikipedia.org/wiki/ASCII\"\u003ehere\u003c/a\u003e\u003c/p\u003e","title":"Bandit5"},{"content":"Level description The password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\nhuman-readable 1033 bytes in size not executable Tips for completely beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution The purpose of the level is showing us how to find for files. Listing contents of inhere, we can see some folders, containing a lot of files inside: NB: Adding -R to ls shows recursively the content of every folder inside the directory listed.\nSo this time, checking every file is not an option. We need to find a file with some properties, specific size, not excutable and human-readable. Let\u0026rsquo;s explain the command we\u0026rsquo;re using:\nfind inhere/ -size 1033c ! -executable First, we specify the directory, in this case inhere. The option -size 1033c returns files of 1033 bytes. Then, with -executable we would get executable files, but we want not executable files, that\u0026rsquo;s why we are adding ! before.\nNB: By default, the -size option takes as argument the number of blocks. For example, -size 2 means 2 blocks of 512 bytes, so its 1024. The c is used to specify exact bytes. Don\u0026rsquo;t ask me why it\u0026rsquo;s c and not b 😅.\nThe property of human-readability is not implemented in find. This is not an issue, previous command returns a single file and it is human readable (we could confirm using file): ","permalink":"http://localhost:1313/posts/otw/bandit/bandit6/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ehuman-readable\u003c/li\u003e\n\u003cli\u003e1033 bytes in size\u003c/li\u003e\n\u003cli\u003enot executable\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-completely-beginners\"\u003eTips for completely beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThe purpose of the level is showing us how to find for files. Listing contents of \u003cstrong\u003einhere\u003c/strong\u003e, we can see some folders, containing a lot of files inside:\n\u003cimg alt=\"bandit6_0\" loading=\"lazy\" src=\"/images/otw/bandit/bandit6/0.png\"\u003e\u003c/p\u003e","title":"Bandit6"},{"content":"👨‍💻 whoami Hey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\nWhat is this❓​ This blog is basically my thoughts on several hacking topics. Here you’ll see:\nWriteups from CTF challenges, from platforms like HackTheBox or OverTheWire.\nWalkthroughs and notes on pentesting techniques I’m learning or testing.\nSome posts on cryptography — because math can be fun (sometimes).\nRandom topics that freaks like me may (just may) find interesting.\nThe idea is simple: share what I learn, document my journey, and maybe help others who are also diving into the exciting world of ethical hacking.\n📫 Contact Want to say hi, share ideas, or just geek out about hacking? Reach me here:\n📧 Email: mrb0b1073@proton.me 💻​ GitHub: mrb0b173 🟩​ HackTheBox: mrb0b1073 ","permalink":"http://localhost:1313/about/","summary":"\u003ch2 id=\"-whoami\"\u003e👨‍💻 whoami\u003c/h2\u003e\n\u003cp\u003eHey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\u003c/p\u003e\n\u003chr\u003e\n\u003ch2 id=\"what-is-this\"\u003eWhat is this❓​\u003c/h2\u003e\n\u003cp\u003eThis blog is basically my thoughts on several hacking topics. Here you’ll see:\u003c/p\u003e","title":"About"},{"content":"Hey! 👋 I\u0026rsquo;m mrb0b1073 and this is my first post.\nWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\nExcited to start this adventure!\n","permalink":"http://localhost:1313/posts/hello-world/","summary":"\u003cp\u003eHey! 👋 I\u0026rsquo;m \u003cstrong\u003emrb0b1073\u003c/strong\u003e and this is my first post.\u003c/p\u003e\n\u003cp\u003eWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\u003cbr\u003e\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\u003c/p\u003e\n\u003cp\u003eExcited to start this adventure!\u003c/p\u003e","title":"Hello World"},{"content":"Introduction If you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\nIn cybersecurity there are broadly two complementary roles: Blue Team and Red Team. Blue Teams focus on defense, monitoring, incident response, hardening systems and keeping services secure, while Red Teams simulate attackers to find weaknesses and prove what an adversary could do. Ethical hacking aligns closely with Red Team operations, but cybersecurity is highly transversal across IT. There are many specialities or areas, such as cloud security, appsec, pentesting, forensics, governance, risk management, malware analysis, etc. Every topic could deserve its own post, so let\u0026rsquo;s keep it simple and focus on ethical hacking.\nHacker philosophy Let\u0026rsquo;s start with the idea of what is exactly a hacker. A hacker is someone who explores systems to understand how they work, finds creative ways to make or fix things, and solves technical problems. Historically the word describes curiosity, craft, and a drive to improve systems — not criminality. It is important to make the distinction between hacker and cracker, also called cybercriminal. A hacker explores, builds, discloses responsibly and works to improve security. They work in authorized environments or labs. On the other hand, a cracker breaks into systems for theft, vandalism or other illicit gain.\nHere you can find the most popularized ideas often summarized as the hacker ethic:\nCuriosity first: Learn by exploring and tinkering. Freedom of information: All knowledge should be shared to help progress. This fits properly with the idea of open source. Mistrust of needless authority: Centralized control sometimes blocks innovation. It is always good to question anything, specially common assumptions. Meritocracy: Skills, craft and results matter more than titles. Craftsmanship \u0026amp; elegance: Technical beauty matters. Build clean, clever and efficient solutions. Responsability \u0026amp; ethics: Use your skills to build, fix, educate and defend, not to harm. Core fundamentals Assuming you want to init yourself in hacking, you should first build competence across three basic pillars.\nOperating Systems You should learn as much as possible about Linux and Windows. Specially Linux, all the tools you will be using are meant to be used in a Linux environment. Skill with shell is required, learn basic commands and how to interact with the OS using the terminal. Research about processes, file permissions, package management and logs. A large proportion of web servers around the world run on Linux, although Windows is also widely used. Windows knowledge is really valuable too, considering active directory is strongly used in corporate environments.\nNetworking You have to understand how computers communicate each other. Understand basic networking concepts, IP adresses, subnetting, proxies, find out how internet works. Study some protocols such as TCP/IP, HTTP, DNS or SSH. This could sound confusing for beginners, but this step is not optional! Study different client/server models and how services expose attack surfaces.\nProgramming \u0026amp; scripting Is this completely required? Maybe not for complete beginners. Does it help? Absolutely yes. Understanding how web apps or any type of application works makes things much easier. You can imagine different entry points to exploit if you understand how systems are designed. Also writing scripts in bash or python makes you more productive through automation.\nEthical Hacking foundations Once you feel confident with these 3 pillars, you can go to the next step. You can study about different topics and areas. For example, binary exploiting, web pentesting, mobile pentesting, wireless hacking, etc. You should start picking a focus, in this post we focus on web pentesting, as it is beginner friendly. Also web applications are the bread and butter in companies nowadays.\nKey concepts to study:\nCIA Triad: CIA refers to Confidentiality, Integrity and Availability. These three concepts are key in information security, and describe properties we want to ensure in our systems and information. Web Security basics, OWASP: Study the OWASP Top 10, which summarizes most frequent web security risks. Authentication and session control: Understand the concepts of Authentication and Authorization, research about how session is handled in web apps, cookies, JWT tokens, etc. Input validation \u0026amp; injection attacks: Learn about SQL Injection, Cross-Site Scripting (XSS), Code Injection, SSTI, and every injection type. Secure development lifecycle: Find out how to implement security controls in code. This can be more related to Blue Team, but as Red Teamer it is important to understand. Firewall evasion: What a firewall is and some techniques/methods to bypass. Some cryptography: Understand what a chiper and a hash are, how information is encrypted to prevent access from 3rd parties. Focusing on web, read about TLS protocol. There are many more topics you can research and learn, but this could be a nice starting point.\nTools and platforms to learn Now you have an idea of what to study, let\u0026rsquo;s see how to start in practical terms.\nSome platforms I personally recommend:\nOverTheWire: Here you can find some CTFs (Capture The Flag) which are fun to play and also really instructive. Bandit games are a must for complete beginners, as you will explore some linux and bash concepts which are basic to continue. The games are leveled by difficulty, in their web you can get all the information about how to play, only a terminal and SSH is required. This helps building your foundation in Linux OS. HackTheBox: Nº 1 platform in cybersecurity. Has a lot of resources to learn all this core fundamentals, and also red team / blue team security topics. It is focused on labs where you can test your skills hacking different boxes but if you really want to learn it is worth to invest time and money in the academy. I have to say the level here is high, specially if you try to hack machines on your own without using some guide or writeup. TryHackMe: More beginner friendly than hackthebox, it provides a lot of guided learning resources. PortSwigger Labs: Practical labs about specific topics, focused on web hacking. They are great to learn and understand different types of attacks, injections, and security misconfigurations. I would recommend digging into this once you have the theoretical basis about these concepts. I have to mention a few tools I am sure you\u0026rsquo;d end up using:\nNmap: This is probably the most famous tool in hacking, allowing you to gather information about ports and services running in a machine. Burpsuite: A proxy tool widely used in web application security testing. It basically allows you to intercept and modify web requests, which can be used to perform several types of attacks. Metasploit: The most used pentesting framework. Contains a large amount of scripts and exploits ready to run. Another crucial step here is to set up your virtual lab environment to test vulnerable applications. To achieve this goal, there are some Linux distributions like Kali, Parrot or BlackArch, but that\u0026rsquo;s a topic for another post.\nFinal thoughs To sum up, this would be my personal roadmap:\nLearn the fundamentals, specially Linux and networking. Install some Linux in a virtual machine, play with it, get comfortable with the terminal. You can start with bandit wargames in OverTheWire. Complete every level and make sure to understand everything as clear as possible. Move to guided boxes on HackTheBox. I recommend you joining their Discord, ask questions, community is great there! Take notes, repeat, learn, improve your skills. Maybe use your own lab environment, create your own vulnerable apps. Hacking is a mixing of curiosity, study and practice. Being passionate and motivated about it is really helpful and will definitely speed up the process. The path is long and really challenging, so keep it going!\n\u0026ldquo;Yes, I am a criminal. My crime is that of curiosity.\u0026rdquo; — The Mentor (Loyd Blankenship) at The Hacker Manifesto\n","permalink":"http://localhost:1313/posts/starting-point/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIf you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\u003c/p\u003e","title":"Starting Point"},{"content":"Introduction In this post series we are going to solve every level from bandit in OverTheWire This guide pretends to be a writeup containing the solutions of the level, designed for beginners.\nTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing WSL, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\nEvery section will contain the solution as well as some tips for people who is absolutely beginner.\nTips First of all, some tips:\nDo not use this as first resource to solve the levels. Try on your own, make mistakes and learn from them. Only check the solution as last resource or if you are completely new and you have absolutely no idea about what to do next. Take notes from your learning. Write up commands, tips and everything which can be useful in the future. Make sure to understand everything. Is a good idea to note the passwords for every level. If you want to continue letter, you can simply log in in the desired level. It is annoying to repeat everything! Follow the tips and information provided at OverTheWire website. Levels Here is my solution for every level:\nBandit0 Bandit1 Bandit2 Bandit3 Bandit4 Bandit5 Bandit6 ","permalink":"http://localhost:1313/posts/otw/bandit/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIn this post series we are going to solve every level from bandit in \u003ca href=\"https://overthewire.org/wargames/bandit/\"\u003e\u003cem\u003eOverTheWire\u003c/em\u003e\u003c/a\u003e\nThis guide pretends to be a writeup containing the solutions of the level, designed for beginners.\u003c/p\u003e\n\u003cp\u003eTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing \u003ca href=\"https://learn.microsoft.com/en-us/windows/wsl/install\"\u003eWSL\u003c/a\u003e, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\u003c/p\u003e","title":"Bandit"},{"content":"Level description The goal of this level is for you to log into the game using SSH. The host to which you need to connect is bandit.labs.overthewire.org, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\nTips for beginners Read a bit about what SSH is. Research about what a port is. Solution This is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go here.\nAt Linux, we can use ssh client to connect to the server. It should be installed by default on your system. If not, please first research about how to install. Once you have the SSH client installed, you can log in into the first level as follows:\nssh bandit0@bandit.labs.overthewire.org -p 2220 Syntax is simple: ssh \u0026lt;username\u0026gt;@\u0026lt;hostname\u0026gt; -p \u0026lt;port\u0026gt;. Usually SSH runs on port 22 by default, but they changed to port 2220 so we must specify it in the command.\nOnce you try to log in, you will see something like this: NB: If it\u0026rsquo;s the first time you try to log in, you will be asked about the authenticity of the host. Just type yes.\nType the password bandit0 and press enter. Now you are inside bandit server, ready to begin with bandit1!\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit0/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe goal of this level is for you to log into the game using SSH. The host to which you need to connect is \u003cstrong\u003ebandit.labs.overthewire.org\u003c/strong\u003e, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eRead a bit about what SSH is.\u003c/li\u003e\n\u003cli\u003eResearch about what a port is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go \u003ca href=\"https://en.wikipedia.org/wiki/Secure_Shell\"\u003ehere\u003c/a\u003e.\u003c/p\u003e","title":"Bandit0"},{"content":"Level description The password for the next level is stored in a file called readme located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\nTips for beginners Learn about home directory in Linux. Learn to use cat and ls commands. Solution First step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\nls This shows in terminal the files at the current directory. There you will see the readme file.\nNow we can to check the contents, so let\u0026rsquo;s use cat:\ncat readme To read a file, we use cat \u0026lt;filename\u0026gt;.\nNB: Not every file is human readable in Linux. We deep more about this in later levels.\nThe content of the readme file reveals the password for bandit2 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit1/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u003cstrong\u003ereadme\u003c/strong\u003e located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn about home directory in Linux.\u003c/li\u003e\n\u003cli\u003eLearn to use \u003ccode\u003ecat\u003c/code\u003e and \u003ccode\u003els\u003c/code\u003e commands.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eFirst step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\u003c/p\u003e","title":"Bandit1"},{"content":"Level description The password for the next level is stored in a file called - located in the home directory\nTips for beginners Try to understand why previous solution is not working as you expect. Solution You may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our cat command: The terminal is waiting for something else. This happens due to character - is used to pass arguments to our commands, and the linux shell is interpreting that. To prevent that, we could use:\ncat ./- NB: Dot . is used to refer current directory. The slash / is used at the end of directory name.\nWe get the password for bandit3 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit2/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called - located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eTry to understand why previous solution is not working as you expect.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eYou may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our \u003ccode\u003ecat\u003c/code\u003e command:\n\u003cimg alt=\"bandit2\" loading=\"lazy\" src=\"/images/otw/bandit/bandit2/0.png\"\u003e\u003c/p\u003e\n\u003cp\u003eThe terminal is \u003cem\u003ewaiting\u003c/em\u003e for something else. This happens due to character \u003ccode\u003e-\u003c/code\u003e is used to pass arguments to our commands, and the linux shell is interpreting that.\nTo prevent that, we could use:\u003c/p\u003e","title":"Bandit2"},{"content":"Level description The password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\nTips for beginners Think about how to escape the whitespaces. Solution After login in the machine as bandit3, we can see the filename \u0026ndash;spaces in this filename\u0026ndash;.\nNow we have 2 problems:\nSame as previous level, filename starts with --, so it will be interpreted as an argument. Address this problem using ./. Filename contains whitespaces. This is an issue, as bash interpretes whitespaces to separate commands. To solve the second problem, we must escape the whitespace character in some way. Here is the solution:\ncat ./--spaces\\ in\\ this\\ filename-- NB: Little trick, you can start writting filename and press Tab to autocomplete the name. The \\ is going to be inserted automatically.\nJust using the \\ we can escape the whitespace.\nNow we can continue with the bandit4 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit3/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eThink about how to \u003cem\u003eescape\u003c/em\u003e the whitespaces.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAfter login in the machine as bandit3, we can see the filename \u003cem\u003e\u0026ndash;spaces in this filename\u0026ndash;\u003c/em\u003e.\u003c/p\u003e\n\u003cp\u003eNow we have 2 problems:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eSame as previous level, filename starts with \u003ccode\u003e--\u003c/code\u003e, so it will be interpreted as an argument. Address this problem using \u003ccode\u003e./\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003eFilename contains \u003cstrong\u003ewhitespaces\u003c/strong\u003e. This is an issue, as bash interpretes whitespaces to separate commands.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eTo solve the second problem, we must escape the whitespace character in some way. Here is the solution:\u003c/p\u003e","title":"Bandit3"},{"content":"Level description The password for the next level is stored in a hidden file in the inhere directory.\nTips for completely beginners Learn how to navigate directories in Linux. First understand what a hidden file is. Solution Listing directory files inside bandit4\u0026rsquo;s home directory, show directory inhere.\nNB: How to distinguish files and directories in Linux? Use ls -l and see the difference.\nWe have 2 options now:\nMove to inhere directory and check contens again. Check contents directly. Moving to another directory can be done using cd \u0026lt;dirName\u0026gt;. If you prefer to check directory contents directly, use ls \u0026lt;dirName\u0026gt;.\nAfter checking inhere contents via ls, we see nothing. The reason is the file is a hidden file. A hidden file in Linux is everyfile whose name starts with dot .. Hidden files are not shown by default with ls command, so we must add a special flag -a to list all files: NB: Both flags -l and -a cna be combined into a single flag -al, which is shorter to type.\nAs you can see, filename is \u0026hellip;Hidding-From-You starting with three dots. Reading file contents should be easy at this point!\nNext level is bandit5.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit4/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a hidden file in the inhere directory.\u003c/p\u003e\n\u003ch2 id=\"tips-for-completely-beginners\"\u003eTips for completely beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to navigate directories in Linux.\u003c/li\u003e\n\u003cli\u003eFirst understand what a hidden file is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eListing directory files inside bandit4\u0026rsquo;s home directory, show directory \u003cstrong\u003einhere\u003c/strong\u003e.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e How to distinguish files and directories in Linux? Use \u003ccode\u003els -l\u003c/code\u003e and see the difference.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eWe have 2 options now:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eMove to inhere directory and check contens again.\u003c/li\u003e\n\u003cli\u003eCheck contents directly.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eMoving to another directory can be done using \u003ccode\u003ecd \u0026lt;dirName\u0026gt;\u003c/code\u003e. If you prefer to check directory contents directly, use \u003ccode\u003els \u0026lt;dirName\u0026gt;\u003c/code\u003e.\u003c/p\u003e","title":"Bandit4"},{"content":"Level description The password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\nTips for completely beginners What means human-readable file? Is there any way to check filetype at Linux?. Solution Checking inhere\u0026rsquo;s contents shows some files names \u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII here\nSo now, our goal is checking if file content of every file in the folder is ASCII or not. file \u0026lt;filename\u0026gt; does the job. Note the use of *. That called a wildcard regular expression, we\u0026rsquo;ll deep into it in later levels. An easy approach could be checking every file separately:\nfile ./--file00 file ./--file01 ... file ./--file09 But that\u0026rsquo;s not funny, imagine we have 100 files to check. All the files are in the same directory, so we can use cat ./* where ./* matches every filename in the directory, applying file to every file.\nNB: Another approach is to use find with certaing flags. Try to do in different ways, don\u0026rsquo;t stick to my solution.\nThe file \u0026ndash;file00 content is not readable, so get password from \u0026ndash;file07 and continue with bandit6.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit5/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\u003c/p\u003e\n\u003ch2 id=\"tips-for-completely-beginners\"\u003eTips for completely beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eWhat means human-readable file?\u003c/li\u003e\n\u003cli\u003eIs there any way to check filetype at Linux?.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eChecking inhere\u0026rsquo;s contents shows some files names \u003cstrong\u003e\u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09\u003c/strong\u003e. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII \u003ca href=\"https://en.wikipedia.org/wiki/ASCII\"\u003ehere\u003c/a\u003e\u003c/p\u003e","title":"Bandit5"},{"content":"Level description The password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\nhuman-readable 1033 bytes in size not executable Tips for completely beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution The purpose of the level is showing us how to find for files. Listing contents of inhere, we can see some folders, containing a lot of files inside: NB: Adding -R to ls shows recursively the content of every folder inside the directory listed.\nSo this time, checking every file is not an option. We need to find a file with some properties, specific size, not excutable and human-readable. Let\u0026rsquo;s explain the command we\u0026rsquo;re using:\nfind inhere/ -size 1033c ! -executable First, we specify the directory, in this case inhere. The option -size 1033c returns files of 1033 bytes. Then, with -executable we would get executable files, but we want not executable files, that\u0026rsquo;s why we are adding ! before.\nNB: By default, the -size option takes as argument the number of blocks. For example, -size 2 means 2 blocks of 512 bytes, so its 1024. The c is used to specify exact bytes. Don\u0026rsquo;t ask me why it\u0026rsquo;s c and not b 😅.\nThe property of human-readability is not implemented in find. This is not an issue, previous command returns a single file and it is human readable (we could confirm using file): ","permalink":"http://localhost:1313/posts/otw/bandit/bandit6/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ehuman-readable\u003c/li\u003e\n\u003cli\u003e1033 bytes in size\u003c/li\u003e\n\u003cli\u003enot executable\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-completely-beginners\"\u003eTips for completely beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThe purpose of the level is showing us how to find for files. Listing contents of \u003cstrong\u003einhere\u003c/strong\u003e, we can see some folders, containing a lot of files inside:\n\u003cimg alt=\"bandit6_0\" loading=\"lazy\" src=\"/images/otw/bandit/bandit6/0.png\"\u003e\u003c/p\u003e","title":"Bandit6"},{"content":"👨‍💻 whoami Hey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\nWhat is this❓​ This blog is basically my thoughts on several hacking topics. Here you’ll see:\nWriteups from CTF challenges, from platforms like HackTheBox or OverTheWire.\nWalkthroughs and notes on pentesting techniques I’m learning or testing.\nSome posts on cryptography — because math can be fun (sometimes).\nRandom topics that freaks like me may (just may) find interesting.\nThe idea is simple: share what I learn, document my journey, and maybe help others who are also diving into the exciting world of ethical hacking.\n📫 Contact Want to say hi, share ideas, or just geek out about hacking? Reach me here:\n📧 Email: mrb0b1073@proton.me 💻​ GitHub: mrb0b173 🟩​ HackTheBox: mrb0b1073 ","permalink":"http://localhost:1313/about/","summary":"\u003ch2 id=\"-whoami\"\u003e👨‍💻 whoami\u003c/h2\u003e\n\u003cp\u003eHey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\u003c/p\u003e\n\u003chr\u003e\n\u003ch2 id=\"what-is-this\"\u003eWhat is this❓​\u003c/h2\u003e\n\u003cp\u003eThis blog is basically my thoughts on several hacking topics. Here you’ll see:\u003c/p\u003e","title":"About"},{"content":"Hey! 👋 I\u0026rsquo;m mrb0b1073 and this is my first post.\nWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\nExcited to start this adventure!\n","permalink":"http://localhost:1313/posts/hello-world/","summary":"\u003cp\u003eHey! 👋 I\u0026rsquo;m \u003cstrong\u003emrb0b1073\u003c/strong\u003e and this is my first post.\u003c/p\u003e\n\u003cp\u003eWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\u003cbr\u003e\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\u003c/p\u003e\n\u003cp\u003eExcited to start this adventure!\u003c/p\u003e","title":"Hello World"},{"content":"Introduction If you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\nIn cybersecurity there are broadly two complementary roles: Blue Team and Red Team. Blue Teams focus on defense, monitoring, incident response, hardening systems and keeping services secure, while Red Teams simulate attackers to find weaknesses and prove what an adversary could do. Ethical hacking aligns closely with Red Team operations, but cybersecurity is highly transversal across IT. There are many specialities or areas, such as cloud security, appsec, pentesting, forensics, governance, risk management, malware analysis, etc. Every topic could deserve its own post, so let\u0026rsquo;s keep it simple and focus on ethical hacking.\nHacker philosophy Let\u0026rsquo;s start with the idea of what is exactly a hacker. A hacker is someone who explores systems to understand how they work, finds creative ways to make or fix things, and solves technical problems. Historically the word describes curiosity, craft, and a drive to improve systems — not criminality. It is important to make the distinction between hacker and cracker, also called cybercriminal. A hacker explores, builds, discloses responsibly and works to improve security. They work in authorized environments or labs. On the other hand, a cracker breaks into systems for theft, vandalism or other illicit gain.\nHere you can find the most popularized ideas often summarized as the hacker ethic:\nCuriosity first: Learn by exploring and tinkering. Freedom of information: All knowledge should be shared to help progress. This fits properly with the idea of open source. Mistrust of needless authority: Centralized control sometimes blocks innovation. It is always good to question anything, specially common assumptions. Meritocracy: Skills, craft and results matter more than titles. Craftsmanship \u0026amp; elegance: Technical beauty matters. Build clean, clever and efficient solutions. Responsability \u0026amp; ethics: Use your skills to build, fix, educate and defend, not to harm. Core fundamentals Assuming you want to init yourself in hacking, you should first build competence across three basic pillars.\nOperating Systems You should learn as much as possible about Linux and Windows. Specially Linux, all the tools you will be using are meant to be used in a Linux environment. Skill with shell is required, learn basic commands and how to interact with the OS using the terminal. Research about processes, file permissions, package management and logs. A large proportion of web servers around the world run on Linux, although Windows is also widely used. Windows knowledge is really valuable too, considering active directory is strongly used in corporate environments.\nNetworking You have to understand how computers communicate each other. Understand basic networking concepts, IP adresses, subnetting, proxies, find out how internet works. Study some protocols such as TCP/IP, HTTP, DNS or SSH. This could sound confusing for beginners, but this step is not optional! Study different client/server models and how services expose attack surfaces.\nProgramming \u0026amp; scripting Is this completely required? Maybe not for complete beginners. Does it help? Absolutely yes. Understanding how web apps or any type of application works makes things much easier. You can imagine different entry points to exploit if you understand how systems are designed. Also writing scripts in bash or python makes you more productive through automation.\nEthical Hacking foundations Once you feel confident with these 3 pillars, you can go to the next step. You can study about different topics and areas. For example, binary exploiting, web pentesting, mobile pentesting, wireless hacking, etc. You should start picking a focus, in this post we focus on web pentesting, as it is beginner friendly. Also web applications are the bread and butter in companies nowadays.\nKey concepts to study:\nCIA Triad: CIA refers to Confidentiality, Integrity and Availability. These three concepts are key in information security, and describe properties we want to ensure in our systems and information. Web Security basics, OWASP: Study the OWASP Top 10, which summarizes most frequent web security risks. Authentication and session control: Understand the concepts of Authentication and Authorization, research about how session is handled in web apps, cookies, JWT tokens, etc. Input validation \u0026amp; injection attacks: Learn about SQL Injection, Cross-Site Scripting (XSS), Code Injection, SSTI, and every injection type. Secure development lifecycle: Find out how to implement security controls in code. This can be more related to Blue Team, but as Red Teamer it is important to understand. Firewall evasion: What a firewall is and some techniques/methods to bypass. Some cryptography: Understand what a chiper and a hash are, how information is encrypted to prevent access from 3rd parties. Focusing on web, read about TLS protocol. There are many more topics you can research and learn, but this could be a nice starting point.\nTools and platforms to learn Now you have an idea of what to study, let\u0026rsquo;s see how to start in practical terms.\nSome platforms I personally recommend:\nOverTheWire: Here you can find some CTFs (Capture The Flag) which are fun to play and also really instructive. Bandit games are a must for complete beginners, as you will explore some linux and bash concepts which are basic to continue. The games are leveled by difficulty, in their web you can get all the information about how to play, only a terminal and SSH is required. This helps building your foundation in Linux OS. HackTheBox: Nº 1 platform in cybersecurity. Has a lot of resources to learn all this core fundamentals, and also red team / blue team security topics. It is focused on labs where you can test your skills hacking different boxes but if you really want to learn it is worth to invest time and money in the academy. I have to say the level here is high, specially if you try to hack machines on your own without using some guide or writeup. TryHackMe: More beginner friendly than hackthebox, it provides a lot of guided learning resources. PortSwigger Labs: Practical labs about specific topics, focused on web hacking. They are great to learn and understand different types of attacks, injections, and security misconfigurations. I would recommend digging into this once you have the theoretical basis about these concepts. I have to mention a few tools I am sure you\u0026rsquo;d end up using:\nNmap: This is probably the most famous tool in hacking, allowing you to gather information about ports and services running in a machine. Burpsuite: A proxy tool widely used in web application security testing. It basically allows you to intercept and modify web requests, which can be used to perform several types of attacks. Metasploit: The most used pentesting framework. Contains a large amount of scripts and exploits ready to run. Another crucial step here is to set up your virtual lab environment to test vulnerable applications. To achieve this goal, there are some Linux distributions like Kali, Parrot or BlackArch, but that\u0026rsquo;s a topic for another post.\nFinal thoughs To sum up, this would be my personal roadmap:\nLearn the fundamentals, specially Linux and networking. Install some Linux in a virtual machine, play with it, get comfortable with the terminal. You can start with bandit wargames in OverTheWire. Complete every level and make sure to understand everything as clear as possible. Move to guided boxes on HackTheBox. I recommend you joining their Discord, ask questions, community is great there! Take notes, repeat, learn, improve your skills. Maybe use your own lab environment, create your own vulnerable apps. Hacking is a mixing of curiosity, study and practice. Being passionate and motivated about it is really helpful and will definitely speed up the process. The path is long and really challenging, so keep it going!\n\u0026ldquo;Yes, I am a criminal. My crime is that of curiosity.\u0026rdquo; — The Mentor (Loyd Blankenship) at The Hacker Manifesto\n","permalink":"http://localhost:1313/posts/starting-point/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIf you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\u003c/p\u003e","title":"Starting Point"},{"content":"Introduction In this post series we are going to solve every level from bandit in OverTheWire This guide pretends to be a writeup containing the solutions of the level, designed for beginners.\nTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing WSL, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\nEvery section will contain the solution as well as some tips for people who is absolutely beginner.\nTips First of all, some tips:\nDo not use this as first resource to solve the levels. Try on your own, make mistakes and learn from them. Only check the solution as last resource or if you are completely new and you have absolutely no idea about what to do next. Take notes from your learning. Write up commands, tips and everything which can be useful in the future. Make sure to understand everything. Is a good idea to note the passwords for every level. If you want to continue letter, you can simply log in in the desired level. It is annoying to repeat everything! Follow the tips and information provided at OverTheWire website. Levels Here is my solution for every level:\nBandit0 Bandit1 Bandit2 Bandit3 Bandit4 Bandit5 Bandit6 ","permalink":"http://localhost:1313/posts/otw/bandit/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIn this post series we are going to solve every level from bandit in \u003ca href=\"https://overthewire.org/wargames/bandit/\"\u003e\u003cem\u003eOverTheWire\u003c/em\u003e\u003c/a\u003e\nThis guide pretends to be a writeup containing the solutions of the level, designed for beginners.\u003c/p\u003e\n\u003cp\u003eTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing \u003ca href=\"https://learn.microsoft.com/en-us/windows/wsl/install\"\u003eWSL\u003c/a\u003e, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\u003c/p\u003e","title":"Bandit"},{"content":"Level description The goal of this level is for you to log into the game using SSH. The host to which you need to connect is bandit.labs.overthewire.org, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\nTips for beginners Read a bit about what SSH is. Research about what a port is. Solution This is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go here.\nAt Linux, we can use ssh client to connect to the server. It should be installed by default on your system. If not, please first research about how to install. Once you have the SSH client installed, you can log in into the first level as follows:\nssh bandit0@bandit.labs.overthewire.org -p 2220 Syntax is simple: ssh \u0026lt;username\u0026gt;@\u0026lt;hostname\u0026gt; -p \u0026lt;port\u0026gt;. Usually SSH runs on port 22 by default, but they changed to port 2220 so we must specify it in the command.\nOnce you try to log in, you will see something like this: NB: If it\u0026rsquo;s the first time you try to log in, you will be asked about the authenticity of the host. Just type yes.\nType the password bandit0 and press enter. Now you are inside bandit server, ready to begin with bandit1!\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit0/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe goal of this level is for you to log into the game using SSH. The host to which you need to connect is \u003cstrong\u003ebandit.labs.overthewire.org\u003c/strong\u003e, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eRead a bit about what SSH is.\u003c/li\u003e\n\u003cli\u003eResearch about what a port is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go \u003ca href=\"https://en.wikipedia.org/wiki/Secure_Shell\"\u003ehere\u003c/a\u003e.\u003c/p\u003e","title":"Bandit0"},{"content":"Level description The password for the next level is stored in a file called readme located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\nTips for beginners Learn about home directory in Linux. Learn to use cat and ls commands. Solution First step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\nls This shows in terminal the files at the current directory. There you will see the readme file.\nNow we can to check the contents, so let\u0026rsquo;s use cat:\ncat readme To read a file, we use cat \u0026lt;filename\u0026gt;.\nNB: Not every file is human readable in Linux. We deep more about this in later levels.\nThe content of the readme file reveals the password for bandit2 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit1/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u003cstrong\u003ereadme\u003c/strong\u003e located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn about home directory in Linux.\u003c/li\u003e\n\u003cli\u003eLearn to use \u003ccode\u003ecat\u003c/code\u003e and \u003ccode\u003els\u003c/code\u003e commands.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eFirst step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\u003c/p\u003e","title":"Bandit1"},{"content":"Level description The password for the next level is stored in a file called - located in the home directory\nTips for beginners Try to understand why previous solution is not working as you expect. Solution You may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our cat command: The terminal is waiting for something else. This happens due to character - is used to pass arguments to our commands, and the linux shell is interpreting that. To prevent that, we could use:\ncat ./- NB: Dot . is used to refer current directory. The slash / is used at the end of directory name.\nWe get the password for bandit3 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit2/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called - located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eTry to understand why previous solution is not working as you expect.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eYou may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our \u003ccode\u003ecat\u003c/code\u003e command:\n\u003cimg alt=\"bandit2\" loading=\"lazy\" src=\"/images/otw/bandit/bandit2/0.png\"\u003e\u003c/p\u003e\n\u003cp\u003eThe terminal is \u003cem\u003ewaiting\u003c/em\u003e for something else. This happens due to character \u003ccode\u003e-\u003c/code\u003e is used to pass arguments to our commands, and the linux shell is interpreting that.\nTo prevent that, we could use:\u003c/p\u003e","title":"Bandit2"},{"content":"Level description The password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\nTips for beginners Think about how to escape the whitespaces. Solution After login in the machine as bandit3, we can see the filename \u0026ndash;spaces in this filename\u0026ndash;.\nNow we have 2 problems:\nSame as previous level, filename starts with --, so it will be interpreted as an argument. Address this problem using ./. Filename contains whitespaces. This is an issue, as bash interpretes whitespaces to separate commands. To solve the second problem, we must escape the whitespace character in some way. Here is the solution:\ncat ./--spaces\\ in\\ this\\ filename-- NB: Little trick, you can start writting filename and press Tab to autocomplete the name. The \\ is going to be inserted automatically.\nJust using the \\ we can escape the whitespace.\nNow we can continue with the bandit4 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit3/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eThink about how to \u003cem\u003eescape\u003c/em\u003e the whitespaces.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAfter login in the machine as bandit3, we can see the filename \u003cem\u003e\u0026ndash;spaces in this filename\u0026ndash;\u003c/em\u003e.\u003c/p\u003e\n\u003cp\u003eNow we have 2 problems:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eSame as previous level, filename starts with \u003ccode\u003e--\u003c/code\u003e, so it will be interpreted as an argument. Address this problem using \u003ccode\u003e./\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003eFilename contains \u003cstrong\u003ewhitespaces\u003c/strong\u003e. This is an issue, as bash interpretes whitespaces to separate commands.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eTo solve the second problem, we must escape the whitespace character in some way. Here is the solution:\u003c/p\u003e","title":"Bandit3"},{"content":"Level description The password for the next level is stored in a hidden file in the inhere directory.\nTips for beginners Learn how to navigate directories in Linux. First understand what a hidden file is. Solution Listing directory files inside bandit4\u0026rsquo;s home directory, show directory inhere.\nNB: How to distinguish files and directories in Linux? Use ls -l and see the difference.\nWe have 2 options now:\nMove to inhere directory and check contens again. Check contents directly. Moving to another directory can be done using cd \u0026lt;dirName\u0026gt;. If you prefer to check directory contents directly, use ls \u0026lt;dirName\u0026gt;.\nAfter checking inhere contents via ls, we see nothing. The reason is the file is a hidden file. A hidden file in Linux is everyfile whose name starts with dot .. Hidden files are not shown by default with ls command, so we must add a special flag -a to list all files: NB: Both flags -l and -a cna be combined into a single flag -al, which is shorter to type.\nAs you can see, filename is \u0026hellip;Hidding-From-You starting with three dots. Reading file contents should be easy at this point!\nNext level is bandit5.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit4/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a hidden file in the inhere directory.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to navigate directories in Linux.\u003c/li\u003e\n\u003cli\u003eFirst understand what a hidden file is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eListing directory files inside bandit4\u0026rsquo;s home directory, show directory \u003cstrong\u003einhere\u003c/strong\u003e.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e How to distinguish files and directories in Linux? Use \u003ccode\u003els -l\u003c/code\u003e and see the difference.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eWe have 2 options now:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eMove to inhere directory and check contens again.\u003c/li\u003e\n\u003cli\u003eCheck contents directly.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eMoving to another directory can be done using \u003ccode\u003ecd \u0026lt;dirName\u0026gt;\u003c/code\u003e. If you prefer to check directory contents directly, use \u003ccode\u003els \u0026lt;dirName\u0026gt;\u003c/code\u003e.\u003c/p\u003e","title":"Bandit4"},{"content":"Level description The password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\nTips for completely beginners What means human-readable file? Is there any way to check filetype at Linux?. Solution Checking inhere\u0026rsquo;s contents shows some files names \u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII here\nSo now, our goal is checking if file content of every file in the folder is ASCII or not. file \u0026lt;filename\u0026gt; does the job. Note the use of *. That called a wildcard regular expression, we\u0026rsquo;ll deep into it in later levels. An easy approach could be checking every file separately:\nfile ./--file00 file ./--file01 ... file ./--file09 But that\u0026rsquo;s not funny, imagine we have 100 files to check. All the files are in the same directory, so we can use cat ./* where ./* matches every filename in the directory, applying file to every file.\nNB: Another approach is to use find with certaing flags. Try to do in different ways, don\u0026rsquo;t stick to my solution.\nThe file \u0026ndash;file00 content is not readable, so get password from \u0026ndash;file07 and continue with bandit6.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit5/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\u003c/p\u003e\n\u003ch2 id=\"tips-for-completely-beginners\"\u003eTips for completely beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eWhat means human-readable file?\u003c/li\u003e\n\u003cli\u003eIs there any way to check filetype at Linux?.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eChecking inhere\u0026rsquo;s contents shows some files names \u003cstrong\u003e\u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09\u003c/strong\u003e. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII \u003ca href=\"https://en.wikipedia.org/wiki/ASCII\"\u003ehere\u003c/a\u003e\u003c/p\u003e","title":"Bandit5"},{"content":"Level description The password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\nhuman-readable 1033 bytes in size not executable Tips for completely beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution The purpose of the level is showing us how to find for files. Listing contents of inhere, we can see some folders, containing a lot of files inside: NB: Adding -R to ls shows recursively the content of every folder inside the directory listed.\nSo this time, checking every file is not an option. We need to find a file with some properties, specific size, not excutable and human-readable. Let\u0026rsquo;s explain the command we\u0026rsquo;re using:\nfind inhere/ -size 1033c ! -executable First, we specify the directory, in this case inhere. The option -size 1033c returns files of 1033 bytes. Then, with -executable we would get executable files, but we want not executable files, that\u0026rsquo;s why we are adding ! before.\nNB: By default, the -size option takes as argument the number of blocks. For example, -size 2 means 2 blocks of 512 bytes, so its 1024. The c is used to specify exact bytes. Don\u0026rsquo;t ask me why it\u0026rsquo;s c and not b 😅.\nThe property of human-readability is not implemented in find. This is not an issue, previous command returns a single file and it is human readable (we could confirm using file): ","permalink":"http://localhost:1313/posts/otw/bandit/bandit6/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ehuman-readable\u003c/li\u003e\n\u003cli\u003e1033 bytes in size\u003c/li\u003e\n\u003cli\u003enot executable\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-completely-beginners\"\u003eTips for completely beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThe purpose of the level is showing us how to find for files. Listing contents of \u003cstrong\u003einhere\u003c/strong\u003e, we can see some folders, containing a lot of files inside:\n\u003cimg alt=\"bandit6_0\" loading=\"lazy\" src=\"/images/otw/bandit/bandit6/0.png\"\u003e\u003c/p\u003e","title":"Bandit6"},{"content":"👨‍💻 whoami Hey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\nWhat is this❓​ This blog is basically my thoughts on several hacking topics. Here you’ll see:\nWriteups from CTF challenges, from platforms like HackTheBox or OverTheWire.\nWalkthroughs and notes on pentesting techniques I’m learning or testing.\nSome posts on cryptography — because math can be fun (sometimes).\nRandom topics that freaks like me may (just may) find interesting.\nThe idea is simple: share what I learn, document my journey, and maybe help others who are also diving into the exciting world of ethical hacking.\n📫 Contact Want to say hi, share ideas, or just geek out about hacking? Reach me here:\n📧 Email: mrb0b1073@proton.me 💻​ GitHub: mrb0b173 🟩​ HackTheBox: mrb0b1073 ","permalink":"http://localhost:1313/about/","summary":"\u003ch2 id=\"-whoami\"\u003e👨‍💻 whoami\u003c/h2\u003e\n\u003cp\u003eHey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\u003c/p\u003e\n\u003chr\u003e\n\u003ch2 id=\"what-is-this\"\u003eWhat is this❓​\u003c/h2\u003e\n\u003cp\u003eThis blog is basically my thoughts on several hacking topics. Here you’ll see:\u003c/p\u003e","title":"About"},{"content":"Hey! 👋 I\u0026rsquo;m mrb0b1073 and this is my first post.\nWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\nExcited to start this adventure!\n","permalink":"http://localhost:1313/posts/hello-world/","summary":"\u003cp\u003eHey! 👋 I\u0026rsquo;m \u003cstrong\u003emrb0b1073\u003c/strong\u003e and this is my first post.\u003c/p\u003e\n\u003cp\u003eWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\u003cbr\u003e\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\u003c/p\u003e\n\u003cp\u003eExcited to start this adventure!\u003c/p\u003e","title":"Hello World"},{"content":"Introduction If you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\nIn cybersecurity there are broadly two complementary roles: Blue Team and Red Team. Blue Teams focus on defense, monitoring, incident response, hardening systems and keeping services secure, while Red Teams simulate attackers to find weaknesses and prove what an adversary could do. Ethical hacking aligns closely with Red Team operations, but cybersecurity is highly transversal across IT. There are many specialities or areas, such as cloud security, appsec, pentesting, forensics, governance, risk management, malware analysis, etc. Every topic could deserve its own post, so let\u0026rsquo;s keep it simple and focus on ethical hacking.\nHacker philosophy Let\u0026rsquo;s start with the idea of what is exactly a hacker. A hacker is someone who explores systems to understand how they work, finds creative ways to make or fix things, and solves technical problems. Historically the word describes curiosity, craft, and a drive to improve systems — not criminality. It is important to make the distinction between hacker and cracker, also called cybercriminal. A hacker explores, builds, discloses responsibly and works to improve security. They work in authorized environments or labs. On the other hand, a cracker breaks into systems for theft, vandalism or other illicit gain.\nHere you can find the most popularized ideas often summarized as the hacker ethic:\nCuriosity first: Learn by exploring and tinkering. Freedom of information: All knowledge should be shared to help progress. This fits properly with the idea of open source. Mistrust of needless authority: Centralized control sometimes blocks innovation. It is always good to question anything, specially common assumptions. Meritocracy: Skills, craft and results matter more than titles. Craftsmanship \u0026amp; elegance: Technical beauty matters. Build clean, clever and efficient solutions. Responsability \u0026amp; ethics: Use your skills to build, fix, educate and defend, not to harm. Core fundamentals Assuming you want to init yourself in hacking, you should first build competence across three basic pillars.\nOperating Systems You should learn as much as possible about Linux and Windows. Specially Linux, all the tools you will be using are meant to be used in a Linux environment. Skill with shell is required, learn basic commands and how to interact with the OS using the terminal. Research about processes, file permissions, package management and logs. A large proportion of web servers around the world run on Linux, although Windows is also widely used. Windows knowledge is really valuable too, considering active directory is strongly used in corporate environments.\nNetworking You have to understand how computers communicate each other. Understand basic networking concepts, IP adresses, subnetting, proxies, find out how internet works. Study some protocols such as TCP/IP, HTTP, DNS or SSH. This could sound confusing for beginners, but this step is not optional! Study different client/server models and how services expose attack surfaces.\nProgramming \u0026amp; scripting Is this completely required? Maybe not for complete beginners. Does it help? Absolutely yes. Understanding how web apps or any type of application works makes things much easier. You can imagine different entry points to exploit if you understand how systems are designed. Also writing scripts in bash or python makes you more productive through automation.\nEthical Hacking foundations Once you feel confident with these 3 pillars, you can go to the next step. You can study about different topics and areas. For example, binary exploiting, web pentesting, mobile pentesting, wireless hacking, etc. You should start picking a focus, in this post we focus on web pentesting, as it is beginner friendly. Also web applications are the bread and butter in companies nowadays.\nKey concepts to study:\nCIA Triad: CIA refers to Confidentiality, Integrity and Availability. These three concepts are key in information security, and describe properties we want to ensure in our systems and information. Web Security basics, OWASP: Study the OWASP Top 10, which summarizes most frequent web security risks. Authentication and session control: Understand the concepts of Authentication and Authorization, research about how session is handled in web apps, cookies, JWT tokens, etc. Input validation \u0026amp; injection attacks: Learn about SQL Injection, Cross-Site Scripting (XSS), Code Injection, SSTI, and every injection type. Secure development lifecycle: Find out how to implement security controls in code. This can be more related to Blue Team, but as Red Teamer it is important to understand. Firewall evasion: What a firewall is and some techniques/methods to bypass. Some cryptography: Understand what a chiper and a hash are, how information is encrypted to prevent access from 3rd parties. Focusing on web, read about TLS protocol. There are many more topics you can research and learn, but this could be a nice starting point.\nTools and platforms to learn Now you have an idea of what to study, let\u0026rsquo;s see how to start in practical terms.\nSome platforms I personally recommend:\nOverTheWire: Here you can find some CTFs (Capture The Flag) which are fun to play and also really instructive. Bandit games are a must for complete beginners, as you will explore some linux and bash concepts which are basic to continue. The games are leveled by difficulty, in their web you can get all the information about how to play, only a terminal and SSH is required. This helps building your foundation in Linux OS. HackTheBox: Nº 1 platform in cybersecurity. Has a lot of resources to learn all this core fundamentals, and also red team / blue team security topics. It is focused on labs where you can test your skills hacking different boxes but if you really want to learn it is worth to invest time and money in the academy. I have to say the level here is high, specially if you try to hack machines on your own without using some guide or writeup. TryHackMe: More beginner friendly than hackthebox, it provides a lot of guided learning resources. PortSwigger Labs: Practical labs about specific topics, focused on web hacking. They are great to learn and understand different types of attacks, injections, and security misconfigurations. I would recommend digging into this once you have the theoretical basis about these concepts. I have to mention a few tools I am sure you\u0026rsquo;d end up using:\nNmap: This is probably the most famous tool in hacking, allowing you to gather information about ports and services running in a machine. Burpsuite: A proxy tool widely used in web application security testing. It basically allows you to intercept and modify web requests, which can be used to perform several types of attacks. Metasploit: The most used pentesting framework. Contains a large amount of scripts and exploits ready to run. Another crucial step here is to set up your virtual lab environment to test vulnerable applications. To achieve this goal, there are some Linux distributions like Kali, Parrot or BlackArch, but that\u0026rsquo;s a topic for another post.\nFinal thoughs To sum up, this would be my personal roadmap:\nLearn the fundamentals, specially Linux and networking. Install some Linux in a virtual machine, play with it, get comfortable with the terminal. You can start with bandit wargames in OverTheWire. Complete every level and make sure to understand everything as clear as possible. Move to guided boxes on HackTheBox. I recommend you joining their Discord, ask questions, community is great there! Take notes, repeat, learn, improve your skills. Maybe use your own lab environment, create your own vulnerable apps. Hacking is a mixing of curiosity, study and practice. Being passionate and motivated about it is really helpful and will definitely speed up the process. The path is long and really challenging, so keep it going!\n\u0026ldquo;Yes, I am a criminal. My crime is that of curiosity.\u0026rdquo; — The Mentor (Loyd Blankenship) at The Hacker Manifesto\n","permalink":"http://localhost:1313/posts/starting-point/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIf you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\u003c/p\u003e","title":"Starting Point"},{"content":"Introduction In this post series we are going to solve every level from bandit in OverTheWire This guide pretends to be a writeup containing the solutions of the level, designed for beginners.\nTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing WSL, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\nEvery section will contain the solution as well as some tips for people who is absolutely beginner.\nTips First of all, some tips:\nDo not use this as first resource to solve the levels. Try on your own, make mistakes and learn from them. Only check the solution as last resource or if you are completely new and you have absolutely no idea about what to do next. Take notes from your learning. Write up commands, tips and everything which can be useful in the future. Make sure to understand everything. Is a good idea to note the passwords for every level. If you want to continue letter, you can simply log in in the desired level. It is annoying to repeat everything! Follow the tips and information provided at OverTheWire website. Levels Here is my solution for every level:\nBandit0 Bandit1 Bandit2 Bandit3 Bandit4 Bandit5 Bandit6 ","permalink":"http://localhost:1313/posts/otw/bandit/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIn this post series we are going to solve every level from bandit in \u003ca href=\"https://overthewire.org/wargames/bandit/\"\u003e\u003cem\u003eOverTheWire\u003c/em\u003e\u003c/a\u003e\nThis guide pretends to be a writeup containing the solutions of the level, designed for beginners.\u003c/p\u003e\n\u003cp\u003eTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing \u003ca href=\"https://learn.microsoft.com/en-us/windows/wsl/install\"\u003eWSL\u003c/a\u003e, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\u003c/p\u003e","title":"Bandit"},{"content":"Level description The goal of this level is for you to log into the game using SSH. The host to which you need to connect is bandit.labs.overthewire.org, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\nTips for beginners Read a bit about what SSH is. Research about what a port is. Solution This is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go here.\nAt Linux, we can use ssh client to connect to the server. It should be installed by default on your system. If not, please first research about how to install. Once you have the SSH client installed, you can log in into the first level as follows:\nssh bandit0@bandit.labs.overthewire.org -p 2220 Syntax is simple: ssh \u0026lt;username\u0026gt;@\u0026lt;hostname\u0026gt; -p \u0026lt;port\u0026gt;. Usually SSH runs on port 22 by default, but they changed to port 2220 so we must specify it in the command.\nOnce you try to log in, you will see something like this: NB: If it\u0026rsquo;s the first time you try to log in, you will be asked about the authenticity of the host. Just type yes.\nType the password bandit0 and press enter. Now you are inside bandit server, ready to begin with bandit1!\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit0/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe goal of this level is for you to log into the game using SSH. The host to which you need to connect is \u003cstrong\u003ebandit.labs.overthewire.org\u003c/strong\u003e, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eRead a bit about what SSH is.\u003c/li\u003e\n\u003cli\u003eResearch about what a port is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go \u003ca href=\"https://en.wikipedia.org/wiki/Secure_Shell\"\u003ehere\u003c/a\u003e.\u003c/p\u003e","title":"Bandit0"},{"content":"Level description The password for the next level is stored in a file called readme located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\nTips for beginners Learn about home directory in Linux. Learn to use cat and ls commands. Solution First step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\nls This shows in terminal the files at the current directory. There you will see the readme file.\nNow we can to check the contents, so let\u0026rsquo;s use cat:\ncat readme To read a file, we use cat \u0026lt;filename\u0026gt;.\nNB: Not every file is human readable in Linux. We deep more about this in later levels.\nThe content of the readme file reveals the password for bandit2 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit1/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u003cstrong\u003ereadme\u003c/strong\u003e located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn about home directory in Linux.\u003c/li\u003e\n\u003cli\u003eLearn to use \u003ccode\u003ecat\u003c/code\u003e and \u003ccode\u003els\u003c/code\u003e commands.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eFirst step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\u003c/p\u003e","title":"Bandit1"},{"content":"Level description The password for the next level is stored in a file called - located in the home directory\nTips for beginners Try to understand why previous solution is not working as you expect. Solution You may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our cat command: The terminal is waiting for something else. This happens due to character - is used to pass arguments to our commands, and the linux shell is interpreting that. To prevent that, we could use:\ncat ./- NB: Dot . is used to refer current directory. The slash / is used at the end of directory name.\nWe get the password for bandit3 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit2/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called - located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eTry to understand why previous solution is not working as you expect.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eYou may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our \u003ccode\u003ecat\u003c/code\u003e command:\n\u003cimg alt=\"bandit2\" loading=\"lazy\" src=\"/images/otw/bandit/bandit2/0.png\"\u003e\u003c/p\u003e\n\u003cp\u003eThe terminal is \u003cem\u003ewaiting\u003c/em\u003e for something else. This happens due to character \u003ccode\u003e-\u003c/code\u003e is used to pass arguments to our commands, and the linux shell is interpreting that.\nTo prevent that, we could use:\u003c/p\u003e","title":"Bandit2"},{"content":"Level description The password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\nTips for beginners Think about how to escape the whitespaces. Solution After login in the machine as bandit3, we can see the filename \u0026ndash;spaces in this filename\u0026ndash;.\nNow we have 2 problems:\nSame as previous level, filename starts with --, so it will be interpreted as an argument. Address this problem using ./. Filename contains whitespaces. This is an issue, as bash interpretes whitespaces to separate commands. To solve the second problem, we must escape the whitespace character in some way. Here is the solution:\ncat ./--spaces\\ in\\ this\\ filename-- NB: Little trick, you can start writting filename and press Tab to autocomplete the name. The \\ is going to be inserted automatically.\nJust using the \\ we can escape the whitespace.\nNow we can continue with the bandit4 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit3/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eThink about how to \u003cem\u003eescape\u003c/em\u003e the whitespaces.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAfter login in the machine as bandit3, we can see the filename \u003cem\u003e\u0026ndash;spaces in this filename\u0026ndash;\u003c/em\u003e.\u003c/p\u003e\n\u003cp\u003eNow we have 2 problems:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eSame as previous level, filename starts with \u003ccode\u003e--\u003c/code\u003e, so it will be interpreted as an argument. Address this problem using \u003ccode\u003e./\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003eFilename contains \u003cstrong\u003ewhitespaces\u003c/strong\u003e. This is an issue, as bash interpretes whitespaces to separate commands.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eTo solve the second problem, we must escape the whitespace character in some way. Here is the solution:\u003c/p\u003e","title":"Bandit3"},{"content":"Level description The password for the next level is stored in a hidden file in the inhere directory.\nTips for beginners Learn how to navigate directories in Linux. First understand what a hidden file is. Solution Listing directory files inside bandit4\u0026rsquo;s home directory, show directory inhere.\nNB: How to distinguish files and directories in Linux? Use ls -l and see the difference.\nWe have 2 options now:\nMove to inhere directory and check contens again. Check contents directly. Moving to another directory can be done using cd \u0026lt;dirName\u0026gt;. If you prefer to check directory contents directly, use ls \u0026lt;dirName\u0026gt;.\nAfter checking inhere contents via ls, we see nothing. The reason is the file is a hidden file. A hidden file in Linux is everyfile whose name starts with dot .. Hidden files are not shown by default with ls command, so we must add a special flag -a to list all files: NB: Both flags -l and -a cna be combined into a single flag -al, which is shorter to type.\nAs you can see, filename is \u0026hellip;Hidding-From-You starting with three dots. Reading file contents should be easy at this point!\nNext level is bandit5.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit4/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a hidden file in the inhere directory.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to navigate directories in Linux.\u003c/li\u003e\n\u003cli\u003eFirst understand what a hidden file is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eListing directory files inside bandit4\u0026rsquo;s home directory, show directory \u003cstrong\u003einhere\u003c/strong\u003e.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e How to distinguish files and directories in Linux? Use \u003ccode\u003els -l\u003c/code\u003e and see the difference.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eWe have 2 options now:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eMove to inhere directory and check contens again.\u003c/li\u003e\n\u003cli\u003eCheck contents directly.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eMoving to another directory can be done using \u003ccode\u003ecd \u0026lt;dirName\u0026gt;\u003c/code\u003e. If you prefer to check directory contents directly, use \u003ccode\u003els \u0026lt;dirName\u0026gt;\u003c/code\u003e.\u003c/p\u003e","title":"Bandit4"},{"content":"Level description The password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\nTips for beginners What means human-readable file? Is there any way to check filetype at Linux?. Solution Checking inhere\u0026rsquo;s contents shows some files names \u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII here\nSo now, our goal is checking if file content of every file in the folder is ASCII or not. file \u0026lt;filename\u0026gt; does the job. Note the use of *. That called a wildcard regular expression, we\u0026rsquo;ll deep into it in later levels. An easy approach could be checking every file separately:\nfile ./--file00 file ./--file01 ... file ./--file09 But that\u0026rsquo;s not funny, imagine we have 100 files to check. All the files are in the same directory, so we can use cat ./* where ./* matches every filename in the directory, applying file to every file.\nNB: Another approach is to use find with certaing flags. Try to do in different ways, don\u0026rsquo;t stick to my solution.\nThe file \u0026ndash;file00 content is not readable, so get password from \u0026ndash;file07 and continue with bandit6.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit5/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eWhat means human-readable file?\u003c/li\u003e\n\u003cli\u003eIs there any way to check filetype at Linux?.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eChecking inhere\u0026rsquo;s contents shows some files names \u003cstrong\u003e\u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09\u003c/strong\u003e. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII \u003ca href=\"https://en.wikipedia.org/wiki/ASCII\"\u003ehere\u003c/a\u003e\u003c/p\u003e","title":"Bandit5"},{"content":"Level description The password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\nhuman-readable 1033 bytes in size not executable Tips for completely beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution The purpose of the level is showing us how to find for files. Listing contents of inhere, we can see some folders, containing a lot of files inside: NB: Adding -R to ls shows recursively the content of every folder inside the directory listed.\nSo this time, checking every file is not an option. We need to find a file with some properties, specific size, not excutable and human-readable. Let\u0026rsquo;s explain the command we\u0026rsquo;re using:\nfind inhere/ -size 1033c ! -executable First, we specify the directory, in this case inhere. The option -size 1033c returns files of 1033 bytes. Then, with -executable we would get executable files, but we want not executable files, that\u0026rsquo;s why we are adding ! before.\nNB: By default, the -size option takes as argument the number of blocks. For example, -size 2 means 2 blocks of 512 bytes, so its 1024. The c is used to specify exact bytes. Don\u0026rsquo;t ask me why it\u0026rsquo;s c and not b 😅.\nThe property of human-readability is not implemented in find. This is not an issue, previous command returns a single file and it is human readable (we could confirm using file): ","permalink":"http://localhost:1313/posts/otw/bandit/bandit6/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ehuman-readable\u003c/li\u003e\n\u003cli\u003e1033 bytes in size\u003c/li\u003e\n\u003cli\u003enot executable\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-completely-beginners\"\u003eTips for completely beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThe purpose of the level is showing us how to find for files. Listing contents of \u003cstrong\u003einhere\u003c/strong\u003e, we can see some folders, containing a lot of files inside:\n\u003cimg alt=\"bandit6_0\" loading=\"lazy\" src=\"/images/otw/bandit/bandit6/0.png\"\u003e\u003c/p\u003e","title":"Bandit6"},{"content":"👨‍💻 whoami Hey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\nWhat is this❓​ This blog is basically my thoughts on several hacking topics. Here you’ll see:\nWriteups from CTF challenges, from platforms like HackTheBox or OverTheWire.\nWalkthroughs and notes on pentesting techniques I’m learning or testing.\nSome posts on cryptography — because math can be fun (sometimes).\nRandom topics that freaks like me may (just may) find interesting.\nThe idea is simple: share what I learn, document my journey, and maybe help others who are also diving into the exciting world of ethical hacking.\n📫 Contact Want to say hi, share ideas, or just geek out about hacking? Reach me here:\n📧 Email: mrb0b1073@proton.me 💻​ GitHub: mrb0b173 🟩​ HackTheBox: mrb0b1073 ","permalink":"http://localhost:1313/about/","summary":"\u003ch2 id=\"-whoami\"\u003e👨‍💻 whoami\u003c/h2\u003e\n\u003cp\u003eHey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\u003c/p\u003e\n\u003chr\u003e\n\u003ch2 id=\"what-is-this\"\u003eWhat is this❓​\u003c/h2\u003e\n\u003cp\u003eThis blog is basically my thoughts on several hacking topics. Here you’ll see:\u003c/p\u003e","title":"About"},{"content":"Hey! 👋 I\u0026rsquo;m mrb0b1073 and this is my first post.\nWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\nExcited to start this adventure!\n","permalink":"http://localhost:1313/posts/hello-world/","summary":"\u003cp\u003eHey! 👋 I\u0026rsquo;m \u003cstrong\u003emrb0b1073\u003c/strong\u003e and this is my first post.\u003c/p\u003e\n\u003cp\u003eWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\u003cbr\u003e\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\u003c/p\u003e\n\u003cp\u003eExcited to start this adventure!\u003c/p\u003e","title":"Hello World"},{"content":"Introduction If you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\nIn cybersecurity there are broadly two complementary roles: Blue Team and Red Team. Blue Teams focus on defense, monitoring, incident response, hardening systems and keeping services secure, while Red Teams simulate attackers to find weaknesses and prove what an adversary could do. Ethical hacking aligns closely with Red Team operations, but cybersecurity is highly transversal across IT. There are many specialities or areas, such as cloud security, appsec, pentesting, forensics, governance, risk management, malware analysis, etc. Every topic could deserve its own post, so let\u0026rsquo;s keep it simple and focus on ethical hacking.\nHacker philosophy Let\u0026rsquo;s start with the idea of what is exactly a hacker. A hacker is someone who explores systems to understand how they work, finds creative ways to make or fix things, and solves technical problems. Historically the word describes curiosity, craft, and a drive to improve systems — not criminality. It is important to make the distinction between hacker and cracker, also called cybercriminal. A hacker explores, builds, discloses responsibly and works to improve security. They work in authorized environments or labs. On the other hand, a cracker breaks into systems for theft, vandalism or other illicit gain.\nHere you can find the most popularized ideas often summarized as the hacker ethic:\nCuriosity first: Learn by exploring and tinkering. Freedom of information: All knowledge should be shared to help progress. This fits properly with the idea of open source. Mistrust of needless authority: Centralized control sometimes blocks innovation. It is always good to question anything, specially common assumptions. Meritocracy: Skills, craft and results matter more than titles. Craftsmanship \u0026amp; elegance: Technical beauty matters. Build clean, clever and efficient solutions. Responsability \u0026amp; ethics: Use your skills to build, fix, educate and defend, not to harm. Core fundamentals Assuming you want to init yourself in hacking, you should first build competence across three basic pillars.\nOperating Systems You should learn as much as possible about Linux and Windows. Specially Linux, all the tools you will be using are meant to be used in a Linux environment. Skill with shell is required, learn basic commands and how to interact with the OS using the terminal. Research about processes, file permissions, package management and logs. A large proportion of web servers around the world run on Linux, although Windows is also widely used. Windows knowledge is really valuable too, considering active directory is strongly used in corporate environments.\nNetworking You have to understand how computers communicate each other. Understand basic networking concepts, IP adresses, subnetting, proxies, find out how internet works. Study some protocols such as TCP/IP, HTTP, DNS or SSH. This could sound confusing for beginners, but this step is not optional! Study different client/server models and how services expose attack surfaces.\nProgramming \u0026amp; scripting Is this completely required? Maybe not for complete beginners. Does it help? Absolutely yes. Understanding how web apps or any type of application works makes things much easier. You can imagine different entry points to exploit if you understand how systems are designed. Also writing scripts in bash or python makes you more productive through automation.\nEthical Hacking foundations Once you feel confident with these 3 pillars, you can go to the next step. You can study about different topics and areas. For example, binary exploiting, web pentesting, mobile pentesting, wireless hacking, etc. You should start picking a focus, in this post we focus on web pentesting, as it is beginner friendly. Also web applications are the bread and butter in companies nowadays.\nKey concepts to study:\nCIA Triad: CIA refers to Confidentiality, Integrity and Availability. These three concepts are key in information security, and describe properties we want to ensure in our systems and information. Web Security basics, OWASP: Study the OWASP Top 10, which summarizes most frequent web security risks. Authentication and session control: Understand the concepts of Authentication and Authorization, research about how session is handled in web apps, cookies, JWT tokens, etc. Input validation \u0026amp; injection attacks: Learn about SQL Injection, Cross-Site Scripting (XSS), Code Injection, SSTI, and every injection type. Secure development lifecycle: Find out how to implement security controls in code. This can be more related to Blue Team, but as Red Teamer it is important to understand. Firewall evasion: What a firewall is and some techniques/methods to bypass. Some cryptography: Understand what a chiper and a hash are, how information is encrypted to prevent access from 3rd parties. Focusing on web, read about TLS protocol. There are many more topics you can research and learn, but this could be a nice starting point.\nTools and platforms to learn Now you have an idea of what to study, let\u0026rsquo;s see how to start in practical terms.\nSome platforms I personally recommend:\nOverTheWire: Here you can find some CTFs (Capture The Flag) which are fun to play and also really instructive. Bandit games are a must for complete beginners, as you will explore some linux and bash concepts which are basic to continue. The games are leveled by difficulty, in their web you can get all the information about how to play, only a terminal and SSH is required. This helps building your foundation in Linux OS. HackTheBox: Nº 1 platform in cybersecurity. Has a lot of resources to learn all this core fundamentals, and also red team / blue team security topics. It is focused on labs where you can test your skills hacking different boxes but if you really want to learn it is worth to invest time and money in the academy. I have to say the level here is high, specially if you try to hack machines on your own without using some guide or writeup. TryHackMe: More beginner friendly than hackthebox, it provides a lot of guided learning resources. PortSwigger Labs: Practical labs about specific topics, focused on web hacking. They are great to learn and understand different types of attacks, injections, and security misconfigurations. I would recommend digging into this once you have the theoretical basis about these concepts. I have to mention a few tools I am sure you\u0026rsquo;d end up using:\nNmap: This is probably the most famous tool in hacking, allowing you to gather information about ports and services running in a machine. Burpsuite: A proxy tool widely used in web application security testing. It basically allows you to intercept and modify web requests, which can be used to perform several types of attacks. Metasploit: The most used pentesting framework. Contains a large amount of scripts and exploits ready to run. Another crucial step here is to set up your virtual lab environment to test vulnerable applications. To achieve this goal, there are some Linux distributions like Kali, Parrot or BlackArch, but that\u0026rsquo;s a topic for another post.\nFinal thoughs To sum up, this would be my personal roadmap:\nLearn the fundamentals, specially Linux and networking. Install some Linux in a virtual machine, play with it, get comfortable with the terminal. You can start with bandit wargames in OverTheWire. Complete every level and make sure to understand everything as clear as possible. Move to guided boxes on HackTheBox. I recommend you joining their Discord, ask questions, community is great there! Take notes, repeat, learn, improve your skills. Maybe use your own lab environment, create your own vulnerable apps. Hacking is a mixing of curiosity, study and practice. Being passionate and motivated about it is really helpful and will definitely speed up the process. The path is long and really challenging, so keep it going!\n\u0026ldquo;Yes, I am a criminal. My crime is that of curiosity.\u0026rdquo; — The Mentor (Loyd Blankenship) at The Hacker Manifesto\n","permalink":"http://localhost:1313/posts/starting-point/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIf you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\u003c/p\u003e","title":"Starting Point"},{"content":"Introduction In this post series we are going to solve every level from bandit in OverTheWire This guide pretends to be a writeup containing the solutions of the level, designed for beginners.\nTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing WSL, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\nEvery section will contain the solution as well as some tips for people who is absolutely beginner.\nTips First of all, some tips:\nDo not use this as first resource to solve the levels. Try on your own, make mistakes and learn from them. Only check the solution as last resource or if you are completely new and you have absolutely no idea about what to do next. Take notes from your learning. Write up commands, tips and everything which can be useful in the future. Make sure to understand everything. Is a good idea to note the passwords for every level. If you want to continue letter, you can simply log in in the desired level. It is annoying to repeat everything! Follow the tips and information provided at OverTheWire website. Levels Here is my solution for every level:\nBandit0 Bandit1 Bandit2 Bandit3 Bandit4 Bandit5 Bandit6 ","permalink":"http://localhost:1313/posts/otw/bandit/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIn this post series we are going to solve every level from bandit in \u003ca href=\"https://overthewire.org/wargames/bandit/\"\u003e\u003cem\u003eOverTheWire\u003c/em\u003e\u003c/a\u003e\nThis guide pretends to be a writeup containing the solutions of the level, designed for beginners.\u003c/p\u003e\n\u003cp\u003eTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing \u003ca href=\"https://learn.microsoft.com/en-us/windows/wsl/install\"\u003eWSL\u003c/a\u003e, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\u003c/p\u003e","title":"Bandit"},{"content":"Level description The goal of this level is for you to log into the game using SSH. The host to which you need to connect is bandit.labs.overthewire.org, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\nTips for beginners Read a bit about what SSH is. Research about what a port is. Solution This is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go here.\nAt Linux, we can use ssh client to connect to the server. It should be installed by default on your system. If not, please first research about how to install. Once you have the SSH client installed, you can log in into the first level as follows:\nssh bandit0@bandit.labs.overthewire.org -p 2220 Syntax is simple: ssh \u0026lt;username\u0026gt;@\u0026lt;hostname\u0026gt; -p \u0026lt;port\u0026gt;. Usually SSH runs on port 22 by default, but they changed to port 2220 so we must specify it in the command.\nOnce you try to log in, you will see something like this: NB: If it\u0026rsquo;s the first time you try to log in, you will be asked about the authenticity of the host. Just type yes.\nType the password bandit0 and press enter. Now you are inside bandit server, ready to begin with bandit1!\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit0/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe goal of this level is for you to log into the game using SSH. The host to which you need to connect is \u003cstrong\u003ebandit.labs.overthewire.org\u003c/strong\u003e, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eRead a bit about what SSH is.\u003c/li\u003e\n\u003cli\u003eResearch about what a port is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go \u003ca href=\"https://en.wikipedia.org/wiki/Secure_Shell\"\u003ehere\u003c/a\u003e.\u003c/p\u003e","title":"Bandit0"},{"content":"Level description The password for the next level is stored in a file called readme located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\nTips for beginners Learn about home directory in Linux. Learn to use cat and ls commands. Solution First step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\nls This shows in terminal the files at the current directory. There you will see the readme file.\nNow we can to check the contents, so let\u0026rsquo;s use cat:\ncat readme To read a file, we use cat \u0026lt;filename\u0026gt;.\nNB: Not every file is human readable in Linux. We deep more about this in later levels.\nThe content of the readme file reveals the password for bandit2 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit1/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u003cstrong\u003ereadme\u003c/strong\u003e located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn about home directory in Linux.\u003c/li\u003e\n\u003cli\u003eLearn to use \u003ccode\u003ecat\u003c/code\u003e and \u003ccode\u003els\u003c/code\u003e commands.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eFirst step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\u003c/p\u003e","title":"Bandit1"},{"content":"Level description The password for the next level is stored in a file called - located in the home directory\nTips for beginners Try to understand why previous solution is not working as you expect. Solution You may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our cat command: The terminal is waiting for something else. This happens due to character - is used to pass arguments to our commands, and the linux shell is interpreting that. To prevent that, we could use:\ncat ./- NB: Dot . is used to refer current directory. The slash / is used at the end of directory name.\nWe get the password for bandit3 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit2/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called - located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eTry to understand why previous solution is not working as you expect.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eYou may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our \u003ccode\u003ecat\u003c/code\u003e command:\n\u003cimg alt=\"bandit2\" loading=\"lazy\" src=\"/images/otw/bandit/bandit2/0.png\"\u003e\u003c/p\u003e\n\u003cp\u003eThe terminal is \u003cem\u003ewaiting\u003c/em\u003e for something else. This happens due to character \u003ccode\u003e-\u003c/code\u003e is used to pass arguments to our commands, and the linux shell is interpreting that.\nTo prevent that, we could use:\u003c/p\u003e","title":"Bandit2"},{"content":"Level description The password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\nTips for beginners Think about how to escape the whitespaces. Solution After login in the machine as bandit3, we can see the filename \u0026ndash;spaces in this filename\u0026ndash;.\nNow we have 2 problems:\nSame as previous level, filename starts with --, so it will be interpreted as an argument. Address this problem using ./. Filename contains whitespaces. This is an issue, as bash interpretes whitespaces to separate commands. To solve the second problem, we must escape the whitespace character in some way. Here is the solution:\ncat ./--spaces\\ in\\ this\\ filename-- NB: Little trick, you can start writting filename and press Tab to autocomplete the name. The \\ is going to be inserted automatically.\nJust using the \\ we can escape the whitespace.\nNow we can continue with the bandit4 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit3/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eThink about how to \u003cem\u003eescape\u003c/em\u003e the whitespaces.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAfter login in the machine as bandit3, we can see the filename \u003cem\u003e\u0026ndash;spaces in this filename\u0026ndash;\u003c/em\u003e.\u003c/p\u003e\n\u003cp\u003eNow we have 2 problems:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eSame as previous level, filename starts with \u003ccode\u003e--\u003c/code\u003e, so it will be interpreted as an argument. Address this problem using \u003ccode\u003e./\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003eFilename contains \u003cstrong\u003ewhitespaces\u003c/strong\u003e. This is an issue, as bash interpretes whitespaces to separate commands.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eTo solve the second problem, we must escape the whitespace character in some way. Here is the solution:\u003c/p\u003e","title":"Bandit3"},{"content":"Level description The password for the next level is stored in a hidden file in the inhere directory.\nTips for beginners Learn how to navigate directories in Linux. First understand what a hidden file is. Solution Listing directory files inside bandit4\u0026rsquo;s home directory, show directory inhere.\nNB: How to distinguish files and directories in Linux? Use ls -l and see the difference.\nWe have 2 options now:\nMove to inhere directory and check contens again. Check contents directly. Moving to another directory can be done using cd \u0026lt;dirName\u0026gt;. If you prefer to check directory contents directly, use ls \u0026lt;dirName\u0026gt;.\nAfter checking inhere contents via ls, we see nothing. The reason is the file is a hidden file. A hidden file in Linux is everyfile whose name starts with dot .. Hidden files are not shown by default with ls command, so we must add a special flag -a to list all files: NB: Both flags -l and -a cna be combined into a single flag -al, which is shorter to type.\nAs you can see, filename is \u0026hellip;Hidding-From-You starting with three dots. Reading file contents should be easy at this point!\nNext level is bandit5.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit4/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a hidden file in the inhere directory.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to navigate directories in Linux.\u003c/li\u003e\n\u003cli\u003eFirst understand what a hidden file is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eListing directory files inside bandit4\u0026rsquo;s home directory, show directory \u003cstrong\u003einhere\u003c/strong\u003e.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e How to distinguish files and directories in Linux? Use \u003ccode\u003els -l\u003c/code\u003e and see the difference.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eWe have 2 options now:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eMove to inhere directory and check contens again.\u003c/li\u003e\n\u003cli\u003eCheck contents directly.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eMoving to another directory can be done using \u003ccode\u003ecd \u0026lt;dirName\u0026gt;\u003c/code\u003e. If you prefer to check directory contents directly, use \u003ccode\u003els \u0026lt;dirName\u0026gt;\u003c/code\u003e.\u003c/p\u003e","title":"Bandit4"},{"content":"Level description The password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\nTips for beginners What means human-readable file? Is there any way to check filetype at Linux?. Solution Checking inhere\u0026rsquo;s contents shows some files names \u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII here\nSo now, our goal is checking if file content of every file in the folder is ASCII or not. file \u0026lt;filename\u0026gt; does the job. Note the use of *. That called a wildcard regular expression, we\u0026rsquo;ll deep into it in later levels. An easy approach could be checking every file separately:\nfile ./--file00 file ./--file01 ... file ./--file09 But that\u0026rsquo;s not funny, imagine we have 100 files to check. All the files are in the same directory, so we can use cat ./* where ./* matches every filename in the directory, applying file to every file.\nNB: Another approach is to use find with certaing flags. Try to do in different ways, don\u0026rsquo;t stick to my solution.\nThe file \u0026ndash;file00 content is not readable, so get password from \u0026ndash;file07 and continue with bandit6.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit5/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eWhat means human-readable file?\u003c/li\u003e\n\u003cli\u003eIs there any way to check filetype at Linux?.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eChecking inhere\u0026rsquo;s contents shows some files names \u003cstrong\u003e\u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09\u003c/strong\u003e. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII \u003ca href=\"https://en.wikipedia.org/wiki/ASCII\"\u003ehere\u003c/a\u003e\u003c/p\u003e","title":"Bandit5"},{"content":"Level description The password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\nhuman-readable 1033 bytes in size not executable Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution The purpose of the level is showing us how to find for files. Listing contents of inhere, we can see some folders, containing a lot of files inside: NB: Adding -R to ls shows recursively the content of every folder inside the directory listed.\nSo this time, checking every file is not an option. We need to find a file with some properties, specific size, not excutable and human-readable. Let\u0026rsquo;s explain the command we\u0026rsquo;re using:\nfind inhere/ -size 1033c ! -executable First, we specify the directory, in this case inhere. The option -size 1033c returns files of 1033 bytes. Then, with -executable we would get executable files, but we want not executable files, that\u0026rsquo;s why we are adding ! before.\nNB: By default, the -size option takes as argument the number of blocks. For example, -size 2 means 2 blocks of 512 bytes, so its 1024. The c is used to specify exact bytes. Don\u0026rsquo;t ask me why it\u0026rsquo;s c and not b 😅.\nThe property of human-readability is not implemented in find. This is not an issue, previous command returns a single file and it is human readable (we could confirm using file): ","permalink":"http://localhost:1313/posts/otw/bandit/bandit6/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ehuman-readable\u003c/li\u003e\n\u003cli\u003e1033 bytes in size\u003c/li\u003e\n\u003cli\u003enot executable\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThe purpose of the level is showing us how to find for files. Listing contents of \u003cstrong\u003einhere\u003c/strong\u003e, we can see some folders, containing a lot of files inside:\n\u003cimg alt=\"bandit6_0\" loading=\"lazy\" src=\"/images/otw/bandit/bandit6/0.png\"\u003e\u003c/p\u003e","title":"Bandit6"},{"content":"👨‍💻 whoami Hey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\nWhat is this❓​ This blog is basically my thoughts on several hacking topics. Here you’ll see:\nWriteups from CTF challenges, from platforms like HackTheBox or OverTheWire.\nWalkthroughs and notes on pentesting techniques I’m learning or testing.\nSome posts on cryptography — because math can be fun (sometimes).\nRandom topics that freaks like me may (just may) find interesting.\nThe idea is simple: share what I learn, document my journey, and maybe help others who are also diving into the exciting world of ethical hacking.\n📫 Contact Want to say hi, share ideas, or just geek out about hacking? Reach me here:\n📧 Email: mrb0b1073@proton.me 💻​ GitHub: mrb0b173 🟩​ HackTheBox: mrb0b1073 ","permalink":"http://localhost:1313/about/","summary":"\u003ch2 id=\"-whoami\"\u003e👨‍💻 whoami\u003c/h2\u003e\n\u003cp\u003eHey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\u003c/p\u003e\n\u003chr\u003e\n\u003ch2 id=\"what-is-this\"\u003eWhat is this❓​\u003c/h2\u003e\n\u003cp\u003eThis blog is basically my thoughts on several hacking topics. Here you’ll see:\u003c/p\u003e","title":"About"},{"content":"Hey! 👋 I\u0026rsquo;m mrb0b1073 and this is my first post.\nWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\nExcited to start this adventure!\n","permalink":"http://localhost:1313/posts/hello-world/","summary":"\u003cp\u003eHey! 👋 I\u0026rsquo;m \u003cstrong\u003emrb0b1073\u003c/strong\u003e and this is my first post.\u003c/p\u003e\n\u003cp\u003eWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\u003cbr\u003e\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\u003c/p\u003e\n\u003cp\u003eExcited to start this adventure!\u003c/p\u003e","title":"Hello World"},{"content":"Introduction If you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\nIn cybersecurity there are broadly two complementary roles: Blue Team and Red Team. Blue Teams focus on defense, monitoring, incident response, hardening systems and keeping services secure, while Red Teams simulate attackers to find weaknesses and prove what an adversary could do. Ethical hacking aligns closely with Red Team operations, but cybersecurity is highly transversal across IT. There are many specialities or areas, such as cloud security, appsec, pentesting, forensics, governance, risk management, malware analysis, etc. Every topic could deserve its own post, so let\u0026rsquo;s keep it simple and focus on ethical hacking.\nHacker philosophy Let\u0026rsquo;s start with the idea of what is exactly a hacker. A hacker is someone who explores systems to understand how they work, finds creative ways to make or fix things, and solves technical problems. Historically the word describes curiosity, craft, and a drive to improve systems — not criminality. It is important to make the distinction between hacker and cracker, also called cybercriminal. A hacker explores, builds, discloses responsibly and works to improve security. They work in authorized environments or labs. On the other hand, a cracker breaks into systems for theft, vandalism or other illicit gain.\nHere you can find the most popularized ideas often summarized as the hacker ethic:\nCuriosity first: Learn by exploring and tinkering. Freedom of information: All knowledge should be shared to help progress. This fits properly with the idea of open source. Mistrust of needless authority: Centralized control sometimes blocks innovation. It is always good to question anything, specially common assumptions. Meritocracy: Skills, craft and results matter more than titles. Craftsmanship \u0026amp; elegance: Technical beauty matters. Build clean, clever and efficient solutions. Responsability \u0026amp; ethics: Use your skills to build, fix, educate and defend, not to harm. Core fundamentals Assuming you want to init yourself in hacking, you should first build competence across three basic pillars.\nOperating Systems You should learn as much as possible about Linux and Windows. Specially Linux, all the tools you will be using are meant to be used in a Linux environment. Skill with shell is required, learn basic commands and how to interact with the OS using the terminal. Research about processes, file permissions, package management and logs. A large proportion of web servers around the world run on Linux, although Windows is also widely used. Windows knowledge is really valuable too, considering active directory is strongly used in corporate environments.\nNetworking You have to understand how computers communicate each other. Understand basic networking concepts, IP adresses, subnetting, proxies, find out how internet works. Study some protocols such as TCP/IP, HTTP, DNS or SSH. This could sound confusing for beginners, but this step is not optional! Study different client/server models and how services expose attack surfaces.\nProgramming \u0026amp; scripting Is this completely required? Maybe not for complete beginners. Does it help? Absolutely yes. Understanding how web apps or any type of application works makes things much easier. You can imagine different entry points to exploit if you understand how systems are designed. Also writing scripts in bash or python makes you more productive through automation.\nEthical Hacking foundations Once you feel confident with these 3 pillars, you can go to the next step. You can study about different topics and areas. For example, binary exploiting, web pentesting, mobile pentesting, wireless hacking, etc. You should start picking a focus, in this post we focus on web pentesting, as it is beginner friendly. Also web applications are the bread and butter in companies nowadays.\nKey concepts to study:\nCIA Triad: CIA refers to Confidentiality, Integrity and Availability. These three concepts are key in information security, and describe properties we want to ensure in our systems and information. Web Security basics, OWASP: Study the OWASP Top 10, which summarizes most frequent web security risks. Authentication and session control: Understand the concepts of Authentication and Authorization, research about how session is handled in web apps, cookies, JWT tokens, etc. Input validation \u0026amp; injection attacks: Learn about SQL Injection, Cross-Site Scripting (XSS), Code Injection, SSTI, and every injection type. Secure development lifecycle: Find out how to implement security controls in code. This can be more related to Blue Team, but as Red Teamer it is important to understand. Firewall evasion: What a firewall is and some techniques/methods to bypass. Some cryptography: Understand what a chiper and a hash are, how information is encrypted to prevent access from 3rd parties. Focusing on web, read about TLS protocol. There are many more topics you can research and learn, but this could be a nice starting point.\nTools and platforms to learn Now you have an idea of what to study, let\u0026rsquo;s see how to start in practical terms.\nSome platforms I personally recommend:\nOverTheWire: Here you can find some CTFs (Capture The Flag) which are fun to play and also really instructive. Bandit games are a must for complete beginners, as you will explore some linux and bash concepts which are basic to continue. The games are leveled by difficulty, in their web you can get all the information about how to play, only a terminal and SSH is required. This helps building your foundation in Linux OS. HackTheBox: Nº 1 platform in cybersecurity. Has a lot of resources to learn all this core fundamentals, and also red team / blue team security topics. It is focused on labs where you can test your skills hacking different boxes but if you really want to learn it is worth to invest time and money in the academy. I have to say the level here is high, specially if you try to hack machines on your own without using some guide or writeup. TryHackMe: More beginner friendly than hackthebox, it provides a lot of guided learning resources. PortSwigger Labs: Practical labs about specific topics, focused on web hacking. They are great to learn and understand different types of attacks, injections, and security misconfigurations. I would recommend digging into this once you have the theoretical basis about these concepts. I have to mention a few tools I am sure you\u0026rsquo;d end up using:\nNmap: This is probably the most famous tool in hacking, allowing you to gather information about ports and services running in a machine. Burpsuite: A proxy tool widely used in web application security testing. It basically allows you to intercept and modify web requests, which can be used to perform several types of attacks. Metasploit: The most used pentesting framework. Contains a large amount of scripts and exploits ready to run. Another crucial step here is to set up your virtual lab environment to test vulnerable applications. To achieve this goal, there are some Linux distributions like Kali, Parrot or BlackArch, but that\u0026rsquo;s a topic for another post.\nFinal thoughs To sum up, this would be my personal roadmap:\nLearn the fundamentals, specially Linux and networking. Install some Linux in a virtual machine, play with it, get comfortable with the terminal. You can start with bandit wargames in OverTheWire. Complete every level and make sure to understand everything as clear as possible. Move to guided boxes on HackTheBox. I recommend you joining their Discord, ask questions, community is great there! Take notes, repeat, learn, improve your skills. Maybe use your own lab environment, create your own vulnerable apps. Hacking is a mixing of curiosity, study and practice. Being passionate and motivated about it is really helpful and will definitely speed up the process. The path is long and really challenging, so keep it going!\n\u0026ldquo;Yes, I am a criminal. My crime is that of curiosity.\u0026rdquo; — The Mentor (Loyd Blankenship) at The Hacker Manifesto\n","permalink":"http://localhost:1313/posts/starting-point/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIf you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\u003c/p\u003e","title":"Starting Point"},{"content":"Introduction In this post series we are going to solve every level from bandit in OverTheWire This guide pretends to be a writeup containing the solutions of the level, designed for beginners.\nTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing WSL, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\nEvery section will contain the solution as well as some tips for people who is absolutely beginner.\nTips First of all, some tips:\nDo not use this as first resource to solve the levels. Try on your own, make mistakes and learn from them. Only check the solution as last resource or if you are completely new and you have absolutely no idea about what to do next. Take notes from your learning. Write up commands, tips and everything which can be useful in the future. Make sure to understand everything. Is a good idea to note the passwords for every level. If you want to continue letter, you can simply log in in the desired level. It is annoying to repeat everything! Follow the tips and information provided at OverTheWire website. Levels Here is my solution for every level:\nBandit0 Bandit1 Bandit2 Bandit3 Bandit4 Bandit5 Bandit6 ","permalink":"http://localhost:1313/posts/otw/bandit/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIn this post series we are going to solve every level from bandit in \u003ca href=\"https://overthewire.org/wargames/bandit/\"\u003e\u003cem\u003eOverTheWire\u003c/em\u003e\u003c/a\u003e\nThis guide pretends to be a writeup containing the solutions of the level, designed for beginners.\u003c/p\u003e\n\u003cp\u003eTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing \u003ca href=\"https://learn.microsoft.com/en-us/windows/wsl/install\"\u003eWSL\u003c/a\u003e, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\u003c/p\u003e","title":"Bandit"},{"content":"Level description The goal of this level is for you to log into the game using SSH. The host to which you need to connect is bandit.labs.overthewire.org, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\nTips for beginners Read a bit about what SSH is. Research about what a port is. Solution This is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go here.\nAt Linux, we can use ssh client to connect to the server. It should be installed by default on your system. If not, please first research about how to install. Once you have the SSH client installed, you can log in into the first level as follows:\nssh bandit0@bandit.labs.overthewire.org -p 2220 Syntax is simple: ssh \u0026lt;username\u0026gt;@\u0026lt;hostname\u0026gt; -p \u0026lt;port\u0026gt;. Usually SSH runs on port 22 by default, but they changed to port 2220 so we must specify it in the command.\nOnce you try to log in, you will see something like this: NB: If it\u0026rsquo;s the first time you try to log in, you will be asked about the authenticity of the host. Just type yes.\nType the password bandit0 and press enter. Now you are inside bandit server, ready to begin with bandit1!\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit0/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe goal of this level is for you to log into the game using SSH. The host to which you need to connect is \u003cstrong\u003ebandit.labs.overthewire.org\u003c/strong\u003e, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eRead a bit about what SSH is.\u003c/li\u003e\n\u003cli\u003eResearch about what a port is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go \u003ca href=\"https://en.wikipedia.org/wiki/Secure_Shell\"\u003ehere\u003c/a\u003e.\u003c/p\u003e","title":"Bandit0"},{"content":"Level description The password for the next level is stored in a file called readme located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\nTips for beginners Learn about home directory in Linux. Learn to use cat and ls commands. Solution First step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\nls This shows in terminal the files at the current directory. There you will see the readme file.\nNow we can to check the contents, so let\u0026rsquo;s use cat:\ncat readme To read a file, we use cat \u0026lt;filename\u0026gt;.\nNB: Not every file is human readable in Linux. We deep more about this in later levels.\nThe content of the readme file reveals the password for bandit2 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit1/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u003cstrong\u003ereadme\u003c/strong\u003e located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn about home directory in Linux.\u003c/li\u003e\n\u003cli\u003eLearn to use \u003ccode\u003ecat\u003c/code\u003e and \u003ccode\u003els\u003c/code\u003e commands.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eFirst step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\u003c/p\u003e","title":"Bandit1"},{"content":"Level description The password for the next level is stored in a file called - located in the home directory\nTips for beginners Try to understand why previous solution is not working as you expect. Solution You may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our cat command: The terminal is waiting for something else. This happens due to character - is used to pass arguments to our commands, and the linux shell is interpreting that. To prevent that, we could use:\ncat ./- NB: Dot . is used to refer current directory. The slash / is used at the end of directory name.\nWe get the password for bandit3 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit2/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called - located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eTry to understand why previous solution is not working as you expect.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eYou may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our \u003ccode\u003ecat\u003c/code\u003e command:\n\u003cimg alt=\"bandit2\" loading=\"lazy\" src=\"/images/otw/bandit/bandit2/0.png\"\u003e\u003c/p\u003e\n\u003cp\u003eThe terminal is \u003cem\u003ewaiting\u003c/em\u003e for something else. This happens due to character \u003ccode\u003e-\u003c/code\u003e is used to pass arguments to our commands, and the linux shell is interpreting that.\nTo prevent that, we could use:\u003c/p\u003e","title":"Bandit2"},{"content":"Level description The password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\nTips for beginners Think about how to escape the whitespaces. Solution After login in the machine as bandit3, we can see the filename \u0026ndash;spaces in this filename\u0026ndash;.\nNow we have 2 problems:\nSame as previous level, filename starts with --, so it will be interpreted as an argument. Address this problem using ./. Filename contains whitespaces. This is an issue, as bash interpretes whitespaces to separate commands. To solve the second problem, we must escape the whitespace character in some way. Here is the solution:\ncat ./--spaces\\ in\\ this\\ filename-- NB: Little trick, you can start writting filename and press Tab to autocomplete the name. The \\ is going to be inserted automatically.\nJust using the \\ we can escape the whitespace.\nNow we can continue with the bandit4 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit3/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eThink about how to \u003cem\u003eescape\u003c/em\u003e the whitespaces.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAfter login in the machine as bandit3, we can see the filename \u003cem\u003e\u0026ndash;spaces in this filename\u0026ndash;\u003c/em\u003e.\u003c/p\u003e\n\u003cp\u003eNow we have 2 problems:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eSame as previous level, filename starts with \u003ccode\u003e--\u003c/code\u003e, so it will be interpreted as an argument. Address this problem using \u003ccode\u003e./\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003eFilename contains \u003cstrong\u003ewhitespaces\u003c/strong\u003e. This is an issue, as bash interpretes whitespaces to separate commands.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eTo solve the second problem, we must escape the whitespace character in some way. Here is the solution:\u003c/p\u003e","title":"Bandit3"},{"content":"Level description The password for the next level is stored in a hidden file in the inhere directory.\nTips for beginners Learn how to navigate directories in Linux. First understand what a hidden file is. Solution Listing directory files inside bandit4\u0026rsquo;s home directory, show directory inhere.\nNB: How to distinguish files and directories in Linux? Use ls -l and see the difference.\nWe have 2 options now:\nMove to inhere directory and check contens again. Check contents directly. Moving to another directory can be done using cd \u0026lt;dirName\u0026gt;. If you prefer to check directory contents directly, use ls \u0026lt;dirName\u0026gt;.\nAfter checking inhere contents via ls, we see nothing. The reason is the file is a hidden file. A hidden file in Linux is everyfile whose name starts with dot .. Hidden files are not shown by default with ls command, so we must add a special flag -a to list all files: NB: Both flags -l and -a cna be combined into a single flag -al, which is shorter to type.\nAs you can see, filename is \u0026hellip;Hidding-From-You starting with three dots. Reading file contents should be easy at this point!\nNext level is bandit5.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit4/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a hidden file in the inhere directory.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to navigate directories in Linux.\u003c/li\u003e\n\u003cli\u003eFirst understand what a hidden file is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eListing directory files inside bandit4\u0026rsquo;s home directory, show directory \u003cstrong\u003einhere\u003c/strong\u003e.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e How to distinguish files and directories in Linux? Use \u003ccode\u003els -l\u003c/code\u003e and see the difference.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eWe have 2 options now:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eMove to inhere directory and check contens again.\u003c/li\u003e\n\u003cli\u003eCheck contents directly.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eMoving to another directory can be done using \u003ccode\u003ecd \u0026lt;dirName\u0026gt;\u003c/code\u003e. If you prefer to check directory contents directly, use \u003ccode\u003els \u0026lt;dirName\u0026gt;\u003c/code\u003e.\u003c/p\u003e","title":"Bandit4"},{"content":"Level description The password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\nTips for beginners What means human-readable file? Is there any way to check filetype at Linux?. Solution Checking inhere\u0026rsquo;s contents shows some files names \u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII here\nSo now, our goal is checking if file content of every file in the folder is ASCII or not. file \u0026lt;filename\u0026gt; does the job. Note the use of *. That called a wildcard regular expression, we\u0026rsquo;ll deep into it in later levels. An easy approach could be checking every file separately:\nfile ./--file00 file ./--file01 ... file ./--file09 But that\u0026rsquo;s not funny, imagine we have 100 files to check. All the files are in the same directory, so we can use cat ./* where ./* matches every filename in the directory, applying file to every file.\nNB: Another approach is to use find with certaing flags. Try to do in different ways, don\u0026rsquo;t stick to my solution.\nThe file \u0026ndash;file00 content is not readable, so get password from \u0026ndash;file07 and continue with bandit6.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit5/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eWhat means human-readable file?\u003c/li\u003e\n\u003cli\u003eIs there any way to check filetype at Linux?.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eChecking inhere\u0026rsquo;s contents shows some files names \u003cstrong\u003e\u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09\u003c/strong\u003e. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII \u003ca href=\"https://en.wikipedia.org/wiki/ASCII\"\u003ehere\u003c/a\u003e\u003c/p\u003e","title":"Bandit5"},{"content":"Level description The password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\nhuman-readable 1033 bytes in size not executable Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution The purpose of the level is showing us how to find for files. Listing contents of inhere, we can see some folders, containing a lot of files inside: NB: Adding -R to ls shows recursively the content of every folder inside the directory listed.\nSo this time, checking every file is not an option. We need to find a file with some properties, specific size, not excutable and human-readable. Let\u0026rsquo;s explain the command we\u0026rsquo;re using:\nfind inhere/ -size 1033c ! -executable First, we specify the directory, in this case inhere. The option -size 1033c returns files of 1033 bytes. Then, with -executable we would get executable files, but we want not executable files, that\u0026rsquo;s why we are adding ! before.\nNB: By default, the -size option takes as argument the number of blocks. For example, -size 2 means 2 blocks of 512 bytes, so its 1024. The c is used to specify exact bytes. Don\u0026rsquo;t ask me why it\u0026rsquo;s c and not b 😅.\nThe property of human-readability is not implemented in find. This is not an issue, previous command returns a single file and it is human readable (we could confirm using file): ","permalink":"http://localhost:1313/posts/otw/bandit/bandit6/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ehuman-readable\u003c/li\u003e\n\u003cli\u003e1033 bytes in size\u003c/li\u003e\n\u003cli\u003enot executable\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThe purpose of the level is showing us how to find for files. Listing contents of \u003cstrong\u003einhere\u003c/strong\u003e, we can see some folders, containing a lot of files inside:\n\u003cimg alt=\"bandit6_0\" loading=\"lazy\" src=\"/images/otw/bandit/bandit6/0.png\"\u003e\u003c/p\u003e","title":"Bandit6"},{"content":"👨‍💻 whoami Hey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\nWhat is this❓​ This blog is basically my thoughts on several hacking topics. Here you’ll see:\nWriteups from CTF challenges, from platforms like HackTheBox or OverTheWire.\nWalkthroughs and notes on pentesting techniques I’m learning or testing.\nSome posts on cryptography — because math can be fun (sometimes).\nRandom topics that freaks like me may (just may) find interesting.\nThe idea is simple: share what I learn, document my journey, and maybe help others who are also diving into the exciting world of ethical hacking.\n📫 Contact Want to say hi, share ideas, or just geek out about hacking? Reach me here:\n📧 Email: mrb0b1073@proton.me 💻​ GitHub: mrb0b173 🟩​ HackTheBox: mrb0b1073 ","permalink":"http://localhost:1313/about/","summary":"\u003ch2 id=\"-whoami\"\u003e👨‍💻 whoami\u003c/h2\u003e\n\u003cp\u003eHey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\u003c/p\u003e\n\u003chr\u003e\n\u003ch2 id=\"what-is-this\"\u003eWhat is this❓​\u003c/h2\u003e\n\u003cp\u003eThis blog is basically my thoughts on several hacking topics. Here you’ll see:\u003c/p\u003e","title":"About"},{"content":"Hey! 👋 I\u0026rsquo;m mrb0b1073 and this is my first post.\nWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\nExcited to start this adventure!\n","permalink":"http://localhost:1313/posts/hello-world/","summary":"\u003cp\u003eHey! 👋 I\u0026rsquo;m \u003cstrong\u003emrb0b1073\u003c/strong\u003e and this is my first post.\u003c/p\u003e\n\u003cp\u003eWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\u003cbr\u003e\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\u003c/p\u003e\n\u003cp\u003eExcited to start this adventure!\u003c/p\u003e","title":"Hello World"},{"content":"Introduction If you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\nIn cybersecurity there are broadly two complementary roles: Blue Team and Red Team. Blue Teams focus on defense, monitoring, incident response, hardening systems and keeping services secure, while Red Teams simulate attackers to find weaknesses and prove what an adversary could do. Ethical hacking aligns closely with Red Team operations, but cybersecurity is highly transversal across IT. There are many specialities or areas, such as cloud security, appsec, pentesting, forensics, governance, risk management, malware analysis, etc. Every topic could deserve its own post, so let\u0026rsquo;s keep it simple and focus on ethical hacking.\nHacker philosophy Let\u0026rsquo;s start with the idea of what is exactly a hacker. A hacker is someone who explores systems to understand how they work, finds creative ways to make or fix things, and solves technical problems. Historically the word describes curiosity, craft, and a drive to improve systems — not criminality. It is important to make the distinction between hacker and cracker, also called cybercriminal. A hacker explores, builds, discloses responsibly and works to improve security. They work in authorized environments or labs. On the other hand, a cracker breaks into systems for theft, vandalism or other illicit gain.\nHere you can find the most popularized ideas often summarized as the hacker ethic:\nCuriosity first: Learn by exploring and tinkering. Freedom of information: All knowledge should be shared to help progress. This fits properly with the idea of open source. Mistrust of needless authority: Centralized control sometimes blocks innovation. It is always good to question anything, specially common assumptions. Meritocracy: Skills, craft and results matter more than titles. Craftsmanship \u0026amp; elegance: Technical beauty matters. Build clean, clever and efficient solutions. Responsability \u0026amp; ethics: Use your skills to build, fix, educate and defend, not to harm. Core fundamentals Assuming you want to init yourself in hacking, you should first build competence across three basic pillars.\nOperating Systems You should learn as much as possible about Linux and Windows. Specially Linux, all the tools you will be using are meant to be used in a Linux environment. Skill with shell is required, learn basic commands and how to interact with the OS using the terminal. Research about processes, file permissions, package management and logs. A large proportion of web servers around the world run on Linux, although Windows is also widely used. Windows knowledge is really valuable too, considering active directory is strongly used in corporate environments.\nNetworking You have to understand how computers communicate each other. Understand basic networking concepts, IP adresses, subnetting, proxies, find out how internet works. Study some protocols such as TCP/IP, HTTP, DNS or SSH. This could sound confusing for beginners, but this step is not optional! Study different client/server models and how services expose attack surfaces.\nProgramming \u0026amp; scripting Is this completely required? Maybe not for complete beginners. Does it help? Absolutely yes. Understanding how web apps or any type of application works makes things much easier. You can imagine different entry points to exploit if you understand how systems are designed. Also writing scripts in bash or python makes you more productive through automation.\nEthical Hacking foundations Once you feel confident with these 3 pillars, you can go to the next step. You can study about different topics and areas. For example, binary exploiting, web pentesting, mobile pentesting, wireless hacking, etc. You should start picking a focus, in this post we focus on web pentesting, as it is beginner friendly. Also web applications are the bread and butter in companies nowadays.\nKey concepts to study:\nCIA Triad: CIA refers to Confidentiality, Integrity and Availability. These three concepts are key in information security, and describe properties we want to ensure in our systems and information. Web Security basics, OWASP: Study the OWASP Top 10, which summarizes most frequent web security risks. Authentication and session control: Understand the concepts of Authentication and Authorization, research about how session is handled in web apps, cookies, JWT tokens, etc. Input validation \u0026amp; injection attacks: Learn about SQL Injection, Cross-Site Scripting (XSS), Code Injection, SSTI, and every injection type. Secure development lifecycle: Find out how to implement security controls in code. This can be more related to Blue Team, but as Red Teamer it is important to understand. Firewall evasion: What a firewall is and some techniques/methods to bypass. Some cryptography: Understand what a chiper and a hash are, how information is encrypted to prevent access from 3rd parties. Focusing on web, read about TLS protocol. There are many more topics you can research and learn, but this could be a nice starting point.\nTools and platforms to learn Now you have an idea of what to study, let\u0026rsquo;s see how to start in practical terms.\nSome platforms I personally recommend:\nOverTheWire: Here you can find some CTFs (Capture The Flag) which are fun to play and also really instructive. Bandit games are a must for complete beginners, as you will explore some linux and bash concepts which are basic to continue. The games are leveled by difficulty, in their web you can get all the information about how to play, only a terminal and SSH is required. This helps building your foundation in Linux OS. HackTheBox: Nº 1 platform in cybersecurity. Has a lot of resources to learn all this core fundamentals, and also red team / blue team security topics. It is focused on labs where you can test your skills hacking different boxes but if you really want to learn it is worth to invest time and money in the academy. I have to say the level here is high, specially if you try to hack machines on your own without using some guide or writeup. TryHackMe: More beginner friendly than hackthebox, it provides a lot of guided learning resources. PortSwigger Labs: Practical labs about specific topics, focused on web hacking. They are great to learn and understand different types of attacks, injections, and security misconfigurations. I would recommend digging into this once you have the theoretical basis about these concepts. I have to mention a few tools I am sure you\u0026rsquo;d end up using:\nNmap: This is probably the most famous tool in hacking, allowing you to gather information about ports and services running in a machine. Burpsuite: A proxy tool widely used in web application security testing. It basically allows you to intercept and modify web requests, which can be used to perform several types of attacks. Metasploit: The most used pentesting framework. Contains a large amount of scripts and exploits ready to run. Another crucial step here is to set up your virtual lab environment to test vulnerable applications. To achieve this goal, there are some Linux distributions like Kali, Parrot or BlackArch, but that\u0026rsquo;s a topic for another post.\nFinal thoughs To sum up, this would be my personal roadmap:\nLearn the fundamentals, specially Linux and networking. Install some Linux in a virtual machine, play with it, get comfortable with the terminal. You can start with bandit wargames in OverTheWire. Complete every level and make sure to understand everything as clear as possible. Move to guided boxes on HackTheBox. I recommend you joining their Discord, ask questions, community is great there! Take notes, repeat, learn, improve your skills. Maybe use your own lab environment, create your own vulnerable apps. Hacking is a mixing of curiosity, study and practice. Being passionate and motivated about it is really helpful and will definitely speed up the process. The path is long and really challenging, so keep it going!\n\u0026ldquo;Yes, I am a criminal. My crime is that of curiosity.\u0026rdquo; — The Mentor (Loyd Blankenship) at The Hacker Manifesto\n","permalink":"http://localhost:1313/posts/starting-point/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIf you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\u003c/p\u003e","title":"Starting Point"},{"content":"Introduction In this post series we are going to solve every level from bandit in OverTheWire This guide pretends to be a writeup containing the solutions of the level, designed for beginners.\nTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing WSL, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\nEvery section will contain the solution as well as some tips for people who is absolutely beginner.\nTips First of all, some tips:\nDo not use this as first resource to solve the levels. Try on your own, make mistakes and learn from them. Only check the solution as last resource or if you are completely new and you have absolutely no idea about what to do next. Take notes from your learning. Write up commands, tips and everything which can be useful in the future. Make sure to understand everything. Is a good idea to note the passwords for every level. If you want to continue letter, you can simply log in in the desired level. It is annoying to repeat everything! Follow the tips and information provided at OverTheWire website. Levels Here is my solution for every level:\nBandit0 Bandit1 Bandit2 Bandit3 Bandit4 Bandit5 Bandit6 ","permalink":"http://localhost:1313/posts/otw/bandit/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIn this post series we are going to solve every level from bandit in \u003ca href=\"https://overthewire.org/wargames/bandit/\"\u003e\u003cem\u003eOverTheWire\u003c/em\u003e\u003c/a\u003e\nThis guide pretends to be a writeup containing the solutions of the level, designed for beginners.\u003c/p\u003e\n\u003cp\u003eTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing \u003ca href=\"https://learn.microsoft.com/en-us/windows/wsl/install\"\u003eWSL\u003c/a\u003e, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\u003c/p\u003e","title":"Bandit"},{"content":"Level description The goal of this level is for you to log into the game using SSH. The host to which you need to connect is bandit.labs.overthewire.org, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\nTips for beginners Read a bit about what SSH is. Research about what a port is. Solution This is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go here.\nAt Linux, we can use ssh client to connect to the server. It should be installed by default on your system. If not, please first research about how to install. Once you have the SSH client installed, you can log in into the first level as follows:\nssh bandit0@bandit.labs.overthewire.org -p 2220 Syntax is simple: ssh \u0026lt;username\u0026gt;@\u0026lt;hostname\u0026gt; -p \u0026lt;port\u0026gt;. Usually SSH runs on port 22 by default, but they changed to port 2220 so we must specify it in the command.\nOnce you try to log in, you will see something like this: NB: If it\u0026rsquo;s the first time you try to log in, you will be asked about the authenticity of the host. Just type yes.\nType the password bandit0 and press enter. Now you are inside bandit server, ready to begin with bandit1!\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit0/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe goal of this level is for you to log into the game using SSH. The host to which you need to connect is \u003cstrong\u003ebandit.labs.overthewire.org\u003c/strong\u003e, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eRead a bit about what SSH is.\u003c/li\u003e\n\u003cli\u003eResearch about what a port is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go \u003ca href=\"https://en.wikipedia.org/wiki/Secure_Shell\"\u003ehere\u003c/a\u003e.\u003c/p\u003e","title":"Bandit0"},{"content":"Level description The password for the next level is stored in a file called readme located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\nTips for beginners Learn about home directory in Linux. Learn to use cat and ls commands. Solution First step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\nls This shows in terminal the files at the current directory. There you will see the readme file.\nNow we can to check the contents, so let\u0026rsquo;s use cat:\ncat readme To read a file, we use cat \u0026lt;filename\u0026gt;.\nNB: Not every file is human readable in Linux. We deep more about this in later levels.\nThe content of the readme file reveals the password for bandit2 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit1/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u003cstrong\u003ereadme\u003c/strong\u003e located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn about home directory in Linux.\u003c/li\u003e\n\u003cli\u003eLearn to use \u003ccode\u003ecat\u003c/code\u003e and \u003ccode\u003els\u003c/code\u003e commands.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eFirst step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\u003c/p\u003e","title":"Bandit1"},{"content":"Level description The password for the next level is stored in a file called - located in the home directory\nTips for beginners Try to understand why previous solution is not working as you expect. Solution You may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our cat command: The terminal is waiting for something else. This happens due to character - is used to pass arguments to our commands, and the linux shell is interpreting that. To prevent that, we could use:\ncat ./- NB: Dot . is used to refer current directory. The slash / is used at the end of directory name.\nWe get the password for bandit3 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit2/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called - located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eTry to understand why previous solution is not working as you expect.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eYou may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our \u003ccode\u003ecat\u003c/code\u003e command:\n\u003cimg alt=\"bandit2\" loading=\"lazy\" src=\"/images/otw/bandit/bandit2/0.png\"\u003e\u003c/p\u003e\n\u003cp\u003eThe terminal is \u003cem\u003ewaiting\u003c/em\u003e for something else. This happens due to character \u003ccode\u003e-\u003c/code\u003e is used to pass arguments to our commands, and the linux shell is interpreting that.\nTo prevent that, we could use:\u003c/p\u003e","title":"Bandit2"},{"content":"Level description The password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\nTips for beginners Think about how to escape the whitespaces. Solution After login in the machine as bandit3, we can see the filename \u0026ndash;spaces in this filename\u0026ndash;.\nNow we have 2 problems:\nSame as previous level, filename starts with --, so it will be interpreted as an argument. Address this problem using ./. Filename contains whitespaces. This is an issue, as bash interpretes whitespaces to separate commands. To solve the second problem, we must escape the whitespace character in some way. Here is the solution:\ncat ./--spaces\\ in\\ this\\ filename-- NB: Little trick, you can start writting filename and press Tab to autocomplete the name. The \\ is going to be inserted automatically.\nJust using the \\ we can escape the whitespace.\nNow we can continue with the bandit4 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit3/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eThink about how to \u003cem\u003eescape\u003c/em\u003e the whitespaces.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAfter login in the machine as bandit3, we can see the filename \u003cem\u003e\u0026ndash;spaces in this filename\u0026ndash;\u003c/em\u003e.\u003c/p\u003e\n\u003cp\u003eNow we have 2 problems:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eSame as previous level, filename starts with \u003ccode\u003e--\u003c/code\u003e, so it will be interpreted as an argument. Address this problem using \u003ccode\u003e./\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003eFilename contains \u003cstrong\u003ewhitespaces\u003c/strong\u003e. This is an issue, as bash interpretes whitespaces to separate commands.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eTo solve the second problem, we must escape the whitespace character in some way. Here is the solution:\u003c/p\u003e","title":"Bandit3"},{"content":"Level description The password for the next level is stored in a hidden file in the inhere directory.\nTips for beginners Learn how to navigate directories in Linux. First understand what a hidden file is. Solution Listing directory files inside bandit4\u0026rsquo;s home directory, show directory inhere.\nNB: How to distinguish files and directories in Linux? Use ls -l and see the difference.\nWe have 2 options now:\nMove to inhere directory and check contens again. Check contents directly. Moving to another directory can be done using cd \u0026lt;dirName\u0026gt;. If you prefer to check directory contents directly, use ls \u0026lt;dirName\u0026gt;.\nAfter checking inhere contents via ls, we see nothing. The reason is the file is a hidden file. A hidden file in Linux is everyfile whose name starts with dot .. Hidden files are not shown by default with ls command, so we must add a special flag -a to list all files: NB: Both flags -l and -a cna be combined into a single flag -al, which is shorter to type.\nAs you can see, filename is \u0026hellip;Hidding-From-You starting with three dots. Reading file contents should be easy at this point!\nNext level is bandit5.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit4/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a hidden file in the inhere directory.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to navigate directories in Linux.\u003c/li\u003e\n\u003cli\u003eFirst understand what a hidden file is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eListing directory files inside bandit4\u0026rsquo;s home directory, show directory \u003cstrong\u003einhere\u003c/strong\u003e.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e How to distinguish files and directories in Linux? Use \u003ccode\u003els -l\u003c/code\u003e and see the difference.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eWe have 2 options now:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eMove to inhere directory and check contens again.\u003c/li\u003e\n\u003cli\u003eCheck contents directly.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eMoving to another directory can be done using \u003ccode\u003ecd \u0026lt;dirName\u0026gt;\u003c/code\u003e. If you prefer to check directory contents directly, use \u003ccode\u003els \u0026lt;dirName\u0026gt;\u003c/code\u003e.\u003c/p\u003e","title":"Bandit4"},{"content":"Level description The password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\nTips for beginners What means human-readable file? Is there any way to check filetype at Linux?. Solution Checking inhere\u0026rsquo;s contents shows some files names \u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII here\nSo now, our goal is checking if file content of every file in the folder is ASCII or not. file \u0026lt;filename\u0026gt; does the job. Note the use of *. That called a wildcard regular expression, we\u0026rsquo;ll deep into it in later levels. An easy approach could be checking every file separately:\nfile ./--file00 file ./--file01 ... file ./--file09 But that\u0026rsquo;s not funny, imagine we have 100 files to check. All the files are in the same directory, so we can use cat ./* where ./* matches every filename in the directory, applying file to every file.\nNB: Another approach is to use find with certaing flags. Try to do in different ways, don\u0026rsquo;t stick to my solution.\nThe file \u0026ndash;file00 content is not readable, so get password from \u0026ndash;file07 and continue with bandit6.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit5/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eWhat means human-readable file?\u003c/li\u003e\n\u003cli\u003eIs there any way to check filetype at Linux?.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eChecking inhere\u0026rsquo;s contents shows some files names \u003cstrong\u003e\u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09\u003c/strong\u003e. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII \u003ca href=\"https://en.wikipedia.org/wiki/ASCII\"\u003ehere\u003c/a\u003e\u003c/p\u003e","title":"Bandit5"},{"content":"Level description The password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\nhuman-readable 1033 bytes in size not executable Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution The purpose of the level is showing us how to find for files. Listing contents of inhere, we can see some folders, containing a lot of files inside: NB: Adding -R to ls shows recursively the content of every folder inside the directory listed.\nSo this time, checking every file is not an option. We need to find a file with some properties, specific size, not excutable and human-readable. Let\u0026rsquo;s explain the command we\u0026rsquo;re using:\nfind inhere/ -size 1033c ! -executable First, we specify the directory, in this case inhere. The option -size 1033c returns files of 1033 bytes. Then, with -executable we would get executable files, but we want not executable files, that\u0026rsquo;s why we are adding ! before.\nNB: By default, the -size option takes as argument the number of blocks. For example, -size 2 means 2 blocks of 512 bytes, so its 1024. The c is used to specify exact bytes. Don\u0026rsquo;t ask me why it\u0026rsquo;s c and not b 😅.\nThe property of human-readability is not implemented in find. This is not an issue, previous command returns a single file and it is human readable (we could confirm using file): ","permalink":"http://localhost:1313/posts/otw/bandit/bandit6/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ehuman-readable\u003c/li\u003e\n\u003cli\u003e1033 bytes in size\u003c/li\u003e\n\u003cli\u003enot executable\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThe purpose of the level is showing us how to find for files. Listing contents of \u003cstrong\u003einhere\u003c/strong\u003e, we can see some folders, containing a lot of files inside:\n\u003cimg alt=\"bandit6_0\" loading=\"lazy\" src=\"/images/otw/bandit/bandit6/0.png\"\u003e\u003c/p\u003e","title":"Bandit6"},{"content":"👨‍💻 whoami Hey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\nWhat is this❓​ This blog is basically my thoughts on several hacking topics. Here you’ll see:\nWriteups from CTF challenges, from platforms like HackTheBox or OverTheWire.\nWalkthroughs and notes on pentesting techniques I’m learning or testing.\nSome posts on cryptography — because math can be fun (sometimes).\nRandom topics that freaks like me may (just may) find interesting.\nThe idea is simple: share what I learn, document my journey, and maybe help others who are also diving into the exciting world of ethical hacking.\n📫 Contact Want to say hi, share ideas, or just geek out about hacking? Reach me here:\n📧 Email: mrb0b1073@proton.me 💻​ GitHub: mrb0b173 🟩​ HackTheBox: mrb0b1073 ","permalink":"http://localhost:1313/about/","summary":"\u003ch2 id=\"-whoami\"\u003e👨‍💻 whoami\u003c/h2\u003e\n\u003cp\u003eHey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\u003c/p\u003e\n\u003chr\u003e\n\u003ch2 id=\"what-is-this\"\u003eWhat is this❓​\u003c/h2\u003e\n\u003cp\u003eThis blog is basically my thoughts on several hacking topics. Here you’ll see:\u003c/p\u003e","title":"About"},{"content":"Hey! 👋 I\u0026rsquo;m mrb0b1073 and this is my first post.\nWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\nExcited to start this adventure!\n","permalink":"http://localhost:1313/posts/hello-world/","summary":"\u003cp\u003eHey! 👋 I\u0026rsquo;m \u003cstrong\u003emrb0b1073\u003c/strong\u003e and this is my first post.\u003c/p\u003e\n\u003cp\u003eWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\u003cbr\u003e\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\u003c/p\u003e\n\u003cp\u003eExcited to start this adventure!\u003c/p\u003e","title":"Hello World"},{"content":"Introduction If you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\nIn cybersecurity there are broadly two complementary roles: Blue Team and Red Team. Blue Teams focus on defense, monitoring, incident response, hardening systems and keeping services secure, while Red Teams simulate attackers to find weaknesses and prove what an adversary could do. Ethical hacking aligns closely with Red Team operations, but cybersecurity is highly transversal across IT. There are many specialities or areas, such as cloud security, appsec, pentesting, forensics, governance, risk management, malware analysis, etc. Every topic could deserve its own post, so let\u0026rsquo;s keep it simple and focus on ethical hacking.\nHacker philosophy Let\u0026rsquo;s start with the idea of what is exactly a hacker. A hacker is someone who explores systems to understand how they work, finds creative ways to make or fix things, and solves technical problems. Historically the word describes curiosity, craft, and a drive to improve systems — not criminality. It is important to make the distinction between hacker and cracker, also called cybercriminal. A hacker explores, builds, discloses responsibly and works to improve security. They work in authorized environments or labs. On the other hand, a cracker breaks into systems for theft, vandalism or other illicit gain.\nHere you can find the most popularized ideas often summarized as the hacker ethic:\nCuriosity first: Learn by exploring and tinkering. Freedom of information: All knowledge should be shared to help progress. This fits properly with the idea of open source. Mistrust of needless authority: Centralized control sometimes blocks innovation. It is always good to question anything, specially common assumptions. Meritocracy: Skills, craft and results matter more than titles. Craftsmanship \u0026amp; elegance: Technical beauty matters. Build clean, clever and efficient solutions. Responsability \u0026amp; ethics: Use your skills to build, fix, educate and defend, not to harm. Core fundamentals Assuming you want to init yourself in hacking, you should first build competence across three basic pillars.\nOperating Systems You should learn as much as possible about Linux and Windows. Specially Linux, all the tools you will be using are meant to be used in a Linux environment. Skill with shell is required, learn basic commands and how to interact with the OS using the terminal. Research about processes, file permissions, package management and logs. A large proportion of web servers around the world run on Linux, although Windows is also widely used. Windows knowledge is really valuable too, considering active directory is strongly used in corporate environments.\nNetworking You have to understand how computers communicate each other. Understand basic networking concepts, IP adresses, subnetting, proxies, find out how internet works. Study some protocols such as TCP/IP, HTTP, DNS or SSH. This could sound confusing for beginners, but this step is not optional! Study different client/server models and how services expose attack surfaces.\nProgramming \u0026amp; scripting Is this completely required? Maybe not for complete beginners. Does it help? Absolutely yes. Understanding how web apps or any type of application works makes things much easier. You can imagine different entry points to exploit if you understand how systems are designed. Also writing scripts in bash or python makes you more productive through automation.\nEthical Hacking foundations Once you feel confident with these 3 pillars, you can go to the next step. You can study about different topics and areas. For example, binary exploiting, web pentesting, mobile pentesting, wireless hacking, etc. You should start picking a focus, in this post we focus on web pentesting, as it is beginner friendly. Also web applications are the bread and butter in companies nowadays.\nKey concepts to study:\nCIA Triad: CIA refers to Confidentiality, Integrity and Availability. These three concepts are key in information security, and describe properties we want to ensure in our systems and information. Web Security basics, OWASP: Study the OWASP Top 10, which summarizes most frequent web security risks. Authentication and session control: Understand the concepts of Authentication and Authorization, research about how session is handled in web apps, cookies, JWT tokens, etc. Input validation \u0026amp; injection attacks: Learn about SQL Injection, Cross-Site Scripting (XSS), Code Injection, SSTI, and every injection type. Secure development lifecycle: Find out how to implement security controls in code. This can be more related to Blue Team, but as Red Teamer it is important to understand. Firewall evasion: What a firewall is and some techniques/methods to bypass. Some cryptography: Understand what a chiper and a hash are, how information is encrypted to prevent access from 3rd parties. Focusing on web, read about TLS protocol. There are many more topics you can research and learn, but this could be a nice starting point.\nTools and platforms to learn Now you have an idea of what to study, let\u0026rsquo;s see how to start in practical terms.\nSome platforms I personally recommend:\nOverTheWire: Here you can find some CTFs (Capture The Flag) which are fun to play and also really instructive. Bandit games are a must for complete beginners, as you will explore some linux and bash concepts which are basic to continue. The games are leveled by difficulty, in their web you can get all the information about how to play, only a terminal and SSH is required. This helps building your foundation in Linux OS. HackTheBox: Nº 1 platform in cybersecurity. Has a lot of resources to learn all this core fundamentals, and also red team / blue team security topics. It is focused on labs where you can test your skills hacking different boxes but if you really want to learn it is worth to invest time and money in the academy. I have to say the level here is high, specially if you try to hack machines on your own without using some guide or writeup. TryHackMe: More beginner friendly than hackthebox, it provides a lot of guided learning resources. PortSwigger Labs: Practical labs about specific topics, focused on web hacking. They are great to learn and understand different types of attacks, injections, and security misconfigurations. I would recommend digging into this once you have the theoretical basis about these concepts. I have to mention a few tools I am sure you\u0026rsquo;d end up using:\nNmap: This is probably the most famous tool in hacking, allowing you to gather information about ports and services running in a machine. Burpsuite: A proxy tool widely used in web application security testing. It basically allows you to intercept and modify web requests, which can be used to perform several types of attacks. Metasploit: The most used pentesting framework. Contains a large amount of scripts and exploits ready to run. Another crucial step here is to set up your virtual lab environment to test vulnerable applications. To achieve this goal, there are some Linux distributions like Kali, Parrot or BlackArch, but that\u0026rsquo;s a topic for another post.\nFinal thoughs To sum up, this would be my personal roadmap:\nLearn the fundamentals, specially Linux and networking. Install some Linux in a virtual machine, play with it, get comfortable with the terminal. You can start with bandit wargames in OverTheWire. Complete every level and make sure to understand everything as clear as possible. Move to guided boxes on HackTheBox. I recommend you joining their Discord, ask questions, community is great there! Take notes, repeat, learn, improve your skills. Maybe use your own lab environment, create your own vulnerable apps. Hacking is a mixing of curiosity, study and practice. Being passionate and motivated about it is really helpful and will definitely speed up the process. The path is long and really challenging, so keep it going!\n\u0026ldquo;Yes, I am a criminal. My crime is that of curiosity.\u0026rdquo; — The Mentor (Loyd Blankenship) at The Hacker Manifesto\n","permalink":"http://localhost:1313/posts/starting-point/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIf you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\u003c/p\u003e","title":"Starting Point"},{"content":"Introduction In this post series we are going to solve every level from bandit in OverTheWire This guide pretends to be a writeup containing the solutions of the level, designed for beginners.\nTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing WSL, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\nEvery section will contain the solution as well as some tips for people who is absolutely beginner.\nTips First of all, some tips:\nDo not use this as first resource to solve the levels. Try on your own, make mistakes and learn from them. Only check the solution as last resource or if you are completely new and you have absolutely no idea about what to do next. Take notes from your learning. Write up commands, tips and everything which can be useful in the future. Make sure to understand everything. Is a good idea to note the passwords for every level. If you want to continue letter, you can simply log in in the desired level. It is annoying to repeat everything! Follow the tips and information provided at OverTheWire website. Levels Here is my solution for every level:\nBandit0 Bandit1 Bandit2 Bandit3 Bandit4 Bandit5 Bandit6 ","permalink":"http://localhost:1313/posts/otw/bandit/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIn this post series we are going to solve every level from bandit in \u003ca href=\"https://overthewire.org/wargames/bandit/\"\u003e\u003cem\u003eOverTheWire\u003c/em\u003e\u003c/a\u003e\nThis guide pretends to be a writeup containing the solutions of the level, designed for beginners.\u003c/p\u003e\n\u003cp\u003eTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing \u003ca href=\"https://learn.microsoft.com/en-us/windows/wsl/install\"\u003eWSL\u003c/a\u003e, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\u003c/p\u003e","title":"Bandit"},{"content":"Level description The goal of this level is for you to log into the game using SSH. The host to which you need to connect is bandit.labs.overthewire.org, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\nTips for beginners Read a bit about what SSH is. Research about what a port is. Solution This is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go here.\nAt Linux, we can use ssh client to connect to the server. It should be installed by default on your system. If not, please first research about how to install. Once you have the SSH client installed, you can log in into the first level as follows:\nssh bandit0@bandit.labs.overthewire.org -p 2220 Syntax is simple: ssh \u0026lt;username\u0026gt;@\u0026lt;hostname\u0026gt; -p \u0026lt;port\u0026gt;. Usually SSH runs on port 22 by default, but they changed to port 2220 so we must specify it in the command.\nOnce you try to log in, you will see something like this: NB: If it\u0026rsquo;s the first time you try to log in, you will be asked about the authenticity of the host. Just type yes.\nType the password bandit0 and press enter. Now you are inside bandit server, ready to begin with bandit1!\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit0/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe goal of this level is for you to log into the game using SSH. The host to which you need to connect is \u003cstrong\u003ebandit.labs.overthewire.org\u003c/strong\u003e, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eRead a bit about what SSH is.\u003c/li\u003e\n\u003cli\u003eResearch about what a port is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go \u003ca href=\"https://en.wikipedia.org/wiki/Secure_Shell\"\u003ehere\u003c/a\u003e.\u003c/p\u003e","title":"Bandit0"},{"content":"Level description The password for the next level is stored in a file called readme located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\nTips for beginners Learn about home directory in Linux. Learn to use cat and ls commands. Solution First step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\nls This shows in terminal the files at the current directory. There you will see the readme file.\nNow we can to check the contents, so let\u0026rsquo;s use cat:\ncat readme To read a file, we use cat \u0026lt;filename\u0026gt;.\nNB: Not every file is human readable in Linux. We deep more about this in later levels.\nThe content of the readme file reveals the password for bandit2 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit1/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u003cstrong\u003ereadme\u003c/strong\u003e located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn about home directory in Linux.\u003c/li\u003e\n\u003cli\u003eLearn to use \u003ccode\u003ecat\u003c/code\u003e and \u003ccode\u003els\u003c/code\u003e commands.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eFirst step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\u003c/p\u003e","title":"Bandit1"},{"content":"Level description The password for the next level is stored in a file called - located in the home directory\nTips for beginners Try to understand why previous solution is not working as you expect. Solution You may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our cat command: The terminal is waiting for something else. This happens due to character - is used to pass arguments to our commands, and the linux shell is interpreting that. To prevent that, we could use:\ncat ./- NB: Dot . is used to refer current directory. The slash / is used at the end of directory name.\nWe get the password for bandit3 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit2/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called - located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eTry to understand why previous solution is not working as you expect.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eYou may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our \u003ccode\u003ecat\u003c/code\u003e command:\n\u003cimg alt=\"bandit2\" loading=\"lazy\" src=\"/images/otw/bandit/bandit2/0.png\"\u003e\u003c/p\u003e\n\u003cp\u003eThe terminal is \u003cem\u003ewaiting\u003c/em\u003e for something else. This happens due to character \u003ccode\u003e-\u003c/code\u003e is used to pass arguments to our commands, and the linux shell is interpreting that.\nTo prevent that, we could use:\u003c/p\u003e","title":"Bandit2"},{"content":"Level description The password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\nTips for beginners Think about how to escape the whitespaces. Solution After login in the machine as bandit3, we can see the filename \u0026ndash;spaces in this filename\u0026ndash;.\nNow we have 2 problems:\nSame as previous level, filename starts with --, so it will be interpreted as an argument. Address this problem using ./. Filename contains whitespaces. This is an issue, as bash interpretes whitespaces to separate commands. To solve the second problem, we must escape the whitespace character in some way. Here is the solution:\ncat ./--spaces\\ in\\ this\\ filename-- NB: Little trick, you can start writting filename and press Tab to autocomplete the name. The \\ is going to be inserted automatically.\nJust using the \\ we can escape the whitespace.\nNow we can continue with the bandit4 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit3/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eThink about how to \u003cem\u003eescape\u003c/em\u003e the whitespaces.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAfter login in the machine as bandit3, we can see the filename \u003cem\u003e\u0026ndash;spaces in this filename\u0026ndash;\u003c/em\u003e.\u003c/p\u003e\n\u003cp\u003eNow we have 2 problems:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eSame as previous level, filename starts with \u003ccode\u003e--\u003c/code\u003e, so it will be interpreted as an argument. Address this problem using \u003ccode\u003e./\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003eFilename contains \u003cstrong\u003ewhitespaces\u003c/strong\u003e. This is an issue, as bash interpretes whitespaces to separate commands.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eTo solve the second problem, we must escape the whitespace character in some way. Here is the solution:\u003c/p\u003e","title":"Bandit3"},{"content":"Level description The password for the next level is stored in a hidden file in the inhere directory.\nTips for beginners Learn how to navigate directories in Linux. First understand what a hidden file is. Solution Listing directory files inside bandit4\u0026rsquo;s home directory, show directory inhere.\nNB: How to distinguish files and directories in Linux? Use ls -l and see the difference.\nWe have 2 options now:\nMove to inhere directory and check contens again. Check contents directly. Moving to another directory can be done using cd \u0026lt;dirName\u0026gt;. If you prefer to check directory contents directly, use ls \u0026lt;dirName\u0026gt;.\nAfter checking inhere contents via ls, we see nothing. The reason is the file is a hidden file. A hidden file in Linux is everyfile whose name starts with dot .. Hidden files are not shown by default with ls command, so we must add a special flag -a to list all files: NB: Both flags -l and -a cna be combined into a single flag -al, which is shorter to type.\nAs you can see, filename is \u0026hellip;Hidding-From-You starting with three dots. Reading file contents should be easy at this point!\nNext level is bandit5.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit4/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a hidden file in the inhere directory.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to navigate directories in Linux.\u003c/li\u003e\n\u003cli\u003eFirst understand what a hidden file is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eListing directory files inside bandit4\u0026rsquo;s home directory, show directory \u003cstrong\u003einhere\u003c/strong\u003e.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e How to distinguish files and directories in Linux? Use \u003ccode\u003els -l\u003c/code\u003e and see the difference.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eWe have 2 options now:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eMove to inhere directory and check contens again.\u003c/li\u003e\n\u003cli\u003eCheck contents directly.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eMoving to another directory can be done using \u003ccode\u003ecd \u0026lt;dirName\u0026gt;\u003c/code\u003e. If you prefer to check directory contents directly, use \u003ccode\u003els \u0026lt;dirName\u0026gt;\u003c/code\u003e.\u003c/p\u003e","title":"Bandit4"},{"content":"Level description The password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\nTips for beginners What means human-readable file? Is there any way to check filetype at Linux?. Solution Checking inhere\u0026rsquo;s contents shows some files names \u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII here\nSo now, our goal is checking if file content of every file in the folder is ASCII or not. file \u0026lt;filename\u0026gt; does the job. Note the use of *. That called a wildcard regular expression, we\u0026rsquo;ll deep into it in later levels. An easy approach could be checking every file separately:\nfile ./--file00 file ./--file01 ... file ./--file09 But that\u0026rsquo;s not funny, imagine we have 100 files to check. All the files are in the same directory, so we can use cat ./* where ./* matches every filename in the directory, applying file to every file.\nNB: Another approach is to use find with certaing flags. Try to do in different ways, don\u0026rsquo;t stick to my solution.\nThe file \u0026ndash;file00 content is not readable, so get password from \u0026ndash;file07 and continue with bandit6.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit5/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eWhat means human-readable file?\u003c/li\u003e\n\u003cli\u003eIs there any way to check filetype at Linux?.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eChecking inhere\u0026rsquo;s contents shows some files names \u003cstrong\u003e\u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09\u003c/strong\u003e. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII \u003ca href=\"https://en.wikipedia.org/wiki/ASCII\"\u003ehere\u003c/a\u003e\u003c/p\u003e","title":"Bandit5"},{"content":"Level description The password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\nhuman-readable 1033 bytes in size not executable Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution The purpose of the level is showing us how to find for files. Listing contents of inhere, we can see some folders, containing a lot of files inside: NB: Adding -R to ls shows recursively the content of every folder inside the directory listed.\nSo this time, checking every file is not an option. We need to find a file with some properties, specific size, not excutable and human-readable. Let\u0026rsquo;s explain the command we\u0026rsquo;re using:\nfind inhere/ -size 1033c ! -executable First, we specify the directory, in this case inhere. The option -size 1033c returns files of 1033 bytes. Then, with -executable we would get executable files, but we want not executable files, that\u0026rsquo;s why we are adding ! before.\nNB: By default, the -size option takes as argument the number of blocks. For example, -size 2 means 2 blocks of 512 bytes, so its 1024. The c is used to specify exact bytes. Don\u0026rsquo;t ask me why it\u0026rsquo;s c and not b 😅.\nThe property of human-readability is not implemented in find. This is not an issue, previous command returns a single file and it is human readable (we could confirm using file): Extra tip: try to use the following:\nfind inhere/ -size 1033c ! -executable | file The pipe | is a great tool to execute 2+ commands in one line.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit6/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ehuman-readable\u003c/li\u003e\n\u003cli\u003e1033 bytes in size\u003c/li\u003e\n\u003cli\u003enot executable\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThe purpose of the level is showing us how to find for files. Listing contents of \u003cstrong\u003einhere\u003c/strong\u003e, we can see some folders, containing a lot of files inside:\n\u003cimg alt=\"bandit6_0\" loading=\"lazy\" src=\"/images/otw/bandit/bandit6/0.png\"\u003e\u003c/p\u003e","title":"Bandit6"},{"content":"👨‍💻 whoami Hey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\nWhat is this❓​ This blog is basically my thoughts on several hacking topics. Here you’ll see:\nWriteups from CTF challenges, from platforms like HackTheBox or OverTheWire.\nWalkthroughs and notes on pentesting techniques I’m learning or testing.\nSome posts on cryptography — because math can be fun (sometimes).\nRandom topics that freaks like me may (just may) find interesting.\nThe idea is simple: share what I learn, document my journey, and maybe help others who are also diving into the exciting world of ethical hacking.\n📫 Contact Want to say hi, share ideas, or just geek out about hacking? Reach me here:\n📧 Email: mrb0b1073@proton.me 💻​ GitHub: mrb0b173 🟩​ HackTheBox: mrb0b1073 ","permalink":"http://localhost:1313/about/","summary":"\u003ch2 id=\"-whoami\"\u003e👨‍💻 whoami\u003c/h2\u003e\n\u003cp\u003eHey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\u003c/p\u003e\n\u003chr\u003e\n\u003ch2 id=\"what-is-this\"\u003eWhat is this❓​\u003c/h2\u003e\n\u003cp\u003eThis blog is basically my thoughts on several hacking topics. Here you’ll see:\u003c/p\u003e","title":"About"},{"content":"Hey! 👋 I\u0026rsquo;m mrb0b1073 and this is my first post.\nWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\nExcited to start this adventure!\n","permalink":"http://localhost:1313/posts/hello-world/","summary":"\u003cp\u003eHey! 👋 I\u0026rsquo;m \u003cstrong\u003emrb0b1073\u003c/strong\u003e and this is my first post.\u003c/p\u003e\n\u003cp\u003eWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\u003cbr\u003e\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\u003c/p\u003e\n\u003cp\u003eExcited to start this adventure!\u003c/p\u003e","title":"Hello World"},{"content":"Introduction If you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\nIn cybersecurity there are broadly two complementary roles: Blue Team and Red Team. Blue Teams focus on defense, monitoring, incident response, hardening systems and keeping services secure, while Red Teams simulate attackers to find weaknesses and prove what an adversary could do. Ethical hacking aligns closely with Red Team operations, but cybersecurity is highly transversal across IT. There are many specialities or areas, such as cloud security, appsec, pentesting, forensics, governance, risk management, malware analysis, etc. Every topic could deserve its own post, so let\u0026rsquo;s keep it simple and focus on ethical hacking.\nHacker philosophy Let\u0026rsquo;s start with the idea of what is exactly a hacker. A hacker is someone who explores systems to understand how they work, finds creative ways to make or fix things, and solves technical problems. Historically the word describes curiosity, craft, and a drive to improve systems — not criminality. It is important to make the distinction between hacker and cracker, also called cybercriminal. A hacker explores, builds, discloses responsibly and works to improve security. They work in authorized environments or labs. On the other hand, a cracker breaks into systems for theft, vandalism or other illicit gain.\nHere you can find the most popularized ideas often summarized as the hacker ethic:\nCuriosity first: Learn by exploring and tinkering. Freedom of information: All knowledge should be shared to help progress. This fits properly with the idea of open source. Mistrust of needless authority: Centralized control sometimes blocks innovation. It is always good to question anything, specially common assumptions. Meritocracy: Skills, craft and results matter more than titles. Craftsmanship \u0026amp; elegance: Technical beauty matters. Build clean, clever and efficient solutions. Responsability \u0026amp; ethics: Use your skills to build, fix, educate and defend, not to harm. Core fundamentals Assuming you want to init yourself in hacking, you should first build competence across three basic pillars.\nOperating Systems You should learn as much as possible about Linux and Windows. Specially Linux, all the tools you will be using are meant to be used in a Linux environment. Skill with shell is required, learn basic commands and how to interact with the OS using the terminal. Research about processes, file permissions, package management and logs. A large proportion of web servers around the world run on Linux, although Windows is also widely used. Windows knowledge is really valuable too, considering active directory is strongly used in corporate environments.\nNetworking You have to understand how computers communicate each other. Understand basic networking concepts, IP adresses, subnetting, proxies, find out how internet works. Study some protocols such as TCP/IP, HTTP, DNS or SSH. This could sound confusing for beginners, but this step is not optional! Study different client/server models and how services expose attack surfaces.\nProgramming \u0026amp; scripting Is this completely required? Maybe not for complete beginners. Does it help? Absolutely yes. Understanding how web apps or any type of application works makes things much easier. You can imagine different entry points to exploit if you understand how systems are designed. Also writing scripts in bash or python makes you more productive through automation.\nEthical Hacking foundations Once you feel confident with these 3 pillars, you can go to the next step. You can study about different topics and areas. For example, binary exploiting, web pentesting, mobile pentesting, wireless hacking, etc. You should start picking a focus, in this post we focus on web pentesting, as it is beginner friendly. Also web applications are the bread and butter in companies nowadays.\nKey concepts to study:\nCIA Triad: CIA refers to Confidentiality, Integrity and Availability. These three concepts are key in information security, and describe properties we want to ensure in our systems and information. Web Security basics, OWASP: Study the OWASP Top 10, which summarizes most frequent web security risks. Authentication and session control: Understand the concepts of Authentication and Authorization, research about how session is handled in web apps, cookies, JWT tokens, etc. Input validation \u0026amp; injection attacks: Learn about SQL Injection, Cross-Site Scripting (XSS), Code Injection, SSTI, and every injection type. Secure development lifecycle: Find out how to implement security controls in code. This can be more related to Blue Team, but as Red Teamer it is important to understand. Firewall evasion: What a firewall is and some techniques/methods to bypass. Some cryptography: Understand what a chiper and a hash are, how information is encrypted to prevent access from 3rd parties. Focusing on web, read about TLS protocol. There are many more topics you can research and learn, but this could be a nice starting point.\nTools and platforms to learn Now you have an idea of what to study, let\u0026rsquo;s see how to start in practical terms.\nSome platforms I personally recommend:\nOverTheWire: Here you can find some CTFs (Capture The Flag) which are fun to play and also really instructive. Bandit games are a must for complete beginners, as you will explore some linux and bash concepts which are basic to continue. The games are leveled by difficulty, in their web you can get all the information about how to play, only a terminal and SSH is required. This helps building your foundation in Linux OS. HackTheBox: Nº 1 platform in cybersecurity. Has a lot of resources to learn all this core fundamentals, and also red team / blue team security topics. It is focused on labs where you can test your skills hacking different boxes but if you really want to learn it is worth to invest time and money in the academy. I have to say the level here is high, specially if you try to hack machines on your own without using some guide or writeup. TryHackMe: More beginner friendly than hackthebox, it provides a lot of guided learning resources. PortSwigger Labs: Practical labs about specific topics, focused on web hacking. They are great to learn and understand different types of attacks, injections, and security misconfigurations. I would recommend digging into this once you have the theoretical basis about these concepts. I have to mention a few tools I am sure you\u0026rsquo;d end up using:\nNmap: This is probably the most famous tool in hacking, allowing you to gather information about ports and services running in a machine. Burpsuite: A proxy tool widely used in web application security testing. It basically allows you to intercept and modify web requests, which can be used to perform several types of attacks. Metasploit: The most used pentesting framework. Contains a large amount of scripts and exploits ready to run. Another crucial step here is to set up your virtual lab environment to test vulnerable applications. To achieve this goal, there are some Linux distributions like Kali, Parrot or BlackArch, but that\u0026rsquo;s a topic for another post.\nFinal thoughs To sum up, this would be my personal roadmap:\nLearn the fundamentals, specially Linux and networking. Install some Linux in a virtual machine, play with it, get comfortable with the terminal. You can start with bandit wargames in OverTheWire. Complete every level and make sure to understand everything as clear as possible. Move to guided boxes on HackTheBox. I recommend you joining their Discord, ask questions, community is great there! Take notes, repeat, learn, improve your skills. Maybe use your own lab environment, create your own vulnerable apps. Hacking is a mixing of curiosity, study and practice. Being passionate and motivated about it is really helpful and will definitely speed up the process. The path is long and really challenging, so keep it going!\n\u0026ldquo;Yes, I am a criminal. My crime is that of curiosity.\u0026rdquo; — The Mentor (Loyd Blankenship) at The Hacker Manifesto\n","permalink":"http://localhost:1313/posts/starting-point/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIf you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\u003c/p\u003e","title":"Starting Point"},{"content":"Introduction In this post series we are going to solve every level from bandit in OverTheWire This guide pretends to be a writeup containing the solutions of the level, designed for beginners.\nTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing WSL, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\nEvery section will contain the solution as well as some tips for people who is absolutely beginner.\nTips First of all, some tips:\nDo not use this as first resource to solve the levels. Try on your own, make mistakes and learn from them. Only check the solution as last resource or if you are completely new and you have absolutely no idea about what to do next. Take notes from your learning. Write up commands, tips and everything which can be useful in the future. Make sure to understand everything. Is a good idea to note the passwords for every level. If you want to continue letter, you can simply log in in the desired level. It is annoying to repeat everything! Follow the tips and information provided at OverTheWire website. Levels Here is my solution for every level:\nBandit0 Bandit1 Bandit2 Bandit3 Bandit4 Bandit5 Bandit6 ","permalink":"http://localhost:1313/posts/otw/bandit/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIn this post series we are going to solve every level from bandit in \u003ca href=\"https://overthewire.org/wargames/bandit/\"\u003e\u003cem\u003eOverTheWire\u003c/em\u003e\u003c/a\u003e\nThis guide pretends to be a writeup containing the solutions of the level, designed for beginners.\u003c/p\u003e\n\u003cp\u003eTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing \u003ca href=\"https://learn.microsoft.com/en-us/windows/wsl/install\"\u003eWSL\u003c/a\u003e, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\u003c/p\u003e","title":"Bandit"},{"content":"Level description The goal of this level is for you to log into the game using SSH. The host to which you need to connect is bandit.labs.overthewire.org, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\nTips for beginners Read a bit about what SSH is. Research about what a port is. Solution This is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go here.\nAt Linux, we can use ssh client to connect to the server. It should be installed by default on your system. If not, please first research about how to install. Once you have the SSH client installed, you can log in into the first level as follows:\nssh bandit0@bandit.labs.overthewire.org -p 2220 Syntax is simple: ssh \u0026lt;username\u0026gt;@\u0026lt;hostname\u0026gt; -p \u0026lt;port\u0026gt;. Usually SSH runs on port 22 by default, but they changed to port 2220 so we must specify it in the command.\nOnce you try to log in, you will see something like this: NB: If it\u0026rsquo;s the first time you try to log in, you will be asked about the authenticity of the host. Just type yes.\nType the password bandit0 and press enter. Now you are inside bandit server, ready to begin with bandit1!\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit0/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe goal of this level is for you to log into the game using SSH. The host to which you need to connect is \u003cstrong\u003ebandit.labs.overthewire.org\u003c/strong\u003e, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eRead a bit about what SSH is.\u003c/li\u003e\n\u003cli\u003eResearch about what a port is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go \u003ca href=\"https://en.wikipedia.org/wiki/Secure_Shell\"\u003ehere\u003c/a\u003e.\u003c/p\u003e","title":"Bandit0"},{"content":"Level description The password for the next level is stored in a file called readme located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\nTips for beginners Learn about home directory in Linux. Learn to use cat and ls commands. Solution First step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\nls This shows in terminal the files at the current directory. There you will see the readme file.\nNow we can to check the contents, so let\u0026rsquo;s use cat:\ncat readme To read a file, we use cat \u0026lt;filename\u0026gt;.\nNB: Not every file is human readable in Linux. We deep more about this in later levels.\nThe content of the readme file reveals the password for bandit2 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit1/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u003cstrong\u003ereadme\u003c/strong\u003e located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn about home directory in Linux.\u003c/li\u003e\n\u003cli\u003eLearn to use \u003ccode\u003ecat\u003c/code\u003e and \u003ccode\u003els\u003c/code\u003e commands.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eFirst step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\u003c/p\u003e","title":"Bandit1"},{"content":"Level description The password for the next level is stored in a file called - located in the home directory\nTips for beginners Try to understand why previous solution is not working as you expect. Solution You may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our cat command: The terminal is waiting for something else. This happens due to character - is used to pass arguments to our commands, and the linux shell is interpreting that. To prevent that, we could use:\ncat ./- NB: Dot . is used to refer current directory. The slash / is used at the end of directory name.\nWe get the password for bandit3 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit2/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called - located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eTry to understand why previous solution is not working as you expect.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eYou may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our \u003ccode\u003ecat\u003c/code\u003e command:\n\u003cimg alt=\"bandit2\" loading=\"lazy\" src=\"/images/otw/bandit/bandit2/0.png\"\u003e\u003c/p\u003e\n\u003cp\u003eThe terminal is \u003cem\u003ewaiting\u003c/em\u003e for something else. This happens due to character \u003ccode\u003e-\u003c/code\u003e is used to pass arguments to our commands, and the linux shell is interpreting that.\nTo prevent that, we could use:\u003c/p\u003e","title":"Bandit2"},{"content":"Level description The password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\nTips for beginners Think about how to escape the whitespaces. Solution After login in the machine as bandit3, we can see the filename \u0026ndash;spaces in this filename\u0026ndash;.\nNow we have 2 problems:\nSame as previous level, filename starts with --, so it will be interpreted as an argument. Address this problem using ./. Filename contains whitespaces. This is an issue, as bash interpretes whitespaces to separate commands. To solve the second problem, we must escape the whitespace character in some way. Here is the solution:\ncat ./--spaces\\ in\\ this\\ filename-- NB: Little trick, you can start writting filename and press Tab to autocomplete the name. The \\ is going to be inserted automatically.\nJust using the \\ we can escape the whitespace.\nNow we can continue with the bandit4 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit3/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eThink about how to \u003cem\u003eescape\u003c/em\u003e the whitespaces.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAfter login in the machine as bandit3, we can see the filename \u003cem\u003e\u0026ndash;spaces in this filename\u0026ndash;\u003c/em\u003e.\u003c/p\u003e\n\u003cp\u003eNow we have 2 problems:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eSame as previous level, filename starts with \u003ccode\u003e--\u003c/code\u003e, so it will be interpreted as an argument. Address this problem using \u003ccode\u003e./\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003eFilename contains \u003cstrong\u003ewhitespaces\u003c/strong\u003e. This is an issue, as bash interpretes whitespaces to separate commands.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eTo solve the second problem, we must escape the whitespace character in some way. Here is the solution:\u003c/p\u003e","title":"Bandit3"},{"content":"Level description The password for the next level is stored in a hidden file in the inhere directory.\nTips for beginners Learn how to navigate directories in Linux. First understand what a hidden file is. Solution Listing directory files inside bandit4\u0026rsquo;s home directory, show directory inhere.\nNB: How to distinguish files and directories in Linux? Use ls -l and see the difference.\nWe have 2 options now:\nMove to inhere directory and check contens again. Check contents directly. Moving to another directory can be done using cd \u0026lt;dirName\u0026gt;. If you prefer to check directory contents directly, use ls \u0026lt;dirName\u0026gt;.\nAfter checking inhere contents via ls, we see nothing. The reason is the file is a hidden file. A hidden file in Linux is everyfile whose name starts with dot .. Hidden files are not shown by default with ls command, so we must add a special flag -a to list all files: NB: Both flags -l and -a cna be combined into a single flag -al, which is shorter to type.\nAs you can see, filename is \u0026hellip;Hidding-From-You starting with three dots. Reading file contents should be easy at this point!\nNext level is bandit5.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit4/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a hidden file in the inhere directory.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to navigate directories in Linux.\u003c/li\u003e\n\u003cli\u003eFirst understand what a hidden file is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eListing directory files inside bandit4\u0026rsquo;s home directory, show directory \u003cstrong\u003einhere\u003c/strong\u003e.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e How to distinguish files and directories in Linux? Use \u003ccode\u003els -l\u003c/code\u003e and see the difference.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eWe have 2 options now:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eMove to inhere directory and check contens again.\u003c/li\u003e\n\u003cli\u003eCheck contents directly.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eMoving to another directory can be done using \u003ccode\u003ecd \u0026lt;dirName\u0026gt;\u003c/code\u003e. If you prefer to check directory contents directly, use \u003ccode\u003els \u0026lt;dirName\u0026gt;\u003c/code\u003e.\u003c/p\u003e","title":"Bandit4"},{"content":"Level description The password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\nTips for beginners What means human-readable file? Is there any way to check filetype at Linux?. Solution Checking inhere\u0026rsquo;s contents shows some files names \u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII here\nSo now, our goal is checking if file content of every file in the folder is ASCII or not. file \u0026lt;filename\u0026gt; does the job. Note the use of *. That called a wildcard regular expression, we\u0026rsquo;ll deep into it in later levels. An easy approach could be checking every file separately:\nfile ./--file00 file ./--file01 ... file ./--file09 But that\u0026rsquo;s not funny, imagine we have 100 files to check. All the files are in the same directory, so we can use cat ./* where ./* matches every filename in the directory, applying file to every file.\nNB: Another approach is to use find with certaing flags. Try to do in different ways, don\u0026rsquo;t stick to my solution.\nThe file \u0026ndash;file00 content is not readable, so get password from \u0026ndash;file07 and continue with bandit6.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit5/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eWhat means human-readable file?\u003c/li\u003e\n\u003cli\u003eIs there any way to check filetype at Linux?.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eChecking inhere\u0026rsquo;s contents shows some files names \u003cstrong\u003e\u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09\u003c/strong\u003e. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII \u003ca href=\"https://en.wikipedia.org/wiki/ASCII\"\u003ehere\u003c/a\u003e\u003c/p\u003e","title":"Bandit5"},{"content":"Level description The password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\nhuman-readable 1033 bytes in size not executable Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution The purpose of the level is showing us how to find for files. Listing contents of inhere, we can see some folders, containing a lot of files inside: NB: Adding -R to ls shows recursively the content of every folder inside the directory listed.\nSo this time, checking every file is not an option. We need to find a file with some properties, specific size, not excutable and human-readable. Let\u0026rsquo;s explain the command we\u0026rsquo;re using:\nfind inhere/ -size 1033c ! -executable First, we specify the directory, in this case inhere. The option -size 1033c returns files of 1033 bytes. Then, with -executable we would get executable files, but we want not executable files, that\u0026rsquo;s why we are adding ! before.\nNB: By default, the -size option takes as argument the number of blocks. For example, -size 2 means 2 blocks of 512 bytes, so its 1024. The c is used to specify exact bytes. Don\u0026rsquo;t ask me why it\u0026rsquo;s c and not b 😅.\nThe property of human-readability is not implemented in find. This is not an issue, previous command returns a single file and it is human readable (we could confirm using file): Extra tip: try to use the following:\nfind inhere/ -size 1033c ! -executable | file You get the same result! The pipe | is a great tool to execute 2+ commands in one line.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit6/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ehuman-readable\u003c/li\u003e\n\u003cli\u003e1033 bytes in size\u003c/li\u003e\n\u003cli\u003enot executable\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThe purpose of the level is showing us how to find for files. Listing contents of \u003cstrong\u003einhere\u003c/strong\u003e, we can see some folders, containing a lot of files inside:\n\u003cimg alt=\"bandit6_0\" loading=\"lazy\" src=\"/images/otw/bandit/bandit6/0.png\"\u003e\u003c/p\u003e","title":"Bandit6"},{"content":"👨‍💻 whoami Hey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\nWhat is this❓​ This blog is basically my thoughts on several hacking topics. Here you’ll see:\nWriteups from CTF challenges, from platforms like HackTheBox or OverTheWire.\nWalkthroughs and notes on pentesting techniques I’m learning or testing.\nSome posts on cryptography — because math can be fun (sometimes).\nRandom topics that freaks like me may (just may) find interesting.\nThe idea is simple: share what I learn, document my journey, and maybe help others who are also diving into the exciting world of ethical hacking.\n📫 Contact Want to say hi, share ideas, or just geek out about hacking? Reach me here:\n📧 Email: mrb0b1073@proton.me 💻​ GitHub: mrb0b173 🟩​ HackTheBox: mrb0b1073 ","permalink":"http://localhost:1313/about/","summary":"\u003ch2 id=\"-whoami\"\u003e👨‍💻 whoami\u003c/h2\u003e\n\u003cp\u003eHey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\u003c/p\u003e\n\u003chr\u003e\n\u003ch2 id=\"what-is-this\"\u003eWhat is this❓​\u003c/h2\u003e\n\u003cp\u003eThis blog is basically my thoughts on several hacking topics. Here you’ll see:\u003c/p\u003e","title":"About"},{"content":"Hey! 👋 I\u0026rsquo;m mrb0b1073 and this is my first post.\nWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\nExcited to start this adventure!\n","permalink":"http://localhost:1313/posts/hello-world/","summary":"\u003cp\u003eHey! 👋 I\u0026rsquo;m \u003cstrong\u003emrb0b1073\u003c/strong\u003e and this is my first post.\u003c/p\u003e\n\u003cp\u003eWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\u003cbr\u003e\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\u003c/p\u003e\n\u003cp\u003eExcited to start this adventure!\u003c/p\u003e","title":"Hello World"},{"content":"Introduction If you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\nIn cybersecurity there are broadly two complementary roles: Blue Team and Red Team. Blue Teams focus on defense, monitoring, incident response, hardening systems and keeping services secure, while Red Teams simulate attackers to find weaknesses and prove what an adversary could do. Ethical hacking aligns closely with Red Team operations, but cybersecurity is highly transversal across IT. There are many specialities or areas, such as cloud security, appsec, pentesting, forensics, governance, risk management, malware analysis, etc. Every topic could deserve its own post, so let\u0026rsquo;s keep it simple and focus on ethical hacking.\nHacker philosophy Let\u0026rsquo;s start with the idea of what is exactly a hacker. A hacker is someone who explores systems to understand how they work, finds creative ways to make or fix things, and solves technical problems. Historically the word describes curiosity, craft, and a drive to improve systems — not criminality. It is important to make the distinction between hacker and cracker, also called cybercriminal. A hacker explores, builds, discloses responsibly and works to improve security. They work in authorized environments or labs. On the other hand, a cracker breaks into systems for theft, vandalism or other illicit gain.\nHere you can find the most popularized ideas often summarized as the hacker ethic:\nCuriosity first: Learn by exploring and tinkering. Freedom of information: All knowledge should be shared to help progress. This fits properly with the idea of open source. Mistrust of needless authority: Centralized control sometimes blocks innovation. It is always good to question anything, specially common assumptions. Meritocracy: Skills, craft and results matter more than titles. Craftsmanship \u0026amp; elegance: Technical beauty matters. Build clean, clever and efficient solutions. Responsability \u0026amp; ethics: Use your skills to build, fix, educate and defend, not to harm. Core fundamentals Assuming you want to init yourself in hacking, you should first build competence across three basic pillars.\nOperating Systems You should learn as much as possible about Linux and Windows. Specially Linux, all the tools you will be using are meant to be used in a Linux environment. Skill with shell is required, learn basic commands and how to interact with the OS using the terminal. Research about processes, file permissions, package management and logs. A large proportion of web servers around the world run on Linux, although Windows is also widely used. Windows knowledge is really valuable too, considering active directory is strongly used in corporate environments.\nNetworking You have to understand how computers communicate each other. Understand basic networking concepts, IP adresses, subnetting, proxies, find out how internet works. Study some protocols such as TCP/IP, HTTP, DNS or SSH. This could sound confusing for beginners, but this step is not optional! Study different client/server models and how services expose attack surfaces.\nProgramming \u0026amp; scripting Is this completely required? Maybe not for complete beginners. Does it help? Absolutely yes. Understanding how web apps or any type of application works makes things much easier. You can imagine different entry points to exploit if you understand how systems are designed. Also writing scripts in bash or python makes you more productive through automation.\nEthical Hacking foundations Once you feel confident with these 3 pillars, you can go to the next step. You can study about different topics and areas. For example, binary exploiting, web pentesting, mobile pentesting, wireless hacking, etc. You should start picking a focus, in this post we focus on web pentesting, as it is beginner friendly. Also web applications are the bread and butter in companies nowadays.\nKey concepts to study:\nCIA Triad: CIA refers to Confidentiality, Integrity and Availability. These three concepts are key in information security, and describe properties we want to ensure in our systems and information. Web Security basics, OWASP: Study the OWASP Top 10, which summarizes most frequent web security risks. Authentication and session control: Understand the concepts of Authentication and Authorization, research about how session is handled in web apps, cookies, JWT tokens, etc. Input validation \u0026amp; injection attacks: Learn about SQL Injection, Cross-Site Scripting (XSS), Code Injection, SSTI, and every injection type. Secure development lifecycle: Find out how to implement security controls in code. This can be more related to Blue Team, but as Red Teamer it is important to understand. Firewall evasion: What a firewall is and some techniques/methods to bypass. Some cryptography: Understand what a chiper and a hash are, how information is encrypted to prevent access from 3rd parties. Focusing on web, read about TLS protocol. There are many more topics you can research and learn, but this could be a nice starting point.\nTools and platforms to learn Now you have an idea of what to study, let\u0026rsquo;s see how to start in practical terms.\nSome platforms I personally recommend:\nOverTheWire: Here you can find some CTFs (Capture The Flag) which are fun to play and also really instructive. Bandit games are a must for complete beginners, as you will explore some linux and bash concepts which are basic to continue. The games are leveled by difficulty, in their web you can get all the information about how to play, only a terminal and SSH is required. This helps building your foundation in Linux OS. HackTheBox: Nº 1 platform in cybersecurity. Has a lot of resources to learn all this core fundamentals, and also red team / blue team security topics. It is focused on labs where you can test your skills hacking different boxes but if you really want to learn it is worth to invest time and money in the academy. I have to say the level here is high, specially if you try to hack machines on your own without using some guide or writeup. TryHackMe: More beginner friendly than hackthebox, it provides a lot of guided learning resources. PortSwigger Labs: Practical labs about specific topics, focused on web hacking. They are great to learn and understand different types of attacks, injections, and security misconfigurations. I would recommend digging into this once you have the theoretical basis about these concepts. I have to mention a few tools I am sure you\u0026rsquo;d end up using:\nNmap: This is probably the most famous tool in hacking, allowing you to gather information about ports and services running in a machine. Burpsuite: A proxy tool widely used in web application security testing. It basically allows you to intercept and modify web requests, which can be used to perform several types of attacks. Metasploit: The most used pentesting framework. Contains a large amount of scripts and exploits ready to run. Another crucial step here is to set up your virtual lab environment to test vulnerable applications. To achieve this goal, there are some Linux distributions like Kali, Parrot or BlackArch, but that\u0026rsquo;s a topic for another post.\nFinal thoughs To sum up, this would be my personal roadmap:\nLearn the fundamentals, specially Linux and networking. Install some Linux in a virtual machine, play with it, get comfortable with the terminal. You can start with bandit wargames in OverTheWire. Complete every level and make sure to understand everything as clear as possible. Move to guided boxes on HackTheBox. I recommend you joining their Discord, ask questions, community is great there! Take notes, repeat, learn, improve your skills. Maybe use your own lab environment, create your own vulnerable apps. Hacking is a mixing of curiosity, study and practice. Being passionate and motivated about it is really helpful and will definitely speed up the process. The path is long and really challenging, so keep it going!\n\u0026ldquo;Yes, I am a criminal. My crime is that of curiosity.\u0026rdquo; — The Mentor (Loyd Blankenship) at The Hacker Manifesto\n","permalink":"http://localhost:1313/posts/starting-point/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIf you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\u003c/p\u003e","title":"Starting Point"},{"content":"Introduction In this post series we are going to solve every level from bandit in OverTheWire This guide pretends to be a writeup containing the solutions of the level, designed for beginners.\nTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing WSL, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\nEvery section will contain the solution as well as some tips for people who is absolutely beginner.\nTips First of all, some tips:\nDo not use this as first resource to solve the levels. Try on your own, make mistakes and learn from them. Only check the solution as last resource or if you are completely new and you have absolutely no idea about what to do next. Take notes from your learning. Write up commands, tips and everything which can be useful in the future. Make sure to understand everything. Is a good idea to note the passwords for every level. If you want to continue letter, you can simply log in in the desired level. It is annoying to repeat everything! Follow the tips and information provided at OverTheWire website. Levels Here is my solution for every level:\nBandit0 Bandit1 Bandit2 Bandit3 Bandit4 Bandit5 Bandit6 ","permalink":"http://localhost:1313/posts/otw/bandit/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIn this post series we are going to solve every level from bandit in \u003ca href=\"https://overthewire.org/wargames/bandit/\"\u003e\u003cem\u003eOverTheWire\u003c/em\u003e\u003c/a\u003e\nThis guide pretends to be a writeup containing the solutions of the level, designed for beginners.\u003c/p\u003e\n\u003cp\u003eTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing \u003ca href=\"https://learn.microsoft.com/en-us/windows/wsl/install\"\u003eWSL\u003c/a\u003e, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\u003c/p\u003e","title":"Bandit"},{"content":"Level description The goal of this level is for you to log into the game using SSH. The host to which you need to connect is bandit.labs.overthewire.org, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\nTips for beginners Read a bit about what SSH is. Research about what a port is. Solution This is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go here.\nAt Linux, we can use ssh client to connect to the server. It should be installed by default on your system. If not, please first research about how to install. Once you have the SSH client installed, you can log in into the first level as follows:\nssh bandit0@bandit.labs.overthewire.org -p 2220 Syntax is simple: ssh \u0026lt;username\u0026gt;@\u0026lt;hostname\u0026gt; -p \u0026lt;port\u0026gt;. Usually SSH runs on port 22 by default, but they changed to port 2220 so we must specify it in the command.\nOnce you try to log in, you will see something like this: NB: If it\u0026rsquo;s the first time you try to log in, you will be asked about the authenticity of the host. Just type yes.\nType the password bandit0 and press enter. Now you are inside bandit server, ready to begin with bandit1!\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit0/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe goal of this level is for you to log into the game using SSH. The host to which you need to connect is \u003cstrong\u003ebandit.labs.overthewire.org\u003c/strong\u003e, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eRead a bit about what SSH is.\u003c/li\u003e\n\u003cli\u003eResearch about what a port is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go \u003ca href=\"https://en.wikipedia.org/wiki/Secure_Shell\"\u003ehere\u003c/a\u003e.\u003c/p\u003e","title":"Bandit0"},{"content":"Level description The password for the next level is stored in a file called readme located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\nTips for beginners Learn about home directory in Linux. Learn to use cat and ls commands. Solution First step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\nls This shows in terminal the files at the current directory. There you will see the readme file.\nNow we can to check the contents, so let\u0026rsquo;s use cat:\ncat readme To read a file, we use cat \u0026lt;filename\u0026gt;.\nNB: Not every file is human readable in Linux. We deep more about this in later levels.\nThe content of the readme file reveals the password for bandit2 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit1/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u003cstrong\u003ereadme\u003c/strong\u003e located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn about home directory in Linux.\u003c/li\u003e\n\u003cli\u003eLearn to use \u003ccode\u003ecat\u003c/code\u003e and \u003ccode\u003els\u003c/code\u003e commands.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eFirst step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\u003c/p\u003e","title":"Bandit1"},{"content":"Level description The password for the next level is stored in a file called - located in the home directory\nTips for beginners Try to understand why previous solution is not working as you expect. Solution You may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our cat command: The terminal is waiting for something else. This happens due to character - is used to pass arguments to our commands, and the linux shell is interpreting that. To prevent that, we could use:\ncat ./- NB: Dot . is used to refer current directory. The slash / is used at the end of directory name.\nWe get the password for bandit3 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit2/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called - located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eTry to understand why previous solution is not working as you expect.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eYou may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our \u003ccode\u003ecat\u003c/code\u003e command:\n\u003cimg alt=\"bandit2\" loading=\"lazy\" src=\"/images/otw/bandit/bandit2/0.png\"\u003e\u003c/p\u003e\n\u003cp\u003eThe terminal is \u003cem\u003ewaiting\u003c/em\u003e for something else. This happens due to character \u003ccode\u003e-\u003c/code\u003e is used to pass arguments to our commands, and the linux shell is interpreting that.\nTo prevent that, we could use:\u003c/p\u003e","title":"Bandit2"},{"content":"Level description The password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\nTips for beginners Think about how to escape the whitespaces. Solution After login in the machine as bandit3, we can see the filename \u0026ndash;spaces in this filename\u0026ndash;.\nNow we have 2 problems:\nSame as previous level, filename starts with --, so it will be interpreted as an argument. Address this problem using ./. Filename contains whitespaces. This is an issue, as bash interpretes whitespaces to separate commands. To solve the second problem, we must escape the whitespace character in some way. Here is the solution:\ncat ./--spaces\\ in\\ this\\ filename-- NB: Little trick, you can start writting filename and press Tab to autocomplete the name. The \\ is going to be inserted automatically.\nJust using the \\ we can escape the whitespace.\nNow we can continue with the bandit4 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit3/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eThink about how to \u003cem\u003eescape\u003c/em\u003e the whitespaces.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAfter login in the machine as bandit3, we can see the filename \u003cem\u003e\u0026ndash;spaces in this filename\u0026ndash;\u003c/em\u003e.\u003c/p\u003e\n\u003cp\u003eNow we have 2 problems:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eSame as previous level, filename starts with \u003ccode\u003e--\u003c/code\u003e, so it will be interpreted as an argument. Address this problem using \u003ccode\u003e./\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003eFilename contains \u003cstrong\u003ewhitespaces\u003c/strong\u003e. This is an issue, as bash interpretes whitespaces to separate commands.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eTo solve the second problem, we must escape the whitespace character in some way. Here is the solution:\u003c/p\u003e","title":"Bandit3"},{"content":"Level description The password for the next level is stored in a hidden file in the inhere directory.\nTips for beginners Learn how to navigate directories in Linux. First understand what a hidden file is. Solution Listing directory files inside bandit4\u0026rsquo;s home directory, show directory inhere.\nNB: How to distinguish files and directories in Linux? Use ls -l and see the difference.\nWe have 2 options now:\nMove to inhere directory and check contens again. Check contents directly. Moving to another directory can be done using cd \u0026lt;dirName\u0026gt;. If you prefer to check directory contents directly, use ls \u0026lt;dirName\u0026gt;.\nAfter checking inhere contents via ls, we see nothing. The reason is the file is a hidden file. A hidden file in Linux is everyfile whose name starts with dot .. Hidden files are not shown by default with ls command, so we must add a special flag -a to list all files: NB: Both flags -l and -a cna be combined into a single flag -al, which is shorter to type.\nAs you can see, filename is \u0026hellip;Hidding-From-You starting with three dots. Reading file contents should be easy at this point!\nNext level is bandit5.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit4/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a hidden file in the inhere directory.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to navigate directories in Linux.\u003c/li\u003e\n\u003cli\u003eFirst understand what a hidden file is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eListing directory files inside bandit4\u0026rsquo;s home directory, show directory \u003cstrong\u003einhere\u003c/strong\u003e.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e How to distinguish files and directories in Linux? Use \u003ccode\u003els -l\u003c/code\u003e and see the difference.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eWe have 2 options now:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eMove to inhere directory and check contens again.\u003c/li\u003e\n\u003cli\u003eCheck contents directly.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eMoving to another directory can be done using \u003ccode\u003ecd \u0026lt;dirName\u0026gt;\u003c/code\u003e. If you prefer to check directory contents directly, use \u003ccode\u003els \u0026lt;dirName\u0026gt;\u003c/code\u003e.\u003c/p\u003e","title":"Bandit4"},{"content":"Level description The password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\nTips for beginners What means human-readable file? Is there any way to check filetype at Linux?. Solution Checking inhere\u0026rsquo;s contents shows some files names \u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII here\nSo now, our goal is checking if file content of every file in the folder is ASCII or not. file \u0026lt;filename\u0026gt; does the job. Note the use of *. That called a wildcard regular expression, we\u0026rsquo;ll deep into it in later levels. An easy approach could be checking every file separately:\nfile ./--file00 file ./--file01 ... file ./--file09 But that\u0026rsquo;s not funny, imagine we have 100 files to check. All the files are in the same directory, so we can use cat ./* where ./* matches every filename in the directory, applying file to every file.\nNB: Another approach is to use find with certaing flags. Try to do in different ways, don\u0026rsquo;t stick to my solution.\nThe file \u0026ndash;file00 content is not readable, so get password from \u0026ndash;file07 and continue with bandit6.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit5/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eWhat means human-readable file?\u003c/li\u003e\n\u003cli\u003eIs there any way to check filetype at Linux?.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eChecking inhere\u0026rsquo;s contents shows some files names \u003cstrong\u003e\u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09\u003c/strong\u003e. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII \u003ca href=\"https://en.wikipedia.org/wiki/ASCII\"\u003ehere\u003c/a\u003e\u003c/p\u003e","title":"Bandit5"},{"content":"Level description The password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\nhuman-readable 1033 bytes in size not executable Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution The purpose of the level is showing us how to find for files. Listing contents of inhere, we can see some folders, containing a lot of files inside: NB: Adding -R to ls shows recursively the content of every folder inside the directory listed.\nSo this time, checking every file is not an option. We need to find a file with some properties, specific size, not excutable and human-readable. Let\u0026rsquo;s explain the command we\u0026rsquo;re using:\nfind inhere/ -size 1033c ! -executable First, we specify the directory, in this case inhere. The option -size 1033c returns files of 1033 bytes. Then, with -executable we would get executable files, but we want not executable files, that\u0026rsquo;s why we are adding ! before.\nNB: By default, the -size option takes as argument the number of blocks. For example, -size 2 means 2 blocks of 512 bytes, so its 1024. The c is used to specify exact bytes. Don\u0026rsquo;t ask me why it\u0026rsquo;s c and not b 😅.\nThe property of human-readability is not implemented in find. This is not an issue, previous command returns a single file and it is human readable (we could confirm using file): Extra tip: try to use the following:\nfind inhere/ -size 1033c ! -executable | file You get the same result! The pipe | is a great tool to execute 2+ commands in one line.\nGet your password and continue with bandit7.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit6/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ehuman-readable\u003c/li\u003e\n\u003cli\u003e1033 bytes in size\u003c/li\u003e\n\u003cli\u003enot executable\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThe purpose of the level is showing us how to find for files. Listing contents of \u003cstrong\u003einhere\u003c/strong\u003e, we can see some folders, containing a lot of files inside:\n\u003cimg alt=\"bandit6_0\" loading=\"lazy\" src=\"/images/otw/bandit/bandit6/0.png\"\u003e\u003c/p\u003e","title":"Bandit6"},{"content":"👨‍💻 whoami Hey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\nWhat is this❓​ This blog is basically my thoughts on several hacking topics. Here you’ll see:\nWriteups from CTF challenges, from platforms like HackTheBox or OverTheWire.\nWalkthroughs and notes on pentesting techniques I’m learning or testing.\nSome posts on cryptography — because math can be fun (sometimes).\nRandom topics that freaks like me may (just may) find interesting.\nThe idea is simple: share what I learn, document my journey, and maybe help others who are also diving into the exciting world of ethical hacking.\n📫 Contact Want to say hi, share ideas, or just geek out about hacking? Reach me here:\n📧 Email: mrb0b1073@proton.me 💻​ GitHub: mrb0b173 🟩​ HackTheBox: mrb0b1073 ","permalink":"http://localhost:1313/about/","summary":"\u003ch2 id=\"-whoami\"\u003e👨‍💻 whoami\u003c/h2\u003e\n\u003cp\u003eHey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\u003c/p\u003e\n\u003chr\u003e\n\u003ch2 id=\"what-is-this\"\u003eWhat is this❓​\u003c/h2\u003e\n\u003cp\u003eThis blog is basically my thoughts on several hacking topics. Here you’ll see:\u003c/p\u003e","title":"About"},{"content":"Hey! 👋 I\u0026rsquo;m mrb0b1073 and this is my first post.\nWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\nExcited to start this adventure!\n","permalink":"http://localhost:1313/posts/hello-world/","summary":"\u003cp\u003eHey! 👋 I\u0026rsquo;m \u003cstrong\u003emrb0b1073\u003c/strong\u003e and this is my first post.\u003c/p\u003e\n\u003cp\u003eWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\u003cbr\u003e\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\u003c/p\u003e\n\u003cp\u003eExcited to start this adventure!\u003c/p\u003e","title":"Hello World"},{"content":"Introduction If you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\nIn cybersecurity there are broadly two complementary roles: Blue Team and Red Team. Blue Teams focus on defense, monitoring, incident response, hardening systems and keeping services secure, while Red Teams simulate attackers to find weaknesses and prove what an adversary could do. Ethical hacking aligns closely with Red Team operations, but cybersecurity is highly transversal across IT. There are many specialities or areas, such as cloud security, appsec, pentesting, forensics, governance, risk management, malware analysis, etc. Every topic could deserve its own post, so let\u0026rsquo;s keep it simple and focus on ethical hacking.\nHacker philosophy Let\u0026rsquo;s start with the idea of what is exactly a hacker. A hacker is someone who explores systems to understand how they work, finds creative ways to make or fix things, and solves technical problems. Historically the word describes curiosity, craft, and a drive to improve systems — not criminality. It is important to make the distinction between hacker and cracker, also called cybercriminal. A hacker explores, builds, discloses responsibly and works to improve security. They work in authorized environments or labs. On the other hand, a cracker breaks into systems for theft, vandalism or other illicit gain.\nHere you can find the most popularized ideas often summarized as the hacker ethic:\nCuriosity first: Learn by exploring and tinkering. Freedom of information: All knowledge should be shared to help progress. This fits properly with the idea of open source. Mistrust of needless authority: Centralized control sometimes blocks innovation. It is always good to question anything, specially common assumptions. Meritocracy: Skills, craft and results matter more than titles. Craftsmanship \u0026amp; elegance: Technical beauty matters. Build clean, clever and efficient solutions. Responsability \u0026amp; ethics: Use your skills to build, fix, educate and defend, not to harm. Core fundamentals Assuming you want to init yourself in hacking, you should first build competence across three basic pillars.\nOperating Systems You should learn as much as possible about Linux and Windows. Specially Linux, all the tools you will be using are meant to be used in a Linux environment. Skill with shell is required, learn basic commands and how to interact with the OS using the terminal. Research about processes, file permissions, package management and logs. A large proportion of web servers around the world run on Linux, although Windows is also widely used. Windows knowledge is really valuable too, considering active directory is strongly used in corporate environments.\nNetworking You have to understand how computers communicate each other. Understand basic networking concepts, IP adresses, subnetting, proxies, find out how internet works. Study some protocols such as TCP/IP, HTTP, DNS or SSH. This could sound confusing for beginners, but this step is not optional! Study different client/server models and how services expose attack surfaces.\nProgramming \u0026amp; scripting Is this completely required? Maybe not for complete beginners. Does it help? Absolutely yes. Understanding how web apps or any type of application works makes things much easier. You can imagine different entry points to exploit if you understand how systems are designed. Also writing scripts in bash or python makes you more productive through automation.\nEthical Hacking foundations Once you feel confident with these 3 pillars, you can go to the next step. You can study about different topics and areas. For example, binary exploiting, web pentesting, mobile pentesting, wireless hacking, etc. You should start picking a focus, in this post we focus on web pentesting, as it is beginner friendly. Also web applications are the bread and butter in companies nowadays.\nKey concepts to study:\nCIA Triad: CIA refers to Confidentiality, Integrity and Availability. These three concepts are key in information security, and describe properties we want to ensure in our systems and information. Web Security basics, OWASP: Study the OWASP Top 10, which summarizes most frequent web security risks. Authentication and session control: Understand the concepts of Authentication and Authorization, research about how session is handled in web apps, cookies, JWT tokens, etc. Input validation \u0026amp; injection attacks: Learn about SQL Injection, Cross-Site Scripting (XSS), Code Injection, SSTI, and every injection type. Secure development lifecycle: Find out how to implement security controls in code. This can be more related to Blue Team, but as Red Teamer it is important to understand. Firewall evasion: What a firewall is and some techniques/methods to bypass. Some cryptography: Understand what a chiper and a hash are, how information is encrypted to prevent access from 3rd parties. Focusing on web, read about TLS protocol. There are many more topics you can research and learn, but this could be a nice starting point.\nTools and platforms to learn Now you have an idea of what to study, let\u0026rsquo;s see how to start in practical terms.\nSome platforms I personally recommend:\nOverTheWire: Here you can find some CTFs (Capture The Flag) which are fun to play and also really instructive. Bandit games are a must for complete beginners, as you will explore some linux and bash concepts which are basic to continue. The games are leveled by difficulty, in their web you can get all the information about how to play, only a terminal and SSH is required. This helps building your foundation in Linux OS. HackTheBox: Nº 1 platform in cybersecurity. Has a lot of resources to learn all this core fundamentals, and also red team / blue team security topics. It is focused on labs where you can test your skills hacking different boxes but if you really want to learn it is worth to invest time and money in the academy. I have to say the level here is high, specially if you try to hack machines on your own without using some guide or writeup. TryHackMe: More beginner friendly than hackthebox, it provides a lot of guided learning resources. PortSwigger Labs: Practical labs about specific topics, focused on web hacking. They are great to learn and understand different types of attacks, injections, and security misconfigurations. I would recommend digging into this once you have the theoretical basis about these concepts. I have to mention a few tools I am sure you\u0026rsquo;d end up using:\nNmap: This is probably the most famous tool in hacking, allowing you to gather information about ports and services running in a machine. Burpsuite: A proxy tool widely used in web application security testing. It basically allows you to intercept and modify web requests, which can be used to perform several types of attacks. Metasploit: The most used pentesting framework. Contains a large amount of scripts and exploits ready to run. Another crucial step here is to set up your virtual lab environment to test vulnerable applications. To achieve this goal, there are some Linux distributions like Kali, Parrot or BlackArch, but that\u0026rsquo;s a topic for another post.\nFinal thoughs To sum up, this would be my personal roadmap:\nLearn the fundamentals, specially Linux and networking. Install some Linux in a virtual machine, play with it, get comfortable with the terminal. You can start with bandit wargames in OverTheWire. Complete every level and make sure to understand everything as clear as possible. Move to guided boxes on HackTheBox. I recommend you joining their Discord, ask questions, community is great there! Take notes, repeat, learn, improve your skills. Maybe use your own lab environment, create your own vulnerable apps. Hacking is a mixing of curiosity, study and practice. Being passionate and motivated about it is really helpful and will definitely speed up the process. The path is long and really challenging, so keep it going!\n\u0026ldquo;Yes, I am a criminal. My crime is that of curiosity.\u0026rdquo; — The Mentor (Loyd Blankenship) at The Hacker Manifesto\n","permalink":"http://localhost:1313/posts/starting-point/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIf you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\u003c/p\u003e","title":"Starting Point"},{"content":"Introduction In this post series we are going to solve every level from bandit in OverTheWire This guide pretends to be a writeup containing the solutions of the level, designed for beginners.\nTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing WSL, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\nEvery section will contain the solution as well as some tips for people who is absolutely beginner.\nTips First of all, some tips:\nDo not use this as first resource to solve the levels. Try on your own, make mistakes and learn from them. Only check the solution as last resource or if you are completely new and you have absolutely no idea about what to do next. Take notes from your learning. Write up commands, tips and everything which can be useful in the future. Make sure to understand everything. Is a good idea to note the passwords for every level. If you want to continue letter, you can simply log in in the desired level. It is annoying to repeat everything! Follow the tips and information provided at OverTheWire website. Levels Here is my solution for every level:\nBandit0 Bandit1 Bandit2 Bandit3 Bandit4 Bandit5 Bandit6 ","permalink":"http://localhost:1313/posts/otw/bandit/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIn this post series we are going to solve every level from bandit in \u003ca href=\"https://overthewire.org/wargames/bandit/\"\u003e\u003cem\u003eOverTheWire\u003c/em\u003e\u003c/a\u003e\nThis guide pretends to be a writeup containing the solutions of the level, designed for beginners.\u003c/p\u003e\n\u003cp\u003eTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing \u003ca href=\"https://learn.microsoft.com/en-us/windows/wsl/install\"\u003eWSL\u003c/a\u003e, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\u003c/p\u003e","title":"Bandit"},{"content":"Level description The goal of this level is for you to log into the game using SSH. The host to which you need to connect is bandit.labs.overthewire.org, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\nTips for beginners Read a bit about what SSH is. Research about what a port is. Solution This is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go here.\nAt Linux, we can use ssh client to connect to the server. It should be installed by default on your system. If not, please first research about how to install. Once you have the SSH client installed, you can log in into the first level as follows:\nssh bandit0@bandit.labs.overthewire.org -p 2220 Syntax is simple: ssh \u0026lt;username\u0026gt;@\u0026lt;hostname\u0026gt; -p \u0026lt;port\u0026gt;. Usually SSH runs on port 22 by default, but they changed to port 2220 so we must specify it in the command.\nOnce you try to log in, you will see something like this: NB: If it\u0026rsquo;s the first time you try to log in, you will be asked about the authenticity of the host. Just type yes.\nType the password bandit0 and press enter. Now you are inside bandit server, ready to begin with bandit1!\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit0/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe goal of this level is for you to log into the game using SSH. The host to which you need to connect is \u003cstrong\u003ebandit.labs.overthewire.org\u003c/strong\u003e, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eRead a bit about what SSH is.\u003c/li\u003e\n\u003cli\u003eResearch about what a port is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go \u003ca href=\"https://en.wikipedia.org/wiki/Secure_Shell\"\u003ehere\u003c/a\u003e.\u003c/p\u003e","title":"Bandit0"},{"content":"Level description The password for the next level is stored in a file called readme located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\nTips for beginners Learn about home directory in Linux. Learn to use cat and ls commands. Solution First step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\nls This shows in terminal the files at the current directory. There you will see the readme file.\nNow we can to check the contents, so let\u0026rsquo;s use cat:\ncat readme To read a file, we use cat \u0026lt;filename\u0026gt;.\nNB: Not every file is human readable in Linux. We deep more about this in later levels.\nThe content of the readme file reveals the password for bandit2 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit1/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u003cstrong\u003ereadme\u003c/strong\u003e located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn about home directory in Linux.\u003c/li\u003e\n\u003cli\u003eLearn to use \u003ccode\u003ecat\u003c/code\u003e and \u003ccode\u003els\u003c/code\u003e commands.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eFirst step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\u003c/p\u003e","title":"Bandit1"},{"content":"Level description The password for the next level is stored in a file called - located in the home directory\nTips for beginners Try to understand why previous solution is not working as you expect. Solution You may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our cat command: The terminal is waiting for something else. This happens due to character - is used to pass arguments to our commands, and the linux shell is interpreting that. To prevent that, we could use:\ncat ./- NB: Dot . is used to refer current directory. The slash / is used at the end of directory name.\nWe get the password for bandit3 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit2/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called - located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eTry to understand why previous solution is not working as you expect.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eYou may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our \u003ccode\u003ecat\u003c/code\u003e command:\n\u003cimg alt=\"bandit2\" loading=\"lazy\" src=\"/images/otw/bandit/bandit2/0.png\"\u003e\u003c/p\u003e\n\u003cp\u003eThe terminal is \u003cem\u003ewaiting\u003c/em\u003e for something else. This happens due to character \u003ccode\u003e-\u003c/code\u003e is used to pass arguments to our commands, and the linux shell is interpreting that.\nTo prevent that, we could use:\u003c/p\u003e","title":"Bandit2"},{"content":"Level description The password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\nTips for beginners Think about how to escape the whitespaces. Solution After login in the machine as bandit3, we can see the filename \u0026ndash;spaces in this filename\u0026ndash;.\nNow we have 2 problems:\nSame as previous level, filename starts with --, so it will be interpreted as an argument. Address this problem using ./. Filename contains whitespaces. This is an issue, as bash interpretes whitespaces to separate commands. To solve the second problem, we must escape the whitespace character in some way. Here is the solution:\ncat ./--spaces\\ in\\ this\\ filename-- NB: Little trick, you can start writting filename and press Tab to autocomplete the name. The \\ is going to be inserted automatically.\nJust using the \\ we can escape the whitespace.\nNow we can continue with the bandit4 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit3/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eThink about how to \u003cem\u003eescape\u003c/em\u003e the whitespaces.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAfter login in the machine as bandit3, we can see the filename \u003cem\u003e\u0026ndash;spaces in this filename\u0026ndash;\u003c/em\u003e.\u003c/p\u003e\n\u003cp\u003eNow we have 2 problems:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eSame as previous level, filename starts with \u003ccode\u003e--\u003c/code\u003e, so it will be interpreted as an argument. Address this problem using \u003ccode\u003e./\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003eFilename contains \u003cstrong\u003ewhitespaces\u003c/strong\u003e. This is an issue, as bash interpretes whitespaces to separate commands.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eTo solve the second problem, we must escape the whitespace character in some way. Here is the solution:\u003c/p\u003e","title":"Bandit3"},{"content":"Level description The password for the next level is stored in a hidden file in the inhere directory.\nTips for beginners Learn how to navigate directories in Linux. First understand what a hidden file is. Solution Listing directory files inside bandit4\u0026rsquo;s home directory, show directory inhere.\nNB: How to distinguish files and directories in Linux? Use ls -l and see the difference.\nWe have 2 options now:\nMove to inhere directory and check contens again. Check contents directly. Moving to another directory can be done using cd \u0026lt;dirName\u0026gt;. If you prefer to check directory contents directly, use ls \u0026lt;dirName\u0026gt;.\nAfter checking inhere contents via ls, we see nothing. The reason is the file is a hidden file. A hidden file in Linux is everyfile whose name starts with dot .. Hidden files are not shown by default with ls command, so we must add a special flag -a to list all files: NB: Both flags -l and -a cna be combined into a single flag -al, which is shorter to type.\nAs you can see, filename is \u0026hellip;Hidding-From-You starting with three dots. Reading file contents should be easy at this point!\nNext level is bandit5.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit4/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a hidden file in the inhere directory.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to navigate directories in Linux.\u003c/li\u003e\n\u003cli\u003eFirst understand what a hidden file is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eListing directory files inside bandit4\u0026rsquo;s home directory, show directory \u003cstrong\u003einhere\u003c/strong\u003e.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e How to distinguish files and directories in Linux? Use \u003ccode\u003els -l\u003c/code\u003e and see the difference.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eWe have 2 options now:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eMove to inhere directory and check contens again.\u003c/li\u003e\n\u003cli\u003eCheck contents directly.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eMoving to another directory can be done using \u003ccode\u003ecd \u0026lt;dirName\u0026gt;\u003c/code\u003e. If you prefer to check directory contents directly, use \u003ccode\u003els \u0026lt;dirName\u0026gt;\u003c/code\u003e.\u003c/p\u003e","title":"Bandit4"},{"content":"Level description The password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\nTips for beginners What means human-readable file? Is there any way to check filetype at Linux?. Solution Checking inhere\u0026rsquo;s contents shows some files names \u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII here\nSo now, our goal is checking if file content of every file in the folder is ASCII or not. file \u0026lt;filename\u0026gt; does the job. Note the use of *. That called a wildcard regular expression, we\u0026rsquo;ll deep into it in later levels. An easy approach could be checking every file separately:\nfile ./--file00 file ./--file01 ... file ./--file09 But that\u0026rsquo;s not funny, imagine we have 100 files to check. All the files are in the same directory, so we can use cat ./* where ./* matches every filename in the directory, applying file to every file.\nNB: Another approach is to use find with certaing flags. Try to do in different ways, don\u0026rsquo;t stick to my solution.\nThe file \u0026ndash;file00 content is not readable, so get password from \u0026ndash;file07 and continue with bandit6.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit5/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eWhat means human-readable file?\u003c/li\u003e\n\u003cli\u003eIs there any way to check filetype at Linux?.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eChecking inhere\u0026rsquo;s contents shows some files names \u003cstrong\u003e\u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09\u003c/strong\u003e. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII \u003ca href=\"https://en.wikipedia.org/wiki/ASCII\"\u003ehere\u003c/a\u003e\u003c/p\u003e","title":"Bandit5"},{"content":"Level description The password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\nhuman-readable 1033 bytes in size not executable Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution The purpose of the level is showing us how to find for files. Listing contents of inhere, we can see some folders, containing a lot of files inside: NB: Adding -R to ls shows recursively the content of every folder inside the directory listed.\nSo this time, checking every file is not an option. We need to find a file with some properties, specific size, not excutable and human-readable. Let\u0026rsquo;s explain the command we\u0026rsquo;re using:\nfind inhere/ -size 1033c ! -executable First, we specify the directory, in this case inhere. The option -size 1033c returns files of 1033 bytes. Then, with -executable we would get executable files, but we want not executable files, that\u0026rsquo;s why we are adding ! before.\nNB: By default, the -size option takes as argument the number of blocks. For example, -size 2 means 2 blocks of 512 bytes, so its 1024. The c is used to specify exact bytes. Don\u0026rsquo;t ask me why it\u0026rsquo;s c and not b 😅.\nThe property of human-readability is not implemented in find. This is not an issue, previous command returns a single file and it is human readable (we could confirm using file): Extra tip: try to use the following:\nfind inhere/ -size 1033c ! -executable | file You get the same result! The pipe | is a great tool to execute 2+ commands in one line.\nGet your password and continue with bandit7.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit6-copy/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ehuman-readable\u003c/li\u003e\n\u003cli\u003e1033 bytes in size\u003c/li\u003e\n\u003cli\u003enot executable\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThe purpose of the level is showing us how to find for files. Listing contents of \u003cstrong\u003einhere\u003c/strong\u003e, we can see some folders, containing a lot of files inside:\n\u003cimg alt=\"bandit6_0\" loading=\"lazy\" src=\"/images/otw/bandit/bandit6/0.png\"\u003e\u003c/p\u003e","title":"Bandit6"},{"content":"Level description The password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\nhuman-readable 1033 bytes in size not executable Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution The purpose of the level is showing us how to find for files. Listing contents of inhere, we can see some folders, containing a lot of files inside: NB: Adding -R to ls shows recursively the content of every folder inside the directory listed.\nSo this time, checking every file is not an option. We need to find a file with some properties, specific size, not excutable and human-readable. Let\u0026rsquo;s explain the command we\u0026rsquo;re using:\nfind inhere/ -size 1033c ! -executable First, we specify the directory, in this case inhere. The option -size 1033c returns files of 1033 bytes. Then, with -executable we would get executable files, but we want not executable files, that\u0026rsquo;s why we are adding ! before.\nNB: By default, the -size option takes as argument the number of blocks. For example, -size 2 means 2 blocks of 512 bytes, so its 1024. The c is used to specify exact bytes. Don\u0026rsquo;t ask me why it\u0026rsquo;s c and not b 😅.\nThe property of human-readability is not implemented in find. This is not an issue, previous command returns a single file and it is human readable (we could confirm using file): Extra tip: try to use the following:\nfind inhere/ -size 1033c ! -executable | file You get the same result! The pipe | is a great tool to execute 2+ commands in one line.\nGet your password and continue with bandit7.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit6/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ehuman-readable\u003c/li\u003e\n\u003cli\u003e1033 bytes in size\u003c/li\u003e\n\u003cli\u003enot executable\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThe purpose of the level is showing us how to find for files. Listing contents of \u003cstrong\u003einhere\u003c/strong\u003e, we can see some folders, containing a lot of files inside:\n\u003cimg alt=\"bandit6_0\" loading=\"lazy\" src=\"/images/otw/bandit/bandit6/0.png\"\u003e\u003c/p\u003e","title":"Bandit6"},{"content":"👨‍💻 whoami Hey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\nWhat is this❓​ This blog is basically my thoughts on several hacking topics. Here you’ll see:\nWriteups from CTF challenges, from platforms like HackTheBox or OverTheWire.\nWalkthroughs and notes on pentesting techniques I’m learning or testing.\nSome posts on cryptography — because math can be fun (sometimes).\nRandom topics that freaks like me may (just may) find interesting.\nThe idea is simple: share what I learn, document my journey, and maybe help others who are also diving into the exciting world of ethical hacking.\n📫 Contact Want to say hi, share ideas, or just geek out about hacking? Reach me here:\n📧 Email: mrb0b1073@proton.me 💻​ GitHub: mrb0b173 🟩​ HackTheBox: mrb0b1073 ","permalink":"http://localhost:1313/about/","summary":"\u003ch2 id=\"-whoami\"\u003e👨‍💻 whoami\u003c/h2\u003e\n\u003cp\u003eHey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\u003c/p\u003e\n\u003chr\u003e\n\u003ch2 id=\"what-is-this\"\u003eWhat is this❓​\u003c/h2\u003e\n\u003cp\u003eThis blog is basically my thoughts on several hacking topics. Here you’ll see:\u003c/p\u003e","title":"About"},{"content":"Hey! 👋 I\u0026rsquo;m mrb0b1073 and this is my first post.\nWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\nExcited to start this adventure!\n","permalink":"http://localhost:1313/posts/hello-world/","summary":"\u003cp\u003eHey! 👋 I\u0026rsquo;m \u003cstrong\u003emrb0b1073\u003c/strong\u003e and this is my first post.\u003c/p\u003e\n\u003cp\u003eWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\u003cbr\u003e\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\u003c/p\u003e\n\u003cp\u003eExcited to start this adventure!\u003c/p\u003e","title":"Hello World"},{"content":"Introduction If you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\nIn cybersecurity there are broadly two complementary roles: Blue Team and Red Team. Blue Teams focus on defense, monitoring, incident response, hardening systems and keeping services secure, while Red Teams simulate attackers to find weaknesses and prove what an adversary could do. Ethical hacking aligns closely with Red Team operations, but cybersecurity is highly transversal across IT. There are many specialities or areas, such as cloud security, appsec, pentesting, forensics, governance, risk management, malware analysis, etc. Every topic could deserve its own post, so let\u0026rsquo;s keep it simple and focus on ethical hacking.\nHacker philosophy Let\u0026rsquo;s start with the idea of what is exactly a hacker. A hacker is someone who explores systems to understand how they work, finds creative ways to make or fix things, and solves technical problems. Historically the word describes curiosity, craft, and a drive to improve systems — not criminality. It is important to make the distinction between hacker and cracker, also called cybercriminal. A hacker explores, builds, discloses responsibly and works to improve security. They work in authorized environments or labs. On the other hand, a cracker breaks into systems for theft, vandalism or other illicit gain.\nHere you can find the most popularized ideas often summarized as the hacker ethic:\nCuriosity first: Learn by exploring and tinkering. Freedom of information: All knowledge should be shared to help progress. This fits properly with the idea of open source. Mistrust of needless authority: Centralized control sometimes blocks innovation. It is always good to question anything, specially common assumptions. Meritocracy: Skills, craft and results matter more than titles. Craftsmanship \u0026amp; elegance: Technical beauty matters. Build clean, clever and efficient solutions. Responsability \u0026amp; ethics: Use your skills to build, fix, educate and defend, not to harm. Core fundamentals Assuming you want to init yourself in hacking, you should first build competence across three basic pillars.\nOperating Systems You should learn as much as possible about Linux and Windows. Specially Linux, all the tools you will be using are meant to be used in a Linux environment. Skill with shell is required, learn basic commands and how to interact with the OS using the terminal. Research about processes, file permissions, package management and logs. A large proportion of web servers around the world run on Linux, although Windows is also widely used. Windows knowledge is really valuable too, considering active directory is strongly used in corporate environments.\nNetworking You have to understand how computers communicate each other. Understand basic networking concepts, IP adresses, subnetting, proxies, find out how internet works. Study some protocols such as TCP/IP, HTTP, DNS or SSH. This could sound confusing for beginners, but this step is not optional! Study different client/server models and how services expose attack surfaces.\nProgramming \u0026amp; scripting Is this completely required? Maybe not for complete beginners. Does it help? Absolutely yes. Understanding how web apps or any type of application works makes things much easier. You can imagine different entry points to exploit if you understand how systems are designed. Also writing scripts in bash or python makes you more productive through automation.\nEthical Hacking foundations Once you feel confident with these 3 pillars, you can go to the next step. You can study about different topics and areas. For example, binary exploiting, web pentesting, mobile pentesting, wireless hacking, etc. You should start picking a focus, in this post we focus on web pentesting, as it is beginner friendly. Also web applications are the bread and butter in companies nowadays.\nKey concepts to study:\nCIA Triad: CIA refers to Confidentiality, Integrity and Availability. These three concepts are key in information security, and describe properties we want to ensure in our systems and information. Web Security basics, OWASP: Study the OWASP Top 10, which summarizes most frequent web security risks. Authentication and session control: Understand the concepts of Authentication and Authorization, research about how session is handled in web apps, cookies, JWT tokens, etc. Input validation \u0026amp; injection attacks: Learn about SQL Injection, Cross-Site Scripting (XSS), Code Injection, SSTI, and every injection type. Secure development lifecycle: Find out how to implement security controls in code. This can be more related to Blue Team, but as Red Teamer it is important to understand. Firewall evasion: What a firewall is and some techniques/methods to bypass. Some cryptography: Understand what a chiper and a hash are, how information is encrypted to prevent access from 3rd parties. Focusing on web, read about TLS protocol. There are many more topics you can research and learn, but this could be a nice starting point.\nTools and platforms to learn Now you have an idea of what to study, let\u0026rsquo;s see how to start in practical terms.\nSome platforms I personally recommend:\nOverTheWire: Here you can find some CTFs (Capture The Flag) which are fun to play and also really instructive. Bandit games are a must for complete beginners, as you will explore some linux and bash concepts which are basic to continue. The games are leveled by difficulty, in their web you can get all the information about how to play, only a terminal and SSH is required. This helps building your foundation in Linux OS. HackTheBox: Nº 1 platform in cybersecurity. Has a lot of resources to learn all this core fundamentals, and also red team / blue team security topics. It is focused on labs where you can test your skills hacking different boxes but if you really want to learn it is worth to invest time and money in the academy. I have to say the level here is high, specially if you try to hack machines on your own without using some guide or writeup. TryHackMe: More beginner friendly than hackthebox, it provides a lot of guided learning resources. PortSwigger Labs: Practical labs about specific topics, focused on web hacking. They are great to learn and understand different types of attacks, injections, and security misconfigurations. I would recommend digging into this once you have the theoretical basis about these concepts. I have to mention a few tools I am sure you\u0026rsquo;d end up using:\nNmap: This is probably the most famous tool in hacking, allowing you to gather information about ports and services running in a machine. Burpsuite: A proxy tool widely used in web application security testing. It basically allows you to intercept and modify web requests, which can be used to perform several types of attacks. Metasploit: The most used pentesting framework. Contains a large amount of scripts and exploits ready to run. Another crucial step here is to set up your virtual lab environment to test vulnerable applications. To achieve this goal, there are some Linux distributions like Kali, Parrot or BlackArch, but that\u0026rsquo;s a topic for another post.\nFinal thoughs To sum up, this would be my personal roadmap:\nLearn the fundamentals, specially Linux and networking. Install some Linux in a virtual machine, play with it, get comfortable with the terminal. You can start with bandit wargames in OverTheWire. Complete every level and make sure to understand everything as clear as possible. Move to guided boxes on HackTheBox. I recommend you joining their Discord, ask questions, community is great there! Take notes, repeat, learn, improve your skills. Maybe use your own lab environment, create your own vulnerable apps. Hacking is a mixing of curiosity, study and practice. Being passionate and motivated about it is really helpful and will definitely speed up the process. The path is long and really challenging, so keep it going!\n\u0026ldquo;Yes, I am a criminal. My crime is that of curiosity.\u0026rdquo; — The Mentor (Loyd Blankenship) at The Hacker Manifesto\n","permalink":"http://localhost:1313/posts/starting-point/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIf you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\u003c/p\u003e","title":"Starting Point"},{"content":"Introduction In this post series we are going to solve every level from bandit in OverTheWire This guide pretends to be a writeup containing the solutions of the level, designed for beginners.\nTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing WSL, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\nEvery section will contain the solution as well as some tips for people who is absolutely beginner.\nTips First of all, some tips:\nDo not use this as first resource to solve the levels. Try on your own, make mistakes and learn from them. Only check the solution as last resource or if you are completely new and you have absolutely no idea about what to do next. Take notes from your learning. Write up commands, tips and everything which can be useful in the future. Make sure to understand everything. Is a good idea to note the passwords for every level. If you want to continue letter, you can simply log in in the desired level. It is annoying to repeat everything! Follow the tips and information provided at OverTheWire website. Levels Here is my solution for every level:\nBandit0 Bandit1 Bandit2 Bandit3 Bandit4 Bandit5 Bandit6 ","permalink":"http://localhost:1313/posts/otw/bandit/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIn this post series we are going to solve every level from bandit in \u003ca href=\"https://overthewire.org/wargames/bandit/\"\u003e\u003cem\u003eOverTheWire\u003c/em\u003e\u003c/a\u003e\nThis guide pretends to be a writeup containing the solutions of the level, designed for beginners.\u003c/p\u003e\n\u003cp\u003eTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing \u003ca href=\"https://learn.microsoft.com/en-us/windows/wsl/install\"\u003eWSL\u003c/a\u003e, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\u003c/p\u003e","title":"Bandit"},{"content":"Level description The goal of this level is for you to log into the game using SSH. The host to which you need to connect is bandit.labs.overthewire.org, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\nTips for beginners Read a bit about what SSH is. Research about what a port is. Solution This is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go here.\nAt Linux, we can use ssh client to connect to the server. It should be installed by default on your system. If not, please first research about how to install. Once you have the SSH client installed, you can log in into the first level as follows:\nssh bandit0@bandit.labs.overthewire.org -p 2220 Syntax is simple: ssh \u0026lt;username\u0026gt;@\u0026lt;hostname\u0026gt; -p \u0026lt;port\u0026gt;. Usually SSH runs on port 22 by default, but they changed to port 2220 so we must specify it in the command.\nOnce you try to log in, you will see something like this: NB: If it\u0026rsquo;s the first time you try to log in, you will be asked about the authenticity of the host. Just type yes.\nType the password bandit0 and press enter. Now you are inside bandit server, ready to begin with bandit1!\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit0/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe goal of this level is for you to log into the game using SSH. The host to which you need to connect is \u003cstrong\u003ebandit.labs.overthewire.org\u003c/strong\u003e, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eRead a bit about what SSH is.\u003c/li\u003e\n\u003cli\u003eResearch about what a port is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go \u003ca href=\"https://en.wikipedia.org/wiki/Secure_Shell\"\u003ehere\u003c/a\u003e.\u003c/p\u003e","title":"Bandit0"},{"content":"Level description The password for the next level is stored in a file called readme located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\nTips for beginners Learn about home directory in Linux. Learn to use cat and ls commands. Solution First step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\nls This shows in terminal the files at the current directory. There you will see the readme file.\nNow we can to check the contents, so let\u0026rsquo;s use cat:\ncat readme To read a file, we use cat \u0026lt;filename\u0026gt;.\nNB: Not every file is human readable in Linux. We deep more about this in later levels.\nThe content of the readme file reveals the password for bandit2 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit1/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u003cstrong\u003ereadme\u003c/strong\u003e located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn about home directory in Linux.\u003c/li\u003e\n\u003cli\u003eLearn to use \u003ccode\u003ecat\u003c/code\u003e and \u003ccode\u003els\u003c/code\u003e commands.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eFirst step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\u003c/p\u003e","title":"Bandit1"},{"content":"Level description The password for the next level is stored in a file called - located in the home directory\nTips for beginners Try to understand why previous solution is not working as you expect. Solution You may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our cat command: The terminal is waiting for something else. This happens due to character - is used to pass arguments to our commands, and the linux shell is interpreting that. To prevent that, we could use:\ncat ./- NB: Dot . is used to refer current directory. The slash / is used at the end of directory name.\nWe get the password for bandit3 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit2/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called - located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eTry to understand why previous solution is not working as you expect.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eYou may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our \u003ccode\u003ecat\u003c/code\u003e command:\n\u003cimg alt=\"bandit2\" loading=\"lazy\" src=\"/images/otw/bandit/bandit2/0.png\"\u003e\u003c/p\u003e\n\u003cp\u003eThe terminal is \u003cem\u003ewaiting\u003c/em\u003e for something else. This happens due to character \u003ccode\u003e-\u003c/code\u003e is used to pass arguments to our commands, and the linux shell is interpreting that.\nTo prevent that, we could use:\u003c/p\u003e","title":"Bandit2"},{"content":"Level description The password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\nTips for beginners Think about how to escape the whitespaces. Solution After login in the machine as bandit3, we can see the filename \u0026ndash;spaces in this filename\u0026ndash;.\nNow we have 2 problems:\nSame as previous level, filename starts with --, so it will be interpreted as an argument. Address this problem using ./. Filename contains whitespaces. This is an issue, as bash interpretes whitespaces to separate commands. To solve the second problem, we must escape the whitespace character in some way. Here is the solution:\ncat ./--spaces\\ in\\ this\\ filename-- NB: Little trick, you can start writting filename and press Tab to autocomplete the name. The \\ is going to be inserted automatically.\nJust using the \\ we can escape the whitespace.\nNow we can continue with the bandit4 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit3/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eThink about how to \u003cem\u003eescape\u003c/em\u003e the whitespaces.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAfter login in the machine as bandit3, we can see the filename \u003cem\u003e\u0026ndash;spaces in this filename\u0026ndash;\u003c/em\u003e.\u003c/p\u003e\n\u003cp\u003eNow we have 2 problems:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eSame as previous level, filename starts with \u003ccode\u003e--\u003c/code\u003e, so it will be interpreted as an argument. Address this problem using \u003ccode\u003e./\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003eFilename contains \u003cstrong\u003ewhitespaces\u003c/strong\u003e. This is an issue, as bash interpretes whitespaces to separate commands.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eTo solve the second problem, we must escape the whitespace character in some way. Here is the solution:\u003c/p\u003e","title":"Bandit3"},{"content":"Level description The password for the next level is stored in a hidden file in the inhere directory.\nTips for beginners Learn how to navigate directories in Linux. First understand what a hidden file is. Solution Listing directory files inside bandit4\u0026rsquo;s home directory, show directory inhere.\nNB: How to distinguish files and directories in Linux? Use ls -l and see the difference.\nWe have 2 options now:\nMove to inhere directory and check contens again. Check contents directly. Moving to another directory can be done using cd \u0026lt;dirName\u0026gt;. If you prefer to check directory contents directly, use ls \u0026lt;dirName\u0026gt;.\nAfter checking inhere contents via ls, we see nothing. The reason is the file is a hidden file. A hidden file in Linux is everyfile whose name starts with dot .. Hidden files are not shown by default with ls command, so we must add a special flag -a to list all files: NB: Both flags -l and -a cna be combined into a single flag -al, which is shorter to type.\nAs you can see, filename is \u0026hellip;Hidding-From-You starting with three dots. Reading file contents should be easy at this point!\nNext level is bandit5.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit4/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a hidden file in the inhere directory.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to navigate directories in Linux.\u003c/li\u003e\n\u003cli\u003eFirst understand what a hidden file is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eListing directory files inside bandit4\u0026rsquo;s home directory, show directory \u003cstrong\u003einhere\u003c/strong\u003e.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e How to distinguish files and directories in Linux? Use \u003ccode\u003els -l\u003c/code\u003e and see the difference.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eWe have 2 options now:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eMove to inhere directory and check contens again.\u003c/li\u003e\n\u003cli\u003eCheck contents directly.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eMoving to another directory can be done using \u003ccode\u003ecd \u0026lt;dirName\u0026gt;\u003c/code\u003e. If you prefer to check directory contents directly, use \u003ccode\u003els \u0026lt;dirName\u0026gt;\u003c/code\u003e.\u003c/p\u003e","title":"Bandit4"},{"content":"Level description The password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\nTips for beginners What means human-readable file? Is there any way to check filetype at Linux?. Solution Checking inhere\u0026rsquo;s contents shows some files names \u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII here\nSo now, our goal is checking if file content of every file in the folder is ASCII or not. file \u0026lt;filename\u0026gt; does the job. Note the use of *. That called a wildcard regular expression, we\u0026rsquo;ll deep into it in later levels. An easy approach could be checking every file separately:\nfile ./--file00 file ./--file01 ... file ./--file09 But that\u0026rsquo;s not funny, imagine we have 100 files to check. All the files are in the same directory, so we can use cat ./* where ./* matches every filename in the directory, applying file to every file.\nNB: Another approach is to use find with certaing flags. Try to do in different ways, don\u0026rsquo;t stick to my solution.\nThe file \u0026ndash;file00 content is not readable, so get password from \u0026ndash;file07 and continue with bandit6.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit5/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eWhat means human-readable file?\u003c/li\u003e\n\u003cli\u003eIs there any way to check filetype at Linux?.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eChecking inhere\u0026rsquo;s contents shows some files names \u003cstrong\u003e\u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09\u003c/strong\u003e. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII \u003ca href=\"https://en.wikipedia.org/wiki/ASCII\"\u003ehere\u003c/a\u003e\u003c/p\u003e","title":"Bandit5"},{"content":"Level description The password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\nhuman-readable 1033 bytes in size not executable Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution The purpose of the level is showing us how to find for files. Listing contents of inhere, we can see some folders, containing a lot of files inside: NB: Adding -R to ls shows recursively the content of every folder inside the directory listed.\nSo this time, checking every file is not an option. We need to find a file with some properties, specific size, not excutable and human-readable. Let\u0026rsquo;s explain the command we\u0026rsquo;re using:\nfind inhere/ -size 1033c ! -executable First, we specify the directory, in this case inhere. The option -size 1033c returns files of 1033 bytes. Then, with -executable we would get executable files, but we want not executable files, that\u0026rsquo;s why we are adding ! before.\nNB: By default, the -size option takes as argument the number of blocks. For example, -size 2 means 2 blocks of 512 bytes, so its 1024. The c is used to specify exact bytes. Don\u0026rsquo;t ask me why it\u0026rsquo;s c and not b 😅.\nThe property of human-readability is not implemented in find. This is not an issue, previous command returns a single file and it is human readable (we could confirm using file): Extra tip: try to use the following:\nfind inhere/ -size 1033c ! -executable | file You get the same result! The pipe | is a great tool to execute 2+ commands in one line.\nGet your password and continue with bandit7.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit6/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ehuman-readable\u003c/li\u003e\n\u003cli\u003e1033 bytes in size\u003c/li\u003e\n\u003cli\u003enot executable\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThe purpose of the level is showing us how to find for files. Listing contents of \u003cstrong\u003einhere\u003c/strong\u003e, we can see some folders, containing a lot of files inside:\n\u003cimg alt=\"bandit6_0\" loading=\"lazy\" src=\"/images/otw/bandit/bandit6/0.png\"\u003e\u003c/p\u003e","title":"Bandit6"},{"content":"Level description The password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\nhuman-readable 1033 bytes in size not executable Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution The purpose of the level is showing us how to find for files. Listing contents of inhere, we can see some folders, containing a lot of files inside: NB: Adding -R to ls shows recursively the content of every folder inside the directory listed.\nSo this time, checking every file is not an option. We need to find a file with some properties, specific size, not excutable and human-readable. Let\u0026rsquo;s explain the command we\u0026rsquo;re using:\nfind inhere/ -size 1033c ! -executable First, we specify the directory, in this case inhere. The option -size 1033c returns files of 1033 bytes. Then, with -executable we would get executable files, but we want not executable files, that\u0026rsquo;s why we are adding ! before.\nNB: By default, the -size option takes as argument the number of blocks. For example, -size 2 means 2 blocks of 512 bytes, so its 1024. The c is used to specify exact bytes. Don\u0026rsquo;t ask me why it\u0026rsquo;s c and not b 😅.\nThe property of human-readability is not implemented in find. This is not an issue, previous command returns a single file and it is human readable (we could confirm using file): Extra tip: try to use the following:\nfind inhere/ -size 1033c ! -executable | file You get the same result! The pipe | is a great tool to execute 2+ commands in one line.\nGet your password and continue with bandit7.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit7/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ehuman-readable\u003c/li\u003e\n\u003cli\u003e1033 bytes in size\u003c/li\u003e\n\u003cli\u003enot executable\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThe purpose of the level is showing us how to find for files. Listing contents of \u003cstrong\u003einhere\u003c/strong\u003e, we can see some folders, containing a lot of files inside:\n\u003cimg alt=\"bandit6_0\" loading=\"lazy\" src=\"/images/otw/bandit/bandit6/0.png\"\u003e\u003c/p\u003e","title":"Bandit6"},{"content":"👨‍💻 whoami Hey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\nWhat is this❓​ This blog is basically my thoughts on several hacking topics. Here you’ll see:\nWriteups from CTF challenges, from platforms like HackTheBox or OverTheWire.\nWalkthroughs and notes on pentesting techniques I’m learning or testing.\nSome posts on cryptography — because math can be fun (sometimes).\nRandom topics that freaks like me may (just may) find interesting.\nThe idea is simple: share what I learn, document my journey, and maybe help others who are also diving into the exciting world of ethical hacking.\n📫 Contact Want to say hi, share ideas, or just geek out about hacking? Reach me here:\n📧 Email: mrb0b1073@proton.me 💻​ GitHub: mrb0b173 🟩​ HackTheBox: mrb0b1073 ","permalink":"http://localhost:1313/about/","summary":"\u003ch2 id=\"-whoami\"\u003e👨‍💻 whoami\u003c/h2\u003e\n\u003cp\u003eHey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\u003c/p\u003e\n\u003chr\u003e\n\u003ch2 id=\"what-is-this\"\u003eWhat is this❓​\u003c/h2\u003e\n\u003cp\u003eThis blog is basically my thoughts on several hacking topics. Here you’ll see:\u003c/p\u003e","title":"About"},{"content":"Hey! 👋 I\u0026rsquo;m mrb0b1073 and this is my first post.\nWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\nExcited to start this adventure!\n","permalink":"http://localhost:1313/posts/hello-world/","summary":"\u003cp\u003eHey! 👋 I\u0026rsquo;m \u003cstrong\u003emrb0b1073\u003c/strong\u003e and this is my first post.\u003c/p\u003e\n\u003cp\u003eWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\u003cbr\u003e\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\u003c/p\u003e\n\u003cp\u003eExcited to start this adventure!\u003c/p\u003e","title":"Hello World"},{"content":"Introduction If you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\nIn cybersecurity there are broadly two complementary roles: Blue Team and Red Team. Blue Teams focus on defense, monitoring, incident response, hardening systems and keeping services secure, while Red Teams simulate attackers to find weaknesses and prove what an adversary could do. Ethical hacking aligns closely with Red Team operations, but cybersecurity is highly transversal across IT. There are many specialities or areas, such as cloud security, appsec, pentesting, forensics, governance, risk management, malware analysis, etc. Every topic could deserve its own post, so let\u0026rsquo;s keep it simple and focus on ethical hacking.\nHacker philosophy Let\u0026rsquo;s start with the idea of what is exactly a hacker. A hacker is someone who explores systems to understand how they work, finds creative ways to make or fix things, and solves technical problems. Historically the word describes curiosity, craft, and a drive to improve systems — not criminality. It is important to make the distinction between hacker and cracker, also called cybercriminal. A hacker explores, builds, discloses responsibly and works to improve security. They work in authorized environments or labs. On the other hand, a cracker breaks into systems for theft, vandalism or other illicit gain.\nHere you can find the most popularized ideas often summarized as the hacker ethic:\nCuriosity first: Learn by exploring and tinkering. Freedom of information: All knowledge should be shared to help progress. This fits properly with the idea of open source. Mistrust of needless authority: Centralized control sometimes blocks innovation. It is always good to question anything, specially common assumptions. Meritocracy: Skills, craft and results matter more than titles. Craftsmanship \u0026amp; elegance: Technical beauty matters. Build clean, clever and efficient solutions. Responsability \u0026amp; ethics: Use your skills to build, fix, educate and defend, not to harm. Core fundamentals Assuming you want to init yourself in hacking, you should first build competence across three basic pillars.\nOperating Systems You should learn as much as possible about Linux and Windows. Specially Linux, all the tools you will be using are meant to be used in a Linux environment. Skill with shell is required, learn basic commands and how to interact with the OS using the terminal. Research about processes, file permissions, package management and logs. A large proportion of web servers around the world run on Linux, although Windows is also widely used. Windows knowledge is really valuable too, considering active directory is strongly used in corporate environments.\nNetworking You have to understand how computers communicate each other. Understand basic networking concepts, IP adresses, subnetting, proxies, find out how internet works. Study some protocols such as TCP/IP, HTTP, DNS or SSH. This could sound confusing for beginners, but this step is not optional! Study different client/server models and how services expose attack surfaces.\nProgramming \u0026amp; scripting Is this completely required? Maybe not for complete beginners. Does it help? Absolutely yes. Understanding how web apps or any type of application works makes things much easier. You can imagine different entry points to exploit if you understand how systems are designed. Also writing scripts in bash or python makes you more productive through automation.\nEthical Hacking foundations Once you feel confident with these 3 pillars, you can go to the next step. You can study about different topics and areas. For example, binary exploiting, web pentesting, mobile pentesting, wireless hacking, etc. You should start picking a focus, in this post we focus on web pentesting, as it is beginner friendly. Also web applications are the bread and butter in companies nowadays.\nKey concepts to study:\nCIA Triad: CIA refers to Confidentiality, Integrity and Availability. These three concepts are key in information security, and describe properties we want to ensure in our systems and information. Web Security basics, OWASP: Study the OWASP Top 10, which summarizes most frequent web security risks. Authentication and session control: Understand the concepts of Authentication and Authorization, research about how session is handled in web apps, cookies, JWT tokens, etc. Input validation \u0026amp; injection attacks: Learn about SQL Injection, Cross-Site Scripting (XSS), Code Injection, SSTI, and every injection type. Secure development lifecycle: Find out how to implement security controls in code. This can be more related to Blue Team, but as Red Teamer it is important to understand. Firewall evasion: What a firewall is and some techniques/methods to bypass. Some cryptography: Understand what a chiper and a hash are, how information is encrypted to prevent access from 3rd parties. Focusing on web, read about TLS protocol. There are many more topics you can research and learn, but this could be a nice starting point.\nTools and platforms to learn Now you have an idea of what to study, let\u0026rsquo;s see how to start in practical terms.\nSome platforms I personally recommend:\nOverTheWire: Here you can find some CTFs (Capture The Flag) which are fun to play and also really instructive. Bandit games are a must for complete beginners, as you will explore some linux and bash concepts which are basic to continue. The games are leveled by difficulty, in their web you can get all the information about how to play, only a terminal and SSH is required. This helps building your foundation in Linux OS. HackTheBox: Nº 1 platform in cybersecurity. Has a lot of resources to learn all this core fundamentals, and also red team / blue team security topics. It is focused on labs where you can test your skills hacking different boxes but if you really want to learn it is worth to invest time and money in the academy. I have to say the level here is high, specially if you try to hack machines on your own without using some guide or writeup. TryHackMe: More beginner friendly than hackthebox, it provides a lot of guided learning resources. PortSwigger Labs: Practical labs about specific topics, focused on web hacking. They are great to learn and understand different types of attacks, injections, and security misconfigurations. I would recommend digging into this once you have the theoretical basis about these concepts. I have to mention a few tools I am sure you\u0026rsquo;d end up using:\nNmap: This is probably the most famous tool in hacking, allowing you to gather information about ports and services running in a machine. Burpsuite: A proxy tool widely used in web application security testing. It basically allows you to intercept and modify web requests, which can be used to perform several types of attacks. Metasploit: The most used pentesting framework. Contains a large amount of scripts and exploits ready to run. Another crucial step here is to set up your virtual lab environment to test vulnerable applications. To achieve this goal, there are some Linux distributions like Kali, Parrot or BlackArch, but that\u0026rsquo;s a topic for another post.\nFinal thoughs To sum up, this would be my personal roadmap:\nLearn the fundamentals, specially Linux and networking. Install some Linux in a virtual machine, play with it, get comfortable with the terminal. You can start with bandit wargames in OverTheWire. Complete every level and make sure to understand everything as clear as possible. Move to guided boxes on HackTheBox. I recommend you joining their Discord, ask questions, community is great there! Take notes, repeat, learn, improve your skills. Maybe use your own lab environment, create your own vulnerable apps. Hacking is a mixing of curiosity, study and practice. Being passionate and motivated about it is really helpful and will definitely speed up the process. The path is long and really challenging, so keep it going!\n\u0026ldquo;Yes, I am a criminal. My crime is that of curiosity.\u0026rdquo; — The Mentor (Loyd Blankenship) at The Hacker Manifesto\n","permalink":"http://localhost:1313/posts/starting-point/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIf you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\u003c/p\u003e","title":"Starting Point"},{"content":"Introduction In this post series we are going to solve every level from bandit in OverTheWire This guide pretends to be a writeup containing the solutions of the level, designed for beginners.\nTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing WSL, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\nEvery section will contain the solution as well as some tips for people who is absolutely beginner.\nTips First of all, some tips:\nDo not use this as first resource to solve the levels. Try on your own, make mistakes and learn from them. Only check the solution as last resource or if you are completely new and you have absolutely no idea about what to do next. Take notes from your learning. Write up commands, tips and everything which can be useful in the future. Make sure to understand everything. Is a good idea to note the passwords for every level. If you want to continue letter, you can simply log in in the desired level. It is annoying to repeat everything! Follow the tips and information provided at OverTheWire website. Levels Here is my solution for every level:\nBandit0 Bandit1 Bandit2 Bandit3 Bandit4 Bandit5 Bandit6 ","permalink":"http://localhost:1313/posts/otw/bandit/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIn this post series we are going to solve every level from bandit in \u003ca href=\"https://overthewire.org/wargames/bandit/\"\u003e\u003cem\u003eOverTheWire\u003c/em\u003e\u003c/a\u003e\nThis guide pretends to be a writeup containing the solutions of the level, designed for beginners.\u003c/p\u003e\n\u003cp\u003eTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing \u003ca href=\"https://learn.microsoft.com/en-us/windows/wsl/install\"\u003eWSL\u003c/a\u003e, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\u003c/p\u003e","title":"Bandit"},{"content":"Level description The goal of this level is for you to log into the game using SSH. The host to which you need to connect is bandit.labs.overthewire.org, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\nTips for beginners Read a bit about what SSH is. Research about what a port is. Solution This is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go here.\nAt Linux, we can use ssh client to connect to the server. It should be installed by default on your system. If not, please first research about how to install. Once you have the SSH client installed, you can log in into the first level as follows:\nssh bandit0@bandit.labs.overthewire.org -p 2220 Syntax is simple: ssh \u0026lt;username\u0026gt;@\u0026lt;hostname\u0026gt; -p \u0026lt;port\u0026gt;. Usually SSH runs on port 22 by default, but they changed to port 2220 so we must specify it in the command.\nOnce you try to log in, you will see something like this: NB: If it\u0026rsquo;s the first time you try to log in, you will be asked about the authenticity of the host. Just type yes.\nType the password bandit0 and press enter. Now you are inside bandit server, ready to begin with bandit1!\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit0/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe goal of this level is for you to log into the game using SSH. The host to which you need to connect is \u003cstrong\u003ebandit.labs.overthewire.org\u003c/strong\u003e, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eRead a bit about what SSH is.\u003c/li\u003e\n\u003cli\u003eResearch about what a port is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go \u003ca href=\"https://en.wikipedia.org/wiki/Secure_Shell\"\u003ehere\u003c/a\u003e.\u003c/p\u003e","title":"Bandit0"},{"content":"Level description The password for the next level is stored in a file called readme located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\nTips for beginners Learn about home directory in Linux. Learn to use cat and ls commands. Solution First step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\nls This shows in terminal the files at the current directory. There you will see the readme file.\nNow we can to check the contents, so let\u0026rsquo;s use cat:\ncat readme To read a file, we use cat \u0026lt;filename\u0026gt;.\nNB: Not every file is human readable in Linux. We deep more about this in later levels.\nThe content of the readme file reveals the password for bandit2 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit1/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u003cstrong\u003ereadme\u003c/strong\u003e located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn about home directory in Linux.\u003c/li\u003e\n\u003cli\u003eLearn to use \u003ccode\u003ecat\u003c/code\u003e and \u003ccode\u003els\u003c/code\u003e commands.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eFirst step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\u003c/p\u003e","title":"Bandit1"},{"content":"Level description The password for the next level is stored in a file called - located in the home directory\nTips for beginners Try to understand why previous solution is not working as you expect. Solution You may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our cat command: The terminal is waiting for something else. This happens due to character - is used to pass arguments to our commands, and the linux shell is interpreting that. To prevent that, we could use:\ncat ./- NB: Dot . is used to refer current directory. The slash / is used at the end of directory name.\nWe get the password for bandit3 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit2/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called - located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eTry to understand why previous solution is not working as you expect.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eYou may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our \u003ccode\u003ecat\u003c/code\u003e command:\n\u003cimg alt=\"bandit2\" loading=\"lazy\" src=\"/images/otw/bandit/bandit2/0.png\"\u003e\u003c/p\u003e\n\u003cp\u003eThe terminal is \u003cem\u003ewaiting\u003c/em\u003e for something else. This happens due to character \u003ccode\u003e-\u003c/code\u003e is used to pass arguments to our commands, and the linux shell is interpreting that.\nTo prevent that, we could use:\u003c/p\u003e","title":"Bandit2"},{"content":"Level description The password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\nTips for beginners Think about how to escape the whitespaces. Solution After login in the machine as bandit3, we can see the filename \u0026ndash;spaces in this filename\u0026ndash;.\nNow we have 2 problems:\nSame as previous level, filename starts with --, so it will be interpreted as an argument. Address this problem using ./. Filename contains whitespaces. This is an issue, as bash interpretes whitespaces to separate commands. To solve the second problem, we must escape the whitespace character in some way. Here is the solution:\ncat ./--spaces\\ in\\ this\\ filename-- NB: Little trick, you can start writting filename and press Tab to autocomplete the name. The \\ is going to be inserted automatically.\nJust using the \\ we can escape the whitespace.\nNow we can continue with the bandit4 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit3/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eThink about how to \u003cem\u003eescape\u003c/em\u003e the whitespaces.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAfter login in the machine as bandit3, we can see the filename \u003cem\u003e\u0026ndash;spaces in this filename\u0026ndash;\u003c/em\u003e.\u003c/p\u003e\n\u003cp\u003eNow we have 2 problems:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eSame as previous level, filename starts with \u003ccode\u003e--\u003c/code\u003e, so it will be interpreted as an argument. Address this problem using \u003ccode\u003e./\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003eFilename contains \u003cstrong\u003ewhitespaces\u003c/strong\u003e. This is an issue, as bash interpretes whitespaces to separate commands.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eTo solve the second problem, we must escape the whitespace character in some way. Here is the solution:\u003c/p\u003e","title":"Bandit3"},{"content":"Level description The password for the next level is stored in a hidden file in the inhere directory.\nTips for beginners Learn how to navigate directories in Linux. First understand what a hidden file is. Solution Listing directory files inside bandit4\u0026rsquo;s home directory, show directory inhere.\nNB: How to distinguish files and directories in Linux? Use ls -l and see the difference.\nWe have 2 options now:\nMove to inhere directory and check contens again. Check contents directly. Moving to another directory can be done using cd \u0026lt;dirName\u0026gt;. If you prefer to check directory contents directly, use ls \u0026lt;dirName\u0026gt;.\nAfter checking inhere contents via ls, we see nothing. The reason is the file is a hidden file. A hidden file in Linux is everyfile whose name starts with dot .. Hidden files are not shown by default with ls command, so we must add a special flag -a to list all files: NB: Both flags -l and -a cna be combined into a single flag -al, which is shorter to type.\nAs you can see, filename is \u0026hellip;Hidding-From-You starting with three dots. Reading file contents should be easy at this point!\nNext level is bandit5.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit4/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a hidden file in the inhere directory.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to navigate directories in Linux.\u003c/li\u003e\n\u003cli\u003eFirst understand what a hidden file is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eListing directory files inside bandit4\u0026rsquo;s home directory, show directory \u003cstrong\u003einhere\u003c/strong\u003e.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e How to distinguish files and directories in Linux? Use \u003ccode\u003els -l\u003c/code\u003e and see the difference.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eWe have 2 options now:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eMove to inhere directory and check contens again.\u003c/li\u003e\n\u003cli\u003eCheck contents directly.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eMoving to another directory can be done using \u003ccode\u003ecd \u0026lt;dirName\u0026gt;\u003c/code\u003e. If you prefer to check directory contents directly, use \u003ccode\u003els \u0026lt;dirName\u0026gt;\u003c/code\u003e.\u003c/p\u003e","title":"Bandit4"},{"content":"Level description The password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\nTips for beginners What means human-readable file? Is there any way to check filetype at Linux?. Solution Checking inhere\u0026rsquo;s contents shows some files names \u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII here\nSo now, our goal is checking if file content of every file in the folder is ASCII or not. file \u0026lt;filename\u0026gt; does the job. Note the use of *. That called a wildcard regular expression, we\u0026rsquo;ll deep into it in later levels. An easy approach could be checking every file separately:\nfile ./--file00 file ./--file01 ... file ./--file09 But that\u0026rsquo;s not funny, imagine we have 100 files to check. All the files are in the same directory, so we can use cat ./* where ./* matches every filename in the directory, applying file to every file.\nNB: Another approach is to use find with certaing flags. Try to do in different ways, don\u0026rsquo;t stick to my solution.\nThe file \u0026ndash;file00 content is not readable, so get password from \u0026ndash;file07 and continue with bandit6.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit5/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eWhat means human-readable file?\u003c/li\u003e\n\u003cli\u003eIs there any way to check filetype at Linux?.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eChecking inhere\u0026rsquo;s contents shows some files names \u003cstrong\u003e\u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09\u003c/strong\u003e. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII \u003ca href=\"https://en.wikipedia.org/wiki/ASCII\"\u003ehere\u003c/a\u003e\u003c/p\u003e","title":"Bandit5"},{"content":"Level description The password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\nhuman-readable 1033 bytes in size not executable Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution The purpose of the level is showing us how to find for files. Listing contents of inhere, we can see some folders, containing a lot of files inside: NB: Adding -R to ls shows recursively the content of every folder inside the directory listed.\nSo this time, checking every file is not an option. We need to find a file with some properties, specific size, not excutable and human-readable. Let\u0026rsquo;s explain the command we\u0026rsquo;re using:\nfind inhere/ -size 1033c ! -executable First, we specify the directory, in this case inhere. The option -size 1033c returns files of 1033 bytes. Then, with -executable we would get executable files, but we want not executable files, that\u0026rsquo;s why we are adding ! before.\nNB: By default, the -size option takes as argument the number of blocks. For example, -size 2 means 2 blocks of 512 bytes, so its 1024. The c is used to specify exact bytes. Don\u0026rsquo;t ask me why it\u0026rsquo;s c and not b 😅.\nThe property of human-readability is not implemented in find. This is not an issue, previous command returns a single file and it is human readable (we could confirm using file): Extra tip: try to use the following:\nfind inhere/ -size 1033c ! -executable | file You get the same result! The pipe | is a great tool to execute 2+ commands in one line.\nGet your password and continue with bandit7.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit6/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ehuman-readable\u003c/li\u003e\n\u003cli\u003e1033 bytes in size\u003c/li\u003e\n\u003cli\u003enot executable\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThe purpose of the level is showing us how to find for files. Listing contents of \u003cstrong\u003einhere\u003c/strong\u003e, we can see some folders, containing a lot of files inside:\n\u003cimg alt=\"bandit6_0\" loading=\"lazy\" src=\"/images/otw/bandit/bandit6/0.png\"\u003e\u003c/p\u003e","title":"Bandit6"},{"content":"Level description The password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\nhuman-readable 1033 bytes in size not executable Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution The purpose of the level is showing us how to find for files. Listing contents of inhere, we can see some folders, containing a lot of files inside: NB: Adding -R to ls shows recursively the content of every folder inside the directory listed.\nSo this time, checking every file is not an option. We need to find a file with some properties, specific size, not excutable and human-readable. Let\u0026rsquo;s explain the command we\u0026rsquo;re using:\nfind inhere/ -size 1033c ! -executable First, we specify the directory, in this case inhere. The option -size 1033c returns files of 1033 bytes. Then, with -executable we would get executable files, but we want not executable files, that\u0026rsquo;s why we are adding ! before.\nNB: By default, the -size option takes as argument the number of blocks. For example, -size 2 means 2 blocks of 512 bytes, so its 1024. The c is used to specify exact bytes. Don\u0026rsquo;t ask me why it\u0026rsquo;s c and not b 😅.\nThe property of human-readability is not implemented in find. This is not an issue, previous command returns a single file and it is human readable (we could confirm using file): Extra tip: try to use the following:\nfind inhere/ -size 1033c ! -executable | file You get the same result! The pipe | is a great tool to execute 2+ commands in one line.\nGet your password and continue with bandit7.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit7/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ehuman-readable\u003c/li\u003e\n\u003cli\u003e1033 bytes in size\u003c/li\u003e\n\u003cli\u003enot executable\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThe purpose of the level is showing us how to find for files. Listing contents of \u003cstrong\u003einhere\u003c/strong\u003e, we can see some folders, containing a lot of files inside:\n\u003cimg alt=\"bandit6_0\" loading=\"lazy\" src=\"/images/otw/bandit/bandit6/0.png\"\u003e\u003c/p\u003e","title":"Bandit6"},{"content":"👨‍💻 whoami Hey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\nWhat is this❓​ This blog is basically my thoughts on several hacking topics. Here you’ll see:\nWriteups from CTF challenges, from platforms like HackTheBox or OverTheWire.\nWalkthroughs and notes on pentesting techniques I’m learning or testing.\nSome posts on cryptography — because math can be fun (sometimes).\nRandom topics that freaks like me may (just may) find interesting.\nThe idea is simple: share what I learn, document my journey, and maybe help others who are also diving into the exciting world of ethical hacking.\n📫 Contact Want to say hi, share ideas, or just geek out about hacking? Reach me here:\n📧 Email: mrb0b1073@proton.me 💻​ GitHub: mrb0b173 🟩​ HackTheBox: mrb0b1073 ","permalink":"http://localhost:1313/about/","summary":"\u003ch2 id=\"-whoami\"\u003e👨‍💻 whoami\u003c/h2\u003e\n\u003cp\u003eHey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\u003c/p\u003e\n\u003chr\u003e\n\u003ch2 id=\"what-is-this\"\u003eWhat is this❓​\u003c/h2\u003e\n\u003cp\u003eThis blog is basically my thoughts on several hacking topics. Here you’ll see:\u003c/p\u003e","title":"About"},{"content":"Hey! 👋 I\u0026rsquo;m mrb0b1073 and this is my first post.\nWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\nExcited to start this adventure!\n","permalink":"http://localhost:1313/posts/hello-world/","summary":"\u003cp\u003eHey! 👋 I\u0026rsquo;m \u003cstrong\u003emrb0b1073\u003c/strong\u003e and this is my first post.\u003c/p\u003e\n\u003cp\u003eWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\u003cbr\u003e\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\u003c/p\u003e\n\u003cp\u003eExcited to start this adventure!\u003c/p\u003e","title":"Hello World"},{"content":"Introduction If you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\nIn cybersecurity there are broadly two complementary roles: Blue Team and Red Team. Blue Teams focus on defense, monitoring, incident response, hardening systems and keeping services secure, while Red Teams simulate attackers to find weaknesses and prove what an adversary could do. Ethical hacking aligns closely with Red Team operations, but cybersecurity is highly transversal across IT. There are many specialities or areas, such as cloud security, appsec, pentesting, forensics, governance, risk management, malware analysis, etc. Every topic could deserve its own post, so let\u0026rsquo;s keep it simple and focus on ethical hacking.\nHacker philosophy Let\u0026rsquo;s start with the idea of what is exactly a hacker. A hacker is someone who explores systems to understand how they work, finds creative ways to make or fix things, and solves technical problems. Historically the word describes curiosity, craft, and a drive to improve systems — not criminality. It is important to make the distinction between hacker and cracker, also called cybercriminal. A hacker explores, builds, discloses responsibly and works to improve security. They work in authorized environments or labs. On the other hand, a cracker breaks into systems for theft, vandalism or other illicit gain.\nHere you can find the most popularized ideas often summarized as the hacker ethic:\nCuriosity first: Learn by exploring and tinkering. Freedom of information: All knowledge should be shared to help progress. This fits properly with the idea of open source. Mistrust of needless authority: Centralized control sometimes blocks innovation. It is always good to question anything, specially common assumptions. Meritocracy: Skills, craft and results matter more than titles. Craftsmanship \u0026amp; elegance: Technical beauty matters. Build clean, clever and efficient solutions. Responsability \u0026amp; ethics: Use your skills to build, fix, educate and defend, not to harm. Core fundamentals Assuming you want to init yourself in hacking, you should first build competence across three basic pillars.\nOperating Systems You should learn as much as possible about Linux and Windows. Specially Linux, all the tools you will be using are meant to be used in a Linux environment. Skill with shell is required, learn basic commands and how to interact with the OS using the terminal. Research about processes, file permissions, package management and logs. A large proportion of web servers around the world run on Linux, although Windows is also widely used. Windows knowledge is really valuable too, considering active directory is strongly used in corporate environments.\nNetworking You have to understand how computers communicate each other. Understand basic networking concepts, IP adresses, subnetting, proxies, find out how internet works. Study some protocols such as TCP/IP, HTTP, DNS or SSH. This could sound confusing for beginners, but this step is not optional! Study different client/server models and how services expose attack surfaces.\nProgramming \u0026amp; scripting Is this completely required? Maybe not for complete beginners. Does it help? Absolutely yes. Understanding how web apps or any type of application works makes things much easier. You can imagine different entry points to exploit if you understand how systems are designed. Also writing scripts in bash or python makes you more productive through automation.\nEthical Hacking foundations Once you feel confident with these 3 pillars, you can go to the next step. You can study about different topics and areas. For example, binary exploiting, web pentesting, mobile pentesting, wireless hacking, etc. You should start picking a focus, in this post we focus on web pentesting, as it is beginner friendly. Also web applications are the bread and butter in companies nowadays.\nKey concepts to study:\nCIA Triad: CIA refers to Confidentiality, Integrity and Availability. These three concepts are key in information security, and describe properties we want to ensure in our systems and information. Web Security basics, OWASP: Study the OWASP Top 10, which summarizes most frequent web security risks. Authentication and session control: Understand the concepts of Authentication and Authorization, research about how session is handled in web apps, cookies, JWT tokens, etc. Input validation \u0026amp; injection attacks: Learn about SQL Injection, Cross-Site Scripting (XSS), Code Injection, SSTI, and every injection type. Secure development lifecycle: Find out how to implement security controls in code. This can be more related to Blue Team, but as Red Teamer it is important to understand. Firewall evasion: What a firewall is and some techniques/methods to bypass. Some cryptography: Understand what a chiper and a hash are, how information is encrypted to prevent access from 3rd parties. Focusing on web, read about TLS protocol. There are many more topics you can research and learn, but this could be a nice starting point.\nTools and platforms to learn Now you have an idea of what to study, let\u0026rsquo;s see how to start in practical terms.\nSome platforms I personally recommend:\nOverTheWire: Here you can find some CTFs (Capture The Flag) which are fun to play and also really instructive. Bandit games are a must for complete beginners, as you will explore some linux and bash concepts which are basic to continue. The games are leveled by difficulty, in their web you can get all the information about how to play, only a terminal and SSH is required. This helps building your foundation in Linux OS. HackTheBox: Nº 1 platform in cybersecurity. Has a lot of resources to learn all this core fundamentals, and also red team / blue team security topics. It is focused on labs where you can test your skills hacking different boxes but if you really want to learn it is worth to invest time and money in the academy. I have to say the level here is high, specially if you try to hack machines on your own without using some guide or writeup. TryHackMe: More beginner friendly than hackthebox, it provides a lot of guided learning resources. PortSwigger Labs: Practical labs about specific topics, focused on web hacking. They are great to learn and understand different types of attacks, injections, and security misconfigurations. I would recommend digging into this once you have the theoretical basis about these concepts. I have to mention a few tools I am sure you\u0026rsquo;d end up using:\nNmap: This is probably the most famous tool in hacking, allowing you to gather information about ports and services running in a machine. Burpsuite: A proxy tool widely used in web application security testing. It basically allows you to intercept and modify web requests, which can be used to perform several types of attacks. Metasploit: The most used pentesting framework. Contains a large amount of scripts and exploits ready to run. Another crucial step here is to set up your virtual lab environment to test vulnerable applications. To achieve this goal, there are some Linux distributions like Kali, Parrot or BlackArch, but that\u0026rsquo;s a topic for another post.\nFinal thoughs To sum up, this would be my personal roadmap:\nLearn the fundamentals, specially Linux and networking. Install some Linux in a virtual machine, play with it, get comfortable with the terminal. You can start with bandit wargames in OverTheWire. Complete every level and make sure to understand everything as clear as possible. Move to guided boxes on HackTheBox. I recommend you joining their Discord, ask questions, community is great there! Take notes, repeat, learn, improve your skills. Maybe use your own lab environment, create your own vulnerable apps. Hacking is a mixing of curiosity, study and practice. Being passionate and motivated about it is really helpful and will definitely speed up the process. The path is long and really challenging, so keep it going!\n\u0026ldquo;Yes, I am a criminal. My crime is that of curiosity.\u0026rdquo; — The Mentor (Loyd Blankenship) at The Hacker Manifesto\n","permalink":"http://localhost:1313/posts/starting-point/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIf you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\u003c/p\u003e","title":"Starting Point"},{"content":"Introduction In this post series we are going to solve every level from bandit in OverTheWire This guide pretends to be a writeup containing the solutions of the level, designed for beginners.\nTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing WSL, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\nEvery section will contain the solution as well as some tips for people who is absolutely beginner.\nTips First of all, some tips:\nDo not use this as first resource to solve the levels. Try on your own, make mistakes and learn from them. Only check the solution as last resource or if you are completely new and you have absolutely no idea about what to do next. Take notes from your learning. Write up commands, tips and everything which can be useful in the future. Make sure to understand everything. Is a good idea to note the passwords for every level. If you want to continue letter, you can simply log in in the desired level. It is annoying to repeat everything! Follow the tips and information provided at OverTheWire website. Levels Here is my solution for every level:\nBandit0 Bandit1 Bandit2 Bandit3 Bandit4 Bandit5 Bandit6 Bandit7 ","permalink":"http://localhost:1313/posts/otw/bandit/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIn this post series we are going to solve every level from bandit in \u003ca href=\"https://overthewire.org/wargames/bandit/\"\u003e\u003cem\u003eOverTheWire\u003c/em\u003e\u003c/a\u003e\nThis guide pretends to be a writeup containing the solutions of the level, designed for beginners.\u003c/p\u003e\n\u003cp\u003eTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing \u003ca href=\"https://learn.microsoft.com/en-us/windows/wsl/install\"\u003eWSL\u003c/a\u003e, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\u003c/p\u003e","title":"Bandit"},{"content":"Level description The goal of this level is for you to log into the game using SSH. The host to which you need to connect is bandit.labs.overthewire.org, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\nTips for beginners Read a bit about what SSH is. Research about what a port is. Solution This is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go here.\nAt Linux, we can use ssh client to connect to the server. It should be installed by default on your system. If not, please first research about how to install. Once you have the SSH client installed, you can log in into the first level as follows:\nssh bandit0@bandit.labs.overthewire.org -p 2220 Syntax is simple: ssh \u0026lt;username\u0026gt;@\u0026lt;hostname\u0026gt; -p \u0026lt;port\u0026gt;. Usually SSH runs on port 22 by default, but they changed to port 2220 so we must specify it in the command.\nOnce you try to log in, you will see something like this: NB: If it\u0026rsquo;s the first time you try to log in, you will be asked about the authenticity of the host. Just type yes.\nType the password bandit0 and press enter. Now you are inside bandit server, ready to begin with bandit1!\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit0/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe goal of this level is for you to log into the game using SSH. The host to which you need to connect is \u003cstrong\u003ebandit.labs.overthewire.org\u003c/strong\u003e, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eRead a bit about what SSH is.\u003c/li\u003e\n\u003cli\u003eResearch about what a port is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go \u003ca href=\"https://en.wikipedia.org/wiki/Secure_Shell\"\u003ehere\u003c/a\u003e.\u003c/p\u003e","title":"Bandit0"},{"content":"Level description The password for the next level is stored in a file called readme located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\nTips for beginners Learn about home directory in Linux. Learn to use cat and ls commands. Solution First step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\nls This shows in terminal the files at the current directory. There you will see the readme file.\nNow we can to check the contents, so let\u0026rsquo;s use cat:\ncat readme To read a file, we use cat \u0026lt;filename\u0026gt;.\nNB: Not every file is human readable in Linux. We deep more about this in later levels.\nThe content of the readme file reveals the password for bandit2 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit1/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u003cstrong\u003ereadme\u003c/strong\u003e located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn about home directory in Linux.\u003c/li\u003e\n\u003cli\u003eLearn to use \u003ccode\u003ecat\u003c/code\u003e and \u003ccode\u003els\u003c/code\u003e commands.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eFirst step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\u003c/p\u003e","title":"Bandit1"},{"content":"Level description The password for the next level is stored in a file called - located in the home directory\nTips for beginners Try to understand why previous solution is not working as you expect. Solution You may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our cat command: The terminal is waiting for something else. This happens due to character - is used to pass arguments to our commands, and the linux shell is interpreting that. To prevent that, we could use:\ncat ./- NB: Dot . is used to refer current directory. The slash / is used at the end of directory name.\nWe get the password for bandit3 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit2/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called - located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eTry to understand why previous solution is not working as you expect.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eYou may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our \u003ccode\u003ecat\u003c/code\u003e command:\n\u003cimg alt=\"bandit2\" loading=\"lazy\" src=\"/images/otw/bandit/bandit2/0.png\"\u003e\u003c/p\u003e\n\u003cp\u003eThe terminal is \u003cem\u003ewaiting\u003c/em\u003e for something else. This happens due to character \u003ccode\u003e-\u003c/code\u003e is used to pass arguments to our commands, and the linux shell is interpreting that.\nTo prevent that, we could use:\u003c/p\u003e","title":"Bandit2"},{"content":"Level description The password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\nTips for beginners Think about how to escape the whitespaces. Solution After login in the machine as bandit3, we can see the filename \u0026ndash;spaces in this filename\u0026ndash;.\nNow we have 2 problems:\nSame as previous level, filename starts with --, so it will be interpreted as an argument. Address this problem using ./. Filename contains whitespaces. This is an issue, as bash interpretes whitespaces to separate commands. To solve the second problem, we must escape the whitespace character in some way. Here is the solution:\ncat ./--spaces\\ in\\ this\\ filename-- NB: Little trick, you can start writting filename and press Tab to autocomplete the name. The \\ is going to be inserted automatically.\nJust using the \\ we can escape the whitespace.\nNow we can continue with the bandit4 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit3/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eThink about how to \u003cem\u003eescape\u003c/em\u003e the whitespaces.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAfter login in the machine as bandit3, we can see the filename \u003cem\u003e\u0026ndash;spaces in this filename\u0026ndash;\u003c/em\u003e.\u003c/p\u003e\n\u003cp\u003eNow we have 2 problems:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eSame as previous level, filename starts with \u003ccode\u003e--\u003c/code\u003e, so it will be interpreted as an argument. Address this problem using \u003ccode\u003e./\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003eFilename contains \u003cstrong\u003ewhitespaces\u003c/strong\u003e. This is an issue, as bash interpretes whitespaces to separate commands.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eTo solve the second problem, we must escape the whitespace character in some way. Here is the solution:\u003c/p\u003e","title":"Bandit3"},{"content":"Level description The password for the next level is stored in a hidden file in the inhere directory.\nTips for beginners Learn how to navigate directories in Linux. First understand what a hidden file is. Solution Listing directory files inside bandit4\u0026rsquo;s home directory, show directory inhere.\nNB: How to distinguish files and directories in Linux? Use ls -l and see the difference.\nWe have 2 options now:\nMove to inhere directory and check contens again. Check contents directly. Moving to another directory can be done using cd \u0026lt;dirName\u0026gt;. If you prefer to check directory contents directly, use ls \u0026lt;dirName\u0026gt;.\nAfter checking inhere contents via ls, we see nothing. The reason is the file is a hidden file. A hidden file in Linux is everyfile whose name starts with dot .. Hidden files are not shown by default with ls command, so we must add a special flag -a to list all files: NB: Both flags -l and -a cna be combined into a single flag -al, which is shorter to type.\nAs you can see, filename is \u0026hellip;Hidding-From-You starting with three dots. Reading file contents should be easy at this point!\nNext level is bandit5.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit4/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a hidden file in the inhere directory.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to navigate directories in Linux.\u003c/li\u003e\n\u003cli\u003eFirst understand what a hidden file is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eListing directory files inside bandit4\u0026rsquo;s home directory, show directory \u003cstrong\u003einhere\u003c/strong\u003e.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e How to distinguish files and directories in Linux? Use \u003ccode\u003els -l\u003c/code\u003e and see the difference.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eWe have 2 options now:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eMove to inhere directory and check contens again.\u003c/li\u003e\n\u003cli\u003eCheck contents directly.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eMoving to another directory can be done using \u003ccode\u003ecd \u0026lt;dirName\u0026gt;\u003c/code\u003e. If you prefer to check directory contents directly, use \u003ccode\u003els \u0026lt;dirName\u0026gt;\u003c/code\u003e.\u003c/p\u003e","title":"Bandit4"},{"content":"Level description The password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\nTips for beginners What means human-readable file? Is there any way to check filetype at Linux?. Solution Checking inhere\u0026rsquo;s contents shows some files names \u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII here\nSo now, our goal is checking if file content of every file in the folder is ASCII or not. file \u0026lt;filename\u0026gt; does the job. Note the use of *. That called a wildcard regular expression, we\u0026rsquo;ll deep into it in later levels. An easy approach could be checking every file separately:\nfile ./--file00 file ./--file01 ... file ./--file09 But that\u0026rsquo;s not funny, imagine we have 100 files to check. All the files are in the same directory, so we can use cat ./* where ./* matches every filename in the directory, applying file to every file.\nNB: Another approach is to use find with certaing flags. Try to do in different ways, don\u0026rsquo;t stick to my solution.\nThe file \u0026ndash;file00 content is not readable, so get password from \u0026ndash;file07 and continue with bandit6.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit5/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eWhat means human-readable file?\u003c/li\u003e\n\u003cli\u003eIs there any way to check filetype at Linux?.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eChecking inhere\u0026rsquo;s contents shows some files names \u003cstrong\u003e\u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09\u003c/strong\u003e. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII \u003ca href=\"https://en.wikipedia.org/wiki/ASCII\"\u003ehere\u003c/a\u003e\u003c/p\u003e","title":"Bandit5"},{"content":"Level description The password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\nhuman-readable 1033 bytes in size not executable Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution The purpose of the level is showing us how to find for files. Listing contents of inhere, we can see some folders, containing a lot of files inside: NB: Adding -R to ls shows recursively the content of every folder inside the directory listed.\nSo this time, checking every file is not an option. We need to find a file with some properties, specific size, not excutable and human-readable. Let\u0026rsquo;s explain the command we\u0026rsquo;re using:\nfind inhere/ -size 1033c ! -executable First, we specify the directory, in this case inhere. The option -size 1033c returns files of 1033 bytes. Then, with -executable we would get executable files, but we want not executable files, that\u0026rsquo;s why we are adding ! before.\nNB: By default, the -size option takes as argument the number of blocks. For example, -size 2 means 2 blocks of 512 bytes, so its 1024. The c is used to specify exact bytes. Don\u0026rsquo;t ask me why it\u0026rsquo;s c and not b 😅.\nThe property of human-readability is not implemented in find. This is not an issue, previous command returns a single file and it is human readable (we could confirm using file): Extra tip: try to use the following:\nfind inhere/ -size 1033c ! -executable | file You get the same result! The pipe | is a great tool to execute 2+ commands in one line.\nGet your password and continue with bandit7.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit6/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ehuman-readable\u003c/li\u003e\n\u003cli\u003e1033 bytes in size\u003c/li\u003e\n\u003cli\u003enot executable\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThe purpose of the level is showing us how to find for files. Listing contents of \u003cstrong\u003einhere\u003c/strong\u003e, we can see some folders, containing a lot of files inside:\n\u003cimg alt=\"bandit6_0\" loading=\"lazy\" src=\"/images/otw/bandit/bandit6/0.png\"\u003e\u003c/p\u003e","title":"Bandit6"},{"content":"Level description The password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\nhuman-readable 1033 bytes in size not executable Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution The purpose of the level is showing us how to find for files. Listing contents of inhere, we can see some folders, containing a lot of files inside: NB: Adding -R to ls shows recursively the content of every folder inside the directory listed.\nSo this time, checking every file is not an option. We need to find a file with some properties, specific size, not excutable and human-readable. Let\u0026rsquo;s explain the command we\u0026rsquo;re using:\nfind inhere/ -size 1033c ! -executable First, we specify the directory, in this case inhere. The option -size 1033c returns files of 1033 bytes. Then, with -executable we would get executable files, but we want not executable files, that\u0026rsquo;s why we are adding ! before.\nNB: By default, the -size option takes as argument the number of blocks. For example, -size 2 means 2 blocks of 512 bytes, so its 1024. The c is used to specify exact bytes. Don\u0026rsquo;t ask me why it\u0026rsquo;s c and not b 😅.\nThe property of human-readability is not implemented in find. This is not an issue, previous command returns a single file and it is human readable (we could confirm using file): Extra tip: try to use the following:\nfind inhere/ -size 1033c ! -executable | file You get the same result! The pipe | is a great tool to execute 2+ commands in one line.\nGet your password and continue with bandit7.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit7/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ehuman-readable\u003c/li\u003e\n\u003cli\u003e1033 bytes in size\u003c/li\u003e\n\u003cli\u003enot executable\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThe purpose of the level is showing us how to find for files. Listing contents of \u003cstrong\u003einhere\u003c/strong\u003e, we can see some folders, containing a lot of files inside:\n\u003cimg alt=\"bandit6_0\" loading=\"lazy\" src=\"/images/otw/bandit/bandit6/0.png\"\u003e\u003c/p\u003e","title":"Bandit6"},{"content":"👨‍💻 whoami Hey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\nWhat is this❓​ This blog is basically my thoughts on several hacking topics. Here you’ll see:\nWriteups from CTF challenges, from platforms like HackTheBox or OverTheWire.\nWalkthroughs and notes on pentesting techniques I’m learning or testing.\nSome posts on cryptography — because math can be fun (sometimes).\nRandom topics that freaks like me may (just may) find interesting.\nThe idea is simple: share what I learn, document my journey, and maybe help others who are also diving into the exciting world of ethical hacking.\n📫 Contact Want to say hi, share ideas, or just geek out about hacking? Reach me here:\n📧 Email: mrb0b1073@proton.me 💻​ GitHub: mrb0b173 🟩​ HackTheBox: mrb0b1073 ","permalink":"http://localhost:1313/about/","summary":"\u003ch2 id=\"-whoami\"\u003e👨‍💻 whoami\u003c/h2\u003e\n\u003cp\u003eHey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\u003c/p\u003e\n\u003chr\u003e\n\u003ch2 id=\"what-is-this\"\u003eWhat is this❓​\u003c/h2\u003e\n\u003cp\u003eThis blog is basically my thoughts on several hacking topics. Here you’ll see:\u003c/p\u003e","title":"About"},{"content":"Hey! 👋 I\u0026rsquo;m mrb0b1073 and this is my first post.\nWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\nExcited to start this adventure!\n","permalink":"http://localhost:1313/posts/hello-world/","summary":"\u003cp\u003eHey! 👋 I\u0026rsquo;m \u003cstrong\u003emrb0b1073\u003c/strong\u003e and this is my first post.\u003c/p\u003e\n\u003cp\u003eWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\u003cbr\u003e\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\u003c/p\u003e\n\u003cp\u003eExcited to start this adventure!\u003c/p\u003e","title":"Hello World"},{"content":"Introduction If you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\nIn cybersecurity there are broadly two complementary roles: Blue Team and Red Team. Blue Teams focus on defense, monitoring, incident response, hardening systems and keeping services secure, while Red Teams simulate attackers to find weaknesses and prove what an adversary could do. Ethical hacking aligns closely with Red Team operations, but cybersecurity is highly transversal across IT. There are many specialities or areas, such as cloud security, appsec, pentesting, forensics, governance, risk management, malware analysis, etc. Every topic could deserve its own post, so let\u0026rsquo;s keep it simple and focus on ethical hacking.\nHacker philosophy Let\u0026rsquo;s start with the idea of what is exactly a hacker. A hacker is someone who explores systems to understand how they work, finds creative ways to make or fix things, and solves technical problems. Historically the word describes curiosity, craft, and a drive to improve systems — not criminality. It is important to make the distinction between hacker and cracker, also called cybercriminal. A hacker explores, builds, discloses responsibly and works to improve security. They work in authorized environments or labs. On the other hand, a cracker breaks into systems for theft, vandalism or other illicit gain.\nHere you can find the most popularized ideas often summarized as the hacker ethic:\nCuriosity first: Learn by exploring and tinkering. Freedom of information: All knowledge should be shared to help progress. This fits properly with the idea of open source. Mistrust of needless authority: Centralized control sometimes blocks innovation. It is always good to question anything, specially common assumptions. Meritocracy: Skills, craft and results matter more than titles. Craftsmanship \u0026amp; elegance: Technical beauty matters. Build clean, clever and efficient solutions. Responsability \u0026amp; ethics: Use your skills to build, fix, educate and defend, not to harm. Core fundamentals Assuming you want to init yourself in hacking, you should first build competence across three basic pillars.\nOperating Systems You should learn as much as possible about Linux and Windows. Specially Linux, all the tools you will be using are meant to be used in a Linux environment. Skill with shell is required, learn basic commands and how to interact with the OS using the terminal. Research about processes, file permissions, package management and logs. A large proportion of web servers around the world run on Linux, although Windows is also widely used. Windows knowledge is really valuable too, considering active directory is strongly used in corporate environments.\nNetworking You have to understand how computers communicate each other. Understand basic networking concepts, IP adresses, subnetting, proxies, find out how internet works. Study some protocols such as TCP/IP, HTTP, DNS or SSH. This could sound confusing for beginners, but this step is not optional! Study different client/server models and how services expose attack surfaces.\nProgramming \u0026amp; scripting Is this completely required? Maybe not for complete beginners. Does it help? Absolutely yes. Understanding how web apps or any type of application works makes things much easier. You can imagine different entry points to exploit if you understand how systems are designed. Also writing scripts in bash or python makes you more productive through automation.\nEthical Hacking foundations Once you feel confident with these 3 pillars, you can go to the next step. You can study about different topics and areas. For example, binary exploiting, web pentesting, mobile pentesting, wireless hacking, etc. You should start picking a focus, in this post we focus on web pentesting, as it is beginner friendly. Also web applications are the bread and butter in companies nowadays.\nKey concepts to study:\nCIA Triad: CIA refers to Confidentiality, Integrity and Availability. These three concepts are key in information security, and describe properties we want to ensure in our systems and information. Web Security basics, OWASP: Study the OWASP Top 10, which summarizes most frequent web security risks. Authentication and session control: Understand the concepts of Authentication and Authorization, research about how session is handled in web apps, cookies, JWT tokens, etc. Input validation \u0026amp; injection attacks: Learn about SQL Injection, Cross-Site Scripting (XSS), Code Injection, SSTI, and every injection type. Secure development lifecycle: Find out how to implement security controls in code. This can be more related to Blue Team, but as Red Teamer it is important to understand. Firewall evasion: What a firewall is and some techniques/methods to bypass. Some cryptography: Understand what a chiper and a hash are, how information is encrypted to prevent access from 3rd parties. Focusing on web, read about TLS protocol. There are many more topics you can research and learn, but this could be a nice starting point.\nTools and platforms to learn Now you have an idea of what to study, let\u0026rsquo;s see how to start in practical terms.\nSome platforms I personally recommend:\nOverTheWire: Here you can find some CTFs (Capture The Flag) which are fun to play and also really instructive. Bandit games are a must for complete beginners, as you will explore some linux and bash concepts which are basic to continue. The games are leveled by difficulty, in their web you can get all the information about how to play, only a terminal and SSH is required. This helps building your foundation in Linux OS. HackTheBox: Nº 1 platform in cybersecurity. Has a lot of resources to learn all this core fundamentals, and also red team / blue team security topics. It is focused on labs where you can test your skills hacking different boxes but if you really want to learn it is worth to invest time and money in the academy. I have to say the level here is high, specially if you try to hack machines on your own without using some guide or writeup. TryHackMe: More beginner friendly than hackthebox, it provides a lot of guided learning resources. PortSwigger Labs: Practical labs about specific topics, focused on web hacking. They are great to learn and understand different types of attacks, injections, and security misconfigurations. I would recommend digging into this once you have the theoretical basis about these concepts. I have to mention a few tools I am sure you\u0026rsquo;d end up using:\nNmap: This is probably the most famous tool in hacking, allowing you to gather information about ports and services running in a machine. Burpsuite: A proxy tool widely used in web application security testing. It basically allows you to intercept and modify web requests, which can be used to perform several types of attacks. Metasploit: The most used pentesting framework. Contains a large amount of scripts and exploits ready to run. Another crucial step here is to set up your virtual lab environment to test vulnerable applications. To achieve this goal, there are some Linux distributions like Kali, Parrot or BlackArch, but that\u0026rsquo;s a topic for another post.\nFinal thoughs To sum up, this would be my personal roadmap:\nLearn the fundamentals, specially Linux and networking. Install some Linux in a virtual machine, play with it, get comfortable with the terminal. You can start with bandit wargames in OverTheWire. Complete every level and make sure to understand everything as clear as possible. Move to guided boxes on HackTheBox. I recommend you joining their Discord, ask questions, community is great there! Take notes, repeat, learn, improve your skills. Maybe use your own lab environment, create your own vulnerable apps. Hacking is a mixing of curiosity, study and practice. Being passionate and motivated about it is really helpful and will definitely speed up the process. The path is long and really challenging, so keep it going!\n\u0026ldquo;Yes, I am a criminal. My crime is that of curiosity.\u0026rdquo; — The Mentor (Loyd Blankenship) at The Hacker Manifesto\n","permalink":"http://localhost:1313/posts/starting-point/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIf you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\u003c/p\u003e","title":"Starting Point"},{"content":"Introduction In this post series we are going to solve every level from bandit in OverTheWire This guide pretends to be a writeup containing the solutions of the level, designed for beginners.\nTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing WSL, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\nEvery section will contain the solution as well as some tips for people who is absolutely beginner.\nTips First of all, some tips:\nDo not use this as first resource to solve the levels. Try on your own, make mistakes and learn from them. Only check the solution as last resource or if you are completely new and you have absolutely no idea about what to do next. Take notes from your learning. Write up commands, tips and everything which can be useful in the future. Make sure to understand everything. Is a good idea to note the passwords for every level. If you want to continue letter, you can simply log in in the desired level. It is annoying to repeat everything! Follow the tips and information provided at OverTheWire website. Levels Here is my solution for every level:\nBandit0 Bandit1 Bandit2 Bandit3 Bandit4 Bandit5 Bandit6 Bandit7 ","permalink":"http://localhost:1313/posts/otw/bandit/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIn this post series we are going to solve every level from bandit in \u003ca href=\"https://overthewire.org/wargames/bandit/\"\u003e\u003cem\u003eOverTheWire\u003c/em\u003e\u003c/a\u003e\nThis guide pretends to be a writeup containing the solutions of the level, designed for beginners.\u003c/p\u003e\n\u003cp\u003eTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing \u003ca href=\"https://learn.microsoft.com/en-us/windows/wsl/install\"\u003eWSL\u003c/a\u003e, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\u003c/p\u003e","title":"Bandit"},{"content":"Level description The goal of this level is for you to log into the game using SSH. The host to which you need to connect is bandit.labs.overthewire.org, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\nTips for beginners Read a bit about what SSH is. Research about what a port is. Solution This is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go here.\nAt Linux, we can use ssh client to connect to the server. It should be installed by default on your system. If not, please first research about how to install. Once you have the SSH client installed, you can log in into the first level as follows:\nssh bandit0@bandit.labs.overthewire.org -p 2220 Syntax is simple: ssh \u0026lt;username\u0026gt;@\u0026lt;hostname\u0026gt; -p \u0026lt;port\u0026gt;. Usually SSH runs on port 22 by default, but they changed to port 2220 so we must specify it in the command.\nOnce you try to log in, you will see something like this: NB: If it\u0026rsquo;s the first time you try to log in, you will be asked about the authenticity of the host. Just type yes.\nType the password bandit0 and press enter. Now you are inside bandit server, ready to begin with bandit1!\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit0/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe goal of this level is for you to log into the game using SSH. The host to which you need to connect is \u003cstrong\u003ebandit.labs.overthewire.org\u003c/strong\u003e, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eRead a bit about what SSH is.\u003c/li\u003e\n\u003cli\u003eResearch about what a port is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go \u003ca href=\"https://en.wikipedia.org/wiki/Secure_Shell\"\u003ehere\u003c/a\u003e.\u003c/p\u003e","title":"Bandit0"},{"content":"Level description The password for the next level is stored in a file called readme located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\nTips for beginners Learn about home directory in Linux. Learn to use cat and ls commands. Solution First step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\nls This shows in terminal the files at the current directory. There you will see the readme file.\nNow we can to check the contents, so let\u0026rsquo;s use cat:\ncat readme To read a file, we use cat \u0026lt;filename\u0026gt;.\nNB: Not every file is human readable in Linux. We deep more about this in later levels.\nThe content of the readme file reveals the password for bandit2 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit1/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u003cstrong\u003ereadme\u003c/strong\u003e located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn about home directory in Linux.\u003c/li\u003e\n\u003cli\u003eLearn to use \u003ccode\u003ecat\u003c/code\u003e and \u003ccode\u003els\u003c/code\u003e commands.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eFirst step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\u003c/p\u003e","title":"Bandit1"},{"content":"Level description The password for the next level is stored in a file called - located in the home directory\nTips for beginners Try to understand why previous solution is not working as you expect. Solution You may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our cat command: The terminal is waiting for something else. This happens due to character - is used to pass arguments to our commands, and the linux shell is interpreting that. To prevent that, we could use:\ncat ./- NB: Dot . is used to refer current directory. The slash / is used at the end of directory name.\nWe get the password for bandit3 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit2/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called - located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eTry to understand why previous solution is not working as you expect.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eYou may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our \u003ccode\u003ecat\u003c/code\u003e command:\n\u003cimg alt=\"bandit2\" loading=\"lazy\" src=\"/images/otw/bandit/bandit2/0.png\"\u003e\u003c/p\u003e\n\u003cp\u003eThe terminal is \u003cem\u003ewaiting\u003c/em\u003e for something else. This happens due to character \u003ccode\u003e-\u003c/code\u003e is used to pass arguments to our commands, and the linux shell is interpreting that.\nTo prevent that, we could use:\u003c/p\u003e","title":"Bandit2"},{"content":"Level description The password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\nTips for beginners Think about how to escape the whitespaces. Solution After login in the machine as bandit3, we can see the filename \u0026ndash;spaces in this filename\u0026ndash;.\nNow we have 2 problems:\nSame as previous level, filename starts with --, so it will be interpreted as an argument. Address this problem using ./. Filename contains whitespaces. This is an issue, as bash interpretes whitespaces to separate commands. To solve the second problem, we must escape the whitespace character in some way. Here is the solution:\ncat ./--spaces\\ in\\ this\\ filename-- NB: Little trick, you can start writting filename and press Tab to autocomplete the name. The \\ is going to be inserted automatically.\nJust using the \\ we can escape the whitespace.\nNow we can continue with the bandit4 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit3/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eThink about how to \u003cem\u003eescape\u003c/em\u003e the whitespaces.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAfter login in the machine as bandit3, we can see the filename \u003cem\u003e\u0026ndash;spaces in this filename\u0026ndash;\u003c/em\u003e.\u003c/p\u003e\n\u003cp\u003eNow we have 2 problems:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eSame as previous level, filename starts with \u003ccode\u003e--\u003c/code\u003e, so it will be interpreted as an argument. Address this problem using \u003ccode\u003e./\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003eFilename contains \u003cstrong\u003ewhitespaces\u003c/strong\u003e. This is an issue, as bash interpretes whitespaces to separate commands.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eTo solve the second problem, we must escape the whitespace character in some way. Here is the solution:\u003c/p\u003e","title":"Bandit3"},{"content":"Level description The password for the next level is stored in a hidden file in the inhere directory.\nTips for beginners Learn how to navigate directories in Linux. First understand what a hidden file is. Solution Listing directory files inside bandit4\u0026rsquo;s home directory, show directory inhere.\nNB: How to distinguish files and directories in Linux? Use ls -l and see the difference.\nWe have 2 options now:\nMove to inhere directory and check contens again. Check contents directly. Moving to another directory can be done using cd \u0026lt;dirName\u0026gt;. If you prefer to check directory contents directly, use ls \u0026lt;dirName\u0026gt;.\nAfter checking inhere contents via ls, we see nothing. The reason is the file is a hidden file. A hidden file in Linux is everyfile whose name starts with dot .. Hidden files are not shown by default with ls command, so we must add a special flag -a to list all files: NB: Both flags -l and -a cna be combined into a single flag -al, which is shorter to type.\nAs you can see, filename is \u0026hellip;Hidding-From-You starting with three dots. Reading file contents should be easy at this point!\nNext level is bandit5.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit4/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a hidden file in the inhere directory.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to navigate directories in Linux.\u003c/li\u003e\n\u003cli\u003eFirst understand what a hidden file is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eListing directory files inside bandit4\u0026rsquo;s home directory, show directory \u003cstrong\u003einhere\u003c/strong\u003e.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e How to distinguish files and directories in Linux? Use \u003ccode\u003els -l\u003c/code\u003e and see the difference.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eWe have 2 options now:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eMove to inhere directory and check contens again.\u003c/li\u003e\n\u003cli\u003eCheck contents directly.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eMoving to another directory can be done using \u003ccode\u003ecd \u0026lt;dirName\u0026gt;\u003c/code\u003e. If you prefer to check directory contents directly, use \u003ccode\u003els \u0026lt;dirName\u0026gt;\u003c/code\u003e.\u003c/p\u003e","title":"Bandit4"},{"content":"Level description The password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\nTips for beginners What means human-readable file? Is there any way to check filetype at Linux?. Solution Checking inhere\u0026rsquo;s contents shows some files names \u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII here\nSo now, our goal is checking if file content of every file in the folder is ASCII or not. file \u0026lt;filename\u0026gt; does the job. Note the use of *. That called a wildcard regular expression, we\u0026rsquo;ll deep into it in later levels. An easy approach could be checking every file separately:\nfile ./--file00 file ./--file01 ... file ./--file09 But that\u0026rsquo;s not funny, imagine we have 100 files to check. All the files are in the same directory, so we can use cat ./* where ./* matches every filename in the directory, applying file to every file.\nNB: Another approach is to use find with certaing flags. Try to do in different ways, don\u0026rsquo;t stick to my solution.\nThe file \u0026ndash;file00 content is not readable, so get password from \u0026ndash;file07 and continue with bandit6.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit5/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eWhat means human-readable file?\u003c/li\u003e\n\u003cli\u003eIs there any way to check filetype at Linux?.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eChecking inhere\u0026rsquo;s contents shows some files names \u003cstrong\u003e\u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09\u003c/strong\u003e. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII \u003ca href=\"https://en.wikipedia.org/wiki/ASCII\"\u003ehere\u003c/a\u003e\u003c/p\u003e","title":"Bandit5"},{"content":"Level description The password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\nhuman-readable 1033 bytes in size not executable Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution The purpose of the level is showing us how to find for files. Listing contents of inhere, we can see some folders, containing a lot of files inside: NB: Adding -R to ls shows recursively the content of every folder inside the directory listed.\nSo this time, checking every file is not an option. We need to find a file with some properties, specific size, not excutable and human-readable. Let\u0026rsquo;s explain the command we\u0026rsquo;re using:\nfind inhere/ -size 1033c ! -executable First, we specify the directory, in this case inhere. The option -size 1033c returns files of 1033 bytes. Then, with -executable we would get executable files, but we want not executable files, that\u0026rsquo;s why we are adding ! before.\nNB: By default, the -size option takes as argument the number of blocks. For example, -size 2 means 2 blocks of 512 bytes, so its 1024. The c is used to specify exact bytes. Don\u0026rsquo;t ask me why it\u0026rsquo;s c and not b 😅.\nThe property of human-readability is not implemented in find. This is not an issue, previous command returns a single file and it is human readable (we could confirm using file): Extra tip: try to use the following:\nfind inhere/ -size 1033c ! -executable | file You get the same result! The pipe | is a great tool to execute 2+ commands in one line.\nGet your password and continue with bandit7.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit6/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ehuman-readable\u003c/li\u003e\n\u003cli\u003e1033 bytes in size\u003c/li\u003e\n\u003cli\u003enot executable\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThe purpose of the level is showing us how to find for files. Listing contents of \u003cstrong\u003einhere\u003c/strong\u003e, we can see some folders, containing a lot of files inside:\n\u003cimg alt=\"bandit6_0\" loading=\"lazy\" src=\"/images/otw/bandit/bandit6/0.png\"\u003e\u003c/p\u003e","title":"Bandit6"},{"content":"Level description The password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\nhuman-readable 1033 bytes in size not executable Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution The purpose of the level is showing us how to find for files. Listing contents of inhere, we can see some folders, containing a lot of files inside: NB: Adding -R to ls shows recursively the content of every folder inside the directory listed.\nSo this time, checking every file is not an option. We need to find a file with some properties, specific size, not excutable and human-readable. Let\u0026rsquo;s explain the command we\u0026rsquo;re using:\nfind inhere/ -size 1033c ! -executable First, we specify the directory, in this case inhere. The option -size 1033c returns files of 1033 bytes. Then, with -executable we would get executable files, but we want not executable files, that\u0026rsquo;s why we are adding ! before.\nNB: By default, the -size option takes as argument the number of blocks. For example, -size 2 means 2 blocks of 512 bytes, so its 1024. The c is used to specify exact bytes. Don\u0026rsquo;t ask me why it\u0026rsquo;s c and not b 😅.\nThe property of human-readability is not implemented in find. This is not an issue, previous command returns a single file and it is human readable (we could confirm using file): Extra tip: try to use the following:\nfind inhere/ -size 1033c ! -executable | file You get the same result! The pipe | is a great tool to execute 2+ commands in one line.\nGet your password and continue with bandit7.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit7/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ehuman-readable\u003c/li\u003e\n\u003cli\u003e1033 bytes in size\u003c/li\u003e\n\u003cli\u003enot executable\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThe purpose of the level is showing us how to find for files. Listing contents of \u003cstrong\u003einhere\u003c/strong\u003e, we can see some folders, containing a lot of files inside:\n\u003cimg alt=\"bandit6_0\" loading=\"lazy\" src=\"/images/otw/bandit/bandit6/0.png\"\u003e\u003c/p\u003e","title":"Bandit6"},{"content":"👨‍💻 whoami Hey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\nWhat is this❓​ This blog is basically my thoughts on several hacking topics. Here you’ll see:\nWriteups from CTF challenges, from platforms like HackTheBox or OverTheWire.\nWalkthroughs and notes on pentesting techniques I’m learning or testing.\nSome posts on cryptography — because math can be fun (sometimes).\nRandom topics that freaks like me may (just may) find interesting.\nThe idea is simple: share what I learn, document my journey, and maybe help others who are also diving into the exciting world of ethical hacking.\n📫 Contact Want to say hi, share ideas, or just geek out about hacking? Reach me here:\n📧 Email: mrb0b1073@proton.me 💻​ GitHub: mrb0b173 🟩​ HackTheBox: mrb0b1073 ","permalink":"http://localhost:1313/about/","summary":"\u003ch2 id=\"-whoami\"\u003e👨‍💻 whoami\u003c/h2\u003e\n\u003cp\u003eHey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\u003c/p\u003e\n\u003chr\u003e\n\u003ch2 id=\"what-is-this\"\u003eWhat is this❓​\u003c/h2\u003e\n\u003cp\u003eThis blog is basically my thoughts on several hacking topics. Here you’ll see:\u003c/p\u003e","title":"About"},{"content":"Hey! 👋 I\u0026rsquo;m mrb0b1073 and this is my first post.\nWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\nExcited to start this adventure!\n","permalink":"http://localhost:1313/posts/hello-world/","summary":"\u003cp\u003eHey! 👋 I\u0026rsquo;m \u003cstrong\u003emrb0b1073\u003c/strong\u003e and this is my first post.\u003c/p\u003e\n\u003cp\u003eWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\u003cbr\u003e\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\u003c/p\u003e\n\u003cp\u003eExcited to start this adventure!\u003c/p\u003e","title":"Hello World"},{"content":"Introduction If you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\nIn cybersecurity there are broadly two complementary roles: Blue Team and Red Team. Blue Teams focus on defense, monitoring, incident response, hardening systems and keeping services secure, while Red Teams simulate attackers to find weaknesses and prove what an adversary could do. Ethical hacking aligns closely with Red Team operations, but cybersecurity is highly transversal across IT. There are many specialities or areas, such as cloud security, appsec, pentesting, forensics, governance, risk management, malware analysis, etc. Every topic could deserve its own post, so let\u0026rsquo;s keep it simple and focus on ethical hacking.\nHacker philosophy Let\u0026rsquo;s start with the idea of what is exactly a hacker. A hacker is someone who explores systems to understand how they work, finds creative ways to make or fix things, and solves technical problems. Historically the word describes curiosity, craft, and a drive to improve systems — not criminality. It is important to make the distinction between hacker and cracker, also called cybercriminal. A hacker explores, builds, discloses responsibly and works to improve security. They work in authorized environments or labs. On the other hand, a cracker breaks into systems for theft, vandalism or other illicit gain.\nHere you can find the most popularized ideas often summarized as the hacker ethic:\nCuriosity first: Learn by exploring and tinkering. Freedom of information: All knowledge should be shared to help progress. This fits properly with the idea of open source. Mistrust of needless authority: Centralized control sometimes blocks innovation. It is always good to question anything, specially common assumptions. Meritocracy: Skills, craft and results matter more than titles. Craftsmanship \u0026amp; elegance: Technical beauty matters. Build clean, clever and efficient solutions. Responsability \u0026amp; ethics: Use your skills to build, fix, educate and defend, not to harm. Core fundamentals Assuming you want to init yourself in hacking, you should first build competence across three basic pillars.\nOperating Systems You should learn as much as possible about Linux and Windows. Specially Linux, all the tools you will be using are meant to be used in a Linux environment. Skill with shell is required, learn basic commands and how to interact with the OS using the terminal. Research about processes, file permissions, package management and logs. A large proportion of web servers around the world run on Linux, although Windows is also widely used. Windows knowledge is really valuable too, considering active directory is strongly used in corporate environments.\nNetworking You have to understand how computers communicate each other. Understand basic networking concepts, IP adresses, subnetting, proxies, find out how internet works. Study some protocols such as TCP/IP, HTTP, DNS or SSH. This could sound confusing for beginners, but this step is not optional! Study different client/server models and how services expose attack surfaces.\nProgramming \u0026amp; scripting Is this completely required? Maybe not for complete beginners. Does it help? Absolutely yes. Understanding how web apps or any type of application works makes things much easier. You can imagine different entry points to exploit if you understand how systems are designed. Also writing scripts in bash or python makes you more productive through automation.\nEthical Hacking foundations Once you feel confident with these 3 pillars, you can go to the next step. You can study about different topics and areas. For example, binary exploiting, web pentesting, mobile pentesting, wireless hacking, etc. You should start picking a focus, in this post we focus on web pentesting, as it is beginner friendly. Also web applications are the bread and butter in companies nowadays.\nKey concepts to study:\nCIA Triad: CIA refers to Confidentiality, Integrity and Availability. These three concepts are key in information security, and describe properties we want to ensure in our systems and information. Web Security basics, OWASP: Study the OWASP Top 10, which summarizes most frequent web security risks. Authentication and session control: Understand the concepts of Authentication and Authorization, research about how session is handled in web apps, cookies, JWT tokens, etc. Input validation \u0026amp; injection attacks: Learn about SQL Injection, Cross-Site Scripting (XSS), Code Injection, SSTI, and every injection type. Secure development lifecycle: Find out how to implement security controls in code. This can be more related to Blue Team, but as Red Teamer it is important to understand. Firewall evasion: What a firewall is and some techniques/methods to bypass. Some cryptography: Understand what a chiper and a hash are, how information is encrypted to prevent access from 3rd parties. Focusing on web, read about TLS protocol. There are many more topics you can research and learn, but this could be a nice starting point.\nTools and platforms to learn Now you have an idea of what to study, let\u0026rsquo;s see how to start in practical terms.\nSome platforms I personally recommend:\nOverTheWire: Here you can find some CTFs (Capture The Flag) which are fun to play and also really instructive. Bandit games are a must for complete beginners, as you will explore some linux and bash concepts which are basic to continue. The games are leveled by difficulty, in their web you can get all the information about how to play, only a terminal and SSH is required. This helps building your foundation in Linux OS. HackTheBox: Nº 1 platform in cybersecurity. Has a lot of resources to learn all this core fundamentals, and also red team / blue team security topics. It is focused on labs where you can test your skills hacking different boxes but if you really want to learn it is worth to invest time and money in the academy. I have to say the level here is high, specially if you try to hack machines on your own without using some guide or writeup. TryHackMe: More beginner friendly than hackthebox, it provides a lot of guided learning resources. PortSwigger Labs: Practical labs about specific topics, focused on web hacking. They are great to learn and understand different types of attacks, injections, and security misconfigurations. I would recommend digging into this once you have the theoretical basis about these concepts. I have to mention a few tools I am sure you\u0026rsquo;d end up using:\nNmap: This is probably the most famous tool in hacking, allowing you to gather information about ports and services running in a machine. Burpsuite: A proxy tool widely used in web application security testing. It basically allows you to intercept and modify web requests, which can be used to perform several types of attacks. Metasploit: The most used pentesting framework. Contains a large amount of scripts and exploits ready to run. Another crucial step here is to set up your virtual lab environment to test vulnerable applications. To achieve this goal, there are some Linux distributions like Kali, Parrot or BlackArch, but that\u0026rsquo;s a topic for another post.\nFinal thoughs To sum up, this would be my personal roadmap:\nLearn the fundamentals, specially Linux and networking. Install some Linux in a virtual machine, play with it, get comfortable with the terminal. You can start with bandit wargames in OverTheWire. Complete every level and make sure to understand everything as clear as possible. Move to guided boxes on HackTheBox. I recommend you joining their Discord, ask questions, community is great there! Take notes, repeat, learn, improve your skills. Maybe use your own lab environment, create your own vulnerable apps. Hacking is a mixing of curiosity, study and practice. Being passionate and motivated about it is really helpful and will definitely speed up the process. The path is long and really challenging, so keep it going!\n\u0026ldquo;Yes, I am a criminal. My crime is that of curiosity.\u0026rdquo; — The Mentor (Loyd Blankenship) at The Hacker Manifesto\n","permalink":"http://localhost:1313/posts/starting-point/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIf you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\u003c/p\u003e","title":"Starting Point"},{"content":"Introduction In this post series we are going to solve every level from bandit in OverTheWire This guide pretends to be a writeup containing the solutions of the level, designed for beginners.\nTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing WSL, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\nEvery section will contain the solution as well as some tips for people who is absolutely beginner.\nTips First of all, some tips:\nDo not use this as first resource to solve the levels. Try on your own, make mistakes and learn from them. Only check the solution as last resource or if you are completely new and you have absolutely no idea about what to do next. Take notes from your learning. Write up commands, tips and everything which can be useful in the future. Make sure to understand everything. Is a good idea to note the passwords for every level. If you want to continue letter, you can simply log in in the desired level. It is annoying to repeat everything! Follow the tips and information provided at OverTheWire website. Levels Here is my solution for every level:\nBandit0 Bandit1 Bandit2 Bandit3 Bandit4 Bandit5 Bandit6 Bandit7 ","permalink":"http://localhost:1313/posts/otw/bandit/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIn this post series we are going to solve every level from bandit in \u003ca href=\"https://overthewire.org/wargames/bandit/\"\u003e\u003cem\u003eOverTheWire\u003c/em\u003e\u003c/a\u003e\nThis guide pretends to be a writeup containing the solutions of the level, designed for beginners.\u003c/p\u003e\n\u003cp\u003eTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing \u003ca href=\"https://learn.microsoft.com/en-us/windows/wsl/install\"\u003eWSL\u003c/a\u003e, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\u003c/p\u003e","title":"Bandit"},{"content":"Level description The goal of this level is for you to log into the game using SSH. The host to which you need to connect is bandit.labs.overthewire.org, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\nTips for beginners Read a bit about what SSH is. Research about what a port is. Solution This is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go here.\nAt Linux, we can use ssh client to connect to the server. It should be installed by default on your system. If not, please first research about how to install. Once you have the SSH client installed, you can log in into the first level as follows:\nssh bandit0@bandit.labs.overthewire.org -p 2220 Syntax is simple: ssh \u0026lt;username\u0026gt;@\u0026lt;hostname\u0026gt; -p \u0026lt;port\u0026gt;. Usually SSH runs on port 22 by default, but they changed to port 2220 so we must specify it in the command.\nOnce you try to log in, you will see something like this: NB: If it\u0026rsquo;s the first time you try to log in, you will be asked about the authenticity of the host. Just type yes.\nType the password bandit0 and press enter. Now you are inside bandit server, ready to begin with bandit1!\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit0/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe goal of this level is for you to log into the game using SSH. The host to which you need to connect is \u003cstrong\u003ebandit.labs.overthewire.org\u003c/strong\u003e, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eRead a bit about what SSH is.\u003c/li\u003e\n\u003cli\u003eResearch about what a port is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go \u003ca href=\"https://en.wikipedia.org/wiki/Secure_Shell\"\u003ehere\u003c/a\u003e.\u003c/p\u003e","title":"Bandit0"},{"content":"Level description The password for the next level is stored in a file called readme located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\nTips for beginners Learn about home directory in Linux. Learn to use cat and ls commands. Solution First step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\nls This shows in terminal the files at the current directory. There you will see the readme file.\nNow we can to check the contents, so let\u0026rsquo;s use cat:\ncat readme To read a file, we use cat \u0026lt;filename\u0026gt;.\nNB: Not every file is human readable in Linux. We deep more about this in later levels.\nThe content of the readme file reveals the password for bandit2 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit1/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u003cstrong\u003ereadme\u003c/strong\u003e located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn about home directory in Linux.\u003c/li\u003e\n\u003cli\u003eLearn to use \u003ccode\u003ecat\u003c/code\u003e and \u003ccode\u003els\u003c/code\u003e commands.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eFirst step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\u003c/p\u003e","title":"Bandit1"},{"content":"Level description The password for the next level is stored in a file called - located in the home directory\nTips for beginners Try to understand why previous solution is not working as you expect. Solution You may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our cat command: The terminal is waiting for something else. This happens due to character - is used to pass arguments to our commands, and the linux shell is interpreting that. To prevent that, we could use:\ncat ./- NB: Dot . is used to refer current directory. The slash / is used at the end of directory name.\nWe get the password for bandit3 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit2/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called - located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eTry to understand why previous solution is not working as you expect.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eYou may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our \u003ccode\u003ecat\u003c/code\u003e command:\n\u003cimg alt=\"bandit2\" loading=\"lazy\" src=\"/images/otw/bandit/bandit2/0.png\"\u003e\u003c/p\u003e\n\u003cp\u003eThe terminal is \u003cem\u003ewaiting\u003c/em\u003e for something else. This happens due to character \u003ccode\u003e-\u003c/code\u003e is used to pass arguments to our commands, and the linux shell is interpreting that.\nTo prevent that, we could use:\u003c/p\u003e","title":"Bandit2"},{"content":"Level description The password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\nTips for beginners Think about how to escape the whitespaces. Solution After login in the machine as bandit3, we can see the filename \u0026ndash;spaces in this filename\u0026ndash;.\nNow we have 2 problems:\nSame as previous level, filename starts with --, so it will be interpreted as an argument. Address this problem using ./. Filename contains whitespaces. This is an issue, as bash interpretes whitespaces to separate commands. To solve the second problem, we must escape the whitespace character in some way. Here is the solution:\ncat ./--spaces\\ in\\ this\\ filename-- NB: Little trick, you can start writting filename and press Tab to autocomplete the name. The \\ is going to be inserted automatically.\nJust using the \\ we can escape the whitespace.\nNow we can continue with the bandit4 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit3/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eThink about how to \u003cem\u003eescape\u003c/em\u003e the whitespaces.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAfter login in the machine as bandit3, we can see the filename \u003cem\u003e\u0026ndash;spaces in this filename\u0026ndash;\u003c/em\u003e.\u003c/p\u003e\n\u003cp\u003eNow we have 2 problems:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eSame as previous level, filename starts with \u003ccode\u003e--\u003c/code\u003e, so it will be interpreted as an argument. Address this problem using \u003ccode\u003e./\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003eFilename contains \u003cstrong\u003ewhitespaces\u003c/strong\u003e. This is an issue, as bash interpretes whitespaces to separate commands.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eTo solve the second problem, we must escape the whitespace character in some way. Here is the solution:\u003c/p\u003e","title":"Bandit3"},{"content":"Level description The password for the next level is stored in a hidden file in the inhere directory.\nTips for beginners Learn how to navigate directories in Linux. First understand what a hidden file is. Solution Listing directory files inside bandit4\u0026rsquo;s home directory, show directory inhere.\nNB: How to distinguish files and directories in Linux? Use ls -l and see the difference.\nWe have 2 options now:\nMove to inhere directory and check contens again. Check contents directly. Moving to another directory can be done using cd \u0026lt;dirName\u0026gt;. If you prefer to check directory contents directly, use ls \u0026lt;dirName\u0026gt;.\nAfter checking inhere contents via ls, we see nothing. The reason is the file is a hidden file. A hidden file in Linux is everyfile whose name starts with dot .. Hidden files are not shown by default with ls command, so we must add a special flag -a to list all files: NB: Both flags -l and -a cna be combined into a single flag -al, which is shorter to type.\nAs you can see, filename is \u0026hellip;Hidding-From-You starting with three dots. Reading file contents should be easy at this point!\nNext level is bandit5.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit4/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a hidden file in the inhere directory.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to navigate directories in Linux.\u003c/li\u003e\n\u003cli\u003eFirst understand what a hidden file is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eListing directory files inside bandit4\u0026rsquo;s home directory, show directory \u003cstrong\u003einhere\u003c/strong\u003e.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e How to distinguish files and directories in Linux? Use \u003ccode\u003els -l\u003c/code\u003e and see the difference.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eWe have 2 options now:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eMove to inhere directory and check contens again.\u003c/li\u003e\n\u003cli\u003eCheck contents directly.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eMoving to another directory can be done using \u003ccode\u003ecd \u0026lt;dirName\u0026gt;\u003c/code\u003e. If you prefer to check directory contents directly, use \u003ccode\u003els \u0026lt;dirName\u0026gt;\u003c/code\u003e.\u003c/p\u003e","title":"Bandit4"},{"content":"Level description The password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\nTips for beginners What means human-readable file? Is there any way to check filetype at Linux?. Solution Checking inhere\u0026rsquo;s contents shows some files names \u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII here\nSo now, our goal is checking if file content of every file in the folder is ASCII or not. file \u0026lt;filename\u0026gt; does the job. Note the use of *. That called a wildcard regular expression, we\u0026rsquo;ll deep into it in later levels. An easy approach could be checking every file separately:\nfile ./--file00 file ./--file01 ... file ./--file09 But that\u0026rsquo;s not funny, imagine we have 100 files to check. All the files are in the same directory, so we can use cat ./* where ./* matches every filename in the directory, applying file to every file.\nNB: Another approach is to use find with certaing flags. Try to do in different ways, don\u0026rsquo;t stick to my solution.\nThe file \u0026ndash;file00 content is not readable, so get password from \u0026ndash;file07 and continue with bandit6.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit5/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eWhat means human-readable file?\u003c/li\u003e\n\u003cli\u003eIs there any way to check filetype at Linux?.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eChecking inhere\u0026rsquo;s contents shows some files names \u003cstrong\u003e\u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09\u003c/strong\u003e. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII \u003ca href=\"https://en.wikipedia.org/wiki/ASCII\"\u003ehere\u003c/a\u003e\u003c/p\u003e","title":"Bandit5"},{"content":"Level description The password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\nhuman-readable 1033 bytes in size not executable Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution The purpose of the level is showing us how to find for files. Listing contents of inhere, we can see some folders, containing a lot of files inside: NB: Adding -R to ls shows recursively the content of every folder inside the directory listed.\nSo this time, checking every file is not an option. We need to find a file with some properties, specific size, not excutable and human-readable. Let\u0026rsquo;s explain the command we\u0026rsquo;re using:\nfind inhere/ -size 1033c ! -executable First, we specify the directory, in this case inhere. The option -size 1033c returns files of 1033 bytes. Then, with -executable we would get executable files, but we want not executable files, that\u0026rsquo;s why we are adding ! before.\nNB: By default, the -size option takes as argument the number of blocks. For example, -size 2 means 2 blocks of 512 bytes, so its 1024. The c is used to specify exact bytes. Don\u0026rsquo;t ask me why it\u0026rsquo;s c and not b 😅.\nThe property of human-readability is not implemented in find. This is not an issue, previous command returns a single file and it is human readable (we could confirm using file): Extra tip: try to use the following:\nfind inhere/ -size 1033c ! -executable | file You get the same result! The pipe | is a great tool to execute 2+ commands in one line.\nGet your password and continue with bandit7.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit6/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ehuman-readable\u003c/li\u003e\n\u003cli\u003e1033 bytes in size\u003c/li\u003e\n\u003cli\u003enot executable\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThe purpose of the level is showing us how to find for files. Listing contents of \u003cstrong\u003einhere\u003c/strong\u003e, we can see some folders, containing a lot of files inside:\n\u003cimg alt=\"bandit6_0\" loading=\"lazy\" src=\"/images/otw/bandit/bandit6/0.png\"\u003e\u003c/p\u003e","title":"Bandit6"},{"content":"Level description The password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\nhuman-readable 1033 bytes in size not executable Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution The purpose of the level is showing us how to find for files. Listing contents of inhere, we can see some folders, containing a lot of files inside: NB: Adding -R to ls shows recursively the content of every folder inside the directory listed.\nSo this time, checking every file is not an option. We need to find a file with some properties, specific size, not excutable and human-readable. Let\u0026rsquo;s explain the command we\u0026rsquo;re using:\nfind inhere/ -size 1033c ! -executable First, we specify the directory, in this case inhere. The option -size 1033c returns files of 1033 bytes. Then, with -executable we would get executable files, but we want not executable files, that\u0026rsquo;s why we are adding ! before.\nNB: By default, the -size option takes as argument the number of blocks. For example, -size 2 means 2 blocks of 512 bytes, so its 1024. The c is used to specify exact bytes. Don\u0026rsquo;t ask me why it\u0026rsquo;s c and not b 😅.\nThe property of human-readability is not implemented in find. This is not an issue, previous command returns a single file and it is human readable (we could confirm using file): Extra tip: try to use the following:\nfind inhere/ -size 1033c ! -executable | file You get the same result! The pipe | is a great tool to execute 2+ commands in one line.\nGet your password and continue with bandit7.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit7/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ehuman-readable\u003c/li\u003e\n\u003cli\u003e1033 bytes in size\u003c/li\u003e\n\u003cli\u003enot executable\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThe purpose of the level is showing us how to find for files. Listing contents of \u003cstrong\u003einhere\u003c/strong\u003e, we can see some folders, containing a lot of files inside:\n\u003cimg alt=\"bandit6_0\" loading=\"lazy\" src=\"/images/otw/bandit/bandit6/0.png\"\u003e\u003c/p\u003e","title":"Bandit7"},{"content":"👨‍💻 whoami Hey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\nWhat is this❓​ This blog is basically my thoughts on several hacking topics. Here you’ll see:\nWriteups from CTF challenges, from platforms like HackTheBox or OverTheWire.\nWalkthroughs and notes on pentesting techniques I’m learning or testing.\nSome posts on cryptography — because math can be fun (sometimes).\nRandom topics that freaks like me may (just may) find interesting.\nThe idea is simple: share what I learn, document my journey, and maybe help others who are also diving into the exciting world of ethical hacking.\n📫 Contact Want to say hi, share ideas, or just geek out about hacking? Reach me here:\n📧 Email: mrb0b1073@proton.me 💻​ GitHub: mrb0b173 🟩​ HackTheBox: mrb0b1073 ","permalink":"http://localhost:1313/about/","summary":"\u003ch2 id=\"-whoami\"\u003e👨‍💻 whoami\u003c/h2\u003e\n\u003cp\u003eHey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\u003c/p\u003e\n\u003chr\u003e\n\u003ch2 id=\"what-is-this\"\u003eWhat is this❓​\u003c/h2\u003e\n\u003cp\u003eThis blog is basically my thoughts on several hacking topics. Here you’ll see:\u003c/p\u003e","title":"About"},{"content":"Hey! 👋 I\u0026rsquo;m mrb0b1073 and this is my first post.\nWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\nExcited to start this adventure!\n","permalink":"http://localhost:1313/posts/hello-world/","summary":"\u003cp\u003eHey! 👋 I\u0026rsquo;m \u003cstrong\u003emrb0b1073\u003c/strong\u003e and this is my first post.\u003c/p\u003e\n\u003cp\u003eWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\u003cbr\u003e\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\u003c/p\u003e\n\u003cp\u003eExcited to start this adventure!\u003c/p\u003e","title":"Hello World"},{"content":"Introduction If you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\nIn cybersecurity there are broadly two complementary roles: Blue Team and Red Team. Blue Teams focus on defense, monitoring, incident response, hardening systems and keeping services secure, while Red Teams simulate attackers to find weaknesses and prove what an adversary could do. Ethical hacking aligns closely with Red Team operations, but cybersecurity is highly transversal across IT. There are many specialities or areas, such as cloud security, appsec, pentesting, forensics, governance, risk management, malware analysis, etc. Every topic could deserve its own post, so let\u0026rsquo;s keep it simple and focus on ethical hacking.\nHacker philosophy Let\u0026rsquo;s start with the idea of what is exactly a hacker. A hacker is someone who explores systems to understand how they work, finds creative ways to make or fix things, and solves technical problems. Historically the word describes curiosity, craft, and a drive to improve systems — not criminality. It is important to make the distinction between hacker and cracker, also called cybercriminal. A hacker explores, builds, discloses responsibly and works to improve security. They work in authorized environments or labs. On the other hand, a cracker breaks into systems for theft, vandalism or other illicit gain.\nHere you can find the most popularized ideas often summarized as the hacker ethic:\nCuriosity first: Learn by exploring and tinkering. Freedom of information: All knowledge should be shared to help progress. This fits properly with the idea of open source. Mistrust of needless authority: Centralized control sometimes blocks innovation. It is always good to question anything, specially common assumptions. Meritocracy: Skills, craft and results matter more than titles. Craftsmanship \u0026amp; elegance: Technical beauty matters. Build clean, clever and efficient solutions. Responsability \u0026amp; ethics: Use your skills to build, fix, educate and defend, not to harm. Core fundamentals Assuming you want to init yourself in hacking, you should first build competence across three basic pillars.\nOperating Systems You should learn as much as possible about Linux and Windows. Specially Linux, all the tools you will be using are meant to be used in a Linux environment. Skill with shell is required, learn basic commands and how to interact with the OS using the terminal. Research about processes, file permissions, package management and logs. A large proportion of web servers around the world run on Linux, although Windows is also widely used. Windows knowledge is really valuable too, considering active directory is strongly used in corporate environments.\nNetworking You have to understand how computers communicate each other. Understand basic networking concepts, IP adresses, subnetting, proxies, find out how internet works. Study some protocols such as TCP/IP, HTTP, DNS or SSH. This could sound confusing for beginners, but this step is not optional! Study different client/server models and how services expose attack surfaces.\nProgramming \u0026amp; scripting Is this completely required? Maybe not for complete beginners. Does it help? Absolutely yes. Understanding how web apps or any type of application works makes things much easier. You can imagine different entry points to exploit if you understand how systems are designed. Also writing scripts in bash or python makes you more productive through automation.\nEthical Hacking foundations Once you feel confident with these 3 pillars, you can go to the next step. You can study about different topics and areas. For example, binary exploiting, web pentesting, mobile pentesting, wireless hacking, etc. You should start picking a focus, in this post we focus on web pentesting, as it is beginner friendly. Also web applications are the bread and butter in companies nowadays.\nKey concepts to study:\nCIA Triad: CIA refers to Confidentiality, Integrity and Availability. These three concepts are key in information security, and describe properties we want to ensure in our systems and information. Web Security basics, OWASP: Study the OWASP Top 10, which summarizes most frequent web security risks. Authentication and session control: Understand the concepts of Authentication and Authorization, research about how session is handled in web apps, cookies, JWT tokens, etc. Input validation \u0026amp; injection attacks: Learn about SQL Injection, Cross-Site Scripting (XSS), Code Injection, SSTI, and every injection type. Secure development lifecycle: Find out how to implement security controls in code. This can be more related to Blue Team, but as Red Teamer it is important to understand. Firewall evasion: What a firewall is and some techniques/methods to bypass. Some cryptography: Understand what a chiper and a hash are, how information is encrypted to prevent access from 3rd parties. Focusing on web, read about TLS protocol. There are many more topics you can research and learn, but this could be a nice starting point.\nTools and platforms to learn Now you have an idea of what to study, let\u0026rsquo;s see how to start in practical terms.\nSome platforms I personally recommend:\nOverTheWire: Here you can find some CTFs (Capture The Flag) which are fun to play and also really instructive. Bandit games are a must for complete beginners, as you will explore some linux and bash concepts which are basic to continue. The games are leveled by difficulty, in their web you can get all the information about how to play, only a terminal and SSH is required. This helps building your foundation in Linux OS. HackTheBox: Nº 1 platform in cybersecurity. Has a lot of resources to learn all this core fundamentals, and also red team / blue team security topics. It is focused on labs where you can test your skills hacking different boxes but if you really want to learn it is worth to invest time and money in the academy. I have to say the level here is high, specially if you try to hack machines on your own without using some guide or writeup. TryHackMe: More beginner friendly than hackthebox, it provides a lot of guided learning resources. PortSwigger Labs: Practical labs about specific topics, focused on web hacking. They are great to learn and understand different types of attacks, injections, and security misconfigurations. I would recommend digging into this once you have the theoretical basis about these concepts. I have to mention a few tools I am sure you\u0026rsquo;d end up using:\nNmap: This is probably the most famous tool in hacking, allowing you to gather information about ports and services running in a machine. Burpsuite: A proxy tool widely used in web application security testing. It basically allows you to intercept and modify web requests, which can be used to perform several types of attacks. Metasploit: The most used pentesting framework. Contains a large amount of scripts and exploits ready to run. Another crucial step here is to set up your virtual lab environment to test vulnerable applications. To achieve this goal, there are some Linux distributions like Kali, Parrot or BlackArch, but that\u0026rsquo;s a topic for another post.\nFinal thoughs To sum up, this would be my personal roadmap:\nLearn the fundamentals, specially Linux and networking. Install some Linux in a virtual machine, play with it, get comfortable with the terminal. You can start with bandit wargames in OverTheWire. Complete every level and make sure to understand everything as clear as possible. Move to guided boxes on HackTheBox. I recommend you joining their Discord, ask questions, community is great there! Take notes, repeat, learn, improve your skills. Maybe use your own lab environment, create your own vulnerable apps. Hacking is a mixing of curiosity, study and practice. Being passionate and motivated about it is really helpful and will definitely speed up the process. The path is long and really challenging, so keep it going!\n\u0026ldquo;Yes, I am a criminal. My crime is that of curiosity.\u0026rdquo; — The Mentor (Loyd Blankenship) at The Hacker Manifesto\n","permalink":"http://localhost:1313/posts/starting-point/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIf you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\u003c/p\u003e","title":"Starting Point"},{"content":"Introduction In this post series we are going to solve every level from bandit in OverTheWire This guide pretends to be a writeup containing the solutions of the level, designed for beginners.\nTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing WSL, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\nEvery section will contain the solution as well as some tips for people who is absolutely beginner.\nTips First of all, some tips:\nDo not use this as first resource to solve the levels. Try on your own, make mistakes and learn from them. Only check the solution as last resource or if you are completely new and you have absolutely no idea about what to do next. Take notes from your learning. Write up commands, tips and everything which can be useful in the future. Make sure to understand everything. Is a good idea to note the passwords for every level. If you want to continue letter, you can simply log in in the desired level. It is annoying to repeat everything! Follow the tips and information provided at OverTheWire website. Levels Here is my solution for every level:\nBandit0 Bandit1 Bandit2 Bandit3 Bandit4 Bandit5 Bandit6 Bandit7 ","permalink":"http://localhost:1313/posts/otw/bandit/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIn this post series we are going to solve every level from bandit in \u003ca href=\"https://overthewire.org/wargames/bandit/\"\u003e\u003cem\u003eOverTheWire\u003c/em\u003e\u003c/a\u003e\nThis guide pretends to be a writeup containing the solutions of the level, designed for beginners.\u003c/p\u003e\n\u003cp\u003eTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing \u003ca href=\"https://learn.microsoft.com/en-us/windows/wsl/install\"\u003eWSL\u003c/a\u003e, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\u003c/p\u003e","title":"Bandit"},{"content":"Level description The goal of this level is for you to log into the game using SSH. The host to which you need to connect is bandit.labs.overthewire.org, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\nTips for beginners Read a bit about what SSH is. Research about what a port is. Solution This is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go here.\nAt Linux, we can use ssh client to connect to the server. It should be installed by default on your system. If not, please first research about how to install. Once you have the SSH client installed, you can log in into the first level as follows:\nssh bandit0@bandit.labs.overthewire.org -p 2220 Syntax is simple: ssh \u0026lt;username\u0026gt;@\u0026lt;hostname\u0026gt; -p \u0026lt;port\u0026gt;. Usually SSH runs on port 22 by default, but they changed to port 2220 so we must specify it in the command.\nOnce you try to log in, you will see something like this: NB: If it\u0026rsquo;s the first time you try to log in, you will be asked about the authenticity of the host. Just type yes.\nType the password bandit0 and press enter. Now you are inside bandit server, ready to begin with bandit1!\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit0/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe goal of this level is for you to log into the game using SSH. The host to which you need to connect is \u003cstrong\u003ebandit.labs.overthewire.org\u003c/strong\u003e, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eRead a bit about what SSH is.\u003c/li\u003e\n\u003cli\u003eResearch about what a port is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go \u003ca href=\"https://en.wikipedia.org/wiki/Secure_Shell\"\u003ehere\u003c/a\u003e.\u003c/p\u003e","title":"Bandit0"},{"content":"Level description The password for the next level is stored in a file called readme located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\nTips for beginners Learn about home directory in Linux. Learn to use cat and ls commands. Solution First step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\nls This shows in terminal the files at the current directory. There you will see the readme file.\nNow we can to check the contents, so let\u0026rsquo;s use cat:\ncat readme To read a file, we use cat \u0026lt;filename\u0026gt;.\nNB: Not every file is human readable in Linux. We deep more about this in later levels.\nThe content of the readme file reveals the password for bandit2 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit1/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u003cstrong\u003ereadme\u003c/strong\u003e located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn about home directory in Linux.\u003c/li\u003e\n\u003cli\u003eLearn to use \u003ccode\u003ecat\u003c/code\u003e and \u003ccode\u003els\u003c/code\u003e commands.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eFirst step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\u003c/p\u003e","title":"Bandit1"},{"content":"Level description The password for the next level is stored in a file called - located in the home directory\nTips for beginners Try to understand why previous solution is not working as you expect. Solution You may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our cat command: The terminal is waiting for something else. This happens due to character - is used to pass arguments to our commands, and the linux shell is interpreting that. To prevent that, we could use:\ncat ./- NB: Dot . is used to refer current directory. The slash / is used at the end of directory name.\nWe get the password for bandit3 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit2/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called - located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eTry to understand why previous solution is not working as you expect.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eYou may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our \u003ccode\u003ecat\u003c/code\u003e command:\n\u003cimg alt=\"bandit2\" loading=\"lazy\" src=\"/images/otw/bandit/bandit2/0.png\"\u003e\u003c/p\u003e\n\u003cp\u003eThe terminal is \u003cem\u003ewaiting\u003c/em\u003e for something else. This happens due to character \u003ccode\u003e-\u003c/code\u003e is used to pass arguments to our commands, and the linux shell is interpreting that.\nTo prevent that, we could use:\u003c/p\u003e","title":"Bandit2"},{"content":"Level description The password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\nTips for beginners Think about how to escape the whitespaces. Solution After login in the machine as bandit3, we can see the filename \u0026ndash;spaces in this filename\u0026ndash;.\nNow we have 2 problems:\nSame as previous level, filename starts with --, so it will be interpreted as an argument. Address this problem using ./. Filename contains whitespaces. This is an issue, as bash interpretes whitespaces to separate commands. To solve the second problem, we must escape the whitespace character in some way. Here is the solution:\ncat ./--spaces\\ in\\ this\\ filename-- NB: Little trick, you can start writting filename and press Tab to autocomplete the name. The \\ is going to be inserted automatically.\nJust using the \\ we can escape the whitespace.\nNow we can continue with the bandit4 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit3/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eThink about how to \u003cem\u003eescape\u003c/em\u003e the whitespaces.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAfter login in the machine as bandit3, we can see the filename \u003cem\u003e\u0026ndash;spaces in this filename\u0026ndash;\u003c/em\u003e.\u003c/p\u003e\n\u003cp\u003eNow we have 2 problems:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eSame as previous level, filename starts with \u003ccode\u003e--\u003c/code\u003e, so it will be interpreted as an argument. Address this problem using \u003ccode\u003e./\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003eFilename contains \u003cstrong\u003ewhitespaces\u003c/strong\u003e. This is an issue, as bash interpretes whitespaces to separate commands.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eTo solve the second problem, we must escape the whitespace character in some way. Here is the solution:\u003c/p\u003e","title":"Bandit3"},{"content":"Level description The password for the next level is stored in a hidden file in the inhere directory.\nTips for beginners Learn how to navigate directories in Linux. First understand what a hidden file is. Solution Listing directory files inside bandit4\u0026rsquo;s home directory, show directory inhere.\nNB: How to distinguish files and directories in Linux? Use ls -l and see the difference.\nWe have 2 options now:\nMove to inhere directory and check contens again. Check contents directly. Moving to another directory can be done using cd \u0026lt;dirName\u0026gt;. If you prefer to check directory contents directly, use ls \u0026lt;dirName\u0026gt;.\nAfter checking inhere contents via ls, we see nothing. The reason is the file is a hidden file. A hidden file in Linux is everyfile whose name starts with dot .. Hidden files are not shown by default with ls command, so we must add a special flag -a to list all files: NB: Both flags -l and -a cna be combined into a single flag -al, which is shorter to type.\nAs you can see, filename is \u0026hellip;Hidding-From-You starting with three dots. Reading file contents should be easy at this point!\nNext level is bandit5.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit4/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a hidden file in the inhere directory.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to navigate directories in Linux.\u003c/li\u003e\n\u003cli\u003eFirst understand what a hidden file is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eListing directory files inside bandit4\u0026rsquo;s home directory, show directory \u003cstrong\u003einhere\u003c/strong\u003e.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e How to distinguish files and directories in Linux? Use \u003ccode\u003els -l\u003c/code\u003e and see the difference.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eWe have 2 options now:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eMove to inhere directory and check contens again.\u003c/li\u003e\n\u003cli\u003eCheck contents directly.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eMoving to another directory can be done using \u003ccode\u003ecd \u0026lt;dirName\u0026gt;\u003c/code\u003e. If you prefer to check directory contents directly, use \u003ccode\u003els \u0026lt;dirName\u0026gt;\u003c/code\u003e.\u003c/p\u003e","title":"Bandit4"},{"content":"Level description The password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\nTips for beginners What means human-readable file? Is there any way to check filetype at Linux?. Solution Checking inhere\u0026rsquo;s contents shows some files names \u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII here\nSo now, our goal is checking if file content of every file in the folder is ASCII or not. file \u0026lt;filename\u0026gt; does the job. Note the use of *. That called a wildcard regular expression, we\u0026rsquo;ll deep into it in later levels. An easy approach could be checking every file separately:\nfile ./--file00 file ./--file01 ... file ./--file09 But that\u0026rsquo;s not funny, imagine we have 100 files to check. All the files are in the same directory, so we can use cat ./* where ./* matches every filename in the directory, applying file to every file.\nNB: Another approach is to use find with certaing flags. Try to do in different ways, don\u0026rsquo;t stick to my solution.\nThe file \u0026ndash;file00 content is not readable, so get password from \u0026ndash;file07 and continue with bandit6.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit5/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eWhat means human-readable file?\u003c/li\u003e\n\u003cli\u003eIs there any way to check filetype at Linux?.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eChecking inhere\u0026rsquo;s contents shows some files names \u003cstrong\u003e\u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09\u003c/strong\u003e. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII \u003ca href=\"https://en.wikipedia.org/wiki/ASCII\"\u003ehere\u003c/a\u003e\u003c/p\u003e","title":"Bandit5"},{"content":"Level description The password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\nhuman-readable 1033 bytes in size not executable Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution The purpose of the level is showing us how to find for files. Listing contents of inhere, we can see some folders, containing a lot of files inside: NB: Adding -R to ls shows recursively the content of every folder inside the directory listed.\nSo this time, checking every file is not an option. We need to find a file with some properties, specific size, not excutable and human-readable. Let\u0026rsquo;s explain the command we\u0026rsquo;re using:\nfind inhere/ -size 1033c ! -executable First, we specify the directory, in this case inhere. The option -size 1033c returns files of 1033 bytes. Then, with -executable we would get executable files, but we want not executable files, that\u0026rsquo;s why we are adding ! before.\nNB: By default, the -size option takes as argument the number of blocks. For example, -size 2 means 2 blocks of 512 bytes, so its 1024. The c is used to specify exact bytes. Don\u0026rsquo;t ask me why it\u0026rsquo;s c and not b 😅.\nThe property of human-readability is not implemented in find. This is not an issue, previous command returns a single file and it is human readable (we could confirm using file): Extra tip: try to use the following:\nfind inhere/ -size 1033c ! -executable | file You get the same result! The pipe | is a great tool to execute 2+ commands in one line.\nGet your password and continue with bandit7.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit6/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ehuman-readable\u003c/li\u003e\n\u003cli\u003e1033 bytes in size\u003c/li\u003e\n\u003cli\u003enot executable\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThe purpose of the level is showing us how to find for files. Listing contents of \u003cstrong\u003einhere\u003c/strong\u003e, we can see some folders, containing a lot of files inside:\n\u003cimg alt=\"bandit6_0\" loading=\"lazy\" src=\"/images/otw/bandit/bandit6/0.png\"\u003e\u003c/p\u003e","title":"Bandit6"},{"content":"Level description The password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\nhuman-readable 1033 bytes in size not executable Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution The purpose of the level is showing us how to find for files. Listing contents of inhere, we can see some folders, containing a lot of files inside: NB: Adding -R to ls shows recursively the content of every folder inside the directory listed.\nSo this time, checking every file is not an option. We need to find a file with some properties, specific size, not excutable and human-readable. Let\u0026rsquo;s explain the command we\u0026rsquo;re using:\nfind inhere/ -size 1033c ! -executable First, we specify the directory, in this case inhere. The option -size 1033c returns files of 1033 bytes. Then, with -executable we would get executable files, but we want not executable files, that\u0026rsquo;s why we are adding ! before.\nNB: By default, the -size option takes as argument the number of blocks. For example, -size 2 means 2 blocks of 512 bytes, so its 1024. The c is used to specify exact bytes. Don\u0026rsquo;t ask me why it\u0026rsquo;s c and not b 😅.\nThe property of human-readability is not implemented in find. This is not an issue, previous command returns a single file and it is human readable (we could confirm using file): Get your password and continue with bandit7.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit7/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ehuman-readable\u003c/li\u003e\n\u003cli\u003e1033 bytes in size\u003c/li\u003e\n\u003cli\u003enot executable\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThe purpose of the level is showing us how to find for files. Listing contents of \u003cstrong\u003einhere\u003c/strong\u003e, we can see some folders, containing a lot of files inside:\n\u003cimg alt=\"bandit6_0\" loading=\"lazy\" src=\"/images/otw/bandit/bandit6/0.png\"\u003e\u003c/p\u003e","title":"Bandit7"},{"content":"👨‍💻 whoami Hey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\nWhat is this❓​ This blog is basically my thoughts on several hacking topics. Here you’ll see:\nWriteups from CTF challenges, from platforms like HackTheBox or OverTheWire.\nWalkthroughs and notes on pentesting techniques I’m learning or testing.\nSome posts on cryptography — because math can be fun (sometimes).\nRandom topics that freaks like me may (just may) find interesting.\nThe idea is simple: share what I learn, document my journey, and maybe help others who are also diving into the exciting world of ethical hacking.\n📫 Contact Want to say hi, share ideas, or just geek out about hacking? Reach me here:\n📧 Email: mrb0b1073@proton.me 💻​ GitHub: mrb0b173 🟩​ HackTheBox: mrb0b1073 ","permalink":"http://localhost:1313/about/","summary":"\u003ch2 id=\"-whoami\"\u003e👨‍💻 whoami\u003c/h2\u003e\n\u003cp\u003eHey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\u003c/p\u003e\n\u003chr\u003e\n\u003ch2 id=\"what-is-this\"\u003eWhat is this❓​\u003c/h2\u003e\n\u003cp\u003eThis blog is basically my thoughts on several hacking topics. Here you’ll see:\u003c/p\u003e","title":"About"},{"content":"Hey! 👋 I\u0026rsquo;m mrb0b1073 and this is my first post.\nWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\nExcited to start this adventure!\n","permalink":"http://localhost:1313/posts/hello-world/","summary":"\u003cp\u003eHey! 👋 I\u0026rsquo;m \u003cstrong\u003emrb0b1073\u003c/strong\u003e and this is my first post.\u003c/p\u003e\n\u003cp\u003eWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\u003cbr\u003e\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\u003c/p\u003e\n\u003cp\u003eExcited to start this adventure!\u003c/p\u003e","title":"Hello World"},{"content":"Introduction If you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\nIn cybersecurity there are broadly two complementary roles: Blue Team and Red Team. Blue Teams focus on defense, monitoring, incident response, hardening systems and keeping services secure, while Red Teams simulate attackers to find weaknesses and prove what an adversary could do. Ethical hacking aligns closely with Red Team operations, but cybersecurity is highly transversal across IT. There are many specialities or areas, such as cloud security, appsec, pentesting, forensics, governance, risk management, malware analysis, etc. Every topic could deserve its own post, so let\u0026rsquo;s keep it simple and focus on ethical hacking.\nHacker philosophy Let\u0026rsquo;s start with the idea of what is exactly a hacker. A hacker is someone who explores systems to understand how they work, finds creative ways to make or fix things, and solves technical problems. Historically the word describes curiosity, craft, and a drive to improve systems — not criminality. It is important to make the distinction between hacker and cracker, also called cybercriminal. A hacker explores, builds, discloses responsibly and works to improve security. They work in authorized environments or labs. On the other hand, a cracker breaks into systems for theft, vandalism or other illicit gain.\nHere you can find the most popularized ideas often summarized as the hacker ethic:\nCuriosity first: Learn by exploring and tinkering. Freedom of information: All knowledge should be shared to help progress. This fits properly with the idea of open source. Mistrust of needless authority: Centralized control sometimes blocks innovation. It is always good to question anything, specially common assumptions. Meritocracy: Skills, craft and results matter more than titles. Craftsmanship \u0026amp; elegance: Technical beauty matters. Build clean, clever and efficient solutions. Responsability \u0026amp; ethics: Use your skills to build, fix, educate and defend, not to harm. Core fundamentals Assuming you want to init yourself in hacking, you should first build competence across three basic pillars.\nOperating Systems You should learn as much as possible about Linux and Windows. Specially Linux, all the tools you will be using are meant to be used in a Linux environment. Skill with shell is required, learn basic commands and how to interact with the OS using the terminal. Research about processes, file permissions, package management and logs. A large proportion of web servers around the world run on Linux, although Windows is also widely used. Windows knowledge is really valuable too, considering active directory is strongly used in corporate environments.\nNetworking You have to understand how computers communicate each other. Understand basic networking concepts, IP adresses, subnetting, proxies, find out how internet works. Study some protocols such as TCP/IP, HTTP, DNS or SSH. This could sound confusing for beginners, but this step is not optional! Study different client/server models and how services expose attack surfaces.\nProgramming \u0026amp; scripting Is this completely required? Maybe not for complete beginners. Does it help? Absolutely yes. Understanding how web apps or any type of application works makes things much easier. You can imagine different entry points to exploit if you understand how systems are designed. Also writing scripts in bash or python makes you more productive through automation.\nEthical Hacking foundations Once you feel confident with these 3 pillars, you can go to the next step. You can study about different topics and areas. For example, binary exploiting, web pentesting, mobile pentesting, wireless hacking, etc. You should start picking a focus, in this post we focus on web pentesting, as it is beginner friendly. Also web applications are the bread and butter in companies nowadays.\nKey concepts to study:\nCIA Triad: CIA refers to Confidentiality, Integrity and Availability. These three concepts are key in information security, and describe properties we want to ensure in our systems and information. Web Security basics, OWASP: Study the OWASP Top 10, which summarizes most frequent web security risks. Authentication and session control: Understand the concepts of Authentication and Authorization, research about how session is handled in web apps, cookies, JWT tokens, etc. Input validation \u0026amp; injection attacks: Learn about SQL Injection, Cross-Site Scripting (XSS), Code Injection, SSTI, and every injection type. Secure development lifecycle: Find out how to implement security controls in code. This can be more related to Blue Team, but as Red Teamer it is important to understand. Firewall evasion: What a firewall is and some techniques/methods to bypass. Some cryptography: Understand what a chiper and a hash are, how information is encrypted to prevent access from 3rd parties. Focusing on web, read about TLS protocol. There are many more topics you can research and learn, but this could be a nice starting point.\nTools and platforms to learn Now you have an idea of what to study, let\u0026rsquo;s see how to start in practical terms.\nSome platforms I personally recommend:\nOverTheWire: Here you can find some CTFs (Capture The Flag) which are fun to play and also really instructive. Bandit games are a must for complete beginners, as you will explore some linux and bash concepts which are basic to continue. The games are leveled by difficulty, in their web you can get all the information about how to play, only a terminal and SSH is required. This helps building your foundation in Linux OS. HackTheBox: Nº 1 platform in cybersecurity. Has a lot of resources to learn all this core fundamentals, and also red team / blue team security topics. It is focused on labs where you can test your skills hacking different boxes but if you really want to learn it is worth to invest time and money in the academy. I have to say the level here is high, specially if you try to hack machines on your own without using some guide or writeup. TryHackMe: More beginner friendly than hackthebox, it provides a lot of guided learning resources. PortSwigger Labs: Practical labs about specific topics, focused on web hacking. They are great to learn and understand different types of attacks, injections, and security misconfigurations. I would recommend digging into this once you have the theoretical basis about these concepts. I have to mention a few tools I am sure you\u0026rsquo;d end up using:\nNmap: This is probably the most famous tool in hacking, allowing you to gather information about ports and services running in a machine. Burpsuite: A proxy tool widely used in web application security testing. It basically allows you to intercept and modify web requests, which can be used to perform several types of attacks. Metasploit: The most used pentesting framework. Contains a large amount of scripts and exploits ready to run. Another crucial step here is to set up your virtual lab environment to test vulnerable applications. To achieve this goal, there are some Linux distributions like Kali, Parrot or BlackArch, but that\u0026rsquo;s a topic for another post.\nFinal thoughs To sum up, this would be my personal roadmap:\nLearn the fundamentals, specially Linux and networking. Install some Linux in a virtual machine, play with it, get comfortable with the terminal. You can start with bandit wargames in OverTheWire. Complete every level and make sure to understand everything as clear as possible. Move to guided boxes on HackTheBox. I recommend you joining their Discord, ask questions, community is great there! Take notes, repeat, learn, improve your skills. Maybe use your own lab environment, create your own vulnerable apps. Hacking is a mixing of curiosity, study and practice. Being passionate and motivated about it is really helpful and will definitely speed up the process. The path is long and really challenging, so keep it going!\n\u0026ldquo;Yes, I am a criminal. My crime is that of curiosity.\u0026rdquo; — The Mentor (Loyd Blankenship) at The Hacker Manifesto\n","permalink":"http://localhost:1313/posts/starting-point/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIf you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\u003c/p\u003e","title":"Starting Point"},{"content":"Introduction In this post series we are going to solve every level from bandit in OverTheWire This guide pretends to be a writeup containing the solutions of the level, designed for beginners.\nTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing WSL, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\nEvery section will contain the solution as well as some tips for people who is absolutely beginner.\nTips First of all, some tips:\nDo not use this as first resource to solve the levels. Try on your own, make mistakes and learn from them. Only check the solution as last resource or if you are completely new and you have absolutely no idea about what to do next. Take notes from your learning. Write up commands, tips and everything which can be useful in the future. Make sure to understand everything. Is a good idea to note the passwords for every level. If you want to continue letter, you can simply log in in the desired level. It is annoying to repeat everything! Follow the tips and information provided at OverTheWire website. Levels Here is my solution for every level:\nBandit0 Bandit1 Bandit2 Bandit3 Bandit4 Bandit5 Bandit6 Bandit7 ","permalink":"http://localhost:1313/posts/otw/bandit/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIn this post series we are going to solve every level from bandit in \u003ca href=\"https://overthewire.org/wargames/bandit/\"\u003e\u003cem\u003eOverTheWire\u003c/em\u003e\u003c/a\u003e\nThis guide pretends to be a writeup containing the solutions of the level, designed for beginners.\u003c/p\u003e\n\u003cp\u003eTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing \u003ca href=\"https://learn.microsoft.com/en-us/windows/wsl/install\"\u003eWSL\u003c/a\u003e, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\u003c/p\u003e","title":"Bandit"},{"content":"Level description The goal of this level is for you to log into the game using SSH. The host to which you need to connect is bandit.labs.overthewire.org, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\nTips for beginners Read a bit about what SSH is. Research about what a port is. Solution This is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go here.\nAt Linux, we can use ssh client to connect to the server. It should be installed by default on your system. If not, please first research about how to install. Once you have the SSH client installed, you can log in into the first level as follows:\nssh bandit0@bandit.labs.overthewire.org -p 2220 Syntax is simple: ssh \u0026lt;username\u0026gt;@\u0026lt;hostname\u0026gt; -p \u0026lt;port\u0026gt;. Usually SSH runs on port 22 by default, but they changed to port 2220 so we must specify it in the command.\nOnce you try to log in, you will see something like this: NB: If it\u0026rsquo;s the first time you try to log in, you will be asked about the authenticity of the host. Just type yes.\nType the password bandit0 and press enter. Now you are inside bandit server, ready to begin with bandit1!\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit0/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe goal of this level is for you to log into the game using SSH. The host to which you need to connect is \u003cstrong\u003ebandit.labs.overthewire.org\u003c/strong\u003e, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eRead a bit about what SSH is.\u003c/li\u003e\n\u003cli\u003eResearch about what a port is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go \u003ca href=\"https://en.wikipedia.org/wiki/Secure_Shell\"\u003ehere\u003c/a\u003e.\u003c/p\u003e","title":"Bandit0"},{"content":"Level description The password for the next level is stored in a file called readme located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\nTips for beginners Learn about home directory in Linux. Learn to use cat and ls commands. Solution First step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\nls This shows in terminal the files at the current directory. There you will see the readme file.\nNow we can to check the contents, so let\u0026rsquo;s use cat:\ncat readme To read a file, we use cat \u0026lt;filename\u0026gt;.\nNB: Not every file is human readable in Linux. We deep more about this in later levels.\nThe content of the readme file reveals the password for bandit2 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit1/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u003cstrong\u003ereadme\u003c/strong\u003e located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn about home directory in Linux.\u003c/li\u003e\n\u003cli\u003eLearn to use \u003ccode\u003ecat\u003c/code\u003e and \u003ccode\u003els\u003c/code\u003e commands.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eFirst step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\u003c/p\u003e","title":"Bandit1"},{"content":"Level description The password for the next level is stored in a file called - located in the home directory\nTips for beginners Try to understand why previous solution is not working as you expect. Solution You may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our cat command: The terminal is waiting for something else. This happens due to character - is used to pass arguments to our commands, and the linux shell is interpreting that. To prevent that, we could use:\ncat ./- NB: Dot . is used to refer current directory. The slash / is used at the end of directory name.\nWe get the password for bandit3 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit2/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called - located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eTry to understand why previous solution is not working as you expect.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eYou may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our \u003ccode\u003ecat\u003c/code\u003e command:\n\u003cimg alt=\"bandit2\" loading=\"lazy\" src=\"/images/otw/bandit/bandit2/0.png\"\u003e\u003c/p\u003e\n\u003cp\u003eThe terminal is \u003cem\u003ewaiting\u003c/em\u003e for something else. This happens due to character \u003ccode\u003e-\u003c/code\u003e is used to pass arguments to our commands, and the linux shell is interpreting that.\nTo prevent that, we could use:\u003c/p\u003e","title":"Bandit2"},{"content":"Level description The password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\nTips for beginners Think about how to escape the whitespaces. Solution After login in the machine as bandit3, we can see the filename \u0026ndash;spaces in this filename\u0026ndash;.\nNow we have 2 problems:\nSame as previous level, filename starts with --, so it will be interpreted as an argument. Address this problem using ./. Filename contains whitespaces. This is an issue, as bash interpretes whitespaces to separate commands. To solve the second problem, we must escape the whitespace character in some way. Here is the solution:\ncat ./--spaces\\ in\\ this\\ filename-- NB: Little trick, you can start writting filename and press Tab to autocomplete the name. The \\ is going to be inserted automatically.\nJust using the \\ we can escape the whitespace.\nNow we can continue with the bandit4 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit3/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eThink about how to \u003cem\u003eescape\u003c/em\u003e the whitespaces.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAfter login in the machine as bandit3, we can see the filename \u003cem\u003e\u0026ndash;spaces in this filename\u0026ndash;\u003c/em\u003e.\u003c/p\u003e\n\u003cp\u003eNow we have 2 problems:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eSame as previous level, filename starts with \u003ccode\u003e--\u003c/code\u003e, so it will be interpreted as an argument. Address this problem using \u003ccode\u003e./\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003eFilename contains \u003cstrong\u003ewhitespaces\u003c/strong\u003e. This is an issue, as bash interpretes whitespaces to separate commands.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eTo solve the second problem, we must escape the whitespace character in some way. Here is the solution:\u003c/p\u003e","title":"Bandit3"},{"content":"Level description The password for the next level is stored in a hidden file in the inhere directory.\nTips for beginners Learn how to navigate directories in Linux. First understand what a hidden file is. Solution Listing directory files inside bandit4\u0026rsquo;s home directory, show directory inhere.\nNB: How to distinguish files and directories in Linux? Use ls -l and see the difference.\nWe have 2 options now:\nMove to inhere directory and check contens again. Check contents directly. Moving to another directory can be done using cd \u0026lt;dirName\u0026gt;. If you prefer to check directory contents directly, use ls \u0026lt;dirName\u0026gt;.\nAfter checking inhere contents via ls, we see nothing. The reason is the file is a hidden file. A hidden file in Linux is everyfile whose name starts with dot .. Hidden files are not shown by default with ls command, so we must add a special flag -a to list all files: NB: Both flags -l and -a cna be combined into a single flag -al, which is shorter to type.\nAs you can see, filename is \u0026hellip;Hidding-From-You starting with three dots. Reading file contents should be easy at this point!\nNext level is bandit5.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit4/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a hidden file in the inhere directory.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to navigate directories in Linux.\u003c/li\u003e\n\u003cli\u003eFirst understand what a hidden file is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eListing directory files inside bandit4\u0026rsquo;s home directory, show directory \u003cstrong\u003einhere\u003c/strong\u003e.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e How to distinguish files and directories in Linux? Use \u003ccode\u003els -l\u003c/code\u003e and see the difference.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eWe have 2 options now:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eMove to inhere directory and check contens again.\u003c/li\u003e\n\u003cli\u003eCheck contents directly.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eMoving to another directory can be done using \u003ccode\u003ecd \u0026lt;dirName\u0026gt;\u003c/code\u003e. If you prefer to check directory contents directly, use \u003ccode\u003els \u0026lt;dirName\u0026gt;\u003c/code\u003e.\u003c/p\u003e","title":"Bandit4"},{"content":"Level description The password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\nTips for beginners What means human-readable file? Is there any way to check filetype at Linux?. Solution Checking inhere\u0026rsquo;s contents shows some files names \u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII here\nSo now, our goal is checking if file content of every file in the folder is ASCII or not. file \u0026lt;filename\u0026gt; does the job. Note the use of *. That called a wildcard regular expression, we\u0026rsquo;ll deep into it in later levels. An easy approach could be checking every file separately:\nfile ./--file00 file ./--file01 ... file ./--file09 But that\u0026rsquo;s not funny, imagine we have 100 files to check. All the files are in the same directory, so we can use cat ./* where ./* matches every filename in the directory, applying file to every file.\nNB: Another approach is to use find with certaing flags. Try to do in different ways, don\u0026rsquo;t stick to my solution.\nThe file \u0026ndash;file00 content is not readable, so get password from \u0026ndash;file07 and continue with bandit6.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit5/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eWhat means human-readable file?\u003c/li\u003e\n\u003cli\u003eIs there any way to check filetype at Linux?.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eChecking inhere\u0026rsquo;s contents shows some files names \u003cstrong\u003e\u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09\u003c/strong\u003e. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII \u003ca href=\"https://en.wikipedia.org/wiki/ASCII\"\u003ehere\u003c/a\u003e\u003c/p\u003e","title":"Bandit5"},{"content":"Level description The password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\nhuman-readable 1033 bytes in size not executable Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution The purpose of the level is showing us how to find for files. Listing contents of inhere, we can see some folders, containing a lot of files inside: NB: Adding -R to ls shows recursively the content of every folder inside the directory listed.\nSo this time, checking every file is not an option. We need to find a file with some properties, specific size, not excutable and human-readable. Let\u0026rsquo;s explain the command we\u0026rsquo;re using:\nfind inhere/ -size 1033c ! -executable First, we specify the directory, in this case inhere. The option -size 1033c returns files of 1033 bytes. Then, with -executable we would get executable files, but we want not executable files, that\u0026rsquo;s why we are adding ! before.\nNB: By default, the -size option takes as argument the number of blocks. For example, -size 2 means 2 blocks of 512 bytes, so its 1024. The c is used to specify exact bytes. Don\u0026rsquo;t ask me why it\u0026rsquo;s c and not b 😅.\nThe property of human-readability is not implemented in find. This is not an issue, previous command returns a single file and it is human readable (we could confirm using file): Extra tip: try to use the following:\nfind inhere/ -size 1033c ! -executable | file You get the same result! The pipe | is a great tool to execute 2+ commands in one line.\nGet your password and continue with bandit7.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit6/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ehuman-readable\u003c/li\u003e\n\u003cli\u003e1033 bytes in size\u003c/li\u003e\n\u003cli\u003enot executable\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThe purpose of the level is showing us how to find for files. Listing contents of \u003cstrong\u003einhere\u003c/strong\u003e, we can see some folders, containing a lot of files inside:\n\u003cimg alt=\"bandit6_0\" loading=\"lazy\" src=\"/images/otw/bandit/bandit6/0.png\"\u003e\u003c/p\u003e","title":"Bandit6"},{"content":"Level description The password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\nhuman-readable 1033 bytes in size not executable Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution The purpose of the level is showing us how to find for files. Listing contents of inhere, we can see some folders, containing a lot of files inside: NB: Adding -R to ls shows recursively the content of every folder inside the directory listed.\nSo this time, checking every file is not an option. We need to find a file with some properties, specific size, not excutable and human-readable. Let\u0026rsquo;s explain the command we\u0026rsquo;re using:\nfind inhere/ -size 1033c ! -executable First, we specify the directory, in this case inhere. The option -size 1033c returns files of 1033 bytes. Then, with -executable we would get executable files, but we want not executable files, that\u0026rsquo;s why we are adding ! before.\nNB: By default, the -size option takes as argument the number of blocks. For example, -size 2 means 2 blocks of 512 bytes, so its 1024. The c is used to specify exact bytes. Don\u0026rsquo;t ask me why it\u0026rsquo;s c and not b 😅.\nThe property of human-readability is not implemented in find. This is not an issue, previous command returns a single file and it is human readable (we could confirm using file):\nGet your password and continue with bandit7.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit7/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ehuman-readable\u003c/li\u003e\n\u003cli\u003e1033 bytes in size\u003c/li\u003e\n\u003cli\u003enot executable\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThe purpose of the level is showing us how to find for files. Listing contents of \u003cstrong\u003einhere\u003c/strong\u003e, we can see some folders, containing a lot of files inside:\n\u003cimg alt=\"bandit6_0\" loading=\"lazy\" src=\"/images/otw/bandit/bandit6/0.png\"\u003e\u003c/p\u003e","title":"Bandit7"},{"content":"👨‍💻 whoami Hey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\nWhat is this❓​ This blog is basically my thoughts on several hacking topics. Here you’ll see:\nWriteups from CTF challenges, from platforms like HackTheBox or OverTheWire.\nWalkthroughs and notes on pentesting techniques I’m learning or testing.\nSome posts on cryptography — because math can be fun (sometimes).\nRandom topics that freaks like me may (just may) find interesting.\nThe idea is simple: share what I learn, document my journey, and maybe help others who are also diving into the exciting world of ethical hacking.\n📫 Contact Want to say hi, share ideas, or just geek out about hacking? Reach me here:\n📧 Email: mrb0b1073@proton.me 💻​ GitHub: mrb0b173 🟩​ HackTheBox: mrb0b1073 ","permalink":"http://localhost:1313/about/","summary":"\u003ch2 id=\"-whoami\"\u003e👨‍💻 whoami\u003c/h2\u003e\n\u003cp\u003eHey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\u003c/p\u003e\n\u003chr\u003e\n\u003ch2 id=\"what-is-this\"\u003eWhat is this❓​\u003c/h2\u003e\n\u003cp\u003eThis blog is basically my thoughts on several hacking topics. Here you’ll see:\u003c/p\u003e","title":"About"},{"content":"Hey! 👋 I\u0026rsquo;m mrb0b1073 and this is my first post.\nWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\nExcited to start this adventure!\n","permalink":"http://localhost:1313/posts/hello-world/","summary":"\u003cp\u003eHey! 👋 I\u0026rsquo;m \u003cstrong\u003emrb0b1073\u003c/strong\u003e and this is my first post.\u003c/p\u003e\n\u003cp\u003eWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\u003cbr\u003e\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\u003c/p\u003e\n\u003cp\u003eExcited to start this adventure!\u003c/p\u003e","title":"Hello World"},{"content":"Introduction If you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\nIn cybersecurity there are broadly two complementary roles: Blue Team and Red Team. Blue Teams focus on defense, monitoring, incident response, hardening systems and keeping services secure, while Red Teams simulate attackers to find weaknesses and prove what an adversary could do. Ethical hacking aligns closely with Red Team operations, but cybersecurity is highly transversal across IT. There are many specialities or areas, such as cloud security, appsec, pentesting, forensics, governance, risk management, malware analysis, etc. Every topic could deserve its own post, so let\u0026rsquo;s keep it simple and focus on ethical hacking.\nHacker philosophy Let\u0026rsquo;s start with the idea of what is exactly a hacker. A hacker is someone who explores systems to understand how they work, finds creative ways to make or fix things, and solves technical problems. Historically the word describes curiosity, craft, and a drive to improve systems — not criminality. It is important to make the distinction between hacker and cracker, also called cybercriminal. A hacker explores, builds, discloses responsibly and works to improve security. They work in authorized environments or labs. On the other hand, a cracker breaks into systems for theft, vandalism or other illicit gain.\nHere you can find the most popularized ideas often summarized as the hacker ethic:\nCuriosity first: Learn by exploring and tinkering. Freedom of information: All knowledge should be shared to help progress. This fits properly with the idea of open source. Mistrust of needless authority: Centralized control sometimes blocks innovation. It is always good to question anything, specially common assumptions. Meritocracy: Skills, craft and results matter more than titles. Craftsmanship \u0026amp; elegance: Technical beauty matters. Build clean, clever and efficient solutions. Responsability \u0026amp; ethics: Use your skills to build, fix, educate and defend, not to harm. Core fundamentals Assuming you want to init yourself in hacking, you should first build competence across three basic pillars.\nOperating Systems You should learn as much as possible about Linux and Windows. Specially Linux, all the tools you will be using are meant to be used in a Linux environment. Skill with shell is required, learn basic commands and how to interact with the OS using the terminal. Research about processes, file permissions, package management and logs. A large proportion of web servers around the world run on Linux, although Windows is also widely used. Windows knowledge is really valuable too, considering active directory is strongly used in corporate environments.\nNetworking You have to understand how computers communicate each other. Understand basic networking concepts, IP adresses, subnetting, proxies, find out how internet works. Study some protocols such as TCP/IP, HTTP, DNS or SSH. This could sound confusing for beginners, but this step is not optional! Study different client/server models and how services expose attack surfaces.\nProgramming \u0026amp; scripting Is this completely required? Maybe not for complete beginners. Does it help? Absolutely yes. Understanding how web apps or any type of application works makes things much easier. You can imagine different entry points to exploit if you understand how systems are designed. Also writing scripts in bash or python makes you more productive through automation.\nEthical Hacking foundations Once you feel confident with these 3 pillars, you can go to the next step. You can study about different topics and areas. For example, binary exploiting, web pentesting, mobile pentesting, wireless hacking, etc. You should start picking a focus, in this post we focus on web pentesting, as it is beginner friendly. Also web applications are the bread and butter in companies nowadays.\nKey concepts to study:\nCIA Triad: CIA refers to Confidentiality, Integrity and Availability. These three concepts are key in information security, and describe properties we want to ensure in our systems and information. Web Security basics, OWASP: Study the OWASP Top 10, which summarizes most frequent web security risks. Authentication and session control: Understand the concepts of Authentication and Authorization, research about how session is handled in web apps, cookies, JWT tokens, etc. Input validation \u0026amp; injection attacks: Learn about SQL Injection, Cross-Site Scripting (XSS), Code Injection, SSTI, and every injection type. Secure development lifecycle: Find out how to implement security controls in code. This can be more related to Blue Team, but as Red Teamer it is important to understand. Firewall evasion: What a firewall is and some techniques/methods to bypass. Some cryptography: Understand what a chiper and a hash are, how information is encrypted to prevent access from 3rd parties. Focusing on web, read about TLS protocol. There are many more topics you can research and learn, but this could be a nice starting point.\nTools and platforms to learn Now you have an idea of what to study, let\u0026rsquo;s see how to start in practical terms.\nSome platforms I personally recommend:\nOverTheWire: Here you can find some CTFs (Capture The Flag) which are fun to play and also really instructive. Bandit games are a must for complete beginners, as you will explore some linux and bash concepts which are basic to continue. The games are leveled by difficulty, in their web you can get all the information about how to play, only a terminal and SSH is required. This helps building your foundation in Linux OS. HackTheBox: Nº 1 platform in cybersecurity. Has a lot of resources to learn all this core fundamentals, and also red team / blue team security topics. It is focused on labs where you can test your skills hacking different boxes but if you really want to learn it is worth to invest time and money in the academy. I have to say the level here is high, specially if you try to hack machines on your own without using some guide or writeup. TryHackMe: More beginner friendly than hackthebox, it provides a lot of guided learning resources. PortSwigger Labs: Practical labs about specific topics, focused on web hacking. They are great to learn and understand different types of attacks, injections, and security misconfigurations. I would recommend digging into this once you have the theoretical basis about these concepts. I have to mention a few tools I am sure you\u0026rsquo;d end up using:\nNmap: This is probably the most famous tool in hacking, allowing you to gather information about ports and services running in a machine. Burpsuite: A proxy tool widely used in web application security testing. It basically allows you to intercept and modify web requests, which can be used to perform several types of attacks. Metasploit: The most used pentesting framework. Contains a large amount of scripts and exploits ready to run. Another crucial step here is to set up your virtual lab environment to test vulnerable applications. To achieve this goal, there are some Linux distributions like Kali, Parrot or BlackArch, but that\u0026rsquo;s a topic for another post.\nFinal thoughs To sum up, this would be my personal roadmap:\nLearn the fundamentals, specially Linux and networking. Install some Linux in a virtual machine, play with it, get comfortable with the terminal. You can start with bandit wargames in OverTheWire. Complete every level and make sure to understand everything as clear as possible. Move to guided boxes on HackTheBox. I recommend you joining their Discord, ask questions, community is great there! Take notes, repeat, learn, improve your skills. Maybe use your own lab environment, create your own vulnerable apps. Hacking is a mixing of curiosity, study and practice. Being passionate and motivated about it is really helpful and will definitely speed up the process. The path is long and really challenging, so keep it going!\n\u0026ldquo;Yes, I am a criminal. My crime is that of curiosity.\u0026rdquo; — The Mentor (Loyd Blankenship) at The Hacker Manifesto\n","permalink":"http://localhost:1313/posts/starting-point/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIf you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\u003c/p\u003e","title":"Starting Point"},{"content":"Introduction In this post series we are going to solve every level from bandit in OverTheWire This guide pretends to be a writeup containing the solutions of the level, designed for beginners.\nTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing WSL, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\nEvery section will contain the solution as well as some tips for people who is absolutely beginner.\nTips First of all, some tips:\nDo not use this as first resource to solve the levels. Try on your own, make mistakes and learn from them. Only check the solution as last resource or if you are completely new and you have absolutely no idea about what to do next. Take notes from your learning. Write up commands, tips and everything which can be useful in the future. Make sure to understand everything. Is a good idea to note the passwords for every level. If you want to continue letter, you can simply log in in the desired level. It is annoying to repeat everything! Follow the tips and information provided at OverTheWire website. Levels Here is my solution for every level:\nBandit0 Bandit1 Bandit2 Bandit3 Bandit4 Bandit5 Bandit6 Bandit7 ","permalink":"http://localhost:1313/posts/otw/bandit/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIn this post series we are going to solve every level from bandit in \u003ca href=\"https://overthewire.org/wargames/bandit/\"\u003e\u003cem\u003eOverTheWire\u003c/em\u003e\u003c/a\u003e\nThis guide pretends to be a writeup containing the solutions of the level, designed for beginners.\u003c/p\u003e\n\u003cp\u003eTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing \u003ca href=\"https://learn.microsoft.com/en-us/windows/wsl/install\"\u003eWSL\u003c/a\u003e, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\u003c/p\u003e","title":"Bandit"},{"content":"Level description The goal of this level is for you to log into the game using SSH. The host to which you need to connect is bandit.labs.overthewire.org, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\nTips for beginners Read a bit about what SSH is. Research about what a port is. Solution This is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go here.\nAt Linux, we can use ssh client to connect to the server. It should be installed by default on your system. If not, please first research about how to install. Once you have the SSH client installed, you can log in into the first level as follows:\nssh bandit0@bandit.labs.overthewire.org -p 2220 Syntax is simple: ssh \u0026lt;username\u0026gt;@\u0026lt;hostname\u0026gt; -p \u0026lt;port\u0026gt;. Usually SSH runs on port 22 by default, but they changed to port 2220 so we must specify it in the command.\nOnce you try to log in, you will see something like this: NB: If it\u0026rsquo;s the first time you try to log in, you will be asked about the authenticity of the host. Just type yes.\nType the password bandit0 and press enter. Now you are inside bandit server, ready to begin with bandit1!\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit0/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe goal of this level is for you to log into the game using SSH. The host to which you need to connect is \u003cstrong\u003ebandit.labs.overthewire.org\u003c/strong\u003e, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eRead a bit about what SSH is.\u003c/li\u003e\n\u003cli\u003eResearch about what a port is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go \u003ca href=\"https://en.wikipedia.org/wiki/Secure_Shell\"\u003ehere\u003c/a\u003e.\u003c/p\u003e","title":"Bandit0"},{"content":"Level description The password for the next level is stored in a file called readme located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\nTips for beginners Learn about home directory in Linux. Learn to use cat and ls commands. Solution First step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\nls This shows in terminal the files at the current directory. There you will see the readme file.\nNow we can to check the contents, so let\u0026rsquo;s use cat:\ncat readme To read a file, we use cat \u0026lt;filename\u0026gt;.\nNB: Not every file is human readable in Linux. We deep more about this in later levels.\nThe content of the readme file reveals the password for bandit2 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit1/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u003cstrong\u003ereadme\u003c/strong\u003e located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn about home directory in Linux.\u003c/li\u003e\n\u003cli\u003eLearn to use \u003ccode\u003ecat\u003c/code\u003e and \u003ccode\u003els\u003c/code\u003e commands.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eFirst step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\u003c/p\u003e","title":"Bandit1"},{"content":"Level description The password for the next level is stored in a file called - located in the home directory\nTips for beginners Try to understand why previous solution is not working as you expect. Solution You may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our cat command: The terminal is waiting for something else. This happens due to character - is used to pass arguments to our commands, and the linux shell is interpreting that. To prevent that, we could use:\ncat ./- NB: Dot . is used to refer current directory. The slash / is used at the end of directory name.\nWe get the password for bandit3 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit2/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called - located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eTry to understand why previous solution is not working as you expect.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eYou may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our \u003ccode\u003ecat\u003c/code\u003e command:\n\u003cimg alt=\"bandit2\" loading=\"lazy\" src=\"/images/otw/bandit/bandit2/0.png\"\u003e\u003c/p\u003e\n\u003cp\u003eThe terminal is \u003cem\u003ewaiting\u003c/em\u003e for something else. This happens due to character \u003ccode\u003e-\u003c/code\u003e is used to pass arguments to our commands, and the linux shell is interpreting that.\nTo prevent that, we could use:\u003c/p\u003e","title":"Bandit2"},{"content":"Level description The password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\nTips for beginners Think about how to escape the whitespaces. Solution After login in the machine as bandit3, we can see the filename \u0026ndash;spaces in this filename\u0026ndash;.\nNow we have 2 problems:\nSame as previous level, filename starts with --, so it will be interpreted as an argument. Address this problem using ./. Filename contains whitespaces. This is an issue, as bash interpretes whitespaces to separate commands. To solve the second problem, we must escape the whitespace character in some way. Here is the solution:\ncat ./--spaces\\ in\\ this\\ filename-- NB: Little trick, you can start writting filename and press Tab to autocomplete the name. The \\ is going to be inserted automatically.\nJust using the \\ we can escape the whitespace.\nNow we can continue with the bandit4 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit3/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eThink about how to \u003cem\u003eescape\u003c/em\u003e the whitespaces.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAfter login in the machine as bandit3, we can see the filename \u003cem\u003e\u0026ndash;spaces in this filename\u0026ndash;\u003c/em\u003e.\u003c/p\u003e\n\u003cp\u003eNow we have 2 problems:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eSame as previous level, filename starts with \u003ccode\u003e--\u003c/code\u003e, so it will be interpreted as an argument. Address this problem using \u003ccode\u003e./\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003eFilename contains \u003cstrong\u003ewhitespaces\u003c/strong\u003e. This is an issue, as bash interpretes whitespaces to separate commands.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eTo solve the second problem, we must escape the whitespace character in some way. Here is the solution:\u003c/p\u003e","title":"Bandit3"},{"content":"Level description The password for the next level is stored in a hidden file in the inhere directory.\nTips for beginners Learn how to navigate directories in Linux. First understand what a hidden file is. Solution Listing directory files inside bandit4\u0026rsquo;s home directory, show directory inhere.\nNB: How to distinguish files and directories in Linux? Use ls -l and see the difference.\nWe have 2 options now:\nMove to inhere directory and check contens again. Check contents directly. Moving to another directory can be done using cd \u0026lt;dirName\u0026gt;. If you prefer to check directory contents directly, use ls \u0026lt;dirName\u0026gt;.\nAfter checking inhere contents via ls, we see nothing. The reason is the file is a hidden file. A hidden file in Linux is everyfile whose name starts with dot .. Hidden files are not shown by default with ls command, so we must add a special flag -a to list all files: NB: Both flags -l and -a cna be combined into a single flag -al, which is shorter to type.\nAs you can see, filename is \u0026hellip;Hidding-From-You starting with three dots. Reading file contents should be easy at this point!\nNext level is bandit5.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit4/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a hidden file in the inhere directory.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to navigate directories in Linux.\u003c/li\u003e\n\u003cli\u003eFirst understand what a hidden file is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eListing directory files inside bandit4\u0026rsquo;s home directory, show directory \u003cstrong\u003einhere\u003c/strong\u003e.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e How to distinguish files and directories in Linux? Use \u003ccode\u003els -l\u003c/code\u003e and see the difference.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eWe have 2 options now:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eMove to inhere directory and check contens again.\u003c/li\u003e\n\u003cli\u003eCheck contents directly.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eMoving to another directory can be done using \u003ccode\u003ecd \u0026lt;dirName\u0026gt;\u003c/code\u003e. If you prefer to check directory contents directly, use \u003ccode\u003els \u0026lt;dirName\u0026gt;\u003c/code\u003e.\u003c/p\u003e","title":"Bandit4"},{"content":"Level description The password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\nTips for beginners What means human-readable file? Is there any way to check filetype at Linux?. Solution Checking inhere\u0026rsquo;s contents shows some files names \u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII here\nSo now, our goal is checking if file content of every file in the folder is ASCII or not. file \u0026lt;filename\u0026gt; does the job. Note the use of *. That called a wildcard regular expression, we\u0026rsquo;ll deep into it in later levels. An easy approach could be checking every file separately:\nfile ./--file00 file ./--file01 ... file ./--file09 But that\u0026rsquo;s not funny, imagine we have 100 files to check. All the files are in the same directory, so we can use cat ./* where ./* matches every filename in the directory, applying file to every file.\nNB: Another approach is to use find with certaing flags. Try to do in different ways, don\u0026rsquo;t stick to my solution.\nThe file \u0026ndash;file00 content is not readable, so get password from \u0026ndash;file07 and continue with bandit6.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit5/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eWhat means human-readable file?\u003c/li\u003e\n\u003cli\u003eIs there any way to check filetype at Linux?.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eChecking inhere\u0026rsquo;s contents shows some files names \u003cstrong\u003e\u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09\u003c/strong\u003e. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII \u003ca href=\"https://en.wikipedia.org/wiki/ASCII\"\u003ehere\u003c/a\u003e\u003c/p\u003e","title":"Bandit5"},{"content":"Level description The password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\nhuman-readable 1033 bytes in size not executable Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution The purpose of the level is showing us how to find for files. Listing contents of inhere, we can see some folders, containing a lot of files inside: NB: Adding -R to ls shows recursively the content of every folder inside the directory listed.\nSo this time, checking every file is not an option. We need to find a file with some properties, specific size, not excutable and human-readable. Let\u0026rsquo;s explain the command we\u0026rsquo;re using:\nfind inhere/ -size 1033c ! -executable First, we specify the directory, in this case inhere. The option -size 1033c returns files of 1033 bytes. Then, with -executable we would get executable files, but we want not executable files, that\u0026rsquo;s why we are adding ! before.\nNB: By default, the -size option takes as argument the number of blocks. For example, -size 2 means 2 blocks of 512 bytes, so its 1024. The c is used to specify exact bytes. Don\u0026rsquo;t ask me why it\u0026rsquo;s c and not b 😅.\nThe property of human-readability is not implemented in find. This is not an issue, previous command returns a single file and it is human readable (we could confirm using file): Extra tip: try to use the following:\nfind inhere/ -size 1033c ! -executable | file You get the same result! The pipe | is a great tool to execute 2+ commands in one line.\nGet your password and continue with bandit7.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit6/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ehuman-readable\u003c/li\u003e\n\u003cli\u003e1033 bytes in size\u003c/li\u003e\n\u003cli\u003enot executable\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThe purpose of the level is showing us how to find for files. Listing contents of \u003cstrong\u003einhere\u003c/strong\u003e, we can see some folders, containing a lot of files inside:\n\u003cimg alt=\"bandit6_0\" loading=\"lazy\" src=\"/images/otw/bandit/bandit6/0.png\"\u003e\u003c/p\u003e","title":"Bandit6"},{"content":"Level description The password for the next level is stored somewhere on the server and has all of the following properties:\nowned by user bandit7 owned by group bandit6 33 bytes in size Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution The purpose of the level is showing us how to find for files. Listing contents of inhere, we can see some folders, containing a lot of files inside: NB: Adding -R to ls shows recursively the content of every folder inside the directory listed.\nSo this time, checking every file is not an option. We need to find a file with some properties, specific size, not excutable and human-readable. Let\u0026rsquo;s explain the command we\u0026rsquo;re using:\nfind inhere/ -size 1033c ! -executable First, we specify the directory, in this case inhere. The option -size 1033c returns files of 1033 bytes. Then, with -executable we would get executable files, but we want not executable files, that\u0026rsquo;s why we are adding ! before.\nNB: By default, the -size option takes as argument the number of blocks. For example, -size 2 means 2 blocks of 512 bytes, so its 1024. The c is used to specify exact bytes. Don\u0026rsquo;t ask me why it\u0026rsquo;s c and not b 😅.\nThe property of human-readability is not implemented in find. This is not an issue, previous command returns a single file and it is human readable (we could confirm using file):\nGet your password and continue with bandit7.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit7/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored somewhere on the server and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eowned by user bandit7\u003c/li\u003e\n\u003cli\u003eowned by group bandit6\u003c/li\u003e\n\u003cli\u003e33 bytes in size\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThe purpose of the level is showing us how to find for files. Listing contents of \u003cstrong\u003einhere\u003c/strong\u003e, we can see some folders, containing a lot of files inside:\n\u003cimg alt=\"bandit6_0\" loading=\"lazy\" src=\"/images/otw/bandit/bandit6/0.png\"\u003e\u003c/p\u003e","title":"Bandit7"},{"content":"👨‍💻 whoami Hey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\nWhat is this❓​ This blog is basically my thoughts on several hacking topics. Here you’ll see:\nWriteups from CTF challenges, from platforms like HackTheBox or OverTheWire.\nWalkthroughs and notes on pentesting techniques I’m learning or testing.\nSome posts on cryptography — because math can be fun (sometimes).\nRandom topics that freaks like me may (just may) find interesting.\nThe idea is simple: share what I learn, document my journey, and maybe help others who are also diving into the exciting world of ethical hacking.\n📫 Contact Want to say hi, share ideas, or just geek out about hacking? Reach me here:\n📧 Email: mrb0b1073@proton.me 💻​ GitHub: mrb0b173 🟩​ HackTheBox: mrb0b1073 ","permalink":"http://localhost:1313/about/","summary":"\u003ch2 id=\"-whoami\"\u003e👨‍💻 whoami\u003c/h2\u003e\n\u003cp\u003eHey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\u003c/p\u003e\n\u003chr\u003e\n\u003ch2 id=\"what-is-this\"\u003eWhat is this❓​\u003c/h2\u003e\n\u003cp\u003eThis blog is basically my thoughts on several hacking topics. Here you’ll see:\u003c/p\u003e","title":"About"},{"content":"Hey! 👋 I\u0026rsquo;m mrb0b1073 and this is my first post.\nWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\nExcited to start this adventure!\n","permalink":"http://localhost:1313/posts/hello-world/","summary":"\u003cp\u003eHey! 👋 I\u0026rsquo;m \u003cstrong\u003emrb0b1073\u003c/strong\u003e and this is my first post.\u003c/p\u003e\n\u003cp\u003eWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\u003cbr\u003e\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\u003c/p\u003e\n\u003cp\u003eExcited to start this adventure!\u003c/p\u003e","title":"Hello World"},{"content":"Introduction If you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\nIn cybersecurity there are broadly two complementary roles: Blue Team and Red Team. Blue Teams focus on defense, monitoring, incident response, hardening systems and keeping services secure, while Red Teams simulate attackers to find weaknesses and prove what an adversary could do. Ethical hacking aligns closely with Red Team operations, but cybersecurity is highly transversal across IT. There are many specialities or areas, such as cloud security, appsec, pentesting, forensics, governance, risk management, malware analysis, etc. Every topic could deserve its own post, so let\u0026rsquo;s keep it simple and focus on ethical hacking.\nHacker philosophy Let\u0026rsquo;s start with the idea of what is exactly a hacker. A hacker is someone who explores systems to understand how they work, finds creative ways to make or fix things, and solves technical problems. Historically the word describes curiosity, craft, and a drive to improve systems — not criminality. It is important to make the distinction between hacker and cracker, also called cybercriminal. A hacker explores, builds, discloses responsibly and works to improve security. They work in authorized environments or labs. On the other hand, a cracker breaks into systems for theft, vandalism or other illicit gain.\nHere you can find the most popularized ideas often summarized as the hacker ethic:\nCuriosity first: Learn by exploring and tinkering. Freedom of information: All knowledge should be shared to help progress. This fits properly with the idea of open source. Mistrust of needless authority: Centralized control sometimes blocks innovation. It is always good to question anything, specially common assumptions. Meritocracy: Skills, craft and results matter more than titles. Craftsmanship \u0026amp; elegance: Technical beauty matters. Build clean, clever and efficient solutions. Responsability \u0026amp; ethics: Use your skills to build, fix, educate and defend, not to harm. Core fundamentals Assuming you want to init yourself in hacking, you should first build competence across three basic pillars.\nOperating Systems You should learn as much as possible about Linux and Windows. Specially Linux, all the tools you will be using are meant to be used in a Linux environment. Skill with shell is required, learn basic commands and how to interact with the OS using the terminal. Research about processes, file permissions, package management and logs. A large proportion of web servers around the world run on Linux, although Windows is also widely used. Windows knowledge is really valuable too, considering active directory is strongly used in corporate environments.\nNetworking You have to understand how computers communicate each other. Understand basic networking concepts, IP adresses, subnetting, proxies, find out how internet works. Study some protocols such as TCP/IP, HTTP, DNS or SSH. This could sound confusing for beginners, but this step is not optional! Study different client/server models and how services expose attack surfaces.\nProgramming \u0026amp; scripting Is this completely required? Maybe not for complete beginners. Does it help? Absolutely yes. Understanding how web apps or any type of application works makes things much easier. You can imagine different entry points to exploit if you understand how systems are designed. Also writing scripts in bash or python makes you more productive through automation.\nEthical Hacking foundations Once you feel confident with these 3 pillars, you can go to the next step. You can study about different topics and areas. For example, binary exploiting, web pentesting, mobile pentesting, wireless hacking, etc. You should start picking a focus, in this post we focus on web pentesting, as it is beginner friendly. Also web applications are the bread and butter in companies nowadays.\nKey concepts to study:\nCIA Triad: CIA refers to Confidentiality, Integrity and Availability. These three concepts are key in information security, and describe properties we want to ensure in our systems and information. Web Security basics, OWASP: Study the OWASP Top 10, which summarizes most frequent web security risks. Authentication and session control: Understand the concepts of Authentication and Authorization, research about how session is handled in web apps, cookies, JWT tokens, etc. Input validation \u0026amp; injection attacks: Learn about SQL Injection, Cross-Site Scripting (XSS), Code Injection, SSTI, and every injection type. Secure development lifecycle: Find out how to implement security controls in code. This can be more related to Blue Team, but as Red Teamer it is important to understand. Firewall evasion: What a firewall is and some techniques/methods to bypass. Some cryptography: Understand what a chiper and a hash are, how information is encrypted to prevent access from 3rd parties. Focusing on web, read about TLS protocol. There are many more topics you can research and learn, but this could be a nice starting point.\nTools and platforms to learn Now you have an idea of what to study, let\u0026rsquo;s see how to start in practical terms.\nSome platforms I personally recommend:\nOverTheWire: Here you can find some CTFs (Capture The Flag) which are fun to play and also really instructive. Bandit games are a must for complete beginners, as you will explore some linux and bash concepts which are basic to continue. The games are leveled by difficulty, in their web you can get all the information about how to play, only a terminal and SSH is required. This helps building your foundation in Linux OS. HackTheBox: Nº 1 platform in cybersecurity. Has a lot of resources to learn all this core fundamentals, and also red team / blue team security topics. It is focused on labs where you can test your skills hacking different boxes but if you really want to learn it is worth to invest time and money in the academy. I have to say the level here is high, specially if you try to hack machines on your own without using some guide or writeup. TryHackMe: More beginner friendly than hackthebox, it provides a lot of guided learning resources. PortSwigger Labs: Practical labs about specific topics, focused on web hacking. They are great to learn and understand different types of attacks, injections, and security misconfigurations. I would recommend digging into this once you have the theoretical basis about these concepts. I have to mention a few tools I am sure you\u0026rsquo;d end up using:\nNmap: This is probably the most famous tool in hacking, allowing you to gather information about ports and services running in a machine. Burpsuite: A proxy tool widely used in web application security testing. It basically allows you to intercept and modify web requests, which can be used to perform several types of attacks. Metasploit: The most used pentesting framework. Contains a large amount of scripts and exploits ready to run. Another crucial step here is to set up your virtual lab environment to test vulnerable applications. To achieve this goal, there are some Linux distributions like Kali, Parrot or BlackArch, but that\u0026rsquo;s a topic for another post.\nFinal thoughs To sum up, this would be my personal roadmap:\nLearn the fundamentals, specially Linux and networking. Install some Linux in a virtual machine, play with it, get comfortable with the terminal. You can start with bandit wargames in OverTheWire. Complete every level and make sure to understand everything as clear as possible. Move to guided boxes on HackTheBox. I recommend you joining their Discord, ask questions, community is great there! Take notes, repeat, learn, improve your skills. Maybe use your own lab environment, create your own vulnerable apps. Hacking is a mixing of curiosity, study and practice. Being passionate and motivated about it is really helpful and will definitely speed up the process. The path is long and really challenging, so keep it going!\n\u0026ldquo;Yes, I am a criminal. My crime is that of curiosity.\u0026rdquo; — The Mentor (Loyd Blankenship) at The Hacker Manifesto\n","permalink":"http://localhost:1313/posts/starting-point/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIf you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\u003c/p\u003e","title":"Starting Point"},{"content":"Introduction In this post series we are going to solve every level from bandit in OverTheWire This guide pretends to be a writeup containing the solutions of the level, designed for beginners.\nTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing WSL, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\nEvery section will contain the solution as well as some tips for people who is absolutely beginner.\nTips First of all, some tips:\nDo not use this as first resource to solve the levels. Try on your own, make mistakes and learn from them. Only check the solution as last resource or if you are completely new and you have absolutely no idea about what to do next. Take notes from your learning. Write up commands, tips and everything which can be useful in the future. Make sure to understand everything. Is a good idea to note the passwords for every level. If you want to continue letter, you can simply log in in the desired level. It is annoying to repeat everything! Follow the tips and information provided at OverTheWire website. Levels Here is my solution for every level:\nBandit0 Bandit1 Bandit2 Bandit3 Bandit4 Bandit5 Bandit6 Bandit7 ","permalink":"http://localhost:1313/posts/otw/bandit/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIn this post series we are going to solve every level from bandit in \u003ca href=\"https://overthewire.org/wargames/bandit/\"\u003e\u003cem\u003eOverTheWire\u003c/em\u003e\u003c/a\u003e\nThis guide pretends to be a writeup containing the solutions of the level, designed for beginners.\u003c/p\u003e\n\u003cp\u003eTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing \u003ca href=\"https://learn.microsoft.com/en-us/windows/wsl/install\"\u003eWSL\u003c/a\u003e, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\u003c/p\u003e","title":"Bandit"},{"content":"Level description The goal of this level is for you to log into the game using SSH. The host to which you need to connect is bandit.labs.overthewire.org, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\nTips for beginners Read a bit about what SSH is. Research about what a port is. Solution This is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go here.\nAt Linux, we can use ssh client to connect to the server. It should be installed by default on your system. If not, please first research about how to install. Once you have the SSH client installed, you can log in into the first level as follows:\nssh bandit0@bandit.labs.overthewire.org -p 2220 Syntax is simple: ssh \u0026lt;username\u0026gt;@\u0026lt;hostname\u0026gt; -p \u0026lt;port\u0026gt;. Usually SSH runs on port 22 by default, but they changed to port 2220 so we must specify it in the command.\nOnce you try to log in, you will see something like this: NB: If it\u0026rsquo;s the first time you try to log in, you will be asked about the authenticity of the host. Just type yes.\nType the password bandit0 and press enter. Now you are inside bandit server, ready to begin with bandit1!\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit0/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe goal of this level is for you to log into the game using SSH. The host to which you need to connect is \u003cstrong\u003ebandit.labs.overthewire.org\u003c/strong\u003e, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eRead a bit about what SSH is.\u003c/li\u003e\n\u003cli\u003eResearch about what a port is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go \u003ca href=\"https://en.wikipedia.org/wiki/Secure_Shell\"\u003ehere\u003c/a\u003e.\u003c/p\u003e","title":"Bandit0"},{"content":"Level description The password for the next level is stored in a file called readme located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\nTips for beginners Learn about home directory in Linux. Learn to use cat and ls commands. Solution First step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\nls This shows in terminal the files at the current directory. There you will see the readme file.\nNow we can to check the contents, so let\u0026rsquo;s use cat:\ncat readme To read a file, we use cat \u0026lt;filename\u0026gt;.\nNB: Not every file is human readable in Linux. We deep more about this in later levels.\nThe content of the readme file reveals the password for bandit2 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit1/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u003cstrong\u003ereadme\u003c/strong\u003e located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn about home directory in Linux.\u003c/li\u003e\n\u003cli\u003eLearn to use \u003ccode\u003ecat\u003c/code\u003e and \u003ccode\u003els\u003c/code\u003e commands.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eFirst step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\u003c/p\u003e","title":"Bandit1"},{"content":"Level description The password for the next level is stored in a file called - located in the home directory\nTips for beginners Try to understand why previous solution is not working as you expect. Solution You may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our cat command: The terminal is waiting for something else. This happens due to character - is used to pass arguments to our commands, and the linux shell is interpreting that. To prevent that, we could use:\ncat ./- NB: Dot . is used to refer current directory. The slash / is used at the end of directory name.\nWe get the password for bandit3 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit2/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called - located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eTry to understand why previous solution is not working as you expect.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eYou may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our \u003ccode\u003ecat\u003c/code\u003e command:\n\u003cimg alt=\"bandit2\" loading=\"lazy\" src=\"/images/otw/bandit/bandit2/0.png\"\u003e\u003c/p\u003e\n\u003cp\u003eThe terminal is \u003cem\u003ewaiting\u003c/em\u003e for something else. This happens due to character \u003ccode\u003e-\u003c/code\u003e is used to pass arguments to our commands, and the linux shell is interpreting that.\nTo prevent that, we could use:\u003c/p\u003e","title":"Bandit2"},{"content":"Level description The password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\nTips for beginners Think about how to escape the whitespaces. Solution After login in the machine as bandit3, we can see the filename \u0026ndash;spaces in this filename\u0026ndash;.\nNow we have 2 problems:\nSame as previous level, filename starts with --, so it will be interpreted as an argument. Address this problem using ./. Filename contains whitespaces. This is an issue, as bash interpretes whitespaces to separate commands. To solve the second problem, we must escape the whitespace character in some way. Here is the solution:\ncat ./--spaces\\ in\\ this\\ filename-- NB: Little trick, you can start writting filename and press Tab to autocomplete the name. The \\ is going to be inserted automatically.\nJust using the \\ we can escape the whitespace.\nNow we can continue with the bandit4 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit3/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eThink about how to \u003cem\u003eescape\u003c/em\u003e the whitespaces.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAfter login in the machine as bandit3, we can see the filename \u003cem\u003e\u0026ndash;spaces in this filename\u0026ndash;\u003c/em\u003e.\u003c/p\u003e\n\u003cp\u003eNow we have 2 problems:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eSame as previous level, filename starts with \u003ccode\u003e--\u003c/code\u003e, so it will be interpreted as an argument. Address this problem using \u003ccode\u003e./\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003eFilename contains \u003cstrong\u003ewhitespaces\u003c/strong\u003e. This is an issue, as bash interpretes whitespaces to separate commands.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eTo solve the second problem, we must escape the whitespace character in some way. Here is the solution:\u003c/p\u003e","title":"Bandit3"},{"content":"Level description The password for the next level is stored in a hidden file in the inhere directory.\nTips for beginners Learn how to navigate directories in Linux. First understand what a hidden file is. Solution Listing directory files inside bandit4\u0026rsquo;s home directory, show directory inhere.\nNB: How to distinguish files and directories in Linux? Use ls -l and see the difference.\nWe have 2 options now:\nMove to inhere directory and check contens again. Check contents directly. Moving to another directory can be done using cd \u0026lt;dirName\u0026gt;. If you prefer to check directory contents directly, use ls \u0026lt;dirName\u0026gt;.\nAfter checking inhere contents via ls, we see nothing. The reason is the file is a hidden file. A hidden file in Linux is everyfile whose name starts with dot .. Hidden files are not shown by default with ls command, so we must add a special flag -a to list all files: NB: Both flags -l and -a cna be combined into a single flag -al, which is shorter to type.\nAs you can see, filename is \u0026hellip;Hidding-From-You starting with three dots. Reading file contents should be easy at this point!\nNext level is bandit5.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit4/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a hidden file in the inhere directory.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to navigate directories in Linux.\u003c/li\u003e\n\u003cli\u003eFirst understand what a hidden file is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eListing directory files inside bandit4\u0026rsquo;s home directory, show directory \u003cstrong\u003einhere\u003c/strong\u003e.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e How to distinguish files and directories in Linux? Use \u003ccode\u003els -l\u003c/code\u003e and see the difference.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eWe have 2 options now:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eMove to inhere directory and check contens again.\u003c/li\u003e\n\u003cli\u003eCheck contents directly.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eMoving to another directory can be done using \u003ccode\u003ecd \u0026lt;dirName\u0026gt;\u003c/code\u003e. If you prefer to check directory contents directly, use \u003ccode\u003els \u0026lt;dirName\u0026gt;\u003c/code\u003e.\u003c/p\u003e","title":"Bandit4"},{"content":"Level description The password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\nTips for beginners What means human-readable file? Is there any way to check filetype at Linux?. Solution Checking inhere\u0026rsquo;s contents shows some files names \u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII here\nSo now, our goal is checking if file content of every file in the folder is ASCII or not. file \u0026lt;filename\u0026gt; does the job. Note the use of *. That called a wildcard regular expression, we\u0026rsquo;ll deep into it in later levels. An easy approach could be checking every file separately:\nfile ./--file00 file ./--file01 ... file ./--file09 But that\u0026rsquo;s not funny, imagine we have 100 files to check. All the files are in the same directory, so we can use cat ./* where ./* matches every filename in the directory, applying file to every file.\nNB: Another approach is to use find with certaing flags. Try to do in different ways, don\u0026rsquo;t stick to my solution.\nThe file \u0026ndash;file00 content is not readable, so get password from \u0026ndash;file07 and continue with bandit6.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit5/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eWhat means human-readable file?\u003c/li\u003e\n\u003cli\u003eIs there any way to check filetype at Linux?.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eChecking inhere\u0026rsquo;s contents shows some files names \u003cstrong\u003e\u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09\u003c/strong\u003e. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII \u003ca href=\"https://en.wikipedia.org/wiki/ASCII\"\u003ehere\u003c/a\u003e\u003c/p\u003e","title":"Bandit5"},{"content":"Level description The password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\nhuman-readable 1033 bytes in size not executable Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution The purpose of the level is showing us how to find for files. Listing contents of inhere, we can see some folders, containing a lot of files inside: NB: Adding -R to ls shows recursively the content of every folder inside the directory listed.\nSo this time, checking every file is not an option. We need to find a file with some properties, specific size, not excutable and human-readable. Let\u0026rsquo;s explain the command we\u0026rsquo;re using:\nfind inhere/ -size 1033c ! -executable First, we specify the directory, in this case inhere. The option -size 1033c returns files of 1033 bytes. Then, with -executable we would get executable files, but we want not executable files, that\u0026rsquo;s why we are adding ! before.\nNB: By default, the -size option takes as argument the number of blocks. For example, -size 2 means 2 blocks of 512 bytes, so its 1024. The c is used to specify exact bytes. Don\u0026rsquo;t ask me why it\u0026rsquo;s c and not b 😅.\nThe property of human-readability is not implemented in find. This is not an issue, previous command returns a single file and it is human readable (we could confirm using file): Extra tip: try to use the following:\nfind inhere/ -size 1033c ! -executable | file You get the same result! The pipe | is a great tool to execute 2+ commands in one line.\nGet your password and continue with bandit7.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit6/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ehuman-readable\u003c/li\u003e\n\u003cli\u003e1033 bytes in size\u003c/li\u003e\n\u003cli\u003enot executable\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThe purpose of the level is showing us how to find for files. Listing contents of \u003cstrong\u003einhere\u003c/strong\u003e, we can see some folders, containing a lot of files inside:\n\u003cimg alt=\"bandit6_0\" loading=\"lazy\" src=\"/images/otw/bandit/bandit6/0.png\"\u003e\u003c/p\u003e","title":"Bandit6"},{"content":"Level description The password for the next level is stored somewhere on the server and has all of the following properties:\nowned by user bandit7 owned by group bandit6 33 bytes in size Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution This is very straightforward to do after completing previous level. Now we need to identify a file owned by user bandit7 and group bandi6. Furthermore, the file is somewhere on the server, which means we have to find in the root directory /.\nfind / -user bandit7 -group bandit6 -size 33c 2\u0026gt;/dev/null NB: I added that strange 2\u0026gt;/dev/null to filter error output. The reason why it works like that is more technical, for now just save this a fast way to filter errors in terminal. We get some errors because looking for files in the whole server may return some unaccesible files, as we don\u0026rsquo;t have root user permissions.\nThe property of human-readability is not implemented in find. This is not an issue, previous command returns a single file and it is human readable (we could confirm using file):\nGet your password and continue with bandit7.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit7/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored somewhere on the server and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eowned by user bandit7\u003c/li\u003e\n\u003cli\u003eowned by group bandit6\u003c/li\u003e\n\u003cli\u003e33 bytes in size\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is very straightforward to do after completing previous level. Now we need to identify a file owned by user bandit7 and group bandi6. Furthermore, the file is \u003cstrong\u003esomewhere on the server\u003c/strong\u003e, which means we have to find in the root directory \u003ccode\u003e/\u003c/code\u003e.\u003c/p\u003e","title":"Bandit7"},{"content":"👨‍💻 whoami Hey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\nWhat is this❓​ This blog is basically my thoughts on several hacking topics. Here you’ll see:\nWriteups from CTF challenges, from platforms like HackTheBox or OverTheWire.\nWalkthroughs and notes on pentesting techniques I’m learning or testing.\nSome posts on cryptography — because math can be fun (sometimes).\nRandom topics that freaks like me may (just may) find interesting.\nThe idea is simple: share what I learn, document my journey, and maybe help others who are also diving into the exciting world of ethical hacking.\n📫 Contact Want to say hi, share ideas, or just geek out about hacking? Reach me here:\n📧 Email: mrb0b1073@proton.me 💻​ GitHub: mrb0b173 🟩​ HackTheBox: mrb0b1073 ","permalink":"http://localhost:1313/about/","summary":"\u003ch2 id=\"-whoami\"\u003e👨‍💻 whoami\u003c/h2\u003e\n\u003cp\u003eHey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\u003c/p\u003e\n\u003chr\u003e\n\u003ch2 id=\"what-is-this\"\u003eWhat is this❓​\u003c/h2\u003e\n\u003cp\u003eThis blog is basically my thoughts on several hacking topics. Here you’ll see:\u003c/p\u003e","title":"About"},{"content":"Hey! 👋 I\u0026rsquo;m mrb0b1073 and this is my first post.\nWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\nExcited to start this adventure!\n","permalink":"http://localhost:1313/posts/hello-world/","summary":"\u003cp\u003eHey! 👋 I\u0026rsquo;m \u003cstrong\u003emrb0b1073\u003c/strong\u003e and this is my first post.\u003c/p\u003e\n\u003cp\u003eWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\u003cbr\u003e\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\u003c/p\u003e\n\u003cp\u003eExcited to start this adventure!\u003c/p\u003e","title":"Hello World"},{"content":"Introduction If you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\nIn cybersecurity there are broadly two complementary roles: Blue Team and Red Team. Blue Teams focus on defense, monitoring, incident response, hardening systems and keeping services secure, while Red Teams simulate attackers to find weaknesses and prove what an adversary could do. Ethical hacking aligns closely with Red Team operations, but cybersecurity is highly transversal across IT. There are many specialities or areas, such as cloud security, appsec, pentesting, forensics, governance, risk management, malware analysis, etc. Every topic could deserve its own post, so let\u0026rsquo;s keep it simple and focus on ethical hacking.\nHacker philosophy Let\u0026rsquo;s start with the idea of what is exactly a hacker. A hacker is someone who explores systems to understand how they work, finds creative ways to make or fix things, and solves technical problems. Historically the word describes curiosity, craft, and a drive to improve systems — not criminality. It is important to make the distinction between hacker and cracker, also called cybercriminal. A hacker explores, builds, discloses responsibly and works to improve security. They work in authorized environments or labs. On the other hand, a cracker breaks into systems for theft, vandalism or other illicit gain.\nHere you can find the most popularized ideas often summarized as the hacker ethic:\nCuriosity first: Learn by exploring and tinkering. Freedom of information: All knowledge should be shared to help progress. This fits properly with the idea of open source. Mistrust of needless authority: Centralized control sometimes blocks innovation. It is always good to question anything, specially common assumptions. Meritocracy: Skills, craft and results matter more than titles. Craftsmanship \u0026amp; elegance: Technical beauty matters. Build clean, clever and efficient solutions. Responsability \u0026amp; ethics: Use your skills to build, fix, educate and defend, not to harm. Core fundamentals Assuming you want to init yourself in hacking, you should first build competence across three basic pillars.\nOperating Systems You should learn as much as possible about Linux and Windows. Specially Linux, all the tools you will be using are meant to be used in a Linux environment. Skill with shell is required, learn basic commands and how to interact with the OS using the terminal. Research about processes, file permissions, package management and logs. A large proportion of web servers around the world run on Linux, although Windows is also widely used. Windows knowledge is really valuable too, considering active directory is strongly used in corporate environments.\nNetworking You have to understand how computers communicate each other. Understand basic networking concepts, IP adresses, subnetting, proxies, find out how internet works. Study some protocols such as TCP/IP, HTTP, DNS or SSH. This could sound confusing for beginners, but this step is not optional! Study different client/server models and how services expose attack surfaces.\nProgramming \u0026amp; scripting Is this completely required? Maybe not for complete beginners. Does it help? Absolutely yes. Understanding how web apps or any type of application works makes things much easier. You can imagine different entry points to exploit if you understand how systems are designed. Also writing scripts in bash or python makes you more productive through automation.\nEthical Hacking foundations Once you feel confident with these 3 pillars, you can go to the next step. You can study about different topics and areas. For example, binary exploiting, web pentesting, mobile pentesting, wireless hacking, etc. You should start picking a focus, in this post we focus on web pentesting, as it is beginner friendly. Also web applications are the bread and butter in companies nowadays.\nKey concepts to study:\nCIA Triad: CIA refers to Confidentiality, Integrity and Availability. These three concepts are key in information security, and describe properties we want to ensure in our systems and information. Web Security basics, OWASP: Study the OWASP Top 10, which summarizes most frequent web security risks. Authentication and session control: Understand the concepts of Authentication and Authorization, research about how session is handled in web apps, cookies, JWT tokens, etc. Input validation \u0026amp; injection attacks: Learn about SQL Injection, Cross-Site Scripting (XSS), Code Injection, SSTI, and every injection type. Secure development lifecycle: Find out how to implement security controls in code. This can be more related to Blue Team, but as Red Teamer it is important to understand. Firewall evasion: What a firewall is and some techniques/methods to bypass. Some cryptography: Understand what a chiper and a hash are, how information is encrypted to prevent access from 3rd parties. Focusing on web, read about TLS protocol. There are many more topics you can research and learn, but this could be a nice starting point.\nTools and platforms to learn Now you have an idea of what to study, let\u0026rsquo;s see how to start in practical terms.\nSome platforms I personally recommend:\nOverTheWire: Here you can find some CTFs (Capture The Flag) which are fun to play and also really instructive. Bandit games are a must for complete beginners, as you will explore some linux and bash concepts which are basic to continue. The games are leveled by difficulty, in their web you can get all the information about how to play, only a terminal and SSH is required. This helps building your foundation in Linux OS. HackTheBox: Nº 1 platform in cybersecurity. Has a lot of resources to learn all this core fundamentals, and also red team / blue team security topics. It is focused on labs where you can test your skills hacking different boxes but if you really want to learn it is worth to invest time and money in the academy. I have to say the level here is high, specially if you try to hack machines on your own without using some guide or writeup. TryHackMe: More beginner friendly than hackthebox, it provides a lot of guided learning resources. PortSwigger Labs: Practical labs about specific topics, focused on web hacking. They are great to learn and understand different types of attacks, injections, and security misconfigurations. I would recommend digging into this once you have the theoretical basis about these concepts. I have to mention a few tools I am sure you\u0026rsquo;d end up using:\nNmap: This is probably the most famous tool in hacking, allowing you to gather information about ports and services running in a machine. Burpsuite: A proxy tool widely used in web application security testing. It basically allows you to intercept and modify web requests, which can be used to perform several types of attacks. Metasploit: The most used pentesting framework. Contains a large amount of scripts and exploits ready to run. Another crucial step here is to set up your virtual lab environment to test vulnerable applications. To achieve this goal, there are some Linux distributions like Kali, Parrot or BlackArch, but that\u0026rsquo;s a topic for another post.\nFinal thoughs To sum up, this would be my personal roadmap:\nLearn the fundamentals, specially Linux and networking. Install some Linux in a virtual machine, play with it, get comfortable with the terminal. You can start with bandit wargames in OverTheWire. Complete every level and make sure to understand everything as clear as possible. Move to guided boxes on HackTheBox. I recommend you joining their Discord, ask questions, community is great there! Take notes, repeat, learn, improve your skills. Maybe use your own lab environment, create your own vulnerable apps. Hacking is a mixing of curiosity, study and practice. Being passionate and motivated about it is really helpful and will definitely speed up the process. The path is long and really challenging, so keep it going!\n\u0026ldquo;Yes, I am a criminal. My crime is that of curiosity.\u0026rdquo; — The Mentor (Loyd Blankenship) at The Hacker Manifesto\n","permalink":"http://localhost:1313/posts/starting-point/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIf you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\u003c/p\u003e","title":"Starting Point"},{"content":"Introduction In this post series we are going to solve every level from bandit in OverTheWire This guide pretends to be a writeup containing the solutions of the level, designed for beginners.\nTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing WSL, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\nEvery section will contain the solution as well as some tips for people who is absolutely beginner.\nTips First of all, some tips:\nDo not use this as first resource to solve the levels. Try on your own, make mistakes and learn from them. Only check the solution as last resource or if you are completely new and you have absolutely no idea about what to do next. Take notes from your learning. Write up commands, tips and everything which can be useful in the future. Make sure to understand everything. Is a good idea to note the passwords for every level. If you want to continue letter, you can simply log in in the desired level. It is annoying to repeat everything! Follow the tips and information provided at OverTheWire website. Levels Here is my solution for every level:\nBandit0 Bandit1 Bandit2 Bandit3 Bandit4 Bandit5 Bandit6 Bandit7 ","permalink":"http://localhost:1313/posts/otw/bandit/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIn this post series we are going to solve every level from bandit in \u003ca href=\"https://overthewire.org/wargames/bandit/\"\u003e\u003cem\u003eOverTheWire\u003c/em\u003e\u003c/a\u003e\nThis guide pretends to be a writeup containing the solutions of the level, designed for beginners.\u003c/p\u003e\n\u003cp\u003eTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing \u003ca href=\"https://learn.microsoft.com/en-us/windows/wsl/install\"\u003eWSL\u003c/a\u003e, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\u003c/p\u003e","title":"Bandit"},{"content":"Level description The goal of this level is for you to log into the game using SSH. The host to which you need to connect is bandit.labs.overthewire.org, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\nTips for beginners Read a bit about what SSH is. Research about what a port is. Solution This is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go here.\nAt Linux, we can use ssh client to connect to the server. It should be installed by default on your system. If not, please first research about how to install. Once you have the SSH client installed, you can log in into the first level as follows:\nssh bandit0@bandit.labs.overthewire.org -p 2220 Syntax is simple: ssh \u0026lt;username\u0026gt;@\u0026lt;hostname\u0026gt; -p \u0026lt;port\u0026gt;. Usually SSH runs on port 22 by default, but they changed to port 2220 so we must specify it in the command.\nOnce you try to log in, you will see something like this: NB: If it\u0026rsquo;s the first time you try to log in, you will be asked about the authenticity of the host. Just type yes.\nType the password bandit0 and press enter. Now you are inside bandit server, ready to begin with bandit1!\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit0/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe goal of this level is for you to log into the game using SSH. The host to which you need to connect is \u003cstrong\u003ebandit.labs.overthewire.org\u003c/strong\u003e, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eRead a bit about what SSH is.\u003c/li\u003e\n\u003cli\u003eResearch about what a port is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go \u003ca href=\"https://en.wikipedia.org/wiki/Secure_Shell\"\u003ehere\u003c/a\u003e.\u003c/p\u003e","title":"Bandit0"},{"content":"Level description The password for the next level is stored in a file called readme located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\nTips for beginners Learn about home directory in Linux. Learn to use cat and ls commands. Solution First step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\nls This shows in terminal the files at the current directory. There you will see the readme file.\nNow we can to check the contents, so let\u0026rsquo;s use cat:\ncat readme To read a file, we use cat \u0026lt;filename\u0026gt;.\nNB: Not every file is human readable in Linux. We deep more about this in later levels.\nThe content of the readme file reveals the password for bandit2 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit1/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u003cstrong\u003ereadme\u003c/strong\u003e located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn about home directory in Linux.\u003c/li\u003e\n\u003cli\u003eLearn to use \u003ccode\u003ecat\u003c/code\u003e and \u003ccode\u003els\u003c/code\u003e commands.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eFirst step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\u003c/p\u003e","title":"Bandit1"},{"content":"Level description The password for the next level is stored in a file called - located in the home directory\nTips for beginners Try to understand why previous solution is not working as you expect. Solution You may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our cat command: The terminal is waiting for something else. This happens due to character - is used to pass arguments to our commands, and the linux shell is interpreting that. To prevent that, we could use:\ncat ./- NB: Dot . is used to refer current directory. The slash / is used at the end of directory name.\nWe get the password for bandit3 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit2/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called - located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eTry to understand why previous solution is not working as you expect.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eYou may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our \u003ccode\u003ecat\u003c/code\u003e command:\n\u003cimg alt=\"bandit2\" loading=\"lazy\" src=\"/images/otw/bandit/bandit2/0.png\"\u003e\u003c/p\u003e\n\u003cp\u003eThe terminal is \u003cem\u003ewaiting\u003c/em\u003e for something else. This happens due to character \u003ccode\u003e-\u003c/code\u003e is used to pass arguments to our commands, and the linux shell is interpreting that.\nTo prevent that, we could use:\u003c/p\u003e","title":"Bandit2"},{"content":"Level description The password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\nTips for beginners Think about how to escape the whitespaces. Solution After login in the machine as bandit3, we can see the filename \u0026ndash;spaces in this filename\u0026ndash;.\nNow we have 2 problems:\nSame as previous level, filename starts with --, so it will be interpreted as an argument. Address this problem using ./. Filename contains whitespaces. This is an issue, as bash interpretes whitespaces to separate commands. To solve the second problem, we must escape the whitespace character in some way. Here is the solution:\ncat ./--spaces\\ in\\ this\\ filename-- NB: Little trick, you can start writting filename and press Tab to autocomplete the name. The \\ is going to be inserted automatically.\nJust using the \\ we can escape the whitespace.\nNow we can continue with the bandit4 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit3/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eThink about how to \u003cem\u003eescape\u003c/em\u003e the whitespaces.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAfter login in the machine as bandit3, we can see the filename \u003cem\u003e\u0026ndash;spaces in this filename\u0026ndash;\u003c/em\u003e.\u003c/p\u003e\n\u003cp\u003eNow we have 2 problems:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eSame as previous level, filename starts with \u003ccode\u003e--\u003c/code\u003e, so it will be interpreted as an argument. Address this problem using \u003ccode\u003e./\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003eFilename contains \u003cstrong\u003ewhitespaces\u003c/strong\u003e. This is an issue, as bash interpretes whitespaces to separate commands.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eTo solve the second problem, we must escape the whitespace character in some way. Here is the solution:\u003c/p\u003e","title":"Bandit3"},{"content":"Level description The password for the next level is stored in a hidden file in the inhere directory.\nTips for beginners Learn how to navigate directories in Linux. First understand what a hidden file is. Solution Listing directory files inside bandit4\u0026rsquo;s home directory, show directory inhere.\nNB: How to distinguish files and directories in Linux? Use ls -l and see the difference.\nWe have 2 options now:\nMove to inhere directory and check contens again. Check contents directly. Moving to another directory can be done using cd \u0026lt;dirName\u0026gt;. If you prefer to check directory contents directly, use ls \u0026lt;dirName\u0026gt;.\nAfter checking inhere contents via ls, we see nothing. The reason is the file is a hidden file. A hidden file in Linux is everyfile whose name starts with dot .. Hidden files are not shown by default with ls command, so we must add a special flag -a to list all files: NB: Both flags -l and -a cna be combined into a single flag -al, which is shorter to type.\nAs you can see, filename is \u0026hellip;Hidding-From-You starting with three dots. Reading file contents should be easy at this point!\nNext level is bandit5.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit4/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a hidden file in the inhere directory.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to navigate directories in Linux.\u003c/li\u003e\n\u003cli\u003eFirst understand what a hidden file is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eListing directory files inside bandit4\u0026rsquo;s home directory, show directory \u003cstrong\u003einhere\u003c/strong\u003e.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e How to distinguish files and directories in Linux? Use \u003ccode\u003els -l\u003c/code\u003e and see the difference.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eWe have 2 options now:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eMove to inhere directory and check contens again.\u003c/li\u003e\n\u003cli\u003eCheck contents directly.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eMoving to another directory can be done using \u003ccode\u003ecd \u0026lt;dirName\u0026gt;\u003c/code\u003e. If you prefer to check directory contents directly, use \u003ccode\u003els \u0026lt;dirName\u0026gt;\u003c/code\u003e.\u003c/p\u003e","title":"Bandit4"},{"content":"Level description The password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\nTips for beginners What means human-readable file? Is there any way to check filetype at Linux?. Solution Checking inhere\u0026rsquo;s contents shows some files names \u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII here\nSo now, our goal is checking if file content of every file in the folder is ASCII or not. file \u0026lt;filename\u0026gt; does the job. Note the use of *. That called a wildcard regular expression, we\u0026rsquo;ll deep into it in later levels. An easy approach could be checking every file separately:\nfile ./--file00 file ./--file01 ... file ./--file09 But that\u0026rsquo;s not funny, imagine we have 100 files to check. All the files are in the same directory, so we can use cat ./* where ./* matches every filename in the directory, applying file to every file.\nNB: Another approach is to use find with certaing flags. Try to do in different ways, don\u0026rsquo;t stick to my solution.\nThe file \u0026ndash;file00 content is not readable, so get password from \u0026ndash;file07 and continue with bandit6.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit5/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eWhat means human-readable file?\u003c/li\u003e\n\u003cli\u003eIs there any way to check filetype at Linux?.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eChecking inhere\u0026rsquo;s contents shows some files names \u003cstrong\u003e\u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09\u003c/strong\u003e. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII \u003ca href=\"https://en.wikipedia.org/wiki/ASCII\"\u003ehere\u003c/a\u003e\u003c/p\u003e","title":"Bandit5"},{"content":"Level description The password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\nhuman-readable 1033 bytes in size not executable Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution The purpose of the level is showing us how to find for files. Listing contents of inhere, we can see some folders, containing a lot of files inside: NB: Adding -R to ls shows recursively the content of every folder inside the directory listed.\nSo this time, checking every file is not an option. We need to find a file with some properties, specific size, not excutable and human-readable. Let\u0026rsquo;s explain the command we\u0026rsquo;re using:\nfind inhere/ -size 1033c ! -executable First, we specify the directory, in this case inhere. The option -size 1033c returns files of 1033 bytes. Then, with -executable we would get executable files, but we want not executable files, that\u0026rsquo;s why we are adding ! before.\nNB: By default, the -size option takes as argument the number of blocks. For example, -size 2 means 2 blocks of 512 bytes, so its 1024. The c is used to specify exact bytes. Don\u0026rsquo;t ask me why it\u0026rsquo;s c and not b 😅.\nThe property of human-readability is not implemented in find. This is not an issue, previous command returns a single file and it is human readable (we could confirm using file): Extra tip: try to use the following:\nfind inhere/ -size 1033c ! -executable | file You get the same result! The pipe | is a great tool to execute 2+ commands in one line.\nGet your password and continue with bandit7.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit6/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ehuman-readable\u003c/li\u003e\n\u003cli\u003e1033 bytes in size\u003c/li\u003e\n\u003cli\u003enot executable\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThe purpose of the level is showing us how to find for files. Listing contents of \u003cstrong\u003einhere\u003c/strong\u003e, we can see some folders, containing a lot of files inside:\n\u003cimg alt=\"bandit6_0\" loading=\"lazy\" src=\"/images/otw/bandit/bandit6/0.png\"\u003e\u003c/p\u003e","title":"Bandit6"},{"content":"Level description The password for the next level is stored somewhere on the server and has all of the following properties:\nowned by user bandit7 owned by group bandit6 33 bytes in size Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution This is very straightforward to do after completing previous level. Now we need to identify a file owned by user bandit7 and group bandi6. Furthermore, the file is somewhere on the server, which means we have to find in the root directory /.\nfind / -user bandit7 -group bandit6 -size 33c 2\u0026gt;/dev/null NB: I added that strange 2\u0026gt;/dev/null to filter error output. The reason why it works like that is more technical, for now just save this a fast way to filter errors in terminal. We get some errors because looking for files in the whole server may return some unaccesible files, as we don\u0026rsquo;t have root user permissions. We will study Linux permissions in later levels.\nThe property of human-readability is not implemented in find. This is not an issue, previous command returns a single file and it is human readable (we could confirm using file):\nGet your password and continue with bandit7.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit7/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored somewhere on the server and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eowned by user bandit7\u003c/li\u003e\n\u003cli\u003eowned by group bandit6\u003c/li\u003e\n\u003cli\u003e33 bytes in size\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is very straightforward to do after completing previous level. Now we need to identify a file owned by user bandit7 and group bandi6. Furthermore, the file is \u003cstrong\u003esomewhere on the server\u003c/strong\u003e, which means we have to find in the root directory \u003ccode\u003e/\u003c/code\u003e.\u003c/p\u003e","title":"Bandit7"},{"content":"👨‍💻 whoami Hey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\nWhat is this❓​ This blog is basically my thoughts on several hacking topics. Here you’ll see:\nWriteups from CTF challenges, from platforms like HackTheBox or OverTheWire.\nWalkthroughs and notes on pentesting techniques I’m learning or testing.\nSome posts on cryptography — because math can be fun (sometimes).\nRandom topics that freaks like me may (just may) find interesting.\nThe idea is simple: share what I learn, document my journey, and maybe help others who are also diving into the exciting world of ethical hacking.\n📫 Contact Want to say hi, share ideas, or just geek out about hacking? Reach me here:\n📧 Email: mrb0b1073@proton.me 💻​ GitHub: mrb0b173 🟩​ HackTheBox: mrb0b1073 ","permalink":"http://localhost:1313/about/","summary":"\u003ch2 id=\"-whoami\"\u003e👨‍💻 whoami\u003c/h2\u003e\n\u003cp\u003eHey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\u003c/p\u003e\n\u003chr\u003e\n\u003ch2 id=\"what-is-this\"\u003eWhat is this❓​\u003c/h2\u003e\n\u003cp\u003eThis blog is basically my thoughts on several hacking topics. Here you’ll see:\u003c/p\u003e","title":"About"},{"content":"Hey! 👋 I\u0026rsquo;m mrb0b1073 and this is my first post.\nWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\nExcited to start this adventure!\n","permalink":"http://localhost:1313/posts/hello-world/","summary":"\u003cp\u003eHey! 👋 I\u0026rsquo;m \u003cstrong\u003emrb0b1073\u003c/strong\u003e and this is my first post.\u003c/p\u003e\n\u003cp\u003eWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\u003cbr\u003e\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\u003c/p\u003e\n\u003cp\u003eExcited to start this adventure!\u003c/p\u003e","title":"Hello World"},{"content":"Introduction If you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\nIn cybersecurity there are broadly two complementary roles: Blue Team and Red Team. Blue Teams focus on defense, monitoring, incident response, hardening systems and keeping services secure, while Red Teams simulate attackers to find weaknesses and prove what an adversary could do. Ethical hacking aligns closely with Red Team operations, but cybersecurity is highly transversal across IT. There are many specialities or areas, such as cloud security, appsec, pentesting, forensics, governance, risk management, malware analysis, etc. Every topic could deserve its own post, so let\u0026rsquo;s keep it simple and focus on ethical hacking.\nHacker philosophy Let\u0026rsquo;s start with the idea of what is exactly a hacker. A hacker is someone who explores systems to understand how they work, finds creative ways to make or fix things, and solves technical problems. Historically the word describes curiosity, craft, and a drive to improve systems — not criminality. It is important to make the distinction between hacker and cracker, also called cybercriminal. A hacker explores, builds, discloses responsibly and works to improve security. They work in authorized environments or labs. On the other hand, a cracker breaks into systems for theft, vandalism or other illicit gain.\nHere you can find the most popularized ideas often summarized as the hacker ethic:\nCuriosity first: Learn by exploring and tinkering. Freedom of information: All knowledge should be shared to help progress. This fits properly with the idea of open source. Mistrust of needless authority: Centralized control sometimes blocks innovation. It is always good to question anything, specially common assumptions. Meritocracy: Skills, craft and results matter more than titles. Craftsmanship \u0026amp; elegance: Technical beauty matters. Build clean, clever and efficient solutions. Responsability \u0026amp; ethics: Use your skills to build, fix, educate and defend, not to harm. Core fundamentals Assuming you want to init yourself in hacking, you should first build competence across three basic pillars.\nOperating Systems You should learn as much as possible about Linux and Windows. Specially Linux, all the tools you will be using are meant to be used in a Linux environment. Skill with shell is required, learn basic commands and how to interact with the OS using the terminal. Research about processes, file permissions, package management and logs. A large proportion of web servers around the world run on Linux, although Windows is also widely used. Windows knowledge is really valuable too, considering active directory is strongly used in corporate environments.\nNetworking You have to understand how computers communicate each other. Understand basic networking concepts, IP adresses, subnetting, proxies, find out how internet works. Study some protocols such as TCP/IP, HTTP, DNS or SSH. This could sound confusing for beginners, but this step is not optional! Study different client/server models and how services expose attack surfaces.\nProgramming \u0026amp; scripting Is this completely required? Maybe not for complete beginners. Does it help? Absolutely yes. Understanding how web apps or any type of application works makes things much easier. You can imagine different entry points to exploit if you understand how systems are designed. Also writing scripts in bash or python makes you more productive through automation.\nEthical Hacking foundations Once you feel confident with these 3 pillars, you can go to the next step. You can study about different topics and areas. For example, binary exploiting, web pentesting, mobile pentesting, wireless hacking, etc. You should start picking a focus, in this post we focus on web pentesting, as it is beginner friendly. Also web applications are the bread and butter in companies nowadays.\nKey concepts to study:\nCIA Triad: CIA refers to Confidentiality, Integrity and Availability. These three concepts are key in information security, and describe properties we want to ensure in our systems and information. Web Security basics, OWASP: Study the OWASP Top 10, which summarizes most frequent web security risks. Authentication and session control: Understand the concepts of Authentication and Authorization, research about how session is handled in web apps, cookies, JWT tokens, etc. Input validation \u0026amp; injection attacks: Learn about SQL Injection, Cross-Site Scripting (XSS), Code Injection, SSTI, and every injection type. Secure development lifecycle: Find out how to implement security controls in code. This can be more related to Blue Team, but as Red Teamer it is important to understand. Firewall evasion: What a firewall is and some techniques/methods to bypass. Some cryptography: Understand what a chiper and a hash are, how information is encrypted to prevent access from 3rd parties. Focusing on web, read about TLS protocol. There are many more topics you can research and learn, but this could be a nice starting point.\nTools and platforms to learn Now you have an idea of what to study, let\u0026rsquo;s see how to start in practical terms.\nSome platforms I personally recommend:\nOverTheWire: Here you can find some CTFs (Capture The Flag) which are fun to play and also really instructive. Bandit games are a must for complete beginners, as you will explore some linux and bash concepts which are basic to continue. The games are leveled by difficulty, in their web you can get all the information about how to play, only a terminal and SSH is required. This helps building your foundation in Linux OS. HackTheBox: Nº 1 platform in cybersecurity. Has a lot of resources to learn all this core fundamentals, and also red team / blue team security topics. It is focused on labs where you can test your skills hacking different boxes but if you really want to learn it is worth to invest time and money in the academy. I have to say the level here is high, specially if you try to hack machines on your own without using some guide or writeup. TryHackMe: More beginner friendly than hackthebox, it provides a lot of guided learning resources. PortSwigger Labs: Practical labs about specific topics, focused on web hacking. They are great to learn and understand different types of attacks, injections, and security misconfigurations. I would recommend digging into this once you have the theoretical basis about these concepts. I have to mention a few tools I am sure you\u0026rsquo;d end up using:\nNmap: This is probably the most famous tool in hacking, allowing you to gather information about ports and services running in a machine. Burpsuite: A proxy tool widely used in web application security testing. It basically allows you to intercept and modify web requests, which can be used to perform several types of attacks. Metasploit: The most used pentesting framework. Contains a large amount of scripts and exploits ready to run. Another crucial step here is to set up your virtual lab environment to test vulnerable applications. To achieve this goal, there are some Linux distributions like Kali, Parrot or BlackArch, but that\u0026rsquo;s a topic for another post.\nFinal thoughs To sum up, this would be my personal roadmap:\nLearn the fundamentals, specially Linux and networking. Install some Linux in a virtual machine, play with it, get comfortable with the terminal. You can start with bandit wargames in OverTheWire. Complete every level and make sure to understand everything as clear as possible. Move to guided boxes on HackTheBox. I recommend you joining their Discord, ask questions, community is great there! Take notes, repeat, learn, improve your skills. Maybe use your own lab environment, create your own vulnerable apps. Hacking is a mixing of curiosity, study and practice. Being passionate and motivated about it is really helpful and will definitely speed up the process. The path is long and really challenging, so keep it going!\n\u0026ldquo;Yes, I am a criminal. My crime is that of curiosity.\u0026rdquo; — The Mentor (Loyd Blankenship) at The Hacker Manifesto\n","permalink":"http://localhost:1313/posts/starting-point/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIf you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\u003c/p\u003e","title":"Starting Point"},{"content":"Introduction In this post series we are going to solve every level from bandit in OverTheWire This guide pretends to be a writeup containing the solutions of the level, designed for beginners.\nTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing WSL, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\nEvery section will contain the solution as well as some tips for people who is absolutely beginner.\nTips First of all, some tips:\nDo not use this as first resource to solve the levels. Try on your own, make mistakes and learn from them. Only check the solution as last resource or if you are completely new and you have absolutely no idea about what to do next. Take notes from your learning. Write up commands, tips and everything which can be useful in the future. Make sure to understand everything. Is a good idea to note the passwords for every level. If you want to continue letter, you can simply log in in the desired level. It is annoying to repeat everything! Follow the tips and information provided at OverTheWire website. Levels Here is my solution for every level:\nBandit0 Bandit1 Bandit2 Bandit3 Bandit4 Bandit5 Bandit6 Bandit7 ","permalink":"http://localhost:1313/posts/otw/bandit/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIn this post series we are going to solve every level from bandit in \u003ca href=\"https://overthewire.org/wargames/bandit/\"\u003e\u003cem\u003eOverTheWire\u003c/em\u003e\u003c/a\u003e\nThis guide pretends to be a writeup containing the solutions of the level, designed for beginners.\u003c/p\u003e\n\u003cp\u003eTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing \u003ca href=\"https://learn.microsoft.com/en-us/windows/wsl/install\"\u003eWSL\u003c/a\u003e, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\u003c/p\u003e","title":"Bandit"},{"content":"Level description The goal of this level is for you to log into the game using SSH. The host to which you need to connect is bandit.labs.overthewire.org, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\nTips for beginners Read a bit about what SSH is. Research about what a port is. Solution This is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go here.\nAt Linux, we can use ssh client to connect to the server. It should be installed by default on your system. If not, please first research about how to install. Once you have the SSH client installed, you can log in into the first level as follows:\nssh bandit0@bandit.labs.overthewire.org -p 2220 Syntax is simple: ssh \u0026lt;username\u0026gt;@\u0026lt;hostname\u0026gt; -p \u0026lt;port\u0026gt;. Usually SSH runs on port 22 by default, but they changed to port 2220 so we must specify it in the command.\nOnce you try to log in, you will see something like this: NB: If it\u0026rsquo;s the first time you try to log in, you will be asked about the authenticity of the host. Just type yes.\nType the password bandit0 and press enter. Now you are inside bandit server, ready to begin with bandit1!\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit0/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe goal of this level is for you to log into the game using SSH. The host to which you need to connect is \u003cstrong\u003ebandit.labs.overthewire.org\u003c/strong\u003e, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eRead a bit about what SSH is.\u003c/li\u003e\n\u003cli\u003eResearch about what a port is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go \u003ca href=\"https://en.wikipedia.org/wiki/Secure_Shell\"\u003ehere\u003c/a\u003e.\u003c/p\u003e","title":"Bandit0"},{"content":"Level description The password for the next level is stored in a file called readme located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\nTips for beginners Learn about home directory in Linux. Learn to use cat and ls commands. Solution First step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\nls This shows in terminal the files at the current directory. There you will see the readme file.\nNow we can to check the contents, so let\u0026rsquo;s use cat:\ncat readme To read a file, we use cat \u0026lt;filename\u0026gt;.\nNB: Not every file is human readable in Linux. We deep more about this in later levels.\nThe content of the readme file reveals the password for bandit2 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit1/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u003cstrong\u003ereadme\u003c/strong\u003e located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn about home directory in Linux.\u003c/li\u003e\n\u003cli\u003eLearn to use \u003ccode\u003ecat\u003c/code\u003e and \u003ccode\u003els\u003c/code\u003e commands.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eFirst step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\u003c/p\u003e","title":"Bandit1"},{"content":"Level description The password for the next level is stored in a file called - located in the home directory\nTips for beginners Try to understand why previous solution is not working as you expect. Solution You may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our cat command: The terminal is waiting for something else. This happens due to character - is used to pass arguments to our commands, and the linux shell is interpreting that. To prevent that, we could use:\ncat ./- NB: Dot . is used to refer current directory. The slash / is used at the end of directory name.\nWe get the password for bandit3 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit2/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called - located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eTry to understand why previous solution is not working as you expect.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eYou may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our \u003ccode\u003ecat\u003c/code\u003e command:\n\u003cimg alt=\"bandit2\" loading=\"lazy\" src=\"/images/otw/bandit/bandit2/0.png\"\u003e\u003c/p\u003e\n\u003cp\u003eThe terminal is \u003cem\u003ewaiting\u003c/em\u003e for something else. This happens due to character \u003ccode\u003e-\u003c/code\u003e is used to pass arguments to our commands, and the linux shell is interpreting that.\nTo prevent that, we could use:\u003c/p\u003e","title":"Bandit2"},{"content":"Level description The password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\nTips for beginners Think about how to escape the whitespaces. Solution After login in the machine as bandit3, we can see the filename \u0026ndash;spaces in this filename\u0026ndash;.\nNow we have 2 problems:\nSame as previous level, filename starts with --, so it will be interpreted as an argument. Address this problem using ./. Filename contains whitespaces. This is an issue, as bash interpretes whitespaces to separate commands. To solve the second problem, we must escape the whitespace character in some way. Here is the solution:\ncat ./--spaces\\ in\\ this\\ filename-- NB: Little trick, you can start writting filename and press Tab to autocomplete the name. The \\ is going to be inserted automatically.\nJust using the \\ we can escape the whitespace.\nNow we can continue with the bandit4 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit3/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eThink about how to \u003cem\u003eescape\u003c/em\u003e the whitespaces.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAfter login in the machine as bandit3, we can see the filename \u003cem\u003e\u0026ndash;spaces in this filename\u0026ndash;\u003c/em\u003e.\u003c/p\u003e\n\u003cp\u003eNow we have 2 problems:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eSame as previous level, filename starts with \u003ccode\u003e--\u003c/code\u003e, so it will be interpreted as an argument. Address this problem using \u003ccode\u003e./\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003eFilename contains \u003cstrong\u003ewhitespaces\u003c/strong\u003e. This is an issue, as bash interpretes whitespaces to separate commands.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eTo solve the second problem, we must escape the whitespace character in some way. Here is the solution:\u003c/p\u003e","title":"Bandit3"},{"content":"Level description The password for the next level is stored in a hidden file in the inhere directory.\nTips for beginners Learn how to navigate directories in Linux. First understand what a hidden file is. Solution Listing directory files inside bandit4\u0026rsquo;s home directory, show directory inhere.\nNB: How to distinguish files and directories in Linux? Use ls -l and see the difference.\nWe have 2 options now:\nMove to inhere directory and check contens again. Check contents directly. Moving to another directory can be done using cd \u0026lt;dirName\u0026gt;. If you prefer to check directory contents directly, use ls \u0026lt;dirName\u0026gt;.\nAfter checking inhere contents via ls, we see nothing. The reason is the file is a hidden file. A hidden file in Linux is everyfile whose name starts with dot .. Hidden files are not shown by default with ls command, so we must add a special flag -a to list all files: NB: Both flags -l and -a cna be combined into a single flag -al, which is shorter to type.\nAs you can see, filename is \u0026hellip;Hidding-From-You starting with three dots. Reading file contents should be easy at this point!\nNext level is bandit5.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit4/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a hidden file in the inhere directory.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to navigate directories in Linux.\u003c/li\u003e\n\u003cli\u003eFirst understand what a hidden file is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eListing directory files inside bandit4\u0026rsquo;s home directory, show directory \u003cstrong\u003einhere\u003c/strong\u003e.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e How to distinguish files and directories in Linux? Use \u003ccode\u003els -l\u003c/code\u003e and see the difference.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eWe have 2 options now:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eMove to inhere directory and check contens again.\u003c/li\u003e\n\u003cli\u003eCheck contents directly.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eMoving to another directory can be done using \u003ccode\u003ecd \u0026lt;dirName\u0026gt;\u003c/code\u003e. If you prefer to check directory contents directly, use \u003ccode\u003els \u0026lt;dirName\u0026gt;\u003c/code\u003e.\u003c/p\u003e","title":"Bandit4"},{"content":"Level description The password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\nTips for beginners What means human-readable file? Is there any way to check filetype at Linux?. Solution Checking inhere\u0026rsquo;s contents shows some files names \u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII here\nSo now, our goal is checking if file content of every file in the folder is ASCII or not. file \u0026lt;filename\u0026gt; does the job. Note the use of *. That called a wildcard regular expression, we\u0026rsquo;ll deep into it in later levels. An easy approach could be checking every file separately:\nfile ./--file00 file ./--file01 ... file ./--file09 But that\u0026rsquo;s not funny, imagine we have 100 files to check. All the files are in the same directory, so we can use cat ./* where ./* matches every filename in the directory, applying file to every file.\nNB: Another approach is to use find with certaing flags. Try to do in different ways, don\u0026rsquo;t stick to my solution.\nThe file \u0026ndash;file00 content is not readable, so get password from \u0026ndash;file07 and continue with bandit6.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit5/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eWhat means human-readable file?\u003c/li\u003e\n\u003cli\u003eIs there any way to check filetype at Linux?.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eChecking inhere\u0026rsquo;s contents shows some files names \u003cstrong\u003e\u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09\u003c/strong\u003e. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII \u003ca href=\"https://en.wikipedia.org/wiki/ASCII\"\u003ehere\u003c/a\u003e\u003c/p\u003e","title":"Bandit5"},{"content":"Level description The password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\nhuman-readable 1033 bytes in size not executable Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution The purpose of the level is showing us how to find for files. Listing contents of inhere, we can see some folders, containing a lot of files inside: NB: Adding -R to ls shows recursively the content of every folder inside the directory listed.\nSo this time, checking every file is not an option. We need to find a file with some properties, specific size, not excutable and human-readable. Let\u0026rsquo;s explain the command we\u0026rsquo;re using:\nfind inhere/ -size 1033c ! -executable First, we specify the directory, in this case inhere. The option -size 1033c returns files of 1033 bytes. Then, with -executable we would get executable files, but we want not executable files, that\u0026rsquo;s why we are adding ! before.\nNB: By default, the -size option takes as argument the number of blocks. For example, -size 2 means 2 blocks of 512 bytes, so its 1024. The c is used to specify exact bytes. Don\u0026rsquo;t ask me why it\u0026rsquo;s c and not b 😅.\nThe property of human-readability is not implemented in find. This is not an issue, previous command returns a single file and it is human readable (we could confirm using file): Extra tip: try to use the following:\nfind inhere/ -size 1033c ! -executable | file You get the same result! The pipe | is a great tool to execute 2+ commands in one line.\nGet your password and continue with bandit7.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit6/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ehuman-readable\u003c/li\u003e\n\u003cli\u003e1033 bytes in size\u003c/li\u003e\n\u003cli\u003enot executable\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThe purpose of the level is showing us how to find for files. Listing contents of \u003cstrong\u003einhere\u003c/strong\u003e, we can see some folders, containing a lot of files inside:\n\u003cimg alt=\"bandit6_0\" loading=\"lazy\" src=\"/images/otw/bandit/bandit6/0.png\"\u003e\u003c/p\u003e","title":"Bandit6"},{"content":"Level description The password for the next level is stored somewhere on the server and has all of the following properties:\nowned by user bandit7 owned by group bandit6 33 bytes in size Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution This is very straightforward to do after completing previous level. Now we need to identify a file owned by user bandit7 and group bandi6. Furthermore, the file is somewhere on the server, which means we have to find in the root directory /.\nfind / -user bandit7 -group bandit6 -size 33c 2\u0026gt;/dev/null NB: I added that strange 2\u0026gt;/dev/null to filter error output. The reason why it works like that is more technical, for now just save this a fast way to filter errors in terminal. We get some errors because looking for files in the whole server may return some unaccesible files, as we don\u0026rsquo;t have root user permissions. We will study Linux permissions in later levels.\nWe should get a single file, containing password for bandit8.\nGet your password and continue with\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit7/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored somewhere on the server and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eowned by user bandit7\u003c/li\u003e\n\u003cli\u003eowned by group bandit6\u003c/li\u003e\n\u003cli\u003e33 bytes in size\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is very straightforward to do after completing previous level. Now we need to identify a file owned by user bandit7 and group bandi6. Furthermore, the file is \u003cstrong\u003esomewhere on the server\u003c/strong\u003e, which means we have to find in the root directory \u003ccode\u003e/\u003c/code\u003e.\u003c/p\u003e","title":"Bandit7"},{"content":"👨‍💻 whoami Hey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\nWhat is this❓​ This blog is basically my thoughts on several hacking topics. Here you’ll see:\nWriteups from CTF challenges, from platforms like HackTheBox or OverTheWire.\nWalkthroughs and notes on pentesting techniques I’m learning or testing.\nSome posts on cryptography — because math can be fun (sometimes).\nRandom topics that freaks like me may (just may) find interesting.\nThe idea is simple: share what I learn, document my journey, and maybe help others who are also diving into the exciting world of ethical hacking.\n📫 Contact Want to say hi, share ideas, or just geek out about hacking? Reach me here:\n📧 Email: mrb0b1073@proton.me 💻​ GitHub: mrb0b173 🟩​ HackTheBox: mrb0b1073 ","permalink":"http://localhost:1313/about/","summary":"\u003ch2 id=\"-whoami\"\u003e👨‍💻 whoami\u003c/h2\u003e\n\u003cp\u003eHey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\u003c/p\u003e\n\u003chr\u003e\n\u003ch2 id=\"what-is-this\"\u003eWhat is this❓​\u003c/h2\u003e\n\u003cp\u003eThis blog is basically my thoughts on several hacking topics. Here you’ll see:\u003c/p\u003e","title":"About"},{"content":"Hey! 👋 I\u0026rsquo;m mrb0b1073 and this is my first post.\nWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\nExcited to start this adventure!\n","permalink":"http://localhost:1313/posts/hello-world/","summary":"\u003cp\u003eHey! 👋 I\u0026rsquo;m \u003cstrong\u003emrb0b1073\u003c/strong\u003e and this is my first post.\u003c/p\u003e\n\u003cp\u003eWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\u003cbr\u003e\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\u003c/p\u003e\n\u003cp\u003eExcited to start this adventure!\u003c/p\u003e","title":"Hello World"},{"content":"Introduction If you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\nIn cybersecurity there are broadly two complementary roles: Blue Team and Red Team. Blue Teams focus on defense, monitoring, incident response, hardening systems and keeping services secure, while Red Teams simulate attackers to find weaknesses and prove what an adversary could do. Ethical hacking aligns closely with Red Team operations, but cybersecurity is highly transversal across IT. There are many specialities or areas, such as cloud security, appsec, pentesting, forensics, governance, risk management, malware analysis, etc. Every topic could deserve its own post, so let\u0026rsquo;s keep it simple and focus on ethical hacking.\nHacker philosophy Let\u0026rsquo;s start with the idea of what is exactly a hacker. A hacker is someone who explores systems to understand how they work, finds creative ways to make or fix things, and solves technical problems. Historically the word describes curiosity, craft, and a drive to improve systems — not criminality. It is important to make the distinction between hacker and cracker, also called cybercriminal. A hacker explores, builds, discloses responsibly and works to improve security. They work in authorized environments or labs. On the other hand, a cracker breaks into systems for theft, vandalism or other illicit gain.\nHere you can find the most popularized ideas often summarized as the hacker ethic:\nCuriosity first: Learn by exploring and tinkering. Freedom of information: All knowledge should be shared to help progress. This fits properly with the idea of open source. Mistrust of needless authority: Centralized control sometimes blocks innovation. It is always good to question anything, specially common assumptions. Meritocracy: Skills, craft and results matter more than titles. Craftsmanship \u0026amp; elegance: Technical beauty matters. Build clean, clever and efficient solutions. Responsability \u0026amp; ethics: Use your skills to build, fix, educate and defend, not to harm. Core fundamentals Assuming you want to init yourself in hacking, you should first build competence across three basic pillars.\nOperating Systems You should learn as much as possible about Linux and Windows. Specially Linux, all the tools you will be using are meant to be used in a Linux environment. Skill with shell is required, learn basic commands and how to interact with the OS using the terminal. Research about processes, file permissions, package management and logs. A large proportion of web servers around the world run on Linux, although Windows is also widely used. Windows knowledge is really valuable too, considering active directory is strongly used in corporate environments.\nNetworking You have to understand how computers communicate each other. Understand basic networking concepts, IP adresses, subnetting, proxies, find out how internet works. Study some protocols such as TCP/IP, HTTP, DNS or SSH. This could sound confusing for beginners, but this step is not optional! Study different client/server models and how services expose attack surfaces.\nProgramming \u0026amp; scripting Is this completely required? Maybe not for complete beginners. Does it help? Absolutely yes. Understanding how web apps or any type of application works makes things much easier. You can imagine different entry points to exploit if you understand how systems are designed. Also writing scripts in bash or python makes you more productive through automation.\nEthical Hacking foundations Once you feel confident with these 3 pillars, you can go to the next step. You can study about different topics and areas. For example, binary exploiting, web pentesting, mobile pentesting, wireless hacking, etc. You should start picking a focus, in this post we focus on web pentesting, as it is beginner friendly. Also web applications are the bread and butter in companies nowadays.\nKey concepts to study:\nCIA Triad: CIA refers to Confidentiality, Integrity and Availability. These three concepts are key in information security, and describe properties we want to ensure in our systems and information. Web Security basics, OWASP: Study the OWASP Top 10, which summarizes most frequent web security risks. Authentication and session control: Understand the concepts of Authentication and Authorization, research about how session is handled in web apps, cookies, JWT tokens, etc. Input validation \u0026amp; injection attacks: Learn about SQL Injection, Cross-Site Scripting (XSS), Code Injection, SSTI, and every injection type. Secure development lifecycle: Find out how to implement security controls in code. This can be more related to Blue Team, but as Red Teamer it is important to understand. Firewall evasion: What a firewall is and some techniques/methods to bypass. Some cryptography: Understand what a chiper and a hash are, how information is encrypted to prevent access from 3rd parties. Focusing on web, read about TLS protocol. There are many more topics you can research and learn, but this could be a nice starting point.\nTools and platforms to learn Now you have an idea of what to study, let\u0026rsquo;s see how to start in practical terms.\nSome platforms I personally recommend:\nOverTheWire: Here you can find some CTFs (Capture The Flag) which are fun to play and also really instructive. Bandit games are a must for complete beginners, as you will explore some linux and bash concepts which are basic to continue. The games are leveled by difficulty, in their web you can get all the information about how to play, only a terminal and SSH is required. This helps building your foundation in Linux OS. HackTheBox: Nº 1 platform in cybersecurity. Has a lot of resources to learn all this core fundamentals, and also red team / blue team security topics. It is focused on labs where you can test your skills hacking different boxes but if you really want to learn it is worth to invest time and money in the academy. I have to say the level here is high, specially if you try to hack machines on your own without using some guide or writeup. TryHackMe: More beginner friendly than hackthebox, it provides a lot of guided learning resources. PortSwigger Labs: Practical labs about specific topics, focused on web hacking. They are great to learn and understand different types of attacks, injections, and security misconfigurations. I would recommend digging into this once you have the theoretical basis about these concepts. I have to mention a few tools I am sure you\u0026rsquo;d end up using:\nNmap: This is probably the most famous tool in hacking, allowing you to gather information about ports and services running in a machine. Burpsuite: A proxy tool widely used in web application security testing. It basically allows you to intercept and modify web requests, which can be used to perform several types of attacks. Metasploit: The most used pentesting framework. Contains a large amount of scripts and exploits ready to run. Another crucial step here is to set up your virtual lab environment to test vulnerable applications. To achieve this goal, there are some Linux distributions like Kali, Parrot or BlackArch, but that\u0026rsquo;s a topic for another post.\nFinal thoughs To sum up, this would be my personal roadmap:\nLearn the fundamentals, specially Linux and networking. Install some Linux in a virtual machine, play with it, get comfortable with the terminal. You can start with bandit wargames in OverTheWire. Complete every level and make sure to understand everything as clear as possible. Move to guided boxes on HackTheBox. I recommend you joining their Discord, ask questions, community is great there! Take notes, repeat, learn, improve your skills. Maybe use your own lab environment, create your own vulnerable apps. Hacking is a mixing of curiosity, study and practice. Being passionate and motivated about it is really helpful and will definitely speed up the process. The path is long and really challenging, so keep it going!\n\u0026ldquo;Yes, I am a criminal. My crime is that of curiosity.\u0026rdquo; — The Mentor (Loyd Blankenship) at The Hacker Manifesto\n","permalink":"http://localhost:1313/posts/starting-point/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIf you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\u003c/p\u003e","title":"Starting Point"},{"content":"Introduction In this post series we are going to solve every level from bandit in OverTheWire This guide pretends to be a writeup containing the solutions of the level, designed for beginners.\nTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing WSL, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\nEvery section will contain the solution as well as some tips for people who is absolutely beginner.\nTips First of all, some tips:\nDo not use this as first resource to solve the levels. Try on your own, make mistakes and learn from them. Only check the solution as last resource or if you are completely new and you have absolutely no idea about what to do next. Take notes from your learning. Write up commands, tips and everything which can be useful in the future. Make sure to understand everything. Is a good idea to note the passwords for every level. If you want to continue letter, you can simply log in in the desired level. It is annoying to repeat everything! Follow the tips and information provided at OverTheWire website. Levels Here is my solution for every level:\nBandit0 Bandit1 Bandit2 Bandit3 Bandit4 Bandit5 Bandit6 Bandit7 ","permalink":"http://localhost:1313/posts/otw/bandit/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIn this post series we are going to solve every level from bandit in \u003ca href=\"https://overthewire.org/wargames/bandit/\"\u003e\u003cem\u003eOverTheWire\u003c/em\u003e\u003c/a\u003e\nThis guide pretends to be a writeup containing the solutions of the level, designed for beginners.\u003c/p\u003e\n\u003cp\u003eTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing \u003ca href=\"https://learn.microsoft.com/en-us/windows/wsl/install\"\u003eWSL\u003c/a\u003e, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\u003c/p\u003e","title":"Bandit"},{"content":"Level description The goal of this level is for you to log into the game using SSH. The host to which you need to connect is bandit.labs.overthewire.org, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\nTips for beginners Read a bit about what SSH is. Research about what a port is. Solution This is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go here.\nAt Linux, we can use ssh client to connect to the server. It should be installed by default on your system. If not, please first research about how to install. Once you have the SSH client installed, you can log in into the first level as follows:\nssh bandit0@bandit.labs.overthewire.org -p 2220 Syntax is simple: ssh \u0026lt;username\u0026gt;@\u0026lt;hostname\u0026gt; -p \u0026lt;port\u0026gt;. Usually SSH runs on port 22 by default, but they changed to port 2220 so we must specify it in the command.\nOnce you try to log in, you will see something like this: NB: If it\u0026rsquo;s the first time you try to log in, you will be asked about the authenticity of the host. Just type yes.\nType the password bandit0 and press enter. Now you are inside bandit server, ready to begin with bandit1!\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit0/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe goal of this level is for you to log into the game using SSH. The host to which you need to connect is \u003cstrong\u003ebandit.labs.overthewire.org\u003c/strong\u003e, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eRead a bit about what SSH is.\u003c/li\u003e\n\u003cli\u003eResearch about what a port is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go \u003ca href=\"https://en.wikipedia.org/wiki/Secure_Shell\"\u003ehere\u003c/a\u003e.\u003c/p\u003e","title":"Bandit0"},{"content":"Level description The password for the next level is stored in a file called readme located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\nTips for beginners Learn about home directory in Linux. Learn to use cat and ls commands. Solution First step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\nls This shows in terminal the files at the current directory. There you will see the readme file.\nNow we can to check the contents, so let\u0026rsquo;s use cat:\ncat readme To read a file, we use cat \u0026lt;filename\u0026gt;.\nNB: Not every file is human readable in Linux. We deep more about this in later levels.\nThe content of the readme file reveals the password for bandit2 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit1/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u003cstrong\u003ereadme\u003c/strong\u003e located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn about home directory in Linux.\u003c/li\u003e\n\u003cli\u003eLearn to use \u003ccode\u003ecat\u003c/code\u003e and \u003ccode\u003els\u003c/code\u003e commands.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eFirst step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\u003c/p\u003e","title":"Bandit1"},{"content":"Level description The password for the next level is stored in a file called - located in the home directory\nTips for beginners Try to understand why previous solution is not working as you expect. Solution You may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our cat command: The terminal is waiting for something else. This happens due to character - is used to pass arguments to our commands, and the linux shell is interpreting that. To prevent that, we could use:\ncat ./- NB: Dot . is used to refer current directory. The slash / is used at the end of directory name.\nWe get the password for bandit3 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit2/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called - located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eTry to understand why previous solution is not working as you expect.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eYou may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our \u003ccode\u003ecat\u003c/code\u003e command:\n\u003cimg alt=\"bandit2\" loading=\"lazy\" src=\"/images/otw/bandit/bandit2/0.png\"\u003e\u003c/p\u003e\n\u003cp\u003eThe terminal is \u003cem\u003ewaiting\u003c/em\u003e for something else. This happens due to character \u003ccode\u003e-\u003c/code\u003e is used to pass arguments to our commands, and the linux shell is interpreting that.\nTo prevent that, we could use:\u003c/p\u003e","title":"Bandit2"},{"content":"Level description The password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\nTips for beginners Think about how to escape the whitespaces. Solution After login in the machine as bandit3, we can see the filename \u0026ndash;spaces in this filename\u0026ndash;.\nNow we have 2 problems:\nSame as previous level, filename starts with --, so it will be interpreted as an argument. Address this problem using ./. Filename contains whitespaces. This is an issue, as bash interpretes whitespaces to separate commands. To solve the second problem, we must escape the whitespace character in some way. Here is the solution:\ncat ./--spaces\\ in\\ this\\ filename-- NB: Little trick, you can start writting filename and press Tab to autocomplete the name. The \\ is going to be inserted automatically.\nJust using the \\ we can escape the whitespace.\nNow we can continue with the bandit4 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit3/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eThink about how to \u003cem\u003eescape\u003c/em\u003e the whitespaces.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAfter login in the machine as bandit3, we can see the filename \u003cem\u003e\u0026ndash;spaces in this filename\u0026ndash;\u003c/em\u003e.\u003c/p\u003e\n\u003cp\u003eNow we have 2 problems:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eSame as previous level, filename starts with \u003ccode\u003e--\u003c/code\u003e, so it will be interpreted as an argument. Address this problem using \u003ccode\u003e./\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003eFilename contains \u003cstrong\u003ewhitespaces\u003c/strong\u003e. This is an issue, as bash interpretes whitespaces to separate commands.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eTo solve the second problem, we must escape the whitespace character in some way. Here is the solution:\u003c/p\u003e","title":"Bandit3"},{"content":"Level description The password for the next level is stored in a hidden file in the inhere directory.\nTips for beginners Learn how to navigate directories in Linux. First understand what a hidden file is. Solution Listing directory files inside bandit4\u0026rsquo;s home directory, show directory inhere.\nNB: How to distinguish files and directories in Linux? Use ls -l and see the difference.\nWe have 2 options now:\nMove to inhere directory and check contens again. Check contents directly. Moving to another directory can be done using cd \u0026lt;dirName\u0026gt;. If you prefer to check directory contents directly, use ls \u0026lt;dirName\u0026gt;.\nAfter checking inhere contents via ls, we see nothing. The reason is the file is a hidden file. A hidden file in Linux is everyfile whose name starts with dot .. Hidden files are not shown by default with ls command, so we must add a special flag -a to list all files: NB: Both flags -l and -a cna be combined into a single flag -al, which is shorter to type.\nAs you can see, filename is \u0026hellip;Hidding-From-You starting with three dots. Reading file contents should be easy at this point!\nNext level is bandit5.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit4/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a hidden file in the inhere directory.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to navigate directories in Linux.\u003c/li\u003e\n\u003cli\u003eFirst understand what a hidden file is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eListing directory files inside bandit4\u0026rsquo;s home directory, show directory \u003cstrong\u003einhere\u003c/strong\u003e.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e How to distinguish files and directories in Linux? Use \u003ccode\u003els -l\u003c/code\u003e and see the difference.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eWe have 2 options now:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eMove to inhere directory and check contens again.\u003c/li\u003e\n\u003cli\u003eCheck contents directly.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eMoving to another directory can be done using \u003ccode\u003ecd \u0026lt;dirName\u0026gt;\u003c/code\u003e. If you prefer to check directory contents directly, use \u003ccode\u003els \u0026lt;dirName\u0026gt;\u003c/code\u003e.\u003c/p\u003e","title":"Bandit4"},{"content":"Level description The password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\nTips for beginners What means human-readable file? Is there any way to check filetype at Linux?. Solution Checking inhere\u0026rsquo;s contents shows some files names \u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII here\nSo now, our goal is checking if file content of every file in the folder is ASCII or not. file \u0026lt;filename\u0026gt; does the job. Note the use of *. That called a wildcard regular expression, we\u0026rsquo;ll deep into it in later levels. An easy approach could be checking every file separately:\nfile ./--file00 file ./--file01 ... file ./--file09 But that\u0026rsquo;s not funny, imagine we have 100 files to check. All the files are in the same directory, so we can use cat ./* where ./* matches every filename in the directory, applying file to every file.\nNB: Another approach is to use find with certaing flags. Try to do in different ways, don\u0026rsquo;t stick to my solution.\nThe file \u0026ndash;file00 content is not readable, so get password from \u0026ndash;file07 and continue with bandit6.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit5/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eWhat means human-readable file?\u003c/li\u003e\n\u003cli\u003eIs there any way to check filetype at Linux?.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eChecking inhere\u0026rsquo;s contents shows some files names \u003cstrong\u003e\u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09\u003c/strong\u003e. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII \u003ca href=\"https://en.wikipedia.org/wiki/ASCII\"\u003ehere\u003c/a\u003e\u003c/p\u003e","title":"Bandit5"},{"content":"Level description The password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\nhuman-readable 1033 bytes in size not executable Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution The purpose of the level is showing us how to find for files. Listing contents of inhere, we can see some folders, containing a lot of files inside: NB: Adding -R to ls shows recursively the content of every folder inside the directory listed.\nSo this time, checking every file is not an option. We need to find a file with some properties, specific size, not excutable and human-readable. Let\u0026rsquo;s explain the command we\u0026rsquo;re using:\nfind inhere/ -size 1033c ! -executable First, we specify the directory, in this case inhere. The option -size 1033c returns files of 1033 bytes. Then, with -executable we would get executable files, but we want not executable files, that\u0026rsquo;s why we are adding ! before.\nNB: By default, the -size option takes as argument the number of blocks. For example, -size 2 means 2 blocks of 512 bytes, so its 1024. The c is used to specify exact bytes. Don\u0026rsquo;t ask me why it\u0026rsquo;s c and not b 😅.\nThe property of human-readability is not implemented in find. This is not an issue, previous command returns a single file and it is human readable (we could confirm using file): Extra tip: try to use the following:\nfind inhere/ -size 1033c ! -executable | file You get the same result! The pipe | is a great tool to execute 2+ commands in one line.\nGet your password and continue with bandit7.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit6/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ehuman-readable\u003c/li\u003e\n\u003cli\u003e1033 bytes in size\u003c/li\u003e\n\u003cli\u003enot executable\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThe purpose of the level is showing us how to find for files. Listing contents of \u003cstrong\u003einhere\u003c/strong\u003e, we can see some folders, containing a lot of files inside:\n\u003cimg alt=\"bandit6_0\" loading=\"lazy\" src=\"/images/otw/bandit/bandit6/0.png\"\u003e\u003c/p\u003e","title":"Bandit6"},{"content":"Level description The password for the next level is stored somewhere on the server and has all of the following properties:\nowned by user bandit7 owned by group bandit6 33 bytes in size Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution This is very straightforward to do after completing previous level. Now we need to identify a file owned by user bandit7 and group bandi6. Furthermore, the file is somewhere on the server, which means we have to find in the root directory /.\nfind / -user bandit7 -group bandit6 -size 33c 2\u0026gt;/dev/null NB: I added that strange 2\u0026gt;/dev/null to filter error output. The reason why it works like that is more technical, for now just save this a fast way to filter errors in terminal. We get some errors because looking for files in the whole server may return some unaccesible files, as we don\u0026rsquo;t have root user permissions. We will study Linux permissions in later levels.\nWe should get a single file, containing password for bandit8.\nGet your password and continue with\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit7-copy/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored somewhere on the server and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eowned by user bandit7\u003c/li\u003e\n\u003cli\u003eowned by group bandit6\u003c/li\u003e\n\u003cli\u003e33 bytes in size\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is very straightforward to do after completing previous level. Now we need to identify a file owned by user bandit7 and group bandi6. Furthermore, the file is \u003cstrong\u003esomewhere on the server\u003c/strong\u003e, which means we have to find in the root directory \u003ccode\u003e/\u003c/code\u003e.\u003c/p\u003e","title":"Bandit7"},{"content":"Level description The password for the next level is stored somewhere on the server and has all of the following properties:\nowned by user bandit7 owned by group bandit6 33 bytes in size Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution This is very straightforward to do after completing previous level. Now we need to identify a file owned by user bandit7 and group bandi6. Furthermore, the file is somewhere on the server, which means we have to find in the root directory /.\nfind / -user bandit7 -group bandit6 -size 33c 2\u0026gt;/dev/null NB: I added that strange 2\u0026gt;/dev/null to filter error output. The reason why it works like that is more technical, for now just save this a fast way to filter errors in terminal. We get some errors because looking for files in the whole server may return some unaccesible files, as we don\u0026rsquo;t have root user permissions. We will study Linux permissions in later levels.\nWe should get a single file, containing password for bandit8.\nGet your password and continue with\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit7/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored somewhere on the server and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eowned by user bandit7\u003c/li\u003e\n\u003cli\u003eowned by group bandit6\u003c/li\u003e\n\u003cli\u003e33 bytes in size\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is very straightforward to do after completing previous level. Now we need to identify a file owned by user bandit7 and group bandi6. Furthermore, the file is \u003cstrong\u003esomewhere on the server\u003c/strong\u003e, which means we have to find in the root directory \u003ccode\u003e/\u003c/code\u003e.\u003c/p\u003e","title":"Bandit7"},{"content":"👨‍💻 whoami Hey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\nWhat is this❓​ This blog is basically my thoughts on several hacking topics. Here you’ll see:\nWriteups from CTF challenges, from platforms like HackTheBox or OverTheWire.\nWalkthroughs and notes on pentesting techniques I’m learning or testing.\nSome posts on cryptography — because math can be fun (sometimes).\nRandom topics that freaks like me may (just may) find interesting.\nThe idea is simple: share what I learn, document my journey, and maybe help others who are also diving into the exciting world of ethical hacking.\n📫 Contact Want to say hi, share ideas, or just geek out about hacking? Reach me here:\n📧 Email: mrb0b1073@proton.me 💻​ GitHub: mrb0b173 🟩​ HackTheBox: mrb0b1073 ","permalink":"http://localhost:1313/about/","summary":"\u003ch2 id=\"-whoami\"\u003e👨‍💻 whoami\u003c/h2\u003e\n\u003cp\u003eHey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\u003c/p\u003e\n\u003chr\u003e\n\u003ch2 id=\"what-is-this\"\u003eWhat is this❓​\u003c/h2\u003e\n\u003cp\u003eThis blog is basically my thoughts on several hacking topics. Here you’ll see:\u003c/p\u003e","title":"About"},{"content":"Hey! 👋 I\u0026rsquo;m mrb0b1073 and this is my first post.\nWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\nExcited to start this adventure!\n","permalink":"http://localhost:1313/posts/hello-world/","summary":"\u003cp\u003eHey! 👋 I\u0026rsquo;m \u003cstrong\u003emrb0b1073\u003c/strong\u003e and this is my first post.\u003c/p\u003e\n\u003cp\u003eWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\u003cbr\u003e\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\u003c/p\u003e\n\u003cp\u003eExcited to start this adventure!\u003c/p\u003e","title":"Hello World"},{"content":"Introduction If you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\nIn cybersecurity there are broadly two complementary roles: Blue Team and Red Team. Blue Teams focus on defense, monitoring, incident response, hardening systems and keeping services secure, while Red Teams simulate attackers to find weaknesses and prove what an adversary could do. Ethical hacking aligns closely with Red Team operations, but cybersecurity is highly transversal across IT. There are many specialities or areas, such as cloud security, appsec, pentesting, forensics, governance, risk management, malware analysis, etc. Every topic could deserve its own post, so let\u0026rsquo;s keep it simple and focus on ethical hacking.\nHacker philosophy Let\u0026rsquo;s start with the idea of what is exactly a hacker. A hacker is someone who explores systems to understand how they work, finds creative ways to make or fix things, and solves technical problems. Historically the word describes curiosity, craft, and a drive to improve systems — not criminality. It is important to make the distinction between hacker and cracker, also called cybercriminal. A hacker explores, builds, discloses responsibly and works to improve security. They work in authorized environments or labs. On the other hand, a cracker breaks into systems for theft, vandalism or other illicit gain.\nHere you can find the most popularized ideas often summarized as the hacker ethic:\nCuriosity first: Learn by exploring and tinkering. Freedom of information: All knowledge should be shared to help progress. This fits properly with the idea of open source. Mistrust of needless authority: Centralized control sometimes blocks innovation. It is always good to question anything, specially common assumptions. Meritocracy: Skills, craft and results matter more than titles. Craftsmanship \u0026amp; elegance: Technical beauty matters. Build clean, clever and efficient solutions. Responsability \u0026amp; ethics: Use your skills to build, fix, educate and defend, not to harm. Core fundamentals Assuming you want to init yourself in hacking, you should first build competence across three basic pillars.\nOperating Systems You should learn as much as possible about Linux and Windows. Specially Linux, all the tools you will be using are meant to be used in a Linux environment. Skill with shell is required, learn basic commands and how to interact with the OS using the terminal. Research about processes, file permissions, package management and logs. A large proportion of web servers around the world run on Linux, although Windows is also widely used. Windows knowledge is really valuable too, considering active directory is strongly used in corporate environments.\nNetworking You have to understand how computers communicate each other. Understand basic networking concepts, IP adresses, subnetting, proxies, find out how internet works. Study some protocols such as TCP/IP, HTTP, DNS or SSH. This could sound confusing for beginners, but this step is not optional! Study different client/server models and how services expose attack surfaces.\nProgramming \u0026amp; scripting Is this completely required? Maybe not for complete beginners. Does it help? Absolutely yes. Understanding how web apps or any type of application works makes things much easier. You can imagine different entry points to exploit if you understand how systems are designed. Also writing scripts in bash or python makes you more productive through automation.\nEthical Hacking foundations Once you feel confident with these 3 pillars, you can go to the next step. You can study about different topics and areas. For example, binary exploiting, web pentesting, mobile pentesting, wireless hacking, etc. You should start picking a focus, in this post we focus on web pentesting, as it is beginner friendly. Also web applications are the bread and butter in companies nowadays.\nKey concepts to study:\nCIA Triad: CIA refers to Confidentiality, Integrity and Availability. These three concepts are key in information security, and describe properties we want to ensure in our systems and information. Web Security basics, OWASP: Study the OWASP Top 10, which summarizes most frequent web security risks. Authentication and session control: Understand the concepts of Authentication and Authorization, research about how session is handled in web apps, cookies, JWT tokens, etc. Input validation \u0026amp; injection attacks: Learn about SQL Injection, Cross-Site Scripting (XSS), Code Injection, SSTI, and every injection type. Secure development lifecycle: Find out how to implement security controls in code. This can be more related to Blue Team, but as Red Teamer it is important to understand. Firewall evasion: What a firewall is and some techniques/methods to bypass. Some cryptography: Understand what a chiper and a hash are, how information is encrypted to prevent access from 3rd parties. Focusing on web, read about TLS protocol. There are many more topics you can research and learn, but this could be a nice starting point.\nTools and platforms to learn Now you have an idea of what to study, let\u0026rsquo;s see how to start in practical terms.\nSome platforms I personally recommend:\nOverTheWire: Here you can find some CTFs (Capture The Flag) which are fun to play and also really instructive. Bandit games are a must for complete beginners, as you will explore some linux and bash concepts which are basic to continue. The games are leveled by difficulty, in their web you can get all the information about how to play, only a terminal and SSH is required. This helps building your foundation in Linux OS. HackTheBox: Nº 1 platform in cybersecurity. Has a lot of resources to learn all this core fundamentals, and also red team / blue team security topics. It is focused on labs where you can test your skills hacking different boxes but if you really want to learn it is worth to invest time and money in the academy. I have to say the level here is high, specially if you try to hack machines on your own without using some guide or writeup. TryHackMe: More beginner friendly than hackthebox, it provides a lot of guided learning resources. PortSwigger Labs: Practical labs about specific topics, focused on web hacking. They are great to learn and understand different types of attacks, injections, and security misconfigurations. I would recommend digging into this once you have the theoretical basis about these concepts. I have to mention a few tools I am sure you\u0026rsquo;d end up using:\nNmap: This is probably the most famous tool in hacking, allowing you to gather information about ports and services running in a machine. Burpsuite: A proxy tool widely used in web application security testing. It basically allows you to intercept and modify web requests, which can be used to perform several types of attacks. Metasploit: The most used pentesting framework. Contains a large amount of scripts and exploits ready to run. Another crucial step here is to set up your virtual lab environment to test vulnerable applications. To achieve this goal, there are some Linux distributions like Kali, Parrot or BlackArch, but that\u0026rsquo;s a topic for another post.\nFinal thoughs To sum up, this would be my personal roadmap:\nLearn the fundamentals, specially Linux and networking. Install some Linux in a virtual machine, play with it, get comfortable with the terminal. You can start with bandit wargames in OverTheWire. Complete every level and make sure to understand everything as clear as possible. Move to guided boxes on HackTheBox. I recommend you joining their Discord, ask questions, community is great there! Take notes, repeat, learn, improve your skills. Maybe use your own lab environment, create your own vulnerable apps. Hacking is a mixing of curiosity, study and practice. Being passionate and motivated about it is really helpful and will definitely speed up the process. The path is long and really challenging, so keep it going!\n\u0026ldquo;Yes, I am a criminal. My crime is that of curiosity.\u0026rdquo; — The Mentor (Loyd Blankenship) at The Hacker Manifesto\n","permalink":"http://localhost:1313/posts/starting-point/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIf you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\u003c/p\u003e","title":"Starting Point"},{"content":"Introduction In this post series we are going to solve every level from bandit in OverTheWire This guide pretends to be a writeup containing the solutions of the level, designed for beginners.\nTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing WSL, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\nEvery section will contain the solution as well as some tips for people who is absolutely beginner.\nTips First of all, some tips:\nDo not use this as first resource to solve the levels. Try on your own, make mistakes and learn from them. Only check the solution as last resource or if you are completely new and you have absolutely no idea about what to do next. Take notes from your learning. Write up commands, tips and everything which can be useful in the future. Make sure to understand everything. Is a good idea to note the passwords for every level. If you want to continue letter, you can simply log in in the desired level. It is annoying to repeat everything! Follow the tips and information provided at OverTheWire website. Levels Here is my solution for every level:\nBandit0 Bandit1 Bandit2 Bandit3 Bandit4 Bandit5 Bandit6 Bandit7 ","permalink":"http://localhost:1313/posts/otw/bandit/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIn this post series we are going to solve every level from bandit in \u003ca href=\"https://overthewire.org/wargames/bandit/\"\u003e\u003cem\u003eOverTheWire\u003c/em\u003e\u003c/a\u003e\nThis guide pretends to be a writeup containing the solutions of the level, designed for beginners.\u003c/p\u003e\n\u003cp\u003eTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing \u003ca href=\"https://learn.microsoft.com/en-us/windows/wsl/install\"\u003eWSL\u003c/a\u003e, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\u003c/p\u003e","title":"Bandit"},{"content":"Level description The goal of this level is for you to log into the game using SSH. The host to which you need to connect is bandit.labs.overthewire.org, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\nTips for beginners Read a bit about what SSH is. Research about what a port is. Solution This is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go here.\nAt Linux, we can use ssh client to connect to the server. It should be installed by default on your system. If not, please first research about how to install. Once you have the SSH client installed, you can log in into the first level as follows:\nssh bandit0@bandit.labs.overthewire.org -p 2220 Syntax is simple: ssh \u0026lt;username\u0026gt;@\u0026lt;hostname\u0026gt; -p \u0026lt;port\u0026gt;. Usually SSH runs on port 22 by default, but they changed to port 2220 so we must specify it in the command.\nOnce you try to log in, you will see something like this: NB: If it\u0026rsquo;s the first time you try to log in, you will be asked about the authenticity of the host. Just type yes.\nType the password bandit0 and press enter. Now you are inside bandit server, ready to begin with bandit1!\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit0/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe goal of this level is for you to log into the game using SSH. The host to which you need to connect is \u003cstrong\u003ebandit.labs.overthewire.org\u003c/strong\u003e, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eRead a bit about what SSH is.\u003c/li\u003e\n\u003cli\u003eResearch about what a port is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go \u003ca href=\"https://en.wikipedia.org/wiki/Secure_Shell\"\u003ehere\u003c/a\u003e.\u003c/p\u003e","title":"Bandit0"},{"content":"Level description The password for the next level is stored in a file called readme located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\nTips for beginners Learn about home directory in Linux. Learn to use cat and ls commands. Solution First step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\nls This shows in terminal the files at the current directory. There you will see the readme file.\nNow we can to check the contents, so let\u0026rsquo;s use cat:\ncat readme To read a file, we use cat \u0026lt;filename\u0026gt;.\nNB: Not every file is human readable in Linux. We deep more about this in later levels.\nThe content of the readme file reveals the password for bandit2 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit1/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u003cstrong\u003ereadme\u003c/strong\u003e located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn about home directory in Linux.\u003c/li\u003e\n\u003cli\u003eLearn to use \u003ccode\u003ecat\u003c/code\u003e and \u003ccode\u003els\u003c/code\u003e commands.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eFirst step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\u003c/p\u003e","title":"Bandit1"},{"content":"Level description The password for the next level is stored in a file called - located in the home directory\nTips for beginners Try to understand why previous solution is not working as you expect. Solution You may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our cat command: The terminal is waiting for something else. This happens due to character - is used to pass arguments to our commands, and the linux shell is interpreting that. To prevent that, we could use:\ncat ./- NB: Dot . is used to refer current directory. The slash / is used at the end of directory name.\nWe get the password for bandit3 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit2/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called - located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eTry to understand why previous solution is not working as you expect.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eYou may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our \u003ccode\u003ecat\u003c/code\u003e command:\n\u003cimg alt=\"bandit2\" loading=\"lazy\" src=\"/images/otw/bandit/bandit2/0.png\"\u003e\u003c/p\u003e\n\u003cp\u003eThe terminal is \u003cem\u003ewaiting\u003c/em\u003e for something else. This happens due to character \u003ccode\u003e-\u003c/code\u003e is used to pass arguments to our commands, and the linux shell is interpreting that.\nTo prevent that, we could use:\u003c/p\u003e","title":"Bandit2"},{"content":"Level description The password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\nTips for beginners Think about how to escape the whitespaces. Solution After login in the machine as bandit3, we can see the filename \u0026ndash;spaces in this filename\u0026ndash;.\nNow we have 2 problems:\nSame as previous level, filename starts with --, so it will be interpreted as an argument. Address this problem using ./. Filename contains whitespaces. This is an issue, as bash interpretes whitespaces to separate commands. To solve the second problem, we must escape the whitespace character in some way. Here is the solution:\ncat ./--spaces\\ in\\ this\\ filename-- NB: Little trick, you can start writting filename and press Tab to autocomplete the name. The \\ is going to be inserted automatically.\nJust using the \\ we can escape the whitespace.\nNow we can continue with the bandit4 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit3/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eThink about how to \u003cem\u003eescape\u003c/em\u003e the whitespaces.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAfter login in the machine as bandit3, we can see the filename \u003cem\u003e\u0026ndash;spaces in this filename\u0026ndash;\u003c/em\u003e.\u003c/p\u003e\n\u003cp\u003eNow we have 2 problems:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eSame as previous level, filename starts with \u003ccode\u003e--\u003c/code\u003e, so it will be interpreted as an argument. Address this problem using \u003ccode\u003e./\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003eFilename contains \u003cstrong\u003ewhitespaces\u003c/strong\u003e. This is an issue, as bash interpretes whitespaces to separate commands.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eTo solve the second problem, we must escape the whitespace character in some way. Here is the solution:\u003c/p\u003e","title":"Bandit3"},{"content":"Level description The password for the next level is stored in a hidden file in the inhere directory.\nTips for beginners Learn how to navigate directories in Linux. First understand what a hidden file is. Solution Listing directory files inside bandit4\u0026rsquo;s home directory, show directory inhere.\nNB: How to distinguish files and directories in Linux? Use ls -l and see the difference.\nWe have 2 options now:\nMove to inhere directory and check contens again. Check contents directly. Moving to another directory can be done using cd \u0026lt;dirName\u0026gt;. If you prefer to check directory contents directly, use ls \u0026lt;dirName\u0026gt;.\nAfter checking inhere contents via ls, we see nothing. The reason is the file is a hidden file. A hidden file in Linux is everyfile whose name starts with dot .. Hidden files are not shown by default with ls command, so we must add a special flag -a to list all files: NB: Both flags -l and -a cna be combined into a single flag -al, which is shorter to type.\nAs you can see, filename is \u0026hellip;Hidding-From-You starting with three dots. Reading file contents should be easy at this point!\nNext level is bandit5.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit4/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a hidden file in the inhere directory.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to navigate directories in Linux.\u003c/li\u003e\n\u003cli\u003eFirst understand what a hidden file is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eListing directory files inside bandit4\u0026rsquo;s home directory, show directory \u003cstrong\u003einhere\u003c/strong\u003e.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e How to distinguish files and directories in Linux? Use \u003ccode\u003els -l\u003c/code\u003e and see the difference.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eWe have 2 options now:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eMove to inhere directory and check contens again.\u003c/li\u003e\n\u003cli\u003eCheck contents directly.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eMoving to another directory can be done using \u003ccode\u003ecd \u0026lt;dirName\u0026gt;\u003c/code\u003e. If you prefer to check directory contents directly, use \u003ccode\u003els \u0026lt;dirName\u0026gt;\u003c/code\u003e.\u003c/p\u003e","title":"Bandit4"},{"content":"Level description The password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\nTips for beginners What means human-readable file? Is there any way to check filetype at Linux?. Solution Checking inhere\u0026rsquo;s contents shows some files names \u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII here\nSo now, our goal is checking if file content of every file in the folder is ASCII or not. file \u0026lt;filename\u0026gt; does the job. Note the use of *. That called a wildcard regular expression, we\u0026rsquo;ll deep into it in later levels. An easy approach could be checking every file separately:\nfile ./--file00 file ./--file01 ... file ./--file09 But that\u0026rsquo;s not funny, imagine we have 100 files to check. All the files are in the same directory, so we can use cat ./* where ./* matches every filename in the directory, applying file to every file.\nNB: Another approach is to use find with certaing flags. Try to do in different ways, don\u0026rsquo;t stick to my solution.\nThe file \u0026ndash;file00 content is not readable, so get password from \u0026ndash;file07 and continue with bandit6.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit5/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eWhat means human-readable file?\u003c/li\u003e\n\u003cli\u003eIs there any way to check filetype at Linux?.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eChecking inhere\u0026rsquo;s contents shows some files names \u003cstrong\u003e\u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09\u003c/strong\u003e. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII \u003ca href=\"https://en.wikipedia.org/wiki/ASCII\"\u003ehere\u003c/a\u003e\u003c/p\u003e","title":"Bandit5"},{"content":"Level description The password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\nhuman-readable 1033 bytes in size not executable Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution The purpose of the level is showing us how to find for files. Listing contents of inhere, we can see some folders, containing a lot of files inside: NB: Adding -R to ls shows recursively the content of every folder inside the directory listed.\nSo this time, checking every file is not an option. We need to find a file with some properties, specific size, not excutable and human-readable. Let\u0026rsquo;s explain the command we\u0026rsquo;re using:\nfind inhere/ -size 1033c ! -executable First, we specify the directory, in this case inhere. The option -size 1033c returns files of 1033 bytes. Then, with -executable we would get executable files, but we want not executable files, that\u0026rsquo;s why we are adding ! before.\nNB: By default, the -size option takes as argument the number of blocks. For example, -size 2 means 2 blocks of 512 bytes, so its 1024. The c is used to specify exact bytes. Don\u0026rsquo;t ask me why it\u0026rsquo;s c and not b 😅.\nThe property of human-readability is not implemented in find. This is not an issue, previous command returns a single file and it is human readable (we could confirm using file): Extra tip: try to use the following:\nfind inhere/ -size 1033c ! -executable | file You get the same result! The pipe | is a great tool to execute 2+ commands in one line.\nGet your password and continue with bandit7.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit6/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ehuman-readable\u003c/li\u003e\n\u003cli\u003e1033 bytes in size\u003c/li\u003e\n\u003cli\u003enot executable\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThe purpose of the level is showing us how to find for files. Listing contents of \u003cstrong\u003einhere\u003c/strong\u003e, we can see some folders, containing a lot of files inside:\n\u003cimg alt=\"bandit6_0\" loading=\"lazy\" src=\"/images/otw/bandit/bandit6/0.png\"\u003e\u003c/p\u003e","title":"Bandit6"},{"content":"Level description The password for the next level is stored somewhere on the server and has all of the following properties:\nowned by user bandit7 owned by group bandit6 33 bytes in size Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution This is very straightforward to do after completing previous level. Now we need to identify a file owned by user bandit7 and group bandi6. Furthermore, the file is somewhere on the server, which means we have to find in the root directory /.\nfind / -user bandit7 -group bandit6 -size 33c 2\u0026gt;/dev/null NB: I added that strange 2\u0026gt;/dev/null to filter error output. The reason why it works like that is more technical, for now just save this a fast way to filter errors in terminal. We get some errors because looking for files in the whole server may return some unaccesible files, as we don\u0026rsquo;t have root user permissions. We will study Linux permissions in later levels.\nWe should get a single file, containing password for bandit8.\nGet your password and continue with\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit7/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored somewhere on the server and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eowned by user bandit7\u003c/li\u003e\n\u003cli\u003eowned by group bandit6\u003c/li\u003e\n\u003cli\u003e33 bytes in size\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is very straightforward to do after completing previous level. Now we need to identify a file owned by user bandit7 and group bandi6. Furthermore, the file is \u003cstrong\u003esomewhere on the server\u003c/strong\u003e, which means we have to find in the root directory \u003ccode\u003e/\u003c/code\u003e.\u003c/p\u003e","title":"Bandit7"},{"content":"Level description The password for the next level is stored somewhere on the server and has all of the following properties:\nowned by user bandit7 owned by group bandit6 33 bytes in size Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution This is very straightforward to do after completing previous level. Now we need to identify a file owned by user bandit7 and group bandi6. Furthermore, the file is somewhere on the server, which means we have to find in the root directory /.\nfind / -user bandit7 -group bandit6 -size 33c 2\u0026gt;/dev/null NB: I added that strange 2\u0026gt;/dev/null to filter error output. The reason why it works like that is more technical, for now just save this a fast way to filter errors in terminal. We get some errors because looking for files in the whole server may return some unaccesible files, as we don\u0026rsquo;t have root user permissions. We will study Linux permissions in later levels.\nWe should get a single file, containing password for bandit8.\nGet your password and continue with\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit8/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored somewhere on the server and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eowned by user bandit7\u003c/li\u003e\n\u003cli\u003eowned by group bandit6\u003c/li\u003e\n\u003cli\u003e33 bytes in size\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is very straightforward to do after completing previous level. Now we need to identify a file owned by user bandit7 and group bandi6. Furthermore, the file is \u003cstrong\u003esomewhere on the server\u003c/strong\u003e, which means we have to find in the root directory \u003ccode\u003e/\u003c/code\u003e.\u003c/p\u003e","title":"Bandit7"},{"content":"👨‍💻 whoami Hey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\nWhat is this❓​ This blog is basically my thoughts on several hacking topics. Here you’ll see:\nWriteups from CTF challenges, from platforms like HackTheBox or OverTheWire.\nWalkthroughs and notes on pentesting techniques I’m learning or testing.\nSome posts on cryptography — because math can be fun (sometimes).\nRandom topics that freaks like me may (just may) find interesting.\nThe idea is simple: share what I learn, document my journey, and maybe help others who are also diving into the exciting world of ethical hacking.\n📫 Contact Want to say hi, share ideas, or just geek out about hacking? Reach me here:\n📧 Email: mrb0b1073@proton.me 💻​ GitHub: mrb0b173 🟩​ HackTheBox: mrb0b1073 ","permalink":"http://localhost:1313/about/","summary":"\u003ch2 id=\"-whoami\"\u003e👨‍💻 whoami\u003c/h2\u003e\n\u003cp\u003eHey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\u003c/p\u003e\n\u003chr\u003e\n\u003ch2 id=\"what-is-this\"\u003eWhat is this❓​\u003c/h2\u003e\n\u003cp\u003eThis blog is basically my thoughts on several hacking topics. Here you’ll see:\u003c/p\u003e","title":"About"},{"content":"Hey! 👋 I\u0026rsquo;m mrb0b1073 and this is my first post.\nWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\nExcited to start this adventure!\n","permalink":"http://localhost:1313/posts/hello-world/","summary":"\u003cp\u003eHey! 👋 I\u0026rsquo;m \u003cstrong\u003emrb0b1073\u003c/strong\u003e and this is my first post.\u003c/p\u003e\n\u003cp\u003eWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\u003cbr\u003e\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\u003c/p\u003e\n\u003cp\u003eExcited to start this adventure!\u003c/p\u003e","title":"Hello World"},{"content":"Introduction If you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\nIn cybersecurity there are broadly two complementary roles: Blue Team and Red Team. Blue Teams focus on defense, monitoring, incident response, hardening systems and keeping services secure, while Red Teams simulate attackers to find weaknesses and prove what an adversary could do. Ethical hacking aligns closely with Red Team operations, but cybersecurity is highly transversal across IT. There are many specialities or areas, such as cloud security, appsec, pentesting, forensics, governance, risk management, malware analysis, etc. Every topic could deserve its own post, so let\u0026rsquo;s keep it simple and focus on ethical hacking.\nHacker philosophy Let\u0026rsquo;s start with the idea of what is exactly a hacker. A hacker is someone who explores systems to understand how they work, finds creative ways to make or fix things, and solves technical problems. Historically the word describes curiosity, craft, and a drive to improve systems — not criminality. It is important to make the distinction between hacker and cracker, also called cybercriminal. A hacker explores, builds, discloses responsibly and works to improve security. They work in authorized environments or labs. On the other hand, a cracker breaks into systems for theft, vandalism or other illicit gain.\nHere you can find the most popularized ideas often summarized as the hacker ethic:\nCuriosity first: Learn by exploring and tinkering. Freedom of information: All knowledge should be shared to help progress. This fits properly with the idea of open source. Mistrust of needless authority: Centralized control sometimes blocks innovation. It is always good to question anything, specially common assumptions. Meritocracy: Skills, craft and results matter more than titles. Craftsmanship \u0026amp; elegance: Technical beauty matters. Build clean, clever and efficient solutions. Responsability \u0026amp; ethics: Use your skills to build, fix, educate and defend, not to harm. Core fundamentals Assuming you want to init yourself in hacking, you should first build competence across three basic pillars.\nOperating Systems You should learn as much as possible about Linux and Windows. Specially Linux, all the tools you will be using are meant to be used in a Linux environment. Skill with shell is required, learn basic commands and how to interact with the OS using the terminal. Research about processes, file permissions, package management and logs. A large proportion of web servers around the world run on Linux, although Windows is also widely used. Windows knowledge is really valuable too, considering active directory is strongly used in corporate environments.\nNetworking You have to understand how computers communicate each other. Understand basic networking concepts, IP adresses, subnetting, proxies, find out how internet works. Study some protocols such as TCP/IP, HTTP, DNS or SSH. This could sound confusing for beginners, but this step is not optional! Study different client/server models and how services expose attack surfaces.\nProgramming \u0026amp; scripting Is this completely required? Maybe not for complete beginners. Does it help? Absolutely yes. Understanding how web apps or any type of application works makes things much easier. You can imagine different entry points to exploit if you understand how systems are designed. Also writing scripts in bash or python makes you more productive through automation.\nEthical Hacking foundations Once you feel confident with these 3 pillars, you can go to the next step. You can study about different topics and areas. For example, binary exploiting, web pentesting, mobile pentesting, wireless hacking, etc. You should start picking a focus, in this post we focus on web pentesting, as it is beginner friendly. Also web applications are the bread and butter in companies nowadays.\nKey concepts to study:\nCIA Triad: CIA refers to Confidentiality, Integrity and Availability. These three concepts are key in information security, and describe properties we want to ensure in our systems and information. Web Security basics, OWASP: Study the OWASP Top 10, which summarizes most frequent web security risks. Authentication and session control: Understand the concepts of Authentication and Authorization, research about how session is handled in web apps, cookies, JWT tokens, etc. Input validation \u0026amp; injection attacks: Learn about SQL Injection, Cross-Site Scripting (XSS), Code Injection, SSTI, and every injection type. Secure development lifecycle: Find out how to implement security controls in code. This can be more related to Blue Team, but as Red Teamer it is important to understand. Firewall evasion: What a firewall is and some techniques/methods to bypass. Some cryptography: Understand what a chiper and a hash are, how information is encrypted to prevent access from 3rd parties. Focusing on web, read about TLS protocol. There are many more topics you can research and learn, but this could be a nice starting point.\nTools and platforms to learn Now you have an idea of what to study, let\u0026rsquo;s see how to start in practical terms.\nSome platforms I personally recommend:\nOverTheWire: Here you can find some CTFs (Capture The Flag) which are fun to play and also really instructive. Bandit games are a must for complete beginners, as you will explore some linux and bash concepts which are basic to continue. The games are leveled by difficulty, in their web you can get all the information about how to play, only a terminal and SSH is required. This helps building your foundation in Linux OS. HackTheBox: Nº 1 platform in cybersecurity. Has a lot of resources to learn all this core fundamentals, and also red team / blue team security topics. It is focused on labs where you can test your skills hacking different boxes but if you really want to learn it is worth to invest time and money in the academy. I have to say the level here is high, specially if you try to hack machines on your own without using some guide or writeup. TryHackMe: More beginner friendly than hackthebox, it provides a lot of guided learning resources. PortSwigger Labs: Practical labs about specific topics, focused on web hacking. They are great to learn and understand different types of attacks, injections, and security misconfigurations. I would recommend digging into this once you have the theoretical basis about these concepts. I have to mention a few tools I am sure you\u0026rsquo;d end up using:\nNmap: This is probably the most famous tool in hacking, allowing you to gather information about ports and services running in a machine. Burpsuite: A proxy tool widely used in web application security testing. It basically allows you to intercept and modify web requests, which can be used to perform several types of attacks. Metasploit: The most used pentesting framework. Contains a large amount of scripts and exploits ready to run. Another crucial step here is to set up your virtual lab environment to test vulnerable applications. To achieve this goal, there are some Linux distributions like Kali, Parrot or BlackArch, but that\u0026rsquo;s a topic for another post.\nFinal thoughs To sum up, this would be my personal roadmap:\nLearn the fundamentals, specially Linux and networking. Install some Linux in a virtual machine, play with it, get comfortable with the terminal. You can start with bandit wargames in OverTheWire. Complete every level and make sure to understand everything as clear as possible. Move to guided boxes on HackTheBox. I recommend you joining their Discord, ask questions, community is great there! Take notes, repeat, learn, improve your skills. Maybe use your own lab environment, create your own vulnerable apps. Hacking is a mixing of curiosity, study and practice. Being passionate and motivated about it is really helpful and will definitely speed up the process. The path is long and really challenging, so keep it going!\n\u0026ldquo;Yes, I am a criminal. My crime is that of curiosity.\u0026rdquo; — The Mentor (Loyd Blankenship) at The Hacker Manifesto\n","permalink":"http://localhost:1313/posts/starting-point/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIf you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\u003c/p\u003e","title":"Starting Point"},{"content":"Introduction In this post series we are going to solve every level from bandit in OverTheWire This guide pretends to be a writeup containing the solutions of the level, designed for beginners.\nTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing WSL, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\nEvery section will contain the solution as well as some tips for people who is absolutely beginner.\nTips First of all, some tips:\nDo not use this as first resource to solve the levels. Try on your own, make mistakes and learn from them. Only check the solution as last resource or if you are completely new and you have absolutely no idea about what to do next. Take notes from your learning. Write up commands, tips and everything which can be useful in the future. Make sure to understand everything. Is a good idea to note the passwords for every level. If you want to continue letter, you can simply log in in the desired level. It is annoying to repeat everything! Follow the tips and information provided at OverTheWire website. Levels Here is my solution for every level:\nBandit0 Bandit1 Bandit2 Bandit3 Bandit4 Bandit5 Bandit6 Bandit7 ","permalink":"http://localhost:1313/posts/otw/bandit/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIn this post series we are going to solve every level from bandit in \u003ca href=\"https://overthewire.org/wargames/bandit/\"\u003e\u003cem\u003eOverTheWire\u003c/em\u003e\u003c/a\u003e\nThis guide pretends to be a writeup containing the solutions of the level, designed for beginners.\u003c/p\u003e\n\u003cp\u003eTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing \u003ca href=\"https://learn.microsoft.com/en-us/windows/wsl/install\"\u003eWSL\u003c/a\u003e, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\u003c/p\u003e","title":"Bandit"},{"content":"Level description The goal of this level is for you to log into the game using SSH. The host to which you need to connect is bandit.labs.overthewire.org, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\nTips for beginners Read a bit about what SSH is. Research about what a port is. Solution This is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go here.\nAt Linux, we can use ssh client to connect to the server. It should be installed by default on your system. If not, please first research about how to install. Once you have the SSH client installed, you can log in into the first level as follows:\nssh bandit0@bandit.labs.overthewire.org -p 2220 Syntax is simple: ssh \u0026lt;username\u0026gt;@\u0026lt;hostname\u0026gt; -p \u0026lt;port\u0026gt;. Usually SSH runs on port 22 by default, but they changed to port 2220 so we must specify it in the command.\nOnce you try to log in, you will see something like this: NB: If it\u0026rsquo;s the first time you try to log in, you will be asked about the authenticity of the host. Just type yes.\nType the password bandit0 and press enter. Now you are inside bandit server, ready to begin with bandit1!\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit0/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe goal of this level is for you to log into the game using SSH. The host to which you need to connect is \u003cstrong\u003ebandit.labs.overthewire.org\u003c/strong\u003e, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eRead a bit about what SSH is.\u003c/li\u003e\n\u003cli\u003eResearch about what a port is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go \u003ca href=\"https://en.wikipedia.org/wiki/Secure_Shell\"\u003ehere\u003c/a\u003e.\u003c/p\u003e","title":"Bandit0"},{"content":"Level description The password for the next level is stored in a file called readme located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\nTips for beginners Learn about home directory in Linux. Learn to use cat and ls commands. Solution First step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\nls This shows in terminal the files at the current directory. There you will see the readme file.\nNow we can to check the contents, so let\u0026rsquo;s use cat:\ncat readme To read a file, we use cat \u0026lt;filename\u0026gt;.\nNB: Not every file is human readable in Linux. We deep more about this in later levels.\nThe content of the readme file reveals the password for bandit2 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit1/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u003cstrong\u003ereadme\u003c/strong\u003e located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn about home directory in Linux.\u003c/li\u003e\n\u003cli\u003eLearn to use \u003ccode\u003ecat\u003c/code\u003e and \u003ccode\u003els\u003c/code\u003e commands.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eFirst step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\u003c/p\u003e","title":"Bandit1"},{"content":"Level description The password for the next level is stored in a file called - located in the home directory\nTips for beginners Try to understand why previous solution is not working as you expect. Solution You may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our cat command: The terminal is waiting for something else. This happens due to character - is used to pass arguments to our commands, and the linux shell is interpreting that. To prevent that, we could use:\ncat ./- NB: Dot . is used to refer current directory. The slash / is used at the end of directory name.\nWe get the password for bandit3 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit2/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called - located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eTry to understand why previous solution is not working as you expect.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eYou may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our \u003ccode\u003ecat\u003c/code\u003e command:\n\u003cimg alt=\"bandit2\" loading=\"lazy\" src=\"/images/otw/bandit/bandit2/0.png\"\u003e\u003c/p\u003e\n\u003cp\u003eThe terminal is \u003cem\u003ewaiting\u003c/em\u003e for something else. This happens due to character \u003ccode\u003e-\u003c/code\u003e is used to pass arguments to our commands, and the linux shell is interpreting that.\nTo prevent that, we could use:\u003c/p\u003e","title":"Bandit2"},{"content":"Level description The password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\nTips for beginners Think about how to escape the whitespaces. Solution After login in the machine as bandit3, we can see the filename \u0026ndash;spaces in this filename\u0026ndash;.\nNow we have 2 problems:\nSame as previous level, filename starts with --, so it will be interpreted as an argument. Address this problem using ./. Filename contains whitespaces. This is an issue, as bash interpretes whitespaces to separate commands. To solve the second problem, we must escape the whitespace character in some way. Here is the solution:\ncat ./--spaces\\ in\\ this\\ filename-- NB: Little trick, you can start writting filename and press Tab to autocomplete the name. The \\ is going to be inserted automatically.\nJust using the \\ we can escape the whitespace.\nNow we can continue with the bandit4 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit3/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eThink about how to \u003cem\u003eescape\u003c/em\u003e the whitespaces.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAfter login in the machine as bandit3, we can see the filename \u003cem\u003e\u0026ndash;spaces in this filename\u0026ndash;\u003c/em\u003e.\u003c/p\u003e\n\u003cp\u003eNow we have 2 problems:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eSame as previous level, filename starts with \u003ccode\u003e--\u003c/code\u003e, so it will be interpreted as an argument. Address this problem using \u003ccode\u003e./\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003eFilename contains \u003cstrong\u003ewhitespaces\u003c/strong\u003e. This is an issue, as bash interpretes whitespaces to separate commands.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eTo solve the second problem, we must escape the whitespace character in some way. Here is the solution:\u003c/p\u003e","title":"Bandit3"},{"content":"Level description The password for the next level is stored in a hidden file in the inhere directory.\nTips for beginners Learn how to navigate directories in Linux. First understand what a hidden file is. Solution Listing directory files inside bandit4\u0026rsquo;s home directory, show directory inhere.\nNB: How to distinguish files and directories in Linux? Use ls -l and see the difference.\nWe have 2 options now:\nMove to inhere directory and check contens again. Check contents directly. Moving to another directory can be done using cd \u0026lt;dirName\u0026gt;. If you prefer to check directory contents directly, use ls \u0026lt;dirName\u0026gt;.\nAfter checking inhere contents via ls, we see nothing. The reason is the file is a hidden file. A hidden file in Linux is everyfile whose name starts with dot .. Hidden files are not shown by default with ls command, so we must add a special flag -a to list all files: NB: Both flags -l and -a cna be combined into a single flag -al, which is shorter to type.\nAs you can see, filename is \u0026hellip;Hidding-From-You starting with three dots. Reading file contents should be easy at this point!\nNext level is bandit5.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit4/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a hidden file in the inhere directory.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to navigate directories in Linux.\u003c/li\u003e\n\u003cli\u003eFirst understand what a hidden file is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eListing directory files inside bandit4\u0026rsquo;s home directory, show directory \u003cstrong\u003einhere\u003c/strong\u003e.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e How to distinguish files and directories in Linux? Use \u003ccode\u003els -l\u003c/code\u003e and see the difference.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eWe have 2 options now:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eMove to inhere directory and check contens again.\u003c/li\u003e\n\u003cli\u003eCheck contents directly.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eMoving to another directory can be done using \u003ccode\u003ecd \u0026lt;dirName\u0026gt;\u003c/code\u003e. If you prefer to check directory contents directly, use \u003ccode\u003els \u0026lt;dirName\u0026gt;\u003c/code\u003e.\u003c/p\u003e","title":"Bandit4"},{"content":"Level description The password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\nTips for beginners What means human-readable file? Is there any way to check filetype at Linux?. Solution Checking inhere\u0026rsquo;s contents shows some files names \u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII here\nSo now, our goal is checking if file content of every file in the folder is ASCII or not. file \u0026lt;filename\u0026gt; does the job. Note the use of *. That called a wildcard regular expression, we\u0026rsquo;ll deep into it in later levels. An easy approach could be checking every file separately:\nfile ./--file00 file ./--file01 ... file ./--file09 But that\u0026rsquo;s not funny, imagine we have 100 files to check. All the files are in the same directory, so we can use cat ./* where ./* matches every filename in the directory, applying file to every file.\nNB: Another approach is to use find with certaing flags. Try to do in different ways, don\u0026rsquo;t stick to my solution.\nThe file \u0026ndash;file00 content is not readable, so get password from \u0026ndash;file07 and continue with bandit6.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit5/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eWhat means human-readable file?\u003c/li\u003e\n\u003cli\u003eIs there any way to check filetype at Linux?.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eChecking inhere\u0026rsquo;s contents shows some files names \u003cstrong\u003e\u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09\u003c/strong\u003e. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII \u003ca href=\"https://en.wikipedia.org/wiki/ASCII\"\u003ehere\u003c/a\u003e\u003c/p\u003e","title":"Bandit5"},{"content":"Level description The password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\nhuman-readable 1033 bytes in size not executable Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution The purpose of the level is showing us how to find for files. Listing contents of inhere, we can see some folders, containing a lot of files inside: NB: Adding -R to ls shows recursively the content of every folder inside the directory listed.\nSo this time, checking every file is not an option. We need to find a file with some properties, specific size, not excutable and human-readable. Let\u0026rsquo;s explain the command we\u0026rsquo;re using:\nfind inhere/ -size 1033c ! -executable First, we specify the directory, in this case inhere. The option -size 1033c returns files of 1033 bytes. Then, with -executable we would get executable files, but we want not executable files, that\u0026rsquo;s why we are adding ! before.\nNB: By default, the -size option takes as argument the number of blocks. For example, -size 2 means 2 blocks of 512 bytes, so its 1024. The c is used to specify exact bytes. Don\u0026rsquo;t ask me why it\u0026rsquo;s c and not b 😅.\nThe property of human-readability is not implemented in find. This is not an issue, previous command returns a single file and it is human readable (we could confirm using file): Extra tip: try to use the following:\nfind inhere/ -size 1033c ! -executable | file You get the same result! The pipe | is a great tool to execute 2+ commands in one line.\nGet your password and continue with bandit7.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit6/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ehuman-readable\u003c/li\u003e\n\u003cli\u003e1033 bytes in size\u003c/li\u003e\n\u003cli\u003enot executable\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThe purpose of the level is showing us how to find for files. Listing contents of \u003cstrong\u003einhere\u003c/strong\u003e, we can see some folders, containing a lot of files inside:\n\u003cimg alt=\"bandit6_0\" loading=\"lazy\" src=\"/images/otw/bandit/bandit6/0.png\"\u003e\u003c/p\u003e","title":"Bandit6"},{"content":"Level description The password for the next level is stored somewhere on the server and has all of the following properties:\nowned by user bandit7 owned by group bandit6 33 bytes in size Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution This is very straightforward to do after completing previous level. Now we need to identify a file owned by user bandit7 and group bandi6. Furthermore, the file is somewhere on the server, which means we have to find in the root directory /.\nfind / -user bandit7 -group bandit6 -size 33c 2\u0026gt;/dev/null NB: I added that strange 2\u0026gt;/dev/null to filter error output. The reason why it works like that is more technical, for now just save this a fast way to filter errors in terminal. We get some errors because looking for files in the whole server may return some unaccesible files, as we don\u0026rsquo;t have root user permissions. We will study Linux permissions in later levels.\nWe should get a single file, containing password for bandit8.\nGet your password and continue with\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit7/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored somewhere on the server and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eowned by user bandit7\u003c/li\u003e\n\u003cli\u003eowned by group bandit6\u003c/li\u003e\n\u003cli\u003e33 bytes in size\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is very straightforward to do after completing previous level. Now we need to identify a file owned by user bandit7 and group bandi6. Furthermore, the file is \u003cstrong\u003esomewhere on the server\u003c/strong\u003e, which means we have to find in the root directory \u003ccode\u003e/\u003c/code\u003e.\u003c/p\u003e","title":"Bandit7"},{"content":"Level description The password for the next level is stored somewhere on the server and has all of the following properties:\nowned by user bandit7 owned by group bandit6 33 bytes in size Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution This is very straightforward to do after completing previous level. Now we need to identify a file owned by user bandit7 and group bandi6. Furthermore, the file is somewhere on the server, which means we have to find in the root directory /.\nfind / -user bandit7 -group bandit6 -size 33c 2\u0026gt;/dev/null NB: I added that strange 2\u0026gt;/dev/null to filter error output. The reason why it works like that is more technical, for now just save this a fast way to filter errors in terminal. We get some errors because looking for files in the whole server may return some unaccesible files, as we don\u0026rsquo;t have root user permissions. We will study Linux permissions in later levels.\nWe should get a single file, containing password for bandit8.\nGet your password and continue with\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit8/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored somewhere on the server and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eowned by user bandit7\u003c/li\u003e\n\u003cli\u003eowned by group bandit6\u003c/li\u003e\n\u003cli\u003e33 bytes in size\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is very straightforward to do after completing previous level. Now we need to identify a file owned by user bandit7 and group bandi6. Furthermore, the file is \u003cstrong\u003esomewhere on the server\u003c/strong\u003e, which means we have to find in the root directory \u003ccode\u003e/\u003c/code\u003e.\u003c/p\u003e","title":"Bandit8"},{"content":"👨‍💻 whoami Hey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\nWhat is this❓​ This blog is basically my thoughts on several hacking topics. Here you’ll see:\nWriteups from CTF challenges, from platforms like HackTheBox or OverTheWire.\nWalkthroughs and notes on pentesting techniques I’m learning or testing.\nSome posts on cryptography — because math can be fun (sometimes).\nRandom topics that freaks like me may (just may) find interesting.\nThe idea is simple: share what I learn, document my journey, and maybe help others who are also diving into the exciting world of ethical hacking.\n📫 Contact Want to say hi, share ideas, or just geek out about hacking? Reach me here:\n📧 Email: mrb0b1073@proton.me 💻​ GitHub: mrb0b173 🟩​ HackTheBox: mrb0b1073 ","permalink":"http://localhost:1313/about/","summary":"\u003ch2 id=\"-whoami\"\u003e👨‍💻 whoami\u003c/h2\u003e\n\u003cp\u003eHey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\u003c/p\u003e\n\u003chr\u003e\n\u003ch2 id=\"what-is-this\"\u003eWhat is this❓​\u003c/h2\u003e\n\u003cp\u003eThis blog is basically my thoughts on several hacking topics. Here you’ll see:\u003c/p\u003e","title":"About"},{"content":"Hey! 👋 I\u0026rsquo;m mrb0b1073 and this is my first post.\nWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\nExcited to start this adventure!\n","permalink":"http://localhost:1313/posts/hello-world/","summary":"\u003cp\u003eHey! 👋 I\u0026rsquo;m \u003cstrong\u003emrb0b1073\u003c/strong\u003e and this is my first post.\u003c/p\u003e\n\u003cp\u003eWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\u003cbr\u003e\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\u003c/p\u003e\n\u003cp\u003eExcited to start this adventure!\u003c/p\u003e","title":"Hello World"},{"content":"Introduction If you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\nIn cybersecurity there are broadly two complementary roles: Blue Team and Red Team. Blue Teams focus on defense, monitoring, incident response, hardening systems and keeping services secure, while Red Teams simulate attackers to find weaknesses and prove what an adversary could do. Ethical hacking aligns closely with Red Team operations, but cybersecurity is highly transversal across IT. There are many specialities or areas, such as cloud security, appsec, pentesting, forensics, governance, risk management, malware analysis, etc. Every topic could deserve its own post, so let\u0026rsquo;s keep it simple and focus on ethical hacking.\nHacker philosophy Let\u0026rsquo;s start with the idea of what is exactly a hacker. A hacker is someone who explores systems to understand how they work, finds creative ways to make or fix things, and solves technical problems. Historically the word describes curiosity, craft, and a drive to improve systems — not criminality. It is important to make the distinction between hacker and cracker, also called cybercriminal. A hacker explores, builds, discloses responsibly and works to improve security. They work in authorized environments or labs. On the other hand, a cracker breaks into systems for theft, vandalism or other illicit gain.\nHere you can find the most popularized ideas often summarized as the hacker ethic:\nCuriosity first: Learn by exploring and tinkering. Freedom of information: All knowledge should be shared to help progress. This fits properly with the idea of open source. Mistrust of needless authority: Centralized control sometimes blocks innovation. It is always good to question anything, specially common assumptions. Meritocracy: Skills, craft and results matter more than titles. Craftsmanship \u0026amp; elegance: Technical beauty matters. Build clean, clever and efficient solutions. Responsability \u0026amp; ethics: Use your skills to build, fix, educate and defend, not to harm. Core fundamentals Assuming you want to init yourself in hacking, you should first build competence across three basic pillars.\nOperating Systems You should learn as much as possible about Linux and Windows. Specially Linux, all the tools you will be using are meant to be used in a Linux environment. Skill with shell is required, learn basic commands and how to interact with the OS using the terminal. Research about processes, file permissions, package management and logs. A large proportion of web servers around the world run on Linux, although Windows is also widely used. Windows knowledge is really valuable too, considering active directory is strongly used in corporate environments.\nNetworking You have to understand how computers communicate each other. Understand basic networking concepts, IP adresses, subnetting, proxies, find out how internet works. Study some protocols such as TCP/IP, HTTP, DNS or SSH. This could sound confusing for beginners, but this step is not optional! Study different client/server models and how services expose attack surfaces.\nProgramming \u0026amp; scripting Is this completely required? Maybe not for complete beginners. Does it help? Absolutely yes. Understanding how web apps or any type of application works makes things much easier. You can imagine different entry points to exploit if you understand how systems are designed. Also writing scripts in bash or python makes you more productive through automation.\nEthical Hacking foundations Once you feel confident with these 3 pillars, you can go to the next step. You can study about different topics and areas. For example, binary exploiting, web pentesting, mobile pentesting, wireless hacking, etc. You should start picking a focus, in this post we focus on web pentesting, as it is beginner friendly. Also web applications are the bread and butter in companies nowadays.\nKey concepts to study:\nCIA Triad: CIA refers to Confidentiality, Integrity and Availability. These three concepts are key in information security, and describe properties we want to ensure in our systems and information. Web Security basics, OWASP: Study the OWASP Top 10, which summarizes most frequent web security risks. Authentication and session control: Understand the concepts of Authentication and Authorization, research about how session is handled in web apps, cookies, JWT tokens, etc. Input validation \u0026amp; injection attacks: Learn about SQL Injection, Cross-Site Scripting (XSS), Code Injection, SSTI, and every injection type. Secure development lifecycle: Find out how to implement security controls in code. This can be more related to Blue Team, but as Red Teamer it is important to understand. Firewall evasion: What a firewall is and some techniques/methods to bypass. Some cryptography: Understand what a chiper and a hash are, how information is encrypted to prevent access from 3rd parties. Focusing on web, read about TLS protocol. There are many more topics you can research and learn, but this could be a nice starting point.\nTools and platforms to learn Now you have an idea of what to study, let\u0026rsquo;s see how to start in practical terms.\nSome platforms I personally recommend:\nOverTheWire: Here you can find some CTFs (Capture The Flag) which are fun to play and also really instructive. Bandit games are a must for complete beginners, as you will explore some linux and bash concepts which are basic to continue. The games are leveled by difficulty, in their web you can get all the information about how to play, only a terminal and SSH is required. This helps building your foundation in Linux OS. HackTheBox: Nº 1 platform in cybersecurity. Has a lot of resources to learn all this core fundamentals, and also red team / blue team security topics. It is focused on labs where you can test your skills hacking different boxes but if you really want to learn it is worth to invest time and money in the academy. I have to say the level here is high, specially if you try to hack machines on your own without using some guide or writeup. TryHackMe: More beginner friendly than hackthebox, it provides a lot of guided learning resources. PortSwigger Labs: Practical labs about specific topics, focused on web hacking. They are great to learn and understand different types of attacks, injections, and security misconfigurations. I would recommend digging into this once you have the theoretical basis about these concepts. I have to mention a few tools I am sure you\u0026rsquo;d end up using:\nNmap: This is probably the most famous tool in hacking, allowing you to gather information about ports and services running in a machine. Burpsuite: A proxy tool widely used in web application security testing. It basically allows you to intercept and modify web requests, which can be used to perform several types of attacks. Metasploit: The most used pentesting framework. Contains a large amount of scripts and exploits ready to run. Another crucial step here is to set up your virtual lab environment to test vulnerable applications. To achieve this goal, there are some Linux distributions like Kali, Parrot or BlackArch, but that\u0026rsquo;s a topic for another post.\nFinal thoughs To sum up, this would be my personal roadmap:\nLearn the fundamentals, specially Linux and networking. Install some Linux in a virtual machine, play with it, get comfortable with the terminal. You can start with bandit wargames in OverTheWire. Complete every level and make sure to understand everything as clear as possible. Move to guided boxes on HackTheBox. I recommend you joining their Discord, ask questions, community is great there! Take notes, repeat, learn, improve your skills. Maybe use your own lab environment, create your own vulnerable apps. Hacking is a mixing of curiosity, study and practice. Being passionate and motivated about it is really helpful and will definitely speed up the process. The path is long and really challenging, so keep it going!\n\u0026ldquo;Yes, I am a criminal. My crime is that of curiosity.\u0026rdquo; — The Mentor (Loyd Blankenship) at The Hacker Manifesto\n","permalink":"http://localhost:1313/posts/starting-point/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIf you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\u003c/p\u003e","title":"Starting Point"},{"content":"Introduction In this post series we are going to solve every level from bandit in OverTheWire This guide pretends to be a writeup containing the solutions of the level, designed for beginners.\nTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing WSL, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\nEvery section will contain the solution as well as some tips for people who is absolutely beginner.\nTips First of all, some tips:\nDo not use this as first resource to solve the levels. Try on your own, make mistakes and learn from them. Only check the solution as last resource or if you are completely new and you have absolutely no idea about what to do next. Take notes from your learning. Write up commands, tips and everything which can be useful in the future. Make sure to understand everything. Is a good idea to note the passwords for every level. If you want to continue letter, you can simply log in in the desired level. It is annoying to repeat everything! Follow the tips and information provided at OverTheWire website. Levels Here is my solution for every level:\nBandit0 Bandit1 Bandit2 Bandit3 Bandit4 Bandit5 Bandit6 Bandit7 ","permalink":"http://localhost:1313/posts/otw/bandit/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIn this post series we are going to solve every level from bandit in \u003ca href=\"https://overthewire.org/wargames/bandit/\"\u003e\u003cem\u003eOverTheWire\u003c/em\u003e\u003c/a\u003e\nThis guide pretends to be a writeup containing the solutions of the level, designed for beginners.\u003c/p\u003e\n\u003cp\u003eTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing \u003ca href=\"https://learn.microsoft.com/en-us/windows/wsl/install\"\u003eWSL\u003c/a\u003e, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\u003c/p\u003e","title":"Bandit"},{"content":"Level description The goal of this level is for you to log into the game using SSH. The host to which you need to connect is bandit.labs.overthewire.org, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\nTips for beginners Read a bit about what SSH is. Research about what a port is. Solution This is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go here.\nAt Linux, we can use ssh client to connect to the server. It should be installed by default on your system. If not, please first research about how to install. Once you have the SSH client installed, you can log in into the first level as follows:\nssh bandit0@bandit.labs.overthewire.org -p 2220 Syntax is simple: ssh \u0026lt;username\u0026gt;@\u0026lt;hostname\u0026gt; -p \u0026lt;port\u0026gt;. Usually SSH runs on port 22 by default, but they changed to port 2220 so we must specify it in the command.\nOnce you try to log in, you will see something like this: NB: If it\u0026rsquo;s the first time you try to log in, you will be asked about the authenticity of the host. Just type yes.\nType the password bandit0 and press enter. Now you are inside bandit server, ready to begin with bandit1!\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit0/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe goal of this level is for you to log into the game using SSH. The host to which you need to connect is \u003cstrong\u003ebandit.labs.overthewire.org\u003c/strong\u003e, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eRead a bit about what SSH is.\u003c/li\u003e\n\u003cli\u003eResearch about what a port is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go \u003ca href=\"https://en.wikipedia.org/wiki/Secure_Shell\"\u003ehere\u003c/a\u003e.\u003c/p\u003e","title":"Bandit0"},{"content":"Level description The password for the next level is stored in a file called readme located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\nTips for beginners Learn about home directory in Linux. Learn to use cat and ls commands. Solution First step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\nls This shows in terminal the files at the current directory. There you will see the readme file.\nNow we can to check the contents, so let\u0026rsquo;s use cat:\ncat readme To read a file, we use cat \u0026lt;filename\u0026gt;.\nNB: Not every file is human readable in Linux. We deep more about this in later levels.\nThe content of the readme file reveals the password for bandit2 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit1/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u003cstrong\u003ereadme\u003c/strong\u003e located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn about home directory in Linux.\u003c/li\u003e\n\u003cli\u003eLearn to use \u003ccode\u003ecat\u003c/code\u003e and \u003ccode\u003els\u003c/code\u003e commands.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eFirst step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\u003c/p\u003e","title":"Bandit1"},{"content":"Level description The password for the next level is stored in a file called - located in the home directory\nTips for beginners Try to understand why previous solution is not working as you expect. Solution You may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our cat command: The terminal is waiting for something else. This happens due to character - is used to pass arguments to our commands, and the linux shell is interpreting that. To prevent that, we could use:\ncat ./- NB: Dot . is used to refer current directory. The slash / is used at the end of directory name.\nWe get the password for bandit3 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit2/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called - located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eTry to understand why previous solution is not working as you expect.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eYou may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our \u003ccode\u003ecat\u003c/code\u003e command:\n\u003cimg alt=\"bandit2\" loading=\"lazy\" src=\"/images/otw/bandit/bandit2/0.png\"\u003e\u003c/p\u003e\n\u003cp\u003eThe terminal is \u003cem\u003ewaiting\u003c/em\u003e for something else. This happens due to character \u003ccode\u003e-\u003c/code\u003e is used to pass arguments to our commands, and the linux shell is interpreting that.\nTo prevent that, we could use:\u003c/p\u003e","title":"Bandit2"},{"content":"Level description The password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\nTips for beginners Think about how to escape the whitespaces. Solution After login in the machine as bandit3, we can see the filename \u0026ndash;spaces in this filename\u0026ndash;.\nNow we have 2 problems:\nSame as previous level, filename starts with --, so it will be interpreted as an argument. Address this problem using ./. Filename contains whitespaces. This is an issue, as bash interpretes whitespaces to separate commands. To solve the second problem, we must escape the whitespace character in some way. Here is the solution:\ncat ./--spaces\\ in\\ this\\ filename-- NB: Little trick, you can start writting filename and press Tab to autocomplete the name. The \\ is going to be inserted automatically.\nJust using the \\ we can escape the whitespace.\nNow we can continue with the bandit4 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit3/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eThink about how to \u003cem\u003eescape\u003c/em\u003e the whitespaces.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAfter login in the machine as bandit3, we can see the filename \u003cem\u003e\u0026ndash;spaces in this filename\u0026ndash;\u003c/em\u003e.\u003c/p\u003e\n\u003cp\u003eNow we have 2 problems:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eSame as previous level, filename starts with \u003ccode\u003e--\u003c/code\u003e, so it will be interpreted as an argument. Address this problem using \u003ccode\u003e./\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003eFilename contains \u003cstrong\u003ewhitespaces\u003c/strong\u003e. This is an issue, as bash interpretes whitespaces to separate commands.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eTo solve the second problem, we must escape the whitespace character in some way. Here is the solution:\u003c/p\u003e","title":"Bandit3"},{"content":"Level description The password for the next level is stored in a hidden file in the inhere directory.\nTips for beginners Learn how to navigate directories in Linux. First understand what a hidden file is. Solution Listing directory files inside bandit4\u0026rsquo;s home directory, show directory inhere.\nNB: How to distinguish files and directories in Linux? Use ls -l and see the difference.\nWe have 2 options now:\nMove to inhere directory and check contens again. Check contents directly. Moving to another directory can be done using cd \u0026lt;dirName\u0026gt;. If you prefer to check directory contents directly, use ls \u0026lt;dirName\u0026gt;.\nAfter checking inhere contents via ls, we see nothing. The reason is the file is a hidden file. A hidden file in Linux is everyfile whose name starts with dot .. Hidden files are not shown by default with ls command, so we must add a special flag -a to list all files: NB: Both flags -l and -a cna be combined into a single flag -al, which is shorter to type.\nAs you can see, filename is \u0026hellip;Hidding-From-You starting with three dots. Reading file contents should be easy at this point!\nNext level is bandit5.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit4/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a hidden file in the inhere directory.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to navigate directories in Linux.\u003c/li\u003e\n\u003cli\u003eFirst understand what a hidden file is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eListing directory files inside bandit4\u0026rsquo;s home directory, show directory \u003cstrong\u003einhere\u003c/strong\u003e.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e How to distinguish files and directories in Linux? Use \u003ccode\u003els -l\u003c/code\u003e and see the difference.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eWe have 2 options now:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eMove to inhere directory and check contens again.\u003c/li\u003e\n\u003cli\u003eCheck contents directly.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eMoving to another directory can be done using \u003ccode\u003ecd \u0026lt;dirName\u0026gt;\u003c/code\u003e. If you prefer to check directory contents directly, use \u003ccode\u003els \u0026lt;dirName\u0026gt;\u003c/code\u003e.\u003c/p\u003e","title":"Bandit4"},{"content":"Level description The password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\nTips for beginners What means human-readable file? Is there any way to check filetype at Linux?. Solution Checking inhere\u0026rsquo;s contents shows some files names \u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII here\nSo now, our goal is checking if file content of every file in the folder is ASCII or not. file \u0026lt;filename\u0026gt; does the job. Note the use of *. That called a wildcard regular expression, we\u0026rsquo;ll deep into it in later levels. An easy approach could be checking every file separately:\nfile ./--file00 file ./--file01 ... file ./--file09 But that\u0026rsquo;s not funny, imagine we have 100 files to check. All the files are in the same directory, so we can use cat ./* where ./* matches every filename in the directory, applying file to every file.\nNB: Another approach is to use find with certaing flags. Try to do in different ways, don\u0026rsquo;t stick to my solution.\nThe file \u0026ndash;file00 content is not readable, so get password from \u0026ndash;file07 and continue with bandit6.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit5/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eWhat means human-readable file?\u003c/li\u003e\n\u003cli\u003eIs there any way to check filetype at Linux?.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eChecking inhere\u0026rsquo;s contents shows some files names \u003cstrong\u003e\u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09\u003c/strong\u003e. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII \u003ca href=\"https://en.wikipedia.org/wiki/ASCII\"\u003ehere\u003c/a\u003e\u003c/p\u003e","title":"Bandit5"},{"content":"Level description The password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\nhuman-readable 1033 bytes in size not executable Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution The purpose of the level is showing us how to find for files. Listing contents of inhere, we can see some folders, containing a lot of files inside: NB: Adding -R to ls shows recursively the content of every folder inside the directory listed.\nSo this time, checking every file is not an option. We need to find a file with some properties, specific size, not excutable and human-readable. Let\u0026rsquo;s explain the command we\u0026rsquo;re using:\nfind inhere/ -size 1033c ! -executable First, we specify the directory, in this case inhere. The option -size 1033c returns files of 1033 bytes. Then, with -executable we would get executable files, but we want not executable files, that\u0026rsquo;s why we are adding ! before.\nNB: By default, the -size option takes as argument the number of blocks. For example, -size 2 means 2 blocks of 512 bytes, so its 1024. The c is used to specify exact bytes. Don\u0026rsquo;t ask me why it\u0026rsquo;s c and not b 😅.\nThe property of human-readability is not implemented in find. This is not an issue, previous command returns a single file and it is human readable (we could confirm using file): Extra tip: try to use the following:\nfind inhere/ -size 1033c ! -executable | file You get the same result! The pipe | is a great tool to execute 2+ commands in one line.\nGet your password and continue with bandit7.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit6/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ehuman-readable\u003c/li\u003e\n\u003cli\u003e1033 bytes in size\u003c/li\u003e\n\u003cli\u003enot executable\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThe purpose of the level is showing us how to find for files. Listing contents of \u003cstrong\u003einhere\u003c/strong\u003e, we can see some folders, containing a lot of files inside:\n\u003cimg alt=\"bandit6_0\" loading=\"lazy\" src=\"/images/otw/bandit/bandit6/0.png\"\u003e\u003c/p\u003e","title":"Bandit6"},{"content":"Level description The password for the next level is stored somewhere on the server and has all of the following properties:\nowned by user bandit7 owned by group bandit6 33 bytes in size Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution This is very straightforward to do after completing previous level. Now we need to identify a file owned by user bandit7 and group bandi6. Furthermore, the file is somewhere on the server, which means we have to find in the root directory /.\nfind / -user bandit7 -group bandit6 -size 33c 2\u0026gt;/dev/null NB: I added that strange 2\u0026gt;/dev/null to filter error output. The reason why it works like that is more technical, for now just save this a fast way to filter errors in terminal. We get some errors because looking for files in the whole server may return some unaccesible files, as we don\u0026rsquo;t have root user permissions. We will study Linux permissions in later levels.\nWe should get a single file, containing password for bandit8.\nGet your password and continue with\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit7/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored somewhere on the server and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eowned by user bandit7\u003c/li\u003e\n\u003cli\u003eowned by group bandit6\u003c/li\u003e\n\u003cli\u003e33 bytes in size\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is very straightforward to do after completing previous level. Now we need to identify a file owned by user bandit7 and group bandi6. Furthermore, the file is \u003cstrong\u003esomewhere on the server\u003c/strong\u003e, which means we have to find in the root directory \u003ccode\u003e/\u003c/code\u003e.\u003c/p\u003e","title":"Bandit7"},{"content":"Level description The password for the next level is stored in the file data.txt next to the word millionth\nTips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution This is very straightforward to do after completing previous level. Now we need to identify a file owned by user bandit7 and group bandi6. Furthermore, the file is somewhere on the server, which means we have to find in the root directory /.\nfind / -user bandit7 -group bandit6 -size 33c 2\u0026gt;/dev/null NB: I added that strange 2\u0026gt;/dev/null to filter error output. The reason why it works like that is more technical, for now just save this a fast way to filter errors in terminal. We get some errors because looking for files in the whole server may return some unaccesible files, as we don\u0026rsquo;t have root user permissions. We will study Linux permissions in later levels.\nWe should get a single file, containing password for bandit8.\nGet your password and continue with\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit8/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the file data.txt next to the word \u003cstrong\u003emillionth\u003c/strong\u003e\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is very straightforward to do after completing previous level. Now we need to identify a file owned by user bandit7 and group bandi6. Furthermore, the file is \u003cstrong\u003esomewhere on the server\u003c/strong\u003e, which means we have to find in the root directory \u003ccode\u003e/\u003c/code\u003e.\u003c/p\u003e","title":"Bandit8"},{"content":"👨‍💻 whoami Hey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\nWhat is this❓​ This blog is basically my thoughts on several hacking topics. Here you’ll see:\nWriteups from CTF challenges, from platforms like HackTheBox or OverTheWire.\nWalkthroughs and notes on pentesting techniques I’m learning or testing.\nSome posts on cryptography — because math can be fun (sometimes).\nRandom topics that freaks like me may (just may) find interesting.\nThe idea is simple: share what I learn, document my journey, and maybe help others who are also diving into the exciting world of ethical hacking.\n📫 Contact Want to say hi, share ideas, or just geek out about hacking? Reach me here:\n📧 Email: mrb0b1073@proton.me 💻​ GitHub: mrb0b173 🟩​ HackTheBox: mrb0b1073 ","permalink":"http://localhost:1313/about/","summary":"\u003ch2 id=\"-whoami\"\u003e👨‍💻 whoami\u003c/h2\u003e\n\u003cp\u003eHey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\u003c/p\u003e\n\u003chr\u003e\n\u003ch2 id=\"what-is-this\"\u003eWhat is this❓​\u003c/h2\u003e\n\u003cp\u003eThis blog is basically my thoughts on several hacking topics. Here you’ll see:\u003c/p\u003e","title":"About"},{"content":"Hey! 👋 I\u0026rsquo;m mrb0b1073 and this is my first post.\nWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\nExcited to start this adventure!\n","permalink":"http://localhost:1313/posts/hello-world/","summary":"\u003cp\u003eHey! 👋 I\u0026rsquo;m \u003cstrong\u003emrb0b1073\u003c/strong\u003e and this is my first post.\u003c/p\u003e\n\u003cp\u003eWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\u003cbr\u003e\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\u003c/p\u003e\n\u003cp\u003eExcited to start this adventure!\u003c/p\u003e","title":"Hello World"},{"content":"Introduction If you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\nIn cybersecurity there are broadly two complementary roles: Blue Team and Red Team. Blue Teams focus on defense, monitoring, incident response, hardening systems and keeping services secure, while Red Teams simulate attackers to find weaknesses and prove what an adversary could do. Ethical hacking aligns closely with Red Team operations, but cybersecurity is highly transversal across IT. There are many specialities or areas, such as cloud security, appsec, pentesting, forensics, governance, risk management, malware analysis, etc. Every topic could deserve its own post, so let\u0026rsquo;s keep it simple and focus on ethical hacking.\nHacker philosophy Let\u0026rsquo;s start with the idea of what is exactly a hacker. A hacker is someone who explores systems to understand how they work, finds creative ways to make or fix things, and solves technical problems. Historically the word describes curiosity, craft, and a drive to improve systems — not criminality. It is important to make the distinction between hacker and cracker, also called cybercriminal. A hacker explores, builds, discloses responsibly and works to improve security. They work in authorized environments or labs. On the other hand, a cracker breaks into systems for theft, vandalism or other illicit gain.\nHere you can find the most popularized ideas often summarized as the hacker ethic:\nCuriosity first: Learn by exploring and tinkering. Freedom of information: All knowledge should be shared to help progress. This fits properly with the idea of open source. Mistrust of needless authority: Centralized control sometimes blocks innovation. It is always good to question anything, specially common assumptions. Meritocracy: Skills, craft and results matter more than titles. Craftsmanship \u0026amp; elegance: Technical beauty matters. Build clean, clever and efficient solutions. Responsability \u0026amp; ethics: Use your skills to build, fix, educate and defend, not to harm. Core fundamentals Assuming you want to init yourself in hacking, you should first build competence across three basic pillars.\nOperating Systems You should learn as much as possible about Linux and Windows. Specially Linux, all the tools you will be using are meant to be used in a Linux environment. Skill with shell is required, learn basic commands and how to interact with the OS using the terminal. Research about processes, file permissions, package management and logs. A large proportion of web servers around the world run on Linux, although Windows is also widely used. Windows knowledge is really valuable too, considering active directory is strongly used in corporate environments.\nNetworking You have to understand how computers communicate each other. Understand basic networking concepts, IP adresses, subnetting, proxies, find out how internet works. Study some protocols such as TCP/IP, HTTP, DNS or SSH. This could sound confusing for beginners, but this step is not optional! Study different client/server models and how services expose attack surfaces.\nProgramming \u0026amp; scripting Is this completely required? Maybe not for complete beginners. Does it help? Absolutely yes. Understanding how web apps or any type of application works makes things much easier. You can imagine different entry points to exploit if you understand how systems are designed. Also writing scripts in bash or python makes you more productive through automation.\nEthical Hacking foundations Once you feel confident with these 3 pillars, you can go to the next step. You can study about different topics and areas. For example, binary exploiting, web pentesting, mobile pentesting, wireless hacking, etc. You should start picking a focus, in this post we focus on web pentesting, as it is beginner friendly. Also web applications are the bread and butter in companies nowadays.\nKey concepts to study:\nCIA Triad: CIA refers to Confidentiality, Integrity and Availability. These three concepts are key in information security, and describe properties we want to ensure in our systems and information. Web Security basics, OWASP: Study the OWASP Top 10, which summarizes most frequent web security risks. Authentication and session control: Understand the concepts of Authentication and Authorization, research about how session is handled in web apps, cookies, JWT tokens, etc. Input validation \u0026amp; injection attacks: Learn about SQL Injection, Cross-Site Scripting (XSS), Code Injection, SSTI, and every injection type. Secure development lifecycle: Find out how to implement security controls in code. This can be more related to Blue Team, but as Red Teamer it is important to understand. Firewall evasion: What a firewall is and some techniques/methods to bypass. Some cryptography: Understand what a chiper and a hash are, how information is encrypted to prevent access from 3rd parties. Focusing on web, read about TLS protocol. There are many more topics you can research and learn, but this could be a nice starting point.\nTools and platforms to learn Now you have an idea of what to study, let\u0026rsquo;s see how to start in practical terms.\nSome platforms I personally recommend:\nOverTheWire: Here you can find some CTFs (Capture The Flag) which are fun to play and also really instructive. Bandit games are a must for complete beginners, as you will explore some linux and bash concepts which are basic to continue. The games are leveled by difficulty, in their web you can get all the information about how to play, only a terminal and SSH is required. This helps building your foundation in Linux OS. HackTheBox: Nº 1 platform in cybersecurity. Has a lot of resources to learn all this core fundamentals, and also red team / blue team security topics. It is focused on labs where you can test your skills hacking different boxes but if you really want to learn it is worth to invest time and money in the academy. I have to say the level here is high, specially if you try to hack machines on your own without using some guide or writeup. TryHackMe: More beginner friendly than hackthebox, it provides a lot of guided learning resources. PortSwigger Labs: Practical labs about specific topics, focused on web hacking. They are great to learn and understand different types of attacks, injections, and security misconfigurations. I would recommend digging into this once you have the theoretical basis about these concepts. I have to mention a few tools I am sure you\u0026rsquo;d end up using:\nNmap: This is probably the most famous tool in hacking, allowing you to gather information about ports and services running in a machine. Burpsuite: A proxy tool widely used in web application security testing. It basically allows you to intercept and modify web requests, which can be used to perform several types of attacks. Metasploit: The most used pentesting framework. Contains a large amount of scripts and exploits ready to run. Another crucial step here is to set up your virtual lab environment to test vulnerable applications. To achieve this goal, there are some Linux distributions like Kali, Parrot or BlackArch, but that\u0026rsquo;s a topic for another post.\nFinal thoughs To sum up, this would be my personal roadmap:\nLearn the fundamentals, specially Linux and networking. Install some Linux in a virtual machine, play with it, get comfortable with the terminal. You can start with bandit wargames in OverTheWire. Complete every level and make sure to understand everything as clear as possible. Move to guided boxes on HackTheBox. I recommend you joining their Discord, ask questions, community is great there! Take notes, repeat, learn, improve your skills. Maybe use your own lab environment, create your own vulnerable apps. Hacking is a mixing of curiosity, study and practice. Being passionate and motivated about it is really helpful and will definitely speed up the process. The path is long and really challenging, so keep it going!\n\u0026ldquo;Yes, I am a criminal. My crime is that of curiosity.\u0026rdquo; — The Mentor (Loyd Blankenship) at The Hacker Manifesto\n","permalink":"http://localhost:1313/posts/starting-point/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIf you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\u003c/p\u003e","title":"Starting Point"},{"content":"Introduction In this post series we are going to solve every level from bandit in OverTheWire This guide pretends to be a writeup containing the solutions of the level, designed for beginners.\nTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing WSL, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\nEvery section will contain the solution as well as some tips for people who is absolutely beginner.\nTips First of all, some tips:\nDo not use this as first resource to solve the levels. Try on your own, make mistakes and learn from them. Only check the solution as last resource or if you are completely new and you have absolutely no idea about what to do next. Take notes from your learning. Write up commands, tips and everything which can be useful in the future. Make sure to understand everything. Is a good idea to note the passwords for every level. If you want to continue letter, you can simply log in in the desired level. It is annoying to repeat everything! Follow the tips and information provided at OverTheWire website. Levels Here is my solution for every level:\nBandit0 Bandit1 Bandit2 Bandit3 Bandit4 Bandit5 Bandit6 Bandit7 ","permalink":"http://localhost:1313/posts/otw/bandit/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIn this post series we are going to solve every level from bandit in \u003ca href=\"https://overthewire.org/wargames/bandit/\"\u003e\u003cem\u003eOverTheWire\u003c/em\u003e\u003c/a\u003e\nThis guide pretends to be a writeup containing the solutions of the level, designed for beginners.\u003c/p\u003e\n\u003cp\u003eTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing \u003ca href=\"https://learn.microsoft.com/en-us/windows/wsl/install\"\u003eWSL\u003c/a\u003e, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\u003c/p\u003e","title":"Bandit"},{"content":"Level description The goal of this level is for you to log into the game using SSH. The host to which you need to connect is bandit.labs.overthewire.org, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\nTips for beginners Read a bit about what SSH is. Research about what a port is. Solution This is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go here.\nAt Linux, we can use ssh client to connect to the server. It should be installed by default on your system. If not, please first research about how to install. Once you have the SSH client installed, you can log in into the first level as follows:\nssh bandit0@bandit.labs.overthewire.org -p 2220 Syntax is simple: ssh \u0026lt;username\u0026gt;@\u0026lt;hostname\u0026gt; -p \u0026lt;port\u0026gt;. Usually SSH runs on port 22 by default, but they changed to port 2220 so we must specify it in the command.\nOnce you try to log in, you will see something like this: NB: If it\u0026rsquo;s the first time you try to log in, you will be asked about the authenticity of the host. Just type yes.\nType the password bandit0 and press enter. Now you are inside bandit server, ready to begin with bandit1!\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit0/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe goal of this level is for you to log into the game using SSH. The host to which you need to connect is \u003cstrong\u003ebandit.labs.overthewire.org\u003c/strong\u003e, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eRead a bit about what SSH is.\u003c/li\u003e\n\u003cli\u003eResearch about what a port is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go \u003ca href=\"https://en.wikipedia.org/wiki/Secure_Shell\"\u003ehere\u003c/a\u003e.\u003c/p\u003e","title":"Bandit0"},{"content":"Level description The password for the next level is stored in a file called readme located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\nTips for beginners Learn about home directory in Linux. Learn to use cat and ls commands. Solution First step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\nls This shows in terminal the files at the current directory. There you will see the readme file.\nNow we can to check the contents, so let\u0026rsquo;s use cat:\ncat readme To read a file, we use cat \u0026lt;filename\u0026gt;.\nNB: Not every file is human readable in Linux. We deep more about this in later levels.\nThe content of the readme file reveals the password for bandit2 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit1/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u003cstrong\u003ereadme\u003c/strong\u003e located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn about home directory in Linux.\u003c/li\u003e\n\u003cli\u003eLearn to use \u003ccode\u003ecat\u003c/code\u003e and \u003ccode\u003els\u003c/code\u003e commands.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eFirst step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\u003c/p\u003e","title":"Bandit1"},{"content":"Level description The password for the next level is stored in a file called - located in the home directory\nTips for beginners Try to understand why previous solution is not working as you expect. Solution You may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our cat command: The terminal is waiting for something else. This happens due to character - is used to pass arguments to our commands, and the linux shell is interpreting that. To prevent that, we could use:\ncat ./- NB: Dot . is used to refer current directory. The slash / is used at the end of directory name.\nWe get the password for bandit3 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit2/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called - located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eTry to understand why previous solution is not working as you expect.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eYou may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our \u003ccode\u003ecat\u003c/code\u003e command:\n\u003cimg alt=\"bandit2\" loading=\"lazy\" src=\"/images/otw/bandit/bandit2/0.png\"\u003e\u003c/p\u003e\n\u003cp\u003eThe terminal is \u003cem\u003ewaiting\u003c/em\u003e for something else. This happens due to character \u003ccode\u003e-\u003c/code\u003e is used to pass arguments to our commands, and the linux shell is interpreting that.\nTo prevent that, we could use:\u003c/p\u003e","title":"Bandit2"},{"content":"Level description The password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\nTips for beginners Think about how to escape the whitespaces. Solution After login in the machine as bandit3, we can see the filename \u0026ndash;spaces in this filename\u0026ndash;.\nNow we have 2 problems:\nSame as previous level, filename starts with --, so it will be interpreted as an argument. Address this problem using ./. Filename contains whitespaces. This is an issue, as bash interpretes whitespaces to separate commands. To solve the second problem, we must escape the whitespace character in some way. Here is the solution:\ncat ./--spaces\\ in\\ this\\ filename-- NB: Little trick, you can start writting filename and press Tab to autocomplete the name. The \\ is going to be inserted automatically.\nJust using the \\ we can escape the whitespace.\nNow we can continue with the bandit4 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit3/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eThink about how to \u003cem\u003eescape\u003c/em\u003e the whitespaces.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAfter login in the machine as bandit3, we can see the filename \u003cem\u003e\u0026ndash;spaces in this filename\u0026ndash;\u003c/em\u003e.\u003c/p\u003e\n\u003cp\u003eNow we have 2 problems:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eSame as previous level, filename starts with \u003ccode\u003e--\u003c/code\u003e, so it will be interpreted as an argument. Address this problem using \u003ccode\u003e./\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003eFilename contains \u003cstrong\u003ewhitespaces\u003c/strong\u003e. This is an issue, as bash interpretes whitespaces to separate commands.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eTo solve the second problem, we must escape the whitespace character in some way. Here is the solution:\u003c/p\u003e","title":"Bandit3"},{"content":"Level description The password for the next level is stored in a hidden file in the inhere directory.\nTips for beginners Learn how to navigate directories in Linux. First understand what a hidden file is. Solution Listing directory files inside bandit4\u0026rsquo;s home directory, show directory inhere.\nNB: How to distinguish files and directories in Linux? Use ls -l and see the difference.\nWe have 2 options now:\nMove to inhere directory and check contens again. Check contents directly. Moving to another directory can be done using cd \u0026lt;dirName\u0026gt;. If you prefer to check directory contents directly, use ls \u0026lt;dirName\u0026gt;.\nAfter checking inhere contents via ls, we see nothing. The reason is the file is a hidden file. A hidden file in Linux is everyfile whose name starts with dot .. Hidden files are not shown by default with ls command, so we must add a special flag -a to list all files: NB: Both flags -l and -a cna be combined into a single flag -al, which is shorter to type.\nAs you can see, filename is \u0026hellip;Hidding-From-You starting with three dots. Reading file contents should be easy at this point!\nNext level is bandit5.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit4/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a hidden file in the inhere directory.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to navigate directories in Linux.\u003c/li\u003e\n\u003cli\u003eFirst understand what a hidden file is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eListing directory files inside bandit4\u0026rsquo;s home directory, show directory \u003cstrong\u003einhere\u003c/strong\u003e.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e How to distinguish files and directories in Linux? Use \u003ccode\u003els -l\u003c/code\u003e and see the difference.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eWe have 2 options now:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eMove to inhere directory and check contens again.\u003c/li\u003e\n\u003cli\u003eCheck contents directly.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eMoving to another directory can be done using \u003ccode\u003ecd \u0026lt;dirName\u0026gt;\u003c/code\u003e. If you prefer to check directory contents directly, use \u003ccode\u003els \u0026lt;dirName\u0026gt;\u003c/code\u003e.\u003c/p\u003e","title":"Bandit4"},{"content":"Level description The password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\nTips for beginners What means human-readable file? Is there any way to check filetype at Linux?. Solution Checking inhere\u0026rsquo;s contents shows some files names \u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII here\nSo now, our goal is checking if file content of every file in the folder is ASCII or not. file \u0026lt;filename\u0026gt; does the job. Note the use of *. That called a wildcard regular expression, we\u0026rsquo;ll deep into it in later levels. An easy approach could be checking every file separately:\nfile ./--file00 file ./--file01 ... file ./--file09 But that\u0026rsquo;s not funny, imagine we have 100 files to check. All the files are in the same directory, so we can use cat ./* where ./* matches every filename in the directory, applying file to every file.\nNB: Another approach is to use find with certaing flags. Try to do in different ways, don\u0026rsquo;t stick to my solution.\nThe file \u0026ndash;file00 content is not readable, so get password from \u0026ndash;file07 and continue with bandit6.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit5/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eWhat means human-readable file?\u003c/li\u003e\n\u003cli\u003eIs there any way to check filetype at Linux?.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eChecking inhere\u0026rsquo;s contents shows some files names \u003cstrong\u003e\u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09\u003c/strong\u003e. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII \u003ca href=\"https://en.wikipedia.org/wiki/ASCII\"\u003ehere\u003c/a\u003e\u003c/p\u003e","title":"Bandit5"},{"content":"Level description The password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\nhuman-readable 1033 bytes in size not executable Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution The purpose of the level is showing us how to find for files. Listing contents of inhere, we can see some folders, containing a lot of files inside: NB: Adding -R to ls shows recursively the content of every folder inside the directory listed.\nSo this time, checking every file is not an option. We need to find a file with some properties, specific size, not excutable and human-readable. Let\u0026rsquo;s explain the command we\u0026rsquo;re using:\nfind inhere/ -size 1033c ! -executable First, we specify the directory, in this case inhere. The option -size 1033c returns files of 1033 bytes. Then, with -executable we would get executable files, but we want not executable files, that\u0026rsquo;s why we are adding ! before.\nNB: By default, the -size option takes as argument the number of blocks. For example, -size 2 means 2 blocks of 512 bytes, so its 1024. The c is used to specify exact bytes. Don\u0026rsquo;t ask me why it\u0026rsquo;s c and not b 😅.\nThe property of human-readability is not implemented in find. This is not an issue, previous command returns a single file and it is human readable (we could confirm using file): Extra tip: try to use the following:\nfind inhere/ -size 1033c ! -executable | file You get the same result! The pipe | is a great tool to execute 2+ commands in one line.\nGet your password and continue with bandit7.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit6/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ehuman-readable\u003c/li\u003e\n\u003cli\u003e1033 bytes in size\u003c/li\u003e\n\u003cli\u003enot executable\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThe purpose of the level is showing us how to find for files. Listing contents of \u003cstrong\u003einhere\u003c/strong\u003e, we can see some folders, containing a lot of files inside:\n\u003cimg alt=\"bandit6_0\" loading=\"lazy\" src=\"/images/otw/bandit/bandit6/0.png\"\u003e\u003c/p\u003e","title":"Bandit6"},{"content":"Level description The password for the next level is stored somewhere on the server and has all of the following properties:\nowned by user bandit7 owned by group bandit6 33 bytes in size Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution This is very straightforward to do after completing previous level. Now we need to identify a file owned by user bandit7 and group bandi6. Furthermore, the file is somewhere on the server, which means we have to find in the root directory /.\nfind / -user bandit7 -group bandit6 -size 33c 2\u0026gt;/dev/null NB: I added that strange 2\u0026gt;/dev/null to filter error output. The reason why it works like that is more technical, for now just save this a fast way to filter errors in terminal. We get some errors because looking for files in the whole server may return some unaccesible files, as we don\u0026rsquo;t have root user permissions. We will study Linux permissions in later levels.\nWe should get a single file, containing password for bandit8.\nGet your password and continue with\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit7/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored somewhere on the server and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eowned by user bandit7\u003c/li\u003e\n\u003cli\u003eowned by group bandit6\u003c/li\u003e\n\u003cli\u003e33 bytes in size\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is very straightforward to do after completing previous level. Now we need to identify a file owned by user bandit7 and group bandi6. Furthermore, the file is \u003cstrong\u003esomewhere on the server\u003c/strong\u003e, which means we have to find in the root directory \u003ccode\u003e/\u003c/code\u003e.\u003c/p\u003e","title":"Bandit7"},{"content":"Level description The password for the next level is stored in the file data.txt next to the word millionth.\nTips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution This is very straightforward to do after completing previous level. Now we need to identify a file owned by user bandit7 and group bandi6. Furthermore, the file is somewhere on the server, which means we have to find in the root directory /.\nfind / -user bandit7 -group bandit6 -size 33c 2\u0026gt;/dev/null NB: I added that strange 2\u0026gt;/dev/null to filter error output. The reason why it works like that is more technical, for now just save this a fast way to filter errors in terminal. We get some errors because looking for files in the whole server may return some unaccesible files, as we don\u0026rsquo;t have root user permissions. We will study Linux permissions in later levels.\nWe should get a single file, containing password for bandit8.\nGet your password and continue with\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit8/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the file data.txt next to the word \u003cstrong\u003emillionth\u003c/strong\u003e.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is very straightforward to do after completing previous level. Now we need to identify a file owned by user bandit7 and group bandi6. Furthermore, the file is \u003cstrong\u003esomewhere on the server\u003c/strong\u003e, which means we have to find in the root directory \u003ccode\u003e/\u003c/code\u003e.\u003c/p\u003e","title":"Bandit8"},{"content":"👨‍💻 whoami Hey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\nWhat is this❓​ This blog is basically my thoughts on several hacking topics. Here you’ll see:\nWriteups from CTF challenges, from platforms like HackTheBox or OverTheWire.\nWalkthroughs and notes on pentesting techniques I’m learning or testing.\nSome posts on cryptography — because math can be fun (sometimes).\nRandom topics that freaks like me may (just may) find interesting.\nThe idea is simple: share what I learn, document my journey, and maybe help others who are also diving into the exciting world of ethical hacking.\n📫 Contact Want to say hi, share ideas, or just geek out about hacking? Reach me here:\n📧 Email: mrb0b1073@proton.me 💻​ GitHub: mrb0b173 🟩​ HackTheBox: mrb0b1073 ","permalink":"http://localhost:1313/about/","summary":"\u003ch2 id=\"-whoami\"\u003e👨‍💻 whoami\u003c/h2\u003e\n\u003cp\u003eHey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\u003c/p\u003e\n\u003chr\u003e\n\u003ch2 id=\"what-is-this\"\u003eWhat is this❓​\u003c/h2\u003e\n\u003cp\u003eThis blog is basically my thoughts on several hacking topics. Here you’ll see:\u003c/p\u003e","title":"About"},{"content":"Hey! 👋 I\u0026rsquo;m mrb0b1073 and this is my first post.\nWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\nExcited to start this adventure!\n","permalink":"http://localhost:1313/posts/hello-world/","summary":"\u003cp\u003eHey! 👋 I\u0026rsquo;m \u003cstrong\u003emrb0b1073\u003c/strong\u003e and this is my first post.\u003c/p\u003e\n\u003cp\u003eWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\u003cbr\u003e\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\u003c/p\u003e\n\u003cp\u003eExcited to start this adventure!\u003c/p\u003e","title":"Hello World"},{"content":"Introduction If you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\nIn cybersecurity there are broadly two complementary roles: Blue Team and Red Team. Blue Teams focus on defense, monitoring, incident response, hardening systems and keeping services secure, while Red Teams simulate attackers to find weaknesses and prove what an adversary could do. Ethical hacking aligns closely with Red Team operations, but cybersecurity is highly transversal across IT. There are many specialities or areas, such as cloud security, appsec, pentesting, forensics, governance, risk management, malware analysis, etc. Every topic could deserve its own post, so let\u0026rsquo;s keep it simple and focus on ethical hacking.\nHacker philosophy Let\u0026rsquo;s start with the idea of what is exactly a hacker. A hacker is someone who explores systems to understand how they work, finds creative ways to make or fix things, and solves technical problems. Historically the word describes curiosity, craft, and a drive to improve systems — not criminality. It is important to make the distinction between hacker and cracker, also called cybercriminal. A hacker explores, builds, discloses responsibly and works to improve security. They work in authorized environments or labs. On the other hand, a cracker breaks into systems for theft, vandalism or other illicit gain.\nHere you can find the most popularized ideas often summarized as the hacker ethic:\nCuriosity first: Learn by exploring and tinkering. Freedom of information: All knowledge should be shared to help progress. This fits properly with the idea of open source. Mistrust of needless authority: Centralized control sometimes blocks innovation. It is always good to question anything, specially common assumptions. Meritocracy: Skills, craft and results matter more than titles. Craftsmanship \u0026amp; elegance: Technical beauty matters. Build clean, clever and efficient solutions. Responsability \u0026amp; ethics: Use your skills to build, fix, educate and defend, not to harm. Core fundamentals Assuming you want to init yourself in hacking, you should first build competence across three basic pillars.\nOperating Systems You should learn as much as possible about Linux and Windows. Specially Linux, all the tools you will be using are meant to be used in a Linux environment. Skill with shell is required, learn basic commands and how to interact with the OS using the terminal. Research about processes, file permissions, package management and logs. A large proportion of web servers around the world run on Linux, although Windows is also widely used. Windows knowledge is really valuable too, considering active directory is strongly used in corporate environments.\nNetworking You have to understand how computers communicate each other. Understand basic networking concepts, IP adresses, subnetting, proxies, find out how internet works. Study some protocols such as TCP/IP, HTTP, DNS or SSH. This could sound confusing for beginners, but this step is not optional! Study different client/server models and how services expose attack surfaces.\nProgramming \u0026amp; scripting Is this completely required? Maybe not for complete beginners. Does it help? Absolutely yes. Understanding how web apps or any type of application works makes things much easier. You can imagine different entry points to exploit if you understand how systems are designed. Also writing scripts in bash or python makes you more productive through automation.\nEthical Hacking foundations Once you feel confident with these 3 pillars, you can go to the next step. You can study about different topics and areas. For example, binary exploiting, web pentesting, mobile pentesting, wireless hacking, etc. You should start picking a focus, in this post we focus on web pentesting, as it is beginner friendly. Also web applications are the bread and butter in companies nowadays.\nKey concepts to study:\nCIA Triad: CIA refers to Confidentiality, Integrity and Availability. These three concepts are key in information security, and describe properties we want to ensure in our systems and information. Web Security basics, OWASP: Study the OWASP Top 10, which summarizes most frequent web security risks. Authentication and session control: Understand the concepts of Authentication and Authorization, research about how session is handled in web apps, cookies, JWT tokens, etc. Input validation \u0026amp; injection attacks: Learn about SQL Injection, Cross-Site Scripting (XSS), Code Injection, SSTI, and every injection type. Secure development lifecycle: Find out how to implement security controls in code. This can be more related to Blue Team, but as Red Teamer it is important to understand. Firewall evasion: What a firewall is and some techniques/methods to bypass. Some cryptography: Understand what a chiper and a hash are, how information is encrypted to prevent access from 3rd parties. Focusing on web, read about TLS protocol. There are many more topics you can research and learn, but this could be a nice starting point.\nTools and platforms to learn Now you have an idea of what to study, let\u0026rsquo;s see how to start in practical terms.\nSome platforms I personally recommend:\nOverTheWire: Here you can find some CTFs (Capture The Flag) which are fun to play and also really instructive. Bandit games are a must for complete beginners, as you will explore some linux and bash concepts which are basic to continue. The games are leveled by difficulty, in their web you can get all the information about how to play, only a terminal and SSH is required. This helps building your foundation in Linux OS. HackTheBox: Nº 1 platform in cybersecurity. Has a lot of resources to learn all this core fundamentals, and also red team / blue team security topics. It is focused on labs where you can test your skills hacking different boxes but if you really want to learn it is worth to invest time and money in the academy. I have to say the level here is high, specially if you try to hack machines on your own without using some guide or writeup. TryHackMe: More beginner friendly than hackthebox, it provides a lot of guided learning resources. PortSwigger Labs: Practical labs about specific topics, focused on web hacking. They are great to learn and understand different types of attacks, injections, and security misconfigurations. I would recommend digging into this once you have the theoretical basis about these concepts. I have to mention a few tools I am sure you\u0026rsquo;d end up using:\nNmap: This is probably the most famous tool in hacking, allowing you to gather information about ports and services running in a machine. Burpsuite: A proxy tool widely used in web application security testing. It basically allows you to intercept and modify web requests, which can be used to perform several types of attacks. Metasploit: The most used pentesting framework. Contains a large amount of scripts and exploits ready to run. Another crucial step here is to set up your virtual lab environment to test vulnerable applications. To achieve this goal, there are some Linux distributions like Kali, Parrot or BlackArch, but that\u0026rsquo;s a topic for another post.\nFinal thoughs To sum up, this would be my personal roadmap:\nLearn the fundamentals, specially Linux and networking. Install some Linux in a virtual machine, play with it, get comfortable with the terminal. You can start with bandit wargames in OverTheWire. Complete every level and make sure to understand everything as clear as possible. Move to guided boxes on HackTheBox. I recommend you joining their Discord, ask questions, community is great there! Take notes, repeat, learn, improve your skills. Maybe use your own lab environment, create your own vulnerable apps. Hacking is a mixing of curiosity, study and practice. Being passionate and motivated about it is really helpful and will definitely speed up the process. The path is long and really challenging, so keep it going!\n\u0026ldquo;Yes, I am a criminal. My crime is that of curiosity.\u0026rdquo; — The Mentor (Loyd Blankenship) at The Hacker Manifesto\n","permalink":"http://localhost:1313/posts/starting-point/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIf you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\u003c/p\u003e","title":"Starting Point"},{"content":"Introduction In this post series we are going to solve every level from bandit in OverTheWire This guide pretends to be a writeup containing the solutions of the level, designed for beginners.\nTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing WSL, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\nEvery section will contain the solution as well as some tips for people who is absolutely beginner.\nTips First of all, some tips:\nDo not use this as first resource to solve the levels. Try on your own, make mistakes and learn from them. Only check the solution as last resource or if you are completely new and you have absolutely no idea about what to do next. Take notes from your learning. Write up commands, tips and everything which can be useful in the future. Make sure to understand everything. Is a good idea to note the passwords for every level. If you want to continue letter, you can simply log in in the desired level. It is annoying to repeat everything! Follow the tips and information provided at OverTheWire website. Levels Here is my solution for every level:\nBandit0 Bandit1 Bandit2 Bandit3 Bandit4 Bandit5 Bandit6 Bandit7 ","permalink":"http://localhost:1313/posts/otw/bandit/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIn this post series we are going to solve every level from bandit in \u003ca href=\"https://overthewire.org/wargames/bandit/\"\u003e\u003cem\u003eOverTheWire\u003c/em\u003e\u003c/a\u003e\nThis guide pretends to be a writeup containing the solutions of the level, designed for beginners.\u003c/p\u003e\n\u003cp\u003eTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing \u003ca href=\"https://learn.microsoft.com/en-us/windows/wsl/install\"\u003eWSL\u003c/a\u003e, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\u003c/p\u003e","title":"Bandit"},{"content":"Level description The goal of this level is for you to log into the game using SSH. The host to which you need to connect is bandit.labs.overthewire.org, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\nTips for beginners Read a bit about what SSH is. Research about what a port is. Solution This is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go here.\nAt Linux, we can use ssh client to connect to the server. It should be installed by default on your system. If not, please first research about how to install. Once you have the SSH client installed, you can log in into the first level as follows:\nssh bandit0@bandit.labs.overthewire.org -p 2220 Syntax is simple: ssh \u0026lt;username\u0026gt;@\u0026lt;hostname\u0026gt; -p \u0026lt;port\u0026gt;. Usually SSH runs on port 22 by default, but they changed to port 2220 so we must specify it in the command.\nOnce you try to log in, you will see something like this: NB: If it\u0026rsquo;s the first time you try to log in, you will be asked about the authenticity of the host. Just type yes.\nType the password bandit0 and press enter. Now you are inside bandit server, ready to begin with bandit1!\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit0/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe goal of this level is for you to log into the game using SSH. The host to which you need to connect is \u003cstrong\u003ebandit.labs.overthewire.org\u003c/strong\u003e, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eRead a bit about what SSH is.\u003c/li\u003e\n\u003cli\u003eResearch about what a port is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go \u003ca href=\"https://en.wikipedia.org/wiki/Secure_Shell\"\u003ehere\u003c/a\u003e.\u003c/p\u003e","title":"Bandit0"},{"content":"Level description The password for the next level is stored in a file called readme located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\nTips for beginners Learn about home directory in Linux. Learn to use cat and ls commands. Solution First step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\nls This shows in terminal the files at the current directory. There you will see the readme file.\nNow we can to check the contents, so let\u0026rsquo;s use cat:\ncat readme To read a file, we use cat \u0026lt;filename\u0026gt;.\nNB: Not every file is human readable in Linux. We deep more about this in later levels.\nThe content of the readme file reveals the password for bandit2 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit1/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u003cstrong\u003ereadme\u003c/strong\u003e located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn about home directory in Linux.\u003c/li\u003e\n\u003cli\u003eLearn to use \u003ccode\u003ecat\u003c/code\u003e and \u003ccode\u003els\u003c/code\u003e commands.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eFirst step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\u003c/p\u003e","title":"Bandit1"},{"content":"Level description The password for the next level is stored in a file called - located in the home directory\nTips for beginners Try to understand why previous solution is not working as you expect. Solution You may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our cat command: The terminal is waiting for something else. This happens due to character - is used to pass arguments to our commands, and the linux shell is interpreting that. To prevent that, we could use:\ncat ./- NB: Dot . is used to refer current directory. The slash / is used at the end of directory name.\nWe get the password for bandit3 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit2/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called - located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eTry to understand why previous solution is not working as you expect.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eYou may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our \u003ccode\u003ecat\u003c/code\u003e command:\n\u003cimg alt=\"bandit2\" loading=\"lazy\" src=\"/images/otw/bandit/bandit2/0.png\"\u003e\u003c/p\u003e\n\u003cp\u003eThe terminal is \u003cem\u003ewaiting\u003c/em\u003e for something else. This happens due to character \u003ccode\u003e-\u003c/code\u003e is used to pass arguments to our commands, and the linux shell is interpreting that.\nTo prevent that, we could use:\u003c/p\u003e","title":"Bandit2"},{"content":"Level description The password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\nTips for beginners Think about how to escape the whitespaces. Solution After login in the machine as bandit3, we can see the filename \u0026ndash;spaces in this filename\u0026ndash;.\nNow we have 2 problems:\nSame as previous level, filename starts with --, so it will be interpreted as an argument. Address this problem using ./. Filename contains whitespaces. This is an issue, as bash interpretes whitespaces to separate commands. To solve the second problem, we must escape the whitespace character in some way. Here is the solution:\ncat ./--spaces\\ in\\ this\\ filename-- NB: Little trick, you can start writting filename and press Tab to autocomplete the name. The \\ is going to be inserted automatically.\nJust using the \\ we can escape the whitespace.\nNow we can continue with the bandit4 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit3/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eThink about how to \u003cem\u003eescape\u003c/em\u003e the whitespaces.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAfter login in the machine as bandit3, we can see the filename \u003cem\u003e\u0026ndash;spaces in this filename\u0026ndash;\u003c/em\u003e.\u003c/p\u003e\n\u003cp\u003eNow we have 2 problems:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eSame as previous level, filename starts with \u003ccode\u003e--\u003c/code\u003e, so it will be interpreted as an argument. Address this problem using \u003ccode\u003e./\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003eFilename contains \u003cstrong\u003ewhitespaces\u003c/strong\u003e. This is an issue, as bash interpretes whitespaces to separate commands.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eTo solve the second problem, we must escape the whitespace character in some way. Here is the solution:\u003c/p\u003e","title":"Bandit3"},{"content":"Level description The password for the next level is stored in a hidden file in the inhere directory.\nTips for beginners Learn how to navigate directories in Linux. First understand what a hidden file is. Solution Listing directory files inside bandit4\u0026rsquo;s home directory, show directory inhere.\nNB: How to distinguish files and directories in Linux? Use ls -l and see the difference.\nWe have 2 options now:\nMove to inhere directory and check contens again. Check contents directly. Moving to another directory can be done using cd \u0026lt;dirName\u0026gt;. If you prefer to check directory contents directly, use ls \u0026lt;dirName\u0026gt;.\nAfter checking inhere contents via ls, we see nothing. The reason is the file is a hidden file. A hidden file in Linux is everyfile whose name starts with dot .. Hidden files are not shown by default with ls command, so we must add a special flag -a to list all files: NB: Both flags -l and -a cna be combined into a single flag -al, which is shorter to type.\nAs you can see, filename is \u0026hellip;Hidding-From-You starting with three dots. Reading file contents should be easy at this point!\nNext level is bandit5.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit4/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a hidden file in the inhere directory.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to navigate directories in Linux.\u003c/li\u003e\n\u003cli\u003eFirst understand what a hidden file is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eListing directory files inside bandit4\u0026rsquo;s home directory, show directory \u003cstrong\u003einhere\u003c/strong\u003e.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e How to distinguish files and directories in Linux? Use \u003ccode\u003els -l\u003c/code\u003e and see the difference.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eWe have 2 options now:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eMove to inhere directory and check contens again.\u003c/li\u003e\n\u003cli\u003eCheck contents directly.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eMoving to another directory can be done using \u003ccode\u003ecd \u0026lt;dirName\u0026gt;\u003c/code\u003e. If you prefer to check directory contents directly, use \u003ccode\u003els \u0026lt;dirName\u0026gt;\u003c/code\u003e.\u003c/p\u003e","title":"Bandit4"},{"content":"Level description The password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\nTips for beginners What means human-readable file? Is there any way to check filetype at Linux?. Solution Checking inhere\u0026rsquo;s contents shows some files names \u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII here\nSo now, our goal is checking if file content of every file in the folder is ASCII or not. file \u0026lt;filename\u0026gt; does the job. Note the use of *. That called a wildcard regular expression, we\u0026rsquo;ll deep into it in later levels. An easy approach could be checking every file separately:\nfile ./--file00 file ./--file01 ... file ./--file09 But that\u0026rsquo;s not funny, imagine we have 100 files to check. All the files are in the same directory, so we can use cat ./* where ./* matches every filename in the directory, applying file to every file.\nNB: Another approach is to use find with certaing flags. Try to do in different ways, don\u0026rsquo;t stick to my solution.\nThe file \u0026ndash;file00 content is not readable, so get password from \u0026ndash;file07 and continue with bandit6.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit5/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eWhat means human-readable file?\u003c/li\u003e\n\u003cli\u003eIs there any way to check filetype at Linux?.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eChecking inhere\u0026rsquo;s contents shows some files names \u003cstrong\u003e\u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09\u003c/strong\u003e. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII \u003ca href=\"https://en.wikipedia.org/wiki/ASCII\"\u003ehere\u003c/a\u003e\u003c/p\u003e","title":"Bandit5"},{"content":"Level description The password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\nhuman-readable 1033 bytes in size not executable Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution The purpose of the level is showing us how to find for files. Listing contents of inhere, we can see some folders, containing a lot of files inside: NB: Adding -R to ls shows recursively the content of every folder inside the directory listed.\nSo this time, checking every file is not an option. We need to find a file with some properties, specific size, not excutable and human-readable. Let\u0026rsquo;s explain the command we\u0026rsquo;re using:\nfind inhere/ -size 1033c ! -executable First, we specify the directory, in this case inhere. The option -size 1033c returns files of 1033 bytes. Then, with -executable we would get executable files, but we want not executable files, that\u0026rsquo;s why we are adding ! before.\nNB: By default, the -size option takes as argument the number of blocks. For example, -size 2 means 2 blocks of 512 bytes, so its 1024. The c is used to specify exact bytes. Don\u0026rsquo;t ask me why it\u0026rsquo;s c and not b 😅.\nThe property of human-readability is not implemented in find. This is not an issue, previous command returns a single file and it is human readable (we could confirm using file): Extra tip: try to use the following:\nfind inhere/ -size 1033c ! -executable | file You get the same result! The pipe | is a great tool to execute 2+ commands in one line.\nGet your password and continue with bandit7.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit6/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ehuman-readable\u003c/li\u003e\n\u003cli\u003e1033 bytes in size\u003c/li\u003e\n\u003cli\u003enot executable\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThe purpose of the level is showing us how to find for files. Listing contents of \u003cstrong\u003einhere\u003c/strong\u003e, we can see some folders, containing a lot of files inside:\n\u003cimg alt=\"bandit6_0\" loading=\"lazy\" src=\"/images/otw/bandit/bandit6/0.png\"\u003e\u003c/p\u003e","title":"Bandit6"},{"content":"Level description The password for the next level is stored somewhere on the server and has all of the following properties:\nowned by user bandit7 owned by group bandit6 33 bytes in size Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution This is very straightforward to do after completing previous level. Now we need to identify a file owned by user bandit7 and group bandi6. Furthermore, the file is somewhere on the server, which means we have to find in the root directory /.\nfind / -user bandit7 -group bandit6 -size 33c 2\u0026gt;/dev/null NB: I added that strange 2\u0026gt;/dev/null to filter error output. The reason why it works like that is more technical, for now just save this a fast way to filter errors in terminal. We get some errors because looking for files in the whole server may return some unaccesible files, as we don\u0026rsquo;t have root user permissions. We will study Linux permissions in later levels.\nWe should get a single file, containing password for bandit8.\nGet your password and continue with\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit7/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored somewhere on the server and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eowned by user bandit7\u003c/li\u003e\n\u003cli\u003eowned by group bandit6\u003c/li\u003e\n\u003cli\u003e33 bytes in size\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is very straightforward to do after completing previous level. Now we need to identify a file owned by user bandit7 and group bandi6. Furthermore, the file is \u003cstrong\u003esomewhere on the server\u003c/strong\u003e, which means we have to find in the root directory \u003ccode\u003e/\u003c/code\u003e.\u003c/p\u003e","title":"Bandit7"},{"content":"Level description The password for the next level is stored in the file data.txt next to the word millionth.\nTips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution This is very straightforward to do after completing previous level. Now we need to identify a file owned by user bandit7 and group bandi6. Furthermore, the file is somewhere on the server, which means we have to find in the root directory /.\nfind / -user bandit7 -group bandit6 -size 33c 2\u0026gt;/dev/null NB: I added that strange 2\u0026gt;/dev/null to filter error output. The reason why it works like that is more technical, for now just save this a fast way to filter errors in terminal. We get some errors because looking for files in the whole server may return some unaccesible files, as we don\u0026rsquo;t have root user permissions. We will study Linux permissions in later levels.\nWe should get a single file, containing password for bandit8.\nGet your password and continue with\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit8/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the file data.txt next to the word \u003cstrong\u003emillionth\u003c/strong\u003e.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is very straightforward to do after completing previous level. Now we need to identify a file owned by user bandit7 and group bandi6. Furthermore, the file is \u003cstrong\u003esomewhere on the server\u003c/strong\u003e, which means we have to find in the root directory \u003ccode\u003e/\u003c/code\u003e.\u003c/p\u003e","title":"Bandit8"},{"content":"👨‍💻 whoami Hey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\nWhat is this❓​ This blog is basically my thoughts on several hacking topics. Here you’ll see:\nWriteups from CTF challenges, from platforms like HackTheBox or OverTheWire.\nWalkthroughs and notes on pentesting techniques I’m learning or testing.\nSome posts on cryptography — because math can be fun (sometimes).\nRandom topics that freaks like me may (just may) find interesting.\nThe idea is simple: share what I learn, document my journey, and maybe help others who are also diving into the exciting world of ethical hacking.\n📫 Contact Want to say hi, share ideas, or just geek out about hacking? Reach me here:\n📧 Email: mrb0b1073@proton.me 💻​ GitHub: mrb0b173 🟩​ HackTheBox: mrb0b1073 ","permalink":"http://localhost:1313/about/","summary":"\u003ch2 id=\"-whoami\"\u003e👨‍💻 whoami\u003c/h2\u003e\n\u003cp\u003eHey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\u003c/p\u003e\n\u003chr\u003e\n\u003ch2 id=\"what-is-this\"\u003eWhat is this❓​\u003c/h2\u003e\n\u003cp\u003eThis blog is basically my thoughts on several hacking topics. Here you’ll see:\u003c/p\u003e","title":"About"},{"content":"Hey! 👋 I\u0026rsquo;m mrb0b1073 and this is my first post.\nWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\nExcited to start this adventure!\n","permalink":"http://localhost:1313/posts/hello-world/","summary":"\u003cp\u003eHey! 👋 I\u0026rsquo;m \u003cstrong\u003emrb0b1073\u003c/strong\u003e and this is my first post.\u003c/p\u003e\n\u003cp\u003eWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\u003cbr\u003e\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\u003c/p\u003e\n\u003cp\u003eExcited to start this adventure!\u003c/p\u003e","title":"Hello World"},{"content":"Introduction If you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\nIn cybersecurity there are broadly two complementary roles: Blue Team and Red Team. Blue Teams focus on defense, monitoring, incident response, hardening systems and keeping services secure, while Red Teams simulate attackers to find weaknesses and prove what an adversary could do. Ethical hacking aligns closely with Red Team operations, but cybersecurity is highly transversal across IT. There are many specialities or areas, such as cloud security, appsec, pentesting, forensics, governance, risk management, malware analysis, etc. Every topic could deserve its own post, so let\u0026rsquo;s keep it simple and focus on ethical hacking.\nHacker philosophy Let\u0026rsquo;s start with the idea of what is exactly a hacker. A hacker is someone who explores systems to understand how they work, finds creative ways to make or fix things, and solves technical problems. Historically the word describes curiosity, craft, and a drive to improve systems — not criminality. It is important to make the distinction between hacker and cracker, also called cybercriminal. A hacker explores, builds, discloses responsibly and works to improve security. They work in authorized environments or labs. On the other hand, a cracker breaks into systems for theft, vandalism or other illicit gain.\nHere you can find the most popularized ideas often summarized as the hacker ethic:\nCuriosity first: Learn by exploring and tinkering. Freedom of information: All knowledge should be shared to help progress. This fits properly with the idea of open source. Mistrust of needless authority: Centralized control sometimes blocks innovation. It is always good to question anything, specially common assumptions. Meritocracy: Skills, craft and results matter more than titles. Craftsmanship \u0026amp; elegance: Technical beauty matters. Build clean, clever and efficient solutions. Responsability \u0026amp; ethics: Use your skills to build, fix, educate and defend, not to harm. Core fundamentals Assuming you want to init yourself in hacking, you should first build competence across three basic pillars.\nOperating Systems You should learn as much as possible about Linux and Windows. Specially Linux, all the tools you will be using are meant to be used in a Linux environment. Skill with shell is required, learn basic commands and how to interact with the OS using the terminal. Research about processes, file permissions, package management and logs. A large proportion of web servers around the world run on Linux, although Windows is also widely used. Windows knowledge is really valuable too, considering active directory is strongly used in corporate environments.\nNetworking You have to understand how computers communicate each other. Understand basic networking concepts, IP adresses, subnetting, proxies, find out how internet works. Study some protocols such as TCP/IP, HTTP, DNS or SSH. This could sound confusing for beginners, but this step is not optional! Study different client/server models and how services expose attack surfaces.\nProgramming \u0026amp; scripting Is this completely required? Maybe not for complete beginners. Does it help? Absolutely yes. Understanding how web apps or any type of application works makes things much easier. You can imagine different entry points to exploit if you understand how systems are designed. Also writing scripts in bash or python makes you more productive through automation.\nEthical Hacking foundations Once you feel confident with these 3 pillars, you can go to the next step. You can study about different topics and areas. For example, binary exploiting, web pentesting, mobile pentesting, wireless hacking, etc. You should start picking a focus, in this post we focus on web pentesting, as it is beginner friendly. Also web applications are the bread and butter in companies nowadays.\nKey concepts to study:\nCIA Triad: CIA refers to Confidentiality, Integrity and Availability. These three concepts are key in information security, and describe properties we want to ensure in our systems and information. Web Security basics, OWASP: Study the OWASP Top 10, which summarizes most frequent web security risks. Authentication and session control: Understand the concepts of Authentication and Authorization, research about how session is handled in web apps, cookies, JWT tokens, etc. Input validation \u0026amp; injection attacks: Learn about SQL Injection, Cross-Site Scripting (XSS), Code Injection, SSTI, and every injection type. Secure development lifecycle: Find out how to implement security controls in code. This can be more related to Blue Team, but as Red Teamer it is important to understand. Firewall evasion: What a firewall is and some techniques/methods to bypass. Some cryptography: Understand what a chiper and a hash are, how information is encrypted to prevent access from 3rd parties. Focusing on web, read about TLS protocol. There are many more topics you can research and learn, but this could be a nice starting point.\nTools and platforms to learn Now you have an idea of what to study, let\u0026rsquo;s see how to start in practical terms.\nSome platforms I personally recommend:\nOverTheWire: Here you can find some CTFs (Capture The Flag) which are fun to play and also really instructive. Bandit games are a must for complete beginners, as you will explore some linux and bash concepts which are basic to continue. The games are leveled by difficulty, in their web you can get all the information about how to play, only a terminal and SSH is required. This helps building your foundation in Linux OS. HackTheBox: Nº 1 platform in cybersecurity. Has a lot of resources to learn all this core fundamentals, and also red team / blue team security topics. It is focused on labs where you can test your skills hacking different boxes but if you really want to learn it is worth to invest time and money in the academy. I have to say the level here is high, specially if you try to hack machines on your own without using some guide or writeup. TryHackMe: More beginner friendly than hackthebox, it provides a lot of guided learning resources. PortSwigger Labs: Practical labs about specific topics, focused on web hacking. They are great to learn and understand different types of attacks, injections, and security misconfigurations. I would recommend digging into this once you have the theoretical basis about these concepts. I have to mention a few tools I am sure you\u0026rsquo;d end up using:\nNmap: This is probably the most famous tool in hacking, allowing you to gather information about ports and services running in a machine. Burpsuite: A proxy tool widely used in web application security testing. It basically allows you to intercept and modify web requests, which can be used to perform several types of attacks. Metasploit: The most used pentesting framework. Contains a large amount of scripts and exploits ready to run. Another crucial step here is to set up your virtual lab environment to test vulnerable applications. To achieve this goal, there are some Linux distributions like Kali, Parrot or BlackArch, but that\u0026rsquo;s a topic for another post.\nFinal thoughs To sum up, this would be my personal roadmap:\nLearn the fundamentals, specially Linux and networking. Install some Linux in a virtual machine, play with it, get comfortable with the terminal. You can start with bandit wargames in OverTheWire. Complete every level and make sure to understand everything as clear as possible. Move to guided boxes on HackTheBox. I recommend you joining their Discord, ask questions, community is great there! Take notes, repeat, learn, improve your skills. Maybe use your own lab environment, create your own vulnerable apps. Hacking is a mixing of curiosity, study and practice. Being passionate and motivated about it is really helpful and will definitely speed up the process. The path is long and really challenging, so keep it going!\n\u0026ldquo;Yes, I am a criminal. My crime is that of curiosity.\u0026rdquo; — The Mentor (Loyd Blankenship) at The Hacker Manifesto\n","permalink":"http://localhost:1313/posts/starting-point/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIf you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\u003c/p\u003e","title":"Starting Point"},{"content":"Introduction In this post series we are going to solve every level from bandit in OverTheWire This guide pretends to be a writeup containing the solutions of the level, designed for beginners.\nTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing WSL, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\nEvery section will contain the solution as well as some tips for people who is absolutely beginner.\nTips First of all, some tips:\nDo not use this as first resource to solve the levels. Try on your own, make mistakes and learn from them. Only check the solution as last resource or if you are completely new and you have absolutely no idea about what to do next. Take notes from your learning. Write up commands, tips and everything which can be useful in the future. Make sure to understand everything. Is a good idea to note the passwords for every level. If you want to continue letter, you can simply log in in the desired level. It is annoying to repeat everything! Follow the tips and information provided at OverTheWire website. Levels Here is my solution for every level:\nBandit0 Bandit1 Bandit2 Bandit3 Bandit4 Bandit5 Bandit6 Bandit7 ","permalink":"http://localhost:1313/posts/otw/bandit/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIn this post series we are going to solve every level from bandit in \u003ca href=\"https://overthewire.org/wargames/bandit/\"\u003e\u003cem\u003eOverTheWire\u003c/em\u003e\u003c/a\u003e\nThis guide pretends to be a writeup containing the solutions of the level, designed for beginners.\u003c/p\u003e\n\u003cp\u003eTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing \u003ca href=\"https://learn.microsoft.com/en-us/windows/wsl/install\"\u003eWSL\u003c/a\u003e, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\u003c/p\u003e","title":"Bandit"},{"content":"Level description The goal of this level is for you to log into the game using SSH. The host to which you need to connect is bandit.labs.overthewire.org, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\nTips for beginners Read a bit about what SSH is. Research about what a port is. Solution This is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go here.\nAt Linux, we can use ssh client to connect to the server. It should be installed by default on your system. If not, please first research about how to install. Once you have the SSH client installed, you can log in into the first level as follows:\nssh bandit0@bandit.labs.overthewire.org -p 2220 Syntax is simple: ssh \u0026lt;username\u0026gt;@\u0026lt;hostname\u0026gt; -p \u0026lt;port\u0026gt;. Usually SSH runs on port 22 by default, but they changed to port 2220 so we must specify it in the command.\nOnce you try to log in, you will see something like this: NB: If it\u0026rsquo;s the first time you try to log in, you will be asked about the authenticity of the host. Just type yes.\nType the password bandit0 and press enter. Now you are inside bandit server, ready to begin with bandit1!\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit0/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe goal of this level is for you to log into the game using SSH. The host to which you need to connect is \u003cstrong\u003ebandit.labs.overthewire.org\u003c/strong\u003e, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eRead a bit about what SSH is.\u003c/li\u003e\n\u003cli\u003eResearch about what a port is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go \u003ca href=\"https://en.wikipedia.org/wiki/Secure_Shell\"\u003ehere\u003c/a\u003e.\u003c/p\u003e","title":"Bandit0"},{"content":"Level description The password for the next level is stored in a file called readme located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\nTips for beginners Learn about home directory in Linux. Learn to use cat and ls commands. Solution First step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\nls This shows in terminal the files at the current directory. There you will see the readme file.\nNow we can to check the contents, so let\u0026rsquo;s use cat:\ncat readme To read a file, we use cat \u0026lt;filename\u0026gt;.\nNB: Not every file is human readable in Linux. We deep more about this in later levels.\nThe content of the readme file reveals the password for bandit2 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit1/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u003cstrong\u003ereadme\u003c/strong\u003e located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn about home directory in Linux.\u003c/li\u003e\n\u003cli\u003eLearn to use \u003ccode\u003ecat\u003c/code\u003e and \u003ccode\u003els\u003c/code\u003e commands.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eFirst step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\u003c/p\u003e","title":"Bandit1"},{"content":"Level description The password for the next level is stored in a file called - located in the home directory\nTips for beginners Try to understand why previous solution is not working as you expect. Solution You may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our cat command: The terminal is waiting for something else. This happens due to character - is used to pass arguments to our commands, and the linux shell is interpreting that. To prevent that, we could use:\ncat ./- NB: Dot . is used to refer current directory. The slash / is used at the end of directory name.\nWe get the password for bandit3 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit2/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called - located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eTry to understand why previous solution is not working as you expect.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eYou may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our \u003ccode\u003ecat\u003c/code\u003e command:\n\u003cimg alt=\"bandit2\" loading=\"lazy\" src=\"/images/otw/bandit/bandit2/0.png\"\u003e\u003c/p\u003e\n\u003cp\u003eThe terminal is \u003cem\u003ewaiting\u003c/em\u003e for something else. This happens due to character \u003ccode\u003e-\u003c/code\u003e is used to pass arguments to our commands, and the linux shell is interpreting that.\nTo prevent that, we could use:\u003c/p\u003e","title":"Bandit2"},{"content":"Level description The password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\nTips for beginners Think about how to escape the whitespaces. Solution After login in the machine as bandit3, we can see the filename \u0026ndash;spaces in this filename\u0026ndash;.\nNow we have 2 problems:\nSame as previous level, filename starts with --, so it will be interpreted as an argument. Address this problem using ./. Filename contains whitespaces. This is an issue, as bash interpretes whitespaces to separate commands. To solve the second problem, we must escape the whitespace character in some way. Here is the solution:\ncat ./--spaces\\ in\\ this\\ filename-- NB: Little trick, you can start writting filename and press Tab to autocomplete the name. The \\ is going to be inserted automatically.\nJust using the \\ we can escape the whitespace.\nNow we can continue with the bandit4 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit3/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eThink about how to \u003cem\u003eescape\u003c/em\u003e the whitespaces.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAfter login in the machine as bandit3, we can see the filename \u003cem\u003e\u0026ndash;spaces in this filename\u0026ndash;\u003c/em\u003e.\u003c/p\u003e\n\u003cp\u003eNow we have 2 problems:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eSame as previous level, filename starts with \u003ccode\u003e--\u003c/code\u003e, so it will be interpreted as an argument. Address this problem using \u003ccode\u003e./\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003eFilename contains \u003cstrong\u003ewhitespaces\u003c/strong\u003e. This is an issue, as bash interpretes whitespaces to separate commands.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eTo solve the second problem, we must escape the whitespace character in some way. Here is the solution:\u003c/p\u003e","title":"Bandit3"},{"content":"Level description The password for the next level is stored in a hidden file in the inhere directory.\nTips for beginners Learn how to navigate directories in Linux. First understand what a hidden file is. Solution Listing directory files inside bandit4\u0026rsquo;s home directory, show directory inhere.\nNB: How to distinguish files and directories in Linux? Use ls -l and see the difference.\nWe have 2 options now:\nMove to inhere directory and check contens again. Check contents directly. Moving to another directory can be done using cd \u0026lt;dirName\u0026gt;. If you prefer to check directory contents directly, use ls \u0026lt;dirName\u0026gt;.\nAfter checking inhere contents via ls, we see nothing. The reason is the file is a hidden file. A hidden file in Linux is everyfile whose name starts with dot .. Hidden files are not shown by default with ls command, so we must add a special flag -a to list all files: NB: Both flags -l and -a cna be combined into a single flag -al, which is shorter to type.\nAs you can see, filename is \u0026hellip;Hidding-From-You starting with three dots. Reading file contents should be easy at this point!\nNext level is bandit5.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit4/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a hidden file in the inhere directory.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to navigate directories in Linux.\u003c/li\u003e\n\u003cli\u003eFirst understand what a hidden file is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eListing directory files inside bandit4\u0026rsquo;s home directory, show directory \u003cstrong\u003einhere\u003c/strong\u003e.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e How to distinguish files and directories in Linux? Use \u003ccode\u003els -l\u003c/code\u003e and see the difference.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eWe have 2 options now:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eMove to inhere directory and check contens again.\u003c/li\u003e\n\u003cli\u003eCheck contents directly.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eMoving to another directory can be done using \u003ccode\u003ecd \u0026lt;dirName\u0026gt;\u003c/code\u003e. If you prefer to check directory contents directly, use \u003ccode\u003els \u0026lt;dirName\u0026gt;\u003c/code\u003e.\u003c/p\u003e","title":"Bandit4"},{"content":"Level description The password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\nTips for beginners What means human-readable file? Is there any way to check filetype at Linux?. Solution Checking inhere\u0026rsquo;s contents shows some files names \u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII here\nSo now, our goal is checking if file content of every file in the folder is ASCII or not. file \u0026lt;filename\u0026gt; does the job. Note the use of *. That called a wildcard regular expression, we\u0026rsquo;ll deep into it in later levels. An easy approach could be checking every file separately:\nfile ./--file00 file ./--file01 ... file ./--file09 But that\u0026rsquo;s not funny, imagine we have 100 files to check. All the files are in the same directory, so we can use cat ./* where ./* matches every filename in the directory, applying file to every file.\nNB: Another approach is to use find with certaing flags. Try to do in different ways, don\u0026rsquo;t stick to my solution.\nThe file \u0026ndash;file00 content is not readable, so get password from \u0026ndash;file07 and continue with bandit6.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit5/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eWhat means human-readable file?\u003c/li\u003e\n\u003cli\u003eIs there any way to check filetype at Linux?.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eChecking inhere\u0026rsquo;s contents shows some files names \u003cstrong\u003e\u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09\u003c/strong\u003e. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII \u003ca href=\"https://en.wikipedia.org/wiki/ASCII\"\u003ehere\u003c/a\u003e\u003c/p\u003e","title":"Bandit5"},{"content":"Level description The password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\nhuman-readable 1033 bytes in size not executable Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution The purpose of the level is showing us how to find for files. Listing contents of inhere, we can see some folders, containing a lot of files inside: NB: Adding -R to ls shows recursively the content of every folder inside the directory listed.\nSo this time, checking every file is not an option. We need to find a file with some properties, specific size, not excutable and human-readable. Let\u0026rsquo;s explain the command we\u0026rsquo;re using:\nfind inhere/ -size 1033c ! -executable First, we specify the directory, in this case inhere. The option -size 1033c returns files of 1033 bytes. Then, with -executable we would get executable files, but we want not executable files, that\u0026rsquo;s why we are adding ! before.\nNB: By default, the -size option takes as argument the number of blocks. For example, -size 2 means 2 blocks of 512 bytes, so its 1024. The c is used to specify exact bytes. Don\u0026rsquo;t ask me why it\u0026rsquo;s c and not b 😅.\nThe property of human-readability is not implemented in find. This is not an issue, previous command returns a single file and it is human readable (we could confirm using file): Extra tip: try to use the following:\nfind inhere/ -size 1033c ! -executable | file You get the same result! The pipe | is a great tool to execute 2+ commands in one line.\nGet your password and continue with bandit7.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit6/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ehuman-readable\u003c/li\u003e\n\u003cli\u003e1033 bytes in size\u003c/li\u003e\n\u003cli\u003enot executable\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThe purpose of the level is showing us how to find for files. Listing contents of \u003cstrong\u003einhere\u003c/strong\u003e, we can see some folders, containing a lot of files inside:\n\u003cimg alt=\"bandit6_0\" loading=\"lazy\" src=\"/images/otw/bandit/bandit6/0.png\"\u003e\u003c/p\u003e","title":"Bandit6"},{"content":"Level description The password for the next level is stored somewhere on the server and has all of the following properties:\nowned by user bandit7 owned by group bandit6 33 bytes in size Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution This is very straightforward to do after completing previous level. Now we need to identify a file owned by user bandit7 and group bandi6. Furthermore, the file is somewhere on the server, which means we have to find in the root directory /.\nfind / -user bandit7 -group bandit6 -size 33c 2\u0026gt;/dev/null NB: I added that strange 2\u0026gt;/dev/null to filter error output. The reason why it works like that is more technical, for now just save this a fast way to filter errors in terminal. We get some errors because looking for files in the whole server may return some unaccesible files, as we don\u0026rsquo;t have root user permissions. We will study Linux permissions in later levels.\nWe should get a single file, containing password for bandit8.\nGet your password and continue with\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit7/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored somewhere on the server and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eowned by user bandit7\u003c/li\u003e\n\u003cli\u003eowned by group bandit6\u003c/li\u003e\n\u003cli\u003e33 bytes in size\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is very straightforward to do after completing previous level. Now we need to identify a file owned by user bandit7 and group bandi6. Furthermore, the file is \u003cstrong\u003esomewhere on the server\u003c/strong\u003e, which means we have to find in the root directory \u003ccode\u003e/\u003c/code\u003e.\u003c/p\u003e","title":"Bandit7"},{"content":"Level description The password for the next level is stored in the file data.txt next to the word millionth.\nTips for beginners Learn how to filter file contents. Solution This is very straightforward to do after completing previous level. Now we need to identify a file owned by user bandit7 and group bandi6. Furthermore, the file is somewhere on the server, which means we have to find in the root directory /.\nfind / -user bandit7 -group bandit6 -size 33c 2\u0026gt;/dev/null NB: I added that strange 2\u0026gt;/dev/null to filter error output. The reason why it works like that is more technical, for now just save this a fast way to filter errors in terminal. We get some errors because looking for files in the whole server may return some unaccesible files, as we don\u0026rsquo;t have root user permissions. We will study Linux permissions in later levels.\nWe should get a single file, containing password for bandit8.\nGet your password and continue with\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit8/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the file data.txt next to the word \u003cstrong\u003emillionth\u003c/strong\u003e.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to filter file contents.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is very straightforward to do after completing previous level. Now we need to identify a file owned by user bandit7 and group bandi6. Furthermore, the file is \u003cstrong\u003esomewhere on the server\u003c/strong\u003e, which means we have to find in the root directory \u003ccode\u003e/\u003c/code\u003e.\u003c/p\u003e","title":"Bandit8"},{"content":"👨‍💻 whoami Hey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\nWhat is this❓​ This blog is basically my thoughts on several hacking topics. Here you’ll see:\nWriteups from CTF challenges, from platforms like HackTheBox or OverTheWire.\nWalkthroughs and notes on pentesting techniques I’m learning or testing.\nSome posts on cryptography — because math can be fun (sometimes).\nRandom topics that freaks like me may (just may) find interesting.\nThe idea is simple: share what I learn, document my journey, and maybe help others who are also diving into the exciting world of ethical hacking.\n📫 Contact Want to say hi, share ideas, or just geek out about hacking? Reach me here:\n📧 Email: mrb0b1073@proton.me 💻​ GitHub: mrb0b173 🟩​ HackTheBox: mrb0b1073 ","permalink":"http://localhost:1313/about/","summary":"\u003ch2 id=\"-whoami\"\u003e👨‍💻 whoami\u003c/h2\u003e\n\u003cp\u003eHey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\u003c/p\u003e\n\u003chr\u003e\n\u003ch2 id=\"what-is-this\"\u003eWhat is this❓​\u003c/h2\u003e\n\u003cp\u003eThis blog is basically my thoughts on several hacking topics. Here you’ll see:\u003c/p\u003e","title":"About"},{"content":"Hey! 👋 I\u0026rsquo;m mrb0b1073 and this is my first post.\nWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\nExcited to start this adventure!\n","permalink":"http://localhost:1313/posts/hello-world/","summary":"\u003cp\u003eHey! 👋 I\u0026rsquo;m \u003cstrong\u003emrb0b1073\u003c/strong\u003e and this is my first post.\u003c/p\u003e\n\u003cp\u003eWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\u003cbr\u003e\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\u003c/p\u003e\n\u003cp\u003eExcited to start this adventure!\u003c/p\u003e","title":"Hello World"},{"content":"Introduction If you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\nIn cybersecurity there are broadly two complementary roles: Blue Team and Red Team. Blue Teams focus on defense, monitoring, incident response, hardening systems and keeping services secure, while Red Teams simulate attackers to find weaknesses and prove what an adversary could do. Ethical hacking aligns closely with Red Team operations, but cybersecurity is highly transversal across IT. There are many specialities or areas, such as cloud security, appsec, pentesting, forensics, governance, risk management, malware analysis, etc. Every topic could deserve its own post, so let\u0026rsquo;s keep it simple and focus on ethical hacking.\nHacker philosophy Let\u0026rsquo;s start with the idea of what is exactly a hacker. A hacker is someone who explores systems to understand how they work, finds creative ways to make or fix things, and solves technical problems. Historically the word describes curiosity, craft, and a drive to improve systems — not criminality. It is important to make the distinction between hacker and cracker, also called cybercriminal. A hacker explores, builds, discloses responsibly and works to improve security. They work in authorized environments or labs. On the other hand, a cracker breaks into systems for theft, vandalism or other illicit gain.\nHere you can find the most popularized ideas often summarized as the hacker ethic:\nCuriosity first: Learn by exploring and tinkering. Freedom of information: All knowledge should be shared to help progress. This fits properly with the idea of open source. Mistrust of needless authority: Centralized control sometimes blocks innovation. It is always good to question anything, specially common assumptions. Meritocracy: Skills, craft and results matter more than titles. Craftsmanship \u0026amp; elegance: Technical beauty matters. Build clean, clever and efficient solutions. Responsability \u0026amp; ethics: Use your skills to build, fix, educate and defend, not to harm. Core fundamentals Assuming you want to init yourself in hacking, you should first build competence across three basic pillars.\nOperating Systems You should learn as much as possible about Linux and Windows. Specially Linux, all the tools you will be using are meant to be used in a Linux environment. Skill with shell is required, learn basic commands and how to interact with the OS using the terminal. Research about processes, file permissions, package management and logs. A large proportion of web servers around the world run on Linux, although Windows is also widely used. Windows knowledge is really valuable too, considering active directory is strongly used in corporate environments.\nNetworking You have to understand how computers communicate each other. Understand basic networking concepts, IP adresses, subnetting, proxies, find out how internet works. Study some protocols such as TCP/IP, HTTP, DNS or SSH. This could sound confusing for beginners, but this step is not optional! Study different client/server models and how services expose attack surfaces.\nProgramming \u0026amp; scripting Is this completely required? Maybe not for complete beginners. Does it help? Absolutely yes. Understanding how web apps or any type of application works makes things much easier. You can imagine different entry points to exploit if you understand how systems are designed. Also writing scripts in bash or python makes you more productive through automation.\nEthical Hacking foundations Once you feel confident with these 3 pillars, you can go to the next step. You can study about different topics and areas. For example, binary exploiting, web pentesting, mobile pentesting, wireless hacking, etc. You should start picking a focus, in this post we focus on web pentesting, as it is beginner friendly. Also web applications are the bread and butter in companies nowadays.\nKey concepts to study:\nCIA Triad: CIA refers to Confidentiality, Integrity and Availability. These three concepts are key in information security, and describe properties we want to ensure in our systems and information. Web Security basics, OWASP: Study the OWASP Top 10, which summarizes most frequent web security risks. Authentication and session control: Understand the concepts of Authentication and Authorization, research about how session is handled in web apps, cookies, JWT tokens, etc. Input validation \u0026amp; injection attacks: Learn about SQL Injection, Cross-Site Scripting (XSS), Code Injection, SSTI, and every injection type. Secure development lifecycle: Find out how to implement security controls in code. This can be more related to Blue Team, but as Red Teamer it is important to understand. Firewall evasion: What a firewall is and some techniques/methods to bypass. Some cryptography: Understand what a chiper and a hash are, how information is encrypted to prevent access from 3rd parties. Focusing on web, read about TLS protocol. There are many more topics you can research and learn, but this could be a nice starting point.\nTools and platforms to learn Now you have an idea of what to study, let\u0026rsquo;s see how to start in practical terms.\nSome platforms I personally recommend:\nOverTheWire: Here you can find some CTFs (Capture The Flag) which are fun to play and also really instructive. Bandit games are a must for complete beginners, as you will explore some linux and bash concepts which are basic to continue. The games are leveled by difficulty, in their web you can get all the information about how to play, only a terminal and SSH is required. This helps building your foundation in Linux OS. HackTheBox: Nº 1 platform in cybersecurity. Has a lot of resources to learn all this core fundamentals, and also red team / blue team security topics. It is focused on labs where you can test your skills hacking different boxes but if you really want to learn it is worth to invest time and money in the academy. I have to say the level here is high, specially if you try to hack machines on your own without using some guide or writeup. TryHackMe: More beginner friendly than hackthebox, it provides a lot of guided learning resources. PortSwigger Labs: Practical labs about specific topics, focused on web hacking. They are great to learn and understand different types of attacks, injections, and security misconfigurations. I would recommend digging into this once you have the theoretical basis about these concepts. I have to mention a few tools I am sure you\u0026rsquo;d end up using:\nNmap: This is probably the most famous tool in hacking, allowing you to gather information about ports and services running in a machine. Burpsuite: A proxy tool widely used in web application security testing. It basically allows you to intercept and modify web requests, which can be used to perform several types of attacks. Metasploit: The most used pentesting framework. Contains a large amount of scripts and exploits ready to run. Another crucial step here is to set up your virtual lab environment to test vulnerable applications. To achieve this goal, there are some Linux distributions like Kali, Parrot or BlackArch, but that\u0026rsquo;s a topic for another post.\nFinal thoughs To sum up, this would be my personal roadmap:\nLearn the fundamentals, specially Linux and networking. Install some Linux in a virtual machine, play with it, get comfortable with the terminal. You can start with bandit wargames in OverTheWire. Complete every level and make sure to understand everything as clear as possible. Move to guided boxes on HackTheBox. I recommend you joining their Discord, ask questions, community is great there! Take notes, repeat, learn, improve your skills. Maybe use your own lab environment, create your own vulnerable apps. Hacking is a mixing of curiosity, study and practice. Being passionate and motivated about it is really helpful and will definitely speed up the process. The path is long and really challenging, so keep it going!\n\u0026ldquo;Yes, I am a criminal. My crime is that of curiosity.\u0026rdquo; — The Mentor (Loyd Blankenship) at The Hacker Manifesto\n","permalink":"http://localhost:1313/posts/starting-point/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIf you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\u003c/p\u003e","title":"Starting Point"},{"content":"Introduction In this post series we are going to solve every level from bandit in OverTheWire This guide pretends to be a writeup containing the solutions of the level, designed for beginners.\nTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing WSL, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\nEvery section will contain the solution as well as some tips for people who is absolutely beginner.\nTips First of all, some tips:\nDo not use this as first resource to solve the levels. Try on your own, make mistakes and learn from them. Only check the solution as last resource or if you are completely new and you have absolutely no idea about what to do next. Take notes from your learning. Write up commands, tips and everything which can be useful in the future. Make sure to understand everything. Is a good idea to note the passwords for every level. If you want to continue letter, you can simply log in in the desired level. It is annoying to repeat everything! Follow the tips and information provided at OverTheWire website. Levels Here is my solution for every level:\nBandit0 Bandit1 Bandit2 Bandit3 Bandit4 Bandit5 Bandit6 Bandit7 ","permalink":"http://localhost:1313/posts/otw/bandit/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIn this post series we are going to solve every level from bandit in \u003ca href=\"https://overthewire.org/wargames/bandit/\"\u003e\u003cem\u003eOverTheWire\u003c/em\u003e\u003c/a\u003e\nThis guide pretends to be a writeup containing the solutions of the level, designed for beginners.\u003c/p\u003e\n\u003cp\u003eTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing \u003ca href=\"https://learn.microsoft.com/en-us/windows/wsl/install\"\u003eWSL\u003c/a\u003e, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\u003c/p\u003e","title":"Bandit"},{"content":"Level description The goal of this level is for you to log into the game using SSH. The host to which you need to connect is bandit.labs.overthewire.org, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\nTips for beginners Read a bit about what SSH is. Research about what a port is. Solution This is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go here.\nAt Linux, we can use ssh client to connect to the server. It should be installed by default on your system. If not, please first research about how to install. Once you have the SSH client installed, you can log in into the first level as follows:\nssh bandit0@bandit.labs.overthewire.org -p 2220 Syntax is simple: ssh \u0026lt;username\u0026gt;@\u0026lt;hostname\u0026gt; -p \u0026lt;port\u0026gt;. Usually SSH runs on port 22 by default, but they changed to port 2220 so we must specify it in the command.\nOnce you try to log in, you will see something like this: NB: If it\u0026rsquo;s the first time you try to log in, you will be asked about the authenticity of the host. Just type yes.\nType the password bandit0 and press enter. Now you are inside bandit server, ready to begin with bandit1!\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit0/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe goal of this level is for you to log into the game using SSH. The host to which you need to connect is \u003cstrong\u003ebandit.labs.overthewire.org\u003c/strong\u003e, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eRead a bit about what SSH is.\u003c/li\u003e\n\u003cli\u003eResearch about what a port is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go \u003ca href=\"https://en.wikipedia.org/wiki/Secure_Shell\"\u003ehere\u003c/a\u003e.\u003c/p\u003e","title":"Bandit0"},{"content":"Level description The password for the next level is stored in a file called readme located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\nTips for beginners Learn about home directory in Linux. Learn to use cat and ls commands. Solution First step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\nls This shows in terminal the files at the current directory. There you will see the readme file.\nNow we can to check the contents, so let\u0026rsquo;s use cat:\ncat readme To read a file, we use cat \u0026lt;filename\u0026gt;.\nNB: Not every file is human readable in Linux. We deep more about this in later levels.\nThe content of the readme file reveals the password for bandit2 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit1/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u003cstrong\u003ereadme\u003c/strong\u003e located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn about home directory in Linux.\u003c/li\u003e\n\u003cli\u003eLearn to use \u003ccode\u003ecat\u003c/code\u003e and \u003ccode\u003els\u003c/code\u003e commands.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eFirst step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\u003c/p\u003e","title":"Bandit1"},{"content":"Level description The password for the next level is stored in a file called - located in the home directory\nTips for beginners Try to understand why previous solution is not working as you expect. Solution You may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our cat command: The terminal is waiting for something else. This happens due to character - is used to pass arguments to our commands, and the linux shell is interpreting that. To prevent that, we could use:\ncat ./- NB: Dot . is used to refer current directory. The slash / is used at the end of directory name.\nWe get the password for bandit3 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit2/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called - located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eTry to understand why previous solution is not working as you expect.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eYou may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our \u003ccode\u003ecat\u003c/code\u003e command:\n\u003cimg alt=\"bandit2\" loading=\"lazy\" src=\"/images/otw/bandit/bandit2/0.png\"\u003e\u003c/p\u003e\n\u003cp\u003eThe terminal is \u003cem\u003ewaiting\u003c/em\u003e for something else. This happens due to character \u003ccode\u003e-\u003c/code\u003e is used to pass arguments to our commands, and the linux shell is interpreting that.\nTo prevent that, we could use:\u003c/p\u003e","title":"Bandit2"},{"content":"Level description The password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\nTips for beginners Think about how to escape the whitespaces. Solution After login in the machine as bandit3, we can see the filename \u0026ndash;spaces in this filename\u0026ndash;.\nNow we have 2 problems:\nSame as previous level, filename starts with --, so it will be interpreted as an argument. Address this problem using ./. Filename contains whitespaces. This is an issue, as bash interpretes whitespaces to separate commands. To solve the second problem, we must escape the whitespace character in some way. Here is the solution:\ncat ./--spaces\\ in\\ this\\ filename-- NB: Little trick, you can start writting filename and press Tab to autocomplete the name. The \\ is going to be inserted automatically.\nJust using the \\ we can escape the whitespace.\nNow we can continue with the bandit4 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit3/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eThink about how to \u003cem\u003eescape\u003c/em\u003e the whitespaces.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAfter login in the machine as bandit3, we can see the filename \u003cem\u003e\u0026ndash;spaces in this filename\u0026ndash;\u003c/em\u003e.\u003c/p\u003e\n\u003cp\u003eNow we have 2 problems:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eSame as previous level, filename starts with \u003ccode\u003e--\u003c/code\u003e, so it will be interpreted as an argument. Address this problem using \u003ccode\u003e./\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003eFilename contains \u003cstrong\u003ewhitespaces\u003c/strong\u003e. This is an issue, as bash interpretes whitespaces to separate commands.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eTo solve the second problem, we must escape the whitespace character in some way. Here is the solution:\u003c/p\u003e","title":"Bandit3"},{"content":"Level description The password for the next level is stored in a hidden file in the inhere directory.\nTips for beginners Learn how to navigate directories in Linux. First understand what a hidden file is. Solution Listing directory files inside bandit4\u0026rsquo;s home directory, show directory inhere.\nNB: How to distinguish files and directories in Linux? Use ls -l and see the difference.\nWe have 2 options now:\nMove to inhere directory and check contens again. Check contents directly. Moving to another directory can be done using cd \u0026lt;dirName\u0026gt;. If you prefer to check directory contents directly, use ls \u0026lt;dirName\u0026gt;.\nAfter checking inhere contents via ls, we see nothing. The reason is the file is a hidden file. A hidden file in Linux is everyfile whose name starts with dot .. Hidden files are not shown by default with ls command, so we must add a special flag -a to list all files: NB: Both flags -l and -a cna be combined into a single flag -al, which is shorter to type.\nAs you can see, filename is \u0026hellip;Hidding-From-You starting with three dots. Reading file contents should be easy at this point!\nNext level is bandit5.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit4/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a hidden file in the inhere directory.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to navigate directories in Linux.\u003c/li\u003e\n\u003cli\u003eFirst understand what a hidden file is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eListing directory files inside bandit4\u0026rsquo;s home directory, show directory \u003cstrong\u003einhere\u003c/strong\u003e.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e How to distinguish files and directories in Linux? Use \u003ccode\u003els -l\u003c/code\u003e and see the difference.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eWe have 2 options now:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eMove to inhere directory and check contens again.\u003c/li\u003e\n\u003cli\u003eCheck contents directly.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eMoving to another directory can be done using \u003ccode\u003ecd \u0026lt;dirName\u0026gt;\u003c/code\u003e. If you prefer to check directory contents directly, use \u003ccode\u003els \u0026lt;dirName\u0026gt;\u003c/code\u003e.\u003c/p\u003e","title":"Bandit4"},{"content":"Level description The password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\nTips for beginners What means human-readable file? Is there any way to check filetype at Linux?. Solution Checking inhere\u0026rsquo;s contents shows some files names \u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII here\nSo now, our goal is checking if file content of every file in the folder is ASCII or not. file \u0026lt;filename\u0026gt; does the job. Note the use of *. That called a wildcard regular expression, we\u0026rsquo;ll deep into it in later levels. An easy approach could be checking every file separately:\nfile ./--file00 file ./--file01 ... file ./--file09 But that\u0026rsquo;s not funny, imagine we have 100 files to check. All the files are in the same directory, so we can use cat ./* where ./* matches every filename in the directory, applying file to every file.\nNB: Another approach is to use find with certaing flags. Try to do in different ways, don\u0026rsquo;t stick to my solution.\nThe file \u0026ndash;file00 content is not readable, so get password from \u0026ndash;file07 and continue with bandit6.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit5/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eWhat means human-readable file?\u003c/li\u003e\n\u003cli\u003eIs there any way to check filetype at Linux?.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eChecking inhere\u0026rsquo;s contents shows some files names \u003cstrong\u003e\u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09\u003c/strong\u003e. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII \u003ca href=\"https://en.wikipedia.org/wiki/ASCII\"\u003ehere\u003c/a\u003e\u003c/p\u003e","title":"Bandit5"},{"content":"Level description The password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\nhuman-readable 1033 bytes in size not executable Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution The purpose of the level is showing us how to find for files. Listing contents of inhere, we can see some folders, containing a lot of files inside: NB: Adding -R to ls shows recursively the content of every folder inside the directory listed.\nSo this time, checking every file is not an option. We need to find a file with some properties, specific size, not excutable and human-readable. Let\u0026rsquo;s explain the command we\u0026rsquo;re using:\nfind inhere/ -size 1033c ! -executable First, we specify the directory, in this case inhere. The option -size 1033c returns files of 1033 bytes. Then, with -executable we would get executable files, but we want not executable files, that\u0026rsquo;s why we are adding ! before.\nNB: By default, the -size option takes as argument the number of blocks. For example, -size 2 means 2 blocks of 512 bytes, so its 1024. The c is used to specify exact bytes. Don\u0026rsquo;t ask me why it\u0026rsquo;s c and not b 😅.\nThe property of human-readability is not implemented in find. This is not an issue, previous command returns a single file and it is human readable (we could confirm using file): Extra tip: try to use the following:\nfind inhere/ -size 1033c ! -executable | file You get the same result! The pipe | is a great tool to execute 2+ commands in one line.\nGet your password and continue with bandit7.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit6/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ehuman-readable\u003c/li\u003e\n\u003cli\u003e1033 bytes in size\u003c/li\u003e\n\u003cli\u003enot executable\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThe purpose of the level is showing us how to find for files. Listing contents of \u003cstrong\u003einhere\u003c/strong\u003e, we can see some folders, containing a lot of files inside:\n\u003cimg alt=\"bandit6_0\" loading=\"lazy\" src=\"/images/otw/bandit/bandit6/0.png\"\u003e\u003c/p\u003e","title":"Bandit6"},{"content":"Level description The password for the next level is stored somewhere on the server and has all of the following properties:\nowned by user bandit7 owned by group bandit6 33 bytes in size Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution This is very straightforward to do after completing previous level. Now we need to identify a file owned by user bandit7 and group bandi6. Furthermore, the file is somewhere on the server, which means we have to find in the root directory /.\nfind / -user bandit7 -group bandit6 -size 33c 2\u0026gt;/dev/null NB: I added that strange 2\u0026gt;/dev/null to filter error output. The reason why it works like that is more technical, for now just save this a fast way to filter errors in terminal. We get some errors because looking for files in the whole server may return some unaccesible files, as we don\u0026rsquo;t have root user permissions. We will study Linux permissions in later levels.\nWe should get a single file, containing password for bandit8.\nGet your password and continue with\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit7/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored somewhere on the server and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eowned by user bandit7\u003c/li\u003e\n\u003cli\u003eowned by group bandit6\u003c/li\u003e\n\u003cli\u003e33 bytes in size\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is very straightforward to do after completing previous level. Now we need to identify a file owned by user bandit7 and group bandi6. Furthermore, the file is \u003cstrong\u003esomewhere on the server\u003c/strong\u003e, which means we have to find in the root directory \u003ccode\u003e/\u003c/code\u003e.\u003c/p\u003e","title":"Bandit7"},{"content":"Level description The password for the next level is stored in the file data.txt next to the word millionth.\nTips for beginners Learn how to filter file contents. Solution At previous levels, we discovered how to find for files. Now it\u0026rsquo;s time to find for content inside a file. grep command is going to help with that task.\nGet your password and continue with\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit8/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the file data.txt next to the word \u003cstrong\u003emillionth\u003c/strong\u003e.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to filter file contents.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAt previous levels, we discovered how to find for files. Now it\u0026rsquo;s time to find for content inside a file. \u003ccode\u003egrep\u003c/code\u003e command is going to help with that task.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"bandit6_1\" loading=\"lazy\" src=\"/images/otw/bandit/bandit6/1.png\"\u003e\u003c/p\u003e\n\u003cp\u003eGet your password and continue with\u003c/p\u003e","title":"Bandit8"},{"content":"👨‍💻 whoami Hey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\nWhat is this❓​ This blog is basically my thoughts on several hacking topics. Here you’ll see:\nWriteups from CTF challenges, from platforms like HackTheBox or OverTheWire.\nWalkthroughs and notes on pentesting techniques I’m learning or testing.\nSome posts on cryptography — because math can be fun (sometimes).\nRandom topics that freaks like me may (just may) find interesting.\nThe idea is simple: share what I learn, document my journey, and maybe help others who are also diving into the exciting world of ethical hacking.\n📫 Contact Want to say hi, share ideas, or just geek out about hacking? Reach me here:\n📧 Email: mrb0b1073@proton.me 💻​ GitHub: mrb0b173 🟩​ HackTheBox: mrb0b1073 ","permalink":"http://localhost:1313/about/","summary":"\u003ch2 id=\"-whoami\"\u003e👨‍💻 whoami\u003c/h2\u003e\n\u003cp\u003eHey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\u003c/p\u003e\n\u003chr\u003e\n\u003ch2 id=\"what-is-this\"\u003eWhat is this❓​\u003c/h2\u003e\n\u003cp\u003eThis blog is basically my thoughts on several hacking topics. Here you’ll see:\u003c/p\u003e","title":"About"},{"content":"Hey! 👋 I\u0026rsquo;m mrb0b1073 and this is my first post.\nWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\nExcited to start this adventure!\n","permalink":"http://localhost:1313/posts/hello-world/","summary":"\u003cp\u003eHey! 👋 I\u0026rsquo;m \u003cstrong\u003emrb0b1073\u003c/strong\u003e and this is my first post.\u003c/p\u003e\n\u003cp\u003eWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\u003cbr\u003e\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\u003c/p\u003e\n\u003cp\u003eExcited to start this adventure!\u003c/p\u003e","title":"Hello World"},{"content":"Introduction If you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\nIn cybersecurity there are broadly two complementary roles: Blue Team and Red Team. Blue Teams focus on defense, monitoring, incident response, hardening systems and keeping services secure, while Red Teams simulate attackers to find weaknesses and prove what an adversary could do. Ethical hacking aligns closely with Red Team operations, but cybersecurity is highly transversal across IT. There are many specialities or areas, such as cloud security, appsec, pentesting, forensics, governance, risk management, malware analysis, etc. Every topic could deserve its own post, so let\u0026rsquo;s keep it simple and focus on ethical hacking.\nHacker philosophy Let\u0026rsquo;s start with the idea of what is exactly a hacker. A hacker is someone who explores systems to understand how they work, finds creative ways to make or fix things, and solves technical problems. Historically the word describes curiosity, craft, and a drive to improve systems — not criminality. It is important to make the distinction between hacker and cracker, also called cybercriminal. A hacker explores, builds, discloses responsibly and works to improve security. They work in authorized environments or labs. On the other hand, a cracker breaks into systems for theft, vandalism or other illicit gain.\nHere you can find the most popularized ideas often summarized as the hacker ethic:\nCuriosity first: Learn by exploring and tinkering. Freedom of information: All knowledge should be shared to help progress. This fits properly with the idea of open source. Mistrust of needless authority: Centralized control sometimes blocks innovation. It is always good to question anything, specially common assumptions. Meritocracy: Skills, craft and results matter more than titles. Craftsmanship \u0026amp; elegance: Technical beauty matters. Build clean, clever and efficient solutions. Responsability \u0026amp; ethics: Use your skills to build, fix, educate and defend, not to harm. Core fundamentals Assuming you want to init yourself in hacking, you should first build competence across three basic pillars.\nOperating Systems You should learn as much as possible about Linux and Windows. Specially Linux, all the tools you will be using are meant to be used in a Linux environment. Skill with shell is required, learn basic commands and how to interact with the OS using the terminal. Research about processes, file permissions, package management and logs. A large proportion of web servers around the world run on Linux, although Windows is also widely used. Windows knowledge is really valuable too, considering active directory is strongly used in corporate environments.\nNetworking You have to understand how computers communicate each other. Understand basic networking concepts, IP adresses, subnetting, proxies, find out how internet works. Study some protocols such as TCP/IP, HTTP, DNS or SSH. This could sound confusing for beginners, but this step is not optional! Study different client/server models and how services expose attack surfaces.\nProgramming \u0026amp; scripting Is this completely required? Maybe not for complete beginners. Does it help? Absolutely yes. Understanding how web apps or any type of application works makes things much easier. You can imagine different entry points to exploit if you understand how systems are designed. Also writing scripts in bash or python makes you more productive through automation.\nEthical Hacking foundations Once you feel confident with these 3 pillars, you can go to the next step. You can study about different topics and areas. For example, binary exploiting, web pentesting, mobile pentesting, wireless hacking, etc. You should start picking a focus, in this post we focus on web pentesting, as it is beginner friendly. Also web applications are the bread and butter in companies nowadays.\nKey concepts to study:\nCIA Triad: CIA refers to Confidentiality, Integrity and Availability. These three concepts are key in information security, and describe properties we want to ensure in our systems and information. Web Security basics, OWASP: Study the OWASP Top 10, which summarizes most frequent web security risks. Authentication and session control: Understand the concepts of Authentication and Authorization, research about how session is handled in web apps, cookies, JWT tokens, etc. Input validation \u0026amp; injection attacks: Learn about SQL Injection, Cross-Site Scripting (XSS), Code Injection, SSTI, and every injection type. Secure development lifecycle: Find out how to implement security controls in code. This can be more related to Blue Team, but as Red Teamer it is important to understand. Firewall evasion: What a firewall is and some techniques/methods to bypass. Some cryptography: Understand what a chiper and a hash are, how information is encrypted to prevent access from 3rd parties. Focusing on web, read about TLS protocol. There are many more topics you can research and learn, but this could be a nice starting point.\nTools and platforms to learn Now you have an idea of what to study, let\u0026rsquo;s see how to start in practical terms.\nSome platforms I personally recommend:\nOverTheWire: Here you can find some CTFs (Capture The Flag) which are fun to play and also really instructive. Bandit games are a must for complete beginners, as you will explore some linux and bash concepts which are basic to continue. The games are leveled by difficulty, in their web you can get all the information about how to play, only a terminal and SSH is required. This helps building your foundation in Linux OS. HackTheBox: Nº 1 platform in cybersecurity. Has a lot of resources to learn all this core fundamentals, and also red team / blue team security topics. It is focused on labs where you can test your skills hacking different boxes but if you really want to learn it is worth to invest time and money in the academy. I have to say the level here is high, specially if you try to hack machines on your own without using some guide or writeup. TryHackMe: More beginner friendly than hackthebox, it provides a lot of guided learning resources. PortSwigger Labs: Practical labs about specific topics, focused on web hacking. They are great to learn and understand different types of attacks, injections, and security misconfigurations. I would recommend digging into this once you have the theoretical basis about these concepts. I have to mention a few tools I am sure you\u0026rsquo;d end up using:\nNmap: This is probably the most famous tool in hacking, allowing you to gather information about ports and services running in a machine. Burpsuite: A proxy tool widely used in web application security testing. It basically allows you to intercept and modify web requests, which can be used to perform several types of attacks. Metasploit: The most used pentesting framework. Contains a large amount of scripts and exploits ready to run. Another crucial step here is to set up your virtual lab environment to test vulnerable applications. To achieve this goal, there are some Linux distributions like Kali, Parrot or BlackArch, but that\u0026rsquo;s a topic for another post.\nFinal thoughs To sum up, this would be my personal roadmap:\nLearn the fundamentals, specially Linux and networking. Install some Linux in a virtual machine, play with it, get comfortable with the terminal. You can start with bandit wargames in OverTheWire. Complete every level and make sure to understand everything as clear as possible. Move to guided boxes on HackTheBox. I recommend you joining their Discord, ask questions, community is great there! Take notes, repeat, learn, improve your skills. Maybe use your own lab environment, create your own vulnerable apps. Hacking is a mixing of curiosity, study and practice. Being passionate and motivated about it is really helpful and will definitely speed up the process. The path is long and really challenging, so keep it going!\n\u0026ldquo;Yes, I am a criminal. My crime is that of curiosity.\u0026rdquo; — The Mentor (Loyd Blankenship) at The Hacker Manifesto\n","permalink":"http://localhost:1313/posts/starting-point/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIf you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\u003c/p\u003e","title":"Starting Point"},{"content":"Introduction In this post series we are going to solve every level from bandit in OverTheWire This guide pretends to be a writeup containing the solutions of the level, designed for beginners.\nTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing WSL, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\nEvery section will contain the solution as well as some tips for people who is absolutely beginner.\nTips First of all, some tips:\nDo not use this as first resource to solve the levels. Try on your own, make mistakes and learn from them. Only check the solution as last resource or if you are completely new and you have absolutely no idea about what to do next. Take notes from your learning. Write up commands, tips and everything which can be useful in the future. Make sure to understand everything. Is a good idea to note the passwords for every level. If you want to continue letter, you can simply log in in the desired level. It is annoying to repeat everything! Follow the tips and information provided at OverTheWire website. Levels Here is my solution for every level:\nBandit0 Bandit1 Bandit2 Bandit3 Bandit4 Bandit5 Bandit6 Bandit7 ","permalink":"http://localhost:1313/posts/otw/bandit/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIn this post series we are going to solve every level from bandit in \u003ca href=\"https://overthewire.org/wargames/bandit/\"\u003e\u003cem\u003eOverTheWire\u003c/em\u003e\u003c/a\u003e\nThis guide pretends to be a writeup containing the solutions of the level, designed for beginners.\u003c/p\u003e\n\u003cp\u003eTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing \u003ca href=\"https://learn.microsoft.com/en-us/windows/wsl/install\"\u003eWSL\u003c/a\u003e, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\u003c/p\u003e","title":"Bandit"},{"content":"Level description The goal of this level is for you to log into the game using SSH. The host to which you need to connect is bandit.labs.overthewire.org, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\nTips for beginners Read a bit about what SSH is. Research about what a port is. Solution This is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go here.\nAt Linux, we can use ssh client to connect to the server. It should be installed by default on your system. If not, please first research about how to install. Once you have the SSH client installed, you can log in into the first level as follows:\nssh bandit0@bandit.labs.overthewire.org -p 2220 Syntax is simple: ssh \u0026lt;username\u0026gt;@\u0026lt;hostname\u0026gt; -p \u0026lt;port\u0026gt;. Usually SSH runs on port 22 by default, but they changed to port 2220 so we must specify it in the command.\nOnce you try to log in, you will see something like this: NB: If it\u0026rsquo;s the first time you try to log in, you will be asked about the authenticity of the host. Just type yes.\nType the password bandit0 and press enter. Now you are inside bandit server, ready to begin with bandit1!\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit0/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe goal of this level is for you to log into the game using SSH. The host to which you need to connect is \u003cstrong\u003ebandit.labs.overthewire.org\u003c/strong\u003e, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eRead a bit about what SSH is.\u003c/li\u003e\n\u003cli\u003eResearch about what a port is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go \u003ca href=\"https://en.wikipedia.org/wiki/Secure_Shell\"\u003ehere\u003c/a\u003e.\u003c/p\u003e","title":"Bandit0"},{"content":"Level description The password for the next level is stored in a file called readme located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\nTips for beginners Learn about home directory in Linux. Learn to use cat and ls commands. Solution First step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\nls This shows in terminal the files at the current directory. There you will see the readme file.\nNow we can to check the contents, so let\u0026rsquo;s use cat:\ncat readme To read a file, we use cat \u0026lt;filename\u0026gt;.\nNB: Not every file is human readable in Linux. We deep more about this in later levels.\nThe content of the readme file reveals the password for bandit2 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit1/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u003cstrong\u003ereadme\u003c/strong\u003e located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn about home directory in Linux.\u003c/li\u003e\n\u003cli\u003eLearn to use \u003ccode\u003ecat\u003c/code\u003e and \u003ccode\u003els\u003c/code\u003e commands.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eFirst step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\u003c/p\u003e","title":"Bandit1"},{"content":"Level description The password for the next level is stored in a file called - located in the home directory\nTips for beginners Try to understand why previous solution is not working as you expect. Solution You may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our cat command: The terminal is waiting for something else. This happens due to character - is used to pass arguments to our commands, and the linux shell is interpreting that. To prevent that, we could use:\ncat ./- NB: Dot . is used to refer current directory. The slash / is used at the end of directory name.\nWe get the password for bandit3 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit2/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called - located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eTry to understand why previous solution is not working as you expect.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eYou may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our \u003ccode\u003ecat\u003c/code\u003e command:\n\u003cimg alt=\"bandit2\" loading=\"lazy\" src=\"/images/otw/bandit/bandit2/0.png\"\u003e\u003c/p\u003e\n\u003cp\u003eThe terminal is \u003cem\u003ewaiting\u003c/em\u003e for something else. This happens due to character \u003ccode\u003e-\u003c/code\u003e is used to pass arguments to our commands, and the linux shell is interpreting that.\nTo prevent that, we could use:\u003c/p\u003e","title":"Bandit2"},{"content":"Level description The password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\nTips for beginners Think about how to escape the whitespaces. Solution After login in the machine as bandit3, we can see the filename \u0026ndash;spaces in this filename\u0026ndash;.\nNow we have 2 problems:\nSame as previous level, filename starts with --, so it will be interpreted as an argument. Address this problem using ./. Filename contains whitespaces. This is an issue, as bash interpretes whitespaces to separate commands. To solve the second problem, we must escape the whitespace character in some way. Here is the solution:\ncat ./--spaces\\ in\\ this\\ filename-- NB: Little trick, you can start writting filename and press Tab to autocomplete the name. The \\ is going to be inserted automatically.\nJust using the \\ we can escape the whitespace.\nNow we can continue with the bandit4 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit3/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eThink about how to \u003cem\u003eescape\u003c/em\u003e the whitespaces.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAfter login in the machine as bandit3, we can see the filename \u003cem\u003e\u0026ndash;spaces in this filename\u0026ndash;\u003c/em\u003e.\u003c/p\u003e\n\u003cp\u003eNow we have 2 problems:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eSame as previous level, filename starts with \u003ccode\u003e--\u003c/code\u003e, so it will be interpreted as an argument. Address this problem using \u003ccode\u003e./\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003eFilename contains \u003cstrong\u003ewhitespaces\u003c/strong\u003e. This is an issue, as bash interpretes whitespaces to separate commands.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eTo solve the second problem, we must escape the whitespace character in some way. Here is the solution:\u003c/p\u003e","title":"Bandit3"},{"content":"Level description The password for the next level is stored in a hidden file in the inhere directory.\nTips for beginners Learn how to navigate directories in Linux. First understand what a hidden file is. Solution Listing directory files inside bandit4\u0026rsquo;s home directory, show directory inhere.\nNB: How to distinguish files and directories in Linux? Use ls -l and see the difference.\nWe have 2 options now:\nMove to inhere directory and check contens again. Check contents directly. Moving to another directory can be done using cd \u0026lt;dirName\u0026gt;. If you prefer to check directory contents directly, use ls \u0026lt;dirName\u0026gt;.\nAfter checking inhere contents via ls, we see nothing. The reason is the file is a hidden file. A hidden file in Linux is everyfile whose name starts with dot .. Hidden files are not shown by default with ls command, so we must add a special flag -a to list all files: NB: Both flags -l and -a cna be combined into a single flag -al, which is shorter to type.\nAs you can see, filename is \u0026hellip;Hidding-From-You starting with three dots. Reading file contents should be easy at this point!\nNext level is bandit5.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit4/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a hidden file in the inhere directory.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to navigate directories in Linux.\u003c/li\u003e\n\u003cli\u003eFirst understand what a hidden file is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eListing directory files inside bandit4\u0026rsquo;s home directory, show directory \u003cstrong\u003einhere\u003c/strong\u003e.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e How to distinguish files and directories in Linux? Use \u003ccode\u003els -l\u003c/code\u003e and see the difference.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eWe have 2 options now:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eMove to inhere directory and check contens again.\u003c/li\u003e\n\u003cli\u003eCheck contents directly.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eMoving to another directory can be done using \u003ccode\u003ecd \u0026lt;dirName\u0026gt;\u003c/code\u003e. If you prefer to check directory contents directly, use \u003ccode\u003els \u0026lt;dirName\u0026gt;\u003c/code\u003e.\u003c/p\u003e","title":"Bandit4"},{"content":"Level description The password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\nTips for beginners What means human-readable file? Is there any way to check filetype at Linux?. Solution Checking inhere\u0026rsquo;s contents shows some files names \u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII here\nSo now, our goal is checking if file content of every file in the folder is ASCII or not. file \u0026lt;filename\u0026gt; does the job. Note the use of *. That called a wildcard regular expression, we\u0026rsquo;ll deep into it in later levels. An easy approach could be checking every file separately:\nfile ./--file00 file ./--file01 ... file ./--file09 But that\u0026rsquo;s not funny, imagine we have 100 files to check. All the files are in the same directory, so we can use cat ./* where ./* matches every filename in the directory, applying file to every file.\nNB: Another approach is to use find with certaing flags. Try to do in different ways, don\u0026rsquo;t stick to my solution.\nThe file \u0026ndash;file00 content is not readable, so get password from \u0026ndash;file07 and continue with bandit6.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit5/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eWhat means human-readable file?\u003c/li\u003e\n\u003cli\u003eIs there any way to check filetype at Linux?.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eChecking inhere\u0026rsquo;s contents shows some files names \u003cstrong\u003e\u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09\u003c/strong\u003e. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII \u003ca href=\"https://en.wikipedia.org/wiki/ASCII\"\u003ehere\u003c/a\u003e\u003c/p\u003e","title":"Bandit5"},{"content":"Level description The password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\nhuman-readable 1033 bytes in size not executable Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution The purpose of the level is showing us how to find for files. Listing contents of inhere, we can see some folders, containing a lot of files inside: NB: Adding -R to ls shows recursively the content of every folder inside the directory listed.\nSo this time, checking every file is not an option. We need to find a file with some properties, specific size, not excutable and human-readable. Let\u0026rsquo;s explain the command we\u0026rsquo;re using:\nfind inhere/ -size 1033c ! -executable First, we specify the directory, in this case inhere. The option -size 1033c returns files of 1033 bytes. Then, with -executable we would get executable files, but we want not executable files, that\u0026rsquo;s why we are adding ! before.\nNB: By default, the -size option takes as argument the number of blocks. For example, -size 2 means 2 blocks of 512 bytes, so its 1024. The c is used to specify exact bytes. Don\u0026rsquo;t ask me why it\u0026rsquo;s c and not b 😅.\nThe property of human-readability is not implemented in find. This is not an issue, previous command returns a single file and it is human readable (we could confirm using file): Extra tip: try to use the following:\nfind inhere/ -size 1033c ! -executable | file You get the same result! The pipe | is a great tool to execute 2+ commands in one line.\nGet your password and continue with bandit7.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit6/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ehuman-readable\u003c/li\u003e\n\u003cli\u003e1033 bytes in size\u003c/li\u003e\n\u003cli\u003enot executable\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThe purpose of the level is showing us how to find for files. Listing contents of \u003cstrong\u003einhere\u003c/strong\u003e, we can see some folders, containing a lot of files inside:\n\u003cimg alt=\"bandit6_0\" loading=\"lazy\" src=\"/images/otw/bandit/bandit6/0.png\"\u003e\u003c/p\u003e","title":"Bandit6"},{"content":"Level description The password for the next level is stored somewhere on the server and has all of the following properties:\nowned by user bandit7 owned by group bandit6 33 bytes in size Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution This is very straightforward to do after completing previous level. Now we need to identify a file owned by user bandit7 and group bandi6. Furthermore, the file is somewhere on the server, which means we have to find in the root directory /.\nfind / -user bandit7 -group bandit6 -size 33c 2\u0026gt;/dev/null NB: I added that strange 2\u0026gt;/dev/null to filter error output. The reason why it works like that is more technical, for now just save this a fast way to filter errors in terminal. We get some errors because looking for files in the whole server may return some unaccesible files, as we don\u0026rsquo;t have root user permissions. We will study Linux permissions in later levels.\nWe should get a single file, containing password for bandit8.\nGet your password and continue with\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit7/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored somewhere on the server and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eowned by user bandit7\u003c/li\u003e\n\u003cli\u003eowned by group bandit6\u003c/li\u003e\n\u003cli\u003e33 bytes in size\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is very straightforward to do after completing previous level. Now we need to identify a file owned by user bandit7 and group bandi6. Furthermore, the file is \u003cstrong\u003esomewhere on the server\u003c/strong\u003e, which means we have to find in the root directory \u003ccode\u003e/\u003c/code\u003e.\u003c/p\u003e","title":"Bandit7"},{"content":"Level description The password for the next level is stored in the file data.txt next to the word millionth.\nTips for beginners Learn how to filter file contents. Solution At previous levels, we discovered how to find for files. Now it\u0026rsquo;s time to find for content inside a file. grep command is going to help with that task.\nGet your password and continue with\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit8/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the file data.txt next to the word \u003cstrong\u003emillionth\u003c/strong\u003e.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to filter file contents.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAt previous levels, we discovered how to find for files. Now it\u0026rsquo;s time to find for content inside a file. \u003ccode\u003egrep\u003c/code\u003e command is going to help with that task.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"bandit6_1\" loading=\"lazy\" src=\"/images/otw/bandit/bandit8/0.png\"\u003e\u003c/p\u003e\n\u003cp\u003eGet your password and continue with\u003c/p\u003e","title":"Bandit8"},{"content":"👨‍💻 whoami Hey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\nWhat is this❓​ This blog is basically my thoughts on several hacking topics. Here you’ll see:\nWriteups from CTF challenges, from platforms like HackTheBox or OverTheWire.\nWalkthroughs and notes on pentesting techniques I’m learning or testing.\nSome posts on cryptography — because math can be fun (sometimes).\nRandom topics that freaks like me may (just may) find interesting.\nThe idea is simple: share what I learn, document my journey, and maybe help others who are also diving into the exciting world of ethical hacking.\n📫 Contact Want to say hi, share ideas, or just geek out about hacking? Reach me here:\n📧 Email: mrb0b1073@proton.me 💻​ GitHub: mrb0b173 🟩​ HackTheBox: mrb0b1073 ","permalink":"http://localhost:1313/about/","summary":"\u003ch2 id=\"-whoami\"\u003e👨‍💻 whoami\u003c/h2\u003e\n\u003cp\u003eHey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\u003c/p\u003e\n\u003chr\u003e\n\u003ch2 id=\"what-is-this\"\u003eWhat is this❓​\u003c/h2\u003e\n\u003cp\u003eThis blog is basically my thoughts on several hacking topics. Here you’ll see:\u003c/p\u003e","title":"About"},{"content":"Hey! 👋 I\u0026rsquo;m mrb0b1073 and this is my first post.\nWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\nExcited to start this adventure!\n","permalink":"http://localhost:1313/posts/hello-world/","summary":"\u003cp\u003eHey! 👋 I\u0026rsquo;m \u003cstrong\u003emrb0b1073\u003c/strong\u003e and this is my first post.\u003c/p\u003e\n\u003cp\u003eWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\u003cbr\u003e\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\u003c/p\u003e\n\u003cp\u003eExcited to start this adventure!\u003c/p\u003e","title":"Hello World"},{"content":"Introduction If you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\nIn cybersecurity there are broadly two complementary roles: Blue Team and Red Team. Blue Teams focus on defense, monitoring, incident response, hardening systems and keeping services secure, while Red Teams simulate attackers to find weaknesses and prove what an adversary could do. Ethical hacking aligns closely with Red Team operations, but cybersecurity is highly transversal across IT. There are many specialities or areas, such as cloud security, appsec, pentesting, forensics, governance, risk management, malware analysis, etc. Every topic could deserve its own post, so let\u0026rsquo;s keep it simple and focus on ethical hacking.\nHacker philosophy Let\u0026rsquo;s start with the idea of what is exactly a hacker. A hacker is someone who explores systems to understand how they work, finds creative ways to make or fix things, and solves technical problems. Historically the word describes curiosity, craft, and a drive to improve systems — not criminality. It is important to make the distinction between hacker and cracker, also called cybercriminal. A hacker explores, builds, discloses responsibly and works to improve security. They work in authorized environments or labs. On the other hand, a cracker breaks into systems for theft, vandalism or other illicit gain.\nHere you can find the most popularized ideas often summarized as the hacker ethic:\nCuriosity first: Learn by exploring and tinkering. Freedom of information: All knowledge should be shared to help progress. This fits properly with the idea of open source. Mistrust of needless authority: Centralized control sometimes blocks innovation. It is always good to question anything, specially common assumptions. Meritocracy: Skills, craft and results matter more than titles. Craftsmanship \u0026amp; elegance: Technical beauty matters. Build clean, clever and efficient solutions. Responsability \u0026amp; ethics: Use your skills to build, fix, educate and defend, not to harm. Core fundamentals Assuming you want to init yourself in hacking, you should first build competence across three basic pillars.\nOperating Systems You should learn as much as possible about Linux and Windows. Specially Linux, all the tools you will be using are meant to be used in a Linux environment. Skill with shell is required, learn basic commands and how to interact with the OS using the terminal. Research about processes, file permissions, package management and logs. A large proportion of web servers around the world run on Linux, although Windows is also widely used. Windows knowledge is really valuable too, considering active directory is strongly used in corporate environments.\nNetworking You have to understand how computers communicate each other. Understand basic networking concepts, IP adresses, subnetting, proxies, find out how internet works. Study some protocols such as TCP/IP, HTTP, DNS or SSH. This could sound confusing for beginners, but this step is not optional! Study different client/server models and how services expose attack surfaces.\nProgramming \u0026amp; scripting Is this completely required? Maybe not for complete beginners. Does it help? Absolutely yes. Understanding how web apps or any type of application works makes things much easier. You can imagine different entry points to exploit if you understand how systems are designed. Also writing scripts in bash or python makes you more productive through automation.\nEthical Hacking foundations Once you feel confident with these 3 pillars, you can go to the next step. You can study about different topics and areas. For example, binary exploiting, web pentesting, mobile pentesting, wireless hacking, etc. You should start picking a focus, in this post we focus on web pentesting, as it is beginner friendly. Also web applications are the bread and butter in companies nowadays.\nKey concepts to study:\nCIA Triad: CIA refers to Confidentiality, Integrity and Availability. These three concepts are key in information security, and describe properties we want to ensure in our systems and information. Web Security basics, OWASP: Study the OWASP Top 10, which summarizes most frequent web security risks. Authentication and session control: Understand the concepts of Authentication and Authorization, research about how session is handled in web apps, cookies, JWT tokens, etc. Input validation \u0026amp; injection attacks: Learn about SQL Injection, Cross-Site Scripting (XSS), Code Injection, SSTI, and every injection type. Secure development lifecycle: Find out how to implement security controls in code. This can be more related to Blue Team, but as Red Teamer it is important to understand. Firewall evasion: What a firewall is and some techniques/methods to bypass. Some cryptography: Understand what a chiper and a hash are, how information is encrypted to prevent access from 3rd parties. Focusing on web, read about TLS protocol. There are many more topics you can research and learn, but this could be a nice starting point.\nTools and platforms to learn Now you have an idea of what to study, let\u0026rsquo;s see how to start in practical terms.\nSome platforms I personally recommend:\nOverTheWire: Here you can find some CTFs (Capture The Flag) which are fun to play and also really instructive. Bandit games are a must for complete beginners, as you will explore some linux and bash concepts which are basic to continue. The games are leveled by difficulty, in their web you can get all the information about how to play, only a terminal and SSH is required. This helps building your foundation in Linux OS. HackTheBox: Nº 1 platform in cybersecurity. Has a lot of resources to learn all this core fundamentals, and also red team / blue team security topics. It is focused on labs where you can test your skills hacking different boxes but if you really want to learn it is worth to invest time and money in the academy. I have to say the level here is high, specially if you try to hack machines on your own without using some guide or writeup. TryHackMe: More beginner friendly than hackthebox, it provides a lot of guided learning resources. PortSwigger Labs: Practical labs about specific topics, focused on web hacking. They are great to learn and understand different types of attacks, injections, and security misconfigurations. I would recommend digging into this once you have the theoretical basis about these concepts. I have to mention a few tools I am sure you\u0026rsquo;d end up using:\nNmap: This is probably the most famous tool in hacking, allowing you to gather information about ports and services running in a machine. Burpsuite: A proxy tool widely used in web application security testing. It basically allows you to intercept and modify web requests, which can be used to perform several types of attacks. Metasploit: The most used pentesting framework. Contains a large amount of scripts and exploits ready to run. Another crucial step here is to set up your virtual lab environment to test vulnerable applications. To achieve this goal, there are some Linux distributions like Kali, Parrot or BlackArch, but that\u0026rsquo;s a topic for another post.\nFinal thoughs To sum up, this would be my personal roadmap:\nLearn the fundamentals, specially Linux and networking. Install some Linux in a virtual machine, play with it, get comfortable with the terminal. You can start with bandit wargames in OverTheWire. Complete every level and make sure to understand everything as clear as possible. Move to guided boxes on HackTheBox. I recommend you joining their Discord, ask questions, community is great there! Take notes, repeat, learn, improve your skills. Maybe use your own lab environment, create your own vulnerable apps. Hacking is a mixing of curiosity, study and practice. Being passionate and motivated about it is really helpful and will definitely speed up the process. The path is long and really challenging, so keep it going!\n\u0026ldquo;Yes, I am a criminal. My crime is that of curiosity.\u0026rdquo; — The Mentor (Loyd Blankenship) at The Hacker Manifesto\n","permalink":"http://localhost:1313/posts/starting-point/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIf you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\u003c/p\u003e","title":"Starting Point"},{"content":"Introduction In this post series we are going to solve every level from bandit in OverTheWire This guide pretends to be a writeup containing the solutions of the level, designed for beginners.\nTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing WSL, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\nEvery section will contain the solution as well as some tips for people who is absolutely beginner.\nTips First of all, some tips:\nDo not use this as first resource to solve the levels. Try on your own, make mistakes and learn from them. Only check the solution as last resource or if you are completely new and you have absolutely no idea about what to do next. Take notes from your learning. Write up commands, tips and everything which can be useful in the future. Make sure to understand everything. Is a good idea to note the passwords for every level. If you want to continue letter, you can simply log in in the desired level. It is annoying to repeat everything! Follow the tips and information provided at OverTheWire website. Levels Here is my solution for every level:\nBandit0 Bandit1 Bandit2 Bandit3 Bandit4 Bandit5 Bandit6 Bandit7 ","permalink":"http://localhost:1313/posts/otw/bandit/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIn this post series we are going to solve every level from bandit in \u003ca href=\"https://overthewire.org/wargames/bandit/\"\u003e\u003cem\u003eOverTheWire\u003c/em\u003e\u003c/a\u003e\nThis guide pretends to be a writeup containing the solutions of the level, designed for beginners.\u003c/p\u003e\n\u003cp\u003eTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing \u003ca href=\"https://learn.microsoft.com/en-us/windows/wsl/install\"\u003eWSL\u003c/a\u003e, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\u003c/p\u003e","title":"Bandit"},{"content":"Level description The goal of this level is for you to log into the game using SSH. The host to which you need to connect is bandit.labs.overthewire.org, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\nTips for beginners Read a bit about what SSH is. Research about what a port is. Solution This is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go here.\nAt Linux, we can use ssh client to connect to the server. It should be installed by default on your system. If not, please first research about how to install. Once you have the SSH client installed, you can log in into the first level as follows:\nssh bandit0@bandit.labs.overthewire.org -p 2220 Syntax is simple: ssh \u0026lt;username\u0026gt;@\u0026lt;hostname\u0026gt; -p \u0026lt;port\u0026gt;. Usually SSH runs on port 22 by default, but they changed to port 2220 so we must specify it in the command.\nOnce you try to log in, you will see something like this: NB: If it\u0026rsquo;s the first time you try to log in, you will be asked about the authenticity of the host. Just type yes.\nType the password bandit0 and press enter. Now you are inside bandit server, ready to begin with bandit1!\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit0/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe goal of this level is for you to log into the game using SSH. The host to which you need to connect is \u003cstrong\u003ebandit.labs.overthewire.org\u003c/strong\u003e, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eRead a bit about what SSH is.\u003c/li\u003e\n\u003cli\u003eResearch about what a port is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go \u003ca href=\"https://en.wikipedia.org/wiki/Secure_Shell\"\u003ehere\u003c/a\u003e.\u003c/p\u003e","title":"Bandit0"},{"content":"Level description The password for the next level is stored in a file called readme located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\nTips for beginners Learn about home directory in Linux. Learn to use cat and ls commands. Solution First step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\nls This shows in terminal the files at the current directory. There you will see the readme file.\nNow we can to check the contents, so let\u0026rsquo;s use cat:\ncat readme To read a file, we use cat \u0026lt;filename\u0026gt;.\nNB: Not every file is human readable in Linux. We deep more about this in later levels.\nThe content of the readme file reveals the password for bandit2 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit1/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u003cstrong\u003ereadme\u003c/strong\u003e located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn about home directory in Linux.\u003c/li\u003e\n\u003cli\u003eLearn to use \u003ccode\u003ecat\u003c/code\u003e and \u003ccode\u003els\u003c/code\u003e commands.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eFirst step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\u003c/p\u003e","title":"Bandit1"},{"content":"Level description The password for the next level is stored in a file called - located in the home directory\nTips for beginners Try to understand why previous solution is not working as you expect. Solution You may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our cat command: The terminal is waiting for something else. This happens due to character - is used to pass arguments to our commands, and the linux shell is interpreting that. To prevent that, we could use:\ncat ./- NB: Dot . is used to refer current directory. The slash / is used at the end of directory name.\nWe get the password for bandit3 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit2/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called - located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eTry to understand why previous solution is not working as you expect.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eYou may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our \u003ccode\u003ecat\u003c/code\u003e command:\n\u003cimg alt=\"bandit2\" loading=\"lazy\" src=\"/images/otw/bandit/bandit2/0.png\"\u003e\u003c/p\u003e\n\u003cp\u003eThe terminal is \u003cem\u003ewaiting\u003c/em\u003e for something else. This happens due to character \u003ccode\u003e-\u003c/code\u003e is used to pass arguments to our commands, and the linux shell is interpreting that.\nTo prevent that, we could use:\u003c/p\u003e","title":"Bandit2"},{"content":"Level description The password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\nTips for beginners Think about how to escape the whitespaces. Solution After login in the machine as bandit3, we can see the filename \u0026ndash;spaces in this filename\u0026ndash;.\nNow we have 2 problems:\nSame as previous level, filename starts with --, so it will be interpreted as an argument. Address this problem using ./. Filename contains whitespaces. This is an issue, as bash interpretes whitespaces to separate commands. To solve the second problem, we must escape the whitespace character in some way. Here is the solution:\ncat ./--spaces\\ in\\ this\\ filename-- NB: Little trick, you can start writting filename and press Tab to autocomplete the name. The \\ is going to be inserted automatically.\nJust using the \\ we can escape the whitespace.\nNow we can continue with the bandit4 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit3/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eThink about how to \u003cem\u003eescape\u003c/em\u003e the whitespaces.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAfter login in the machine as bandit3, we can see the filename \u003cem\u003e\u0026ndash;spaces in this filename\u0026ndash;\u003c/em\u003e.\u003c/p\u003e\n\u003cp\u003eNow we have 2 problems:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eSame as previous level, filename starts with \u003ccode\u003e--\u003c/code\u003e, so it will be interpreted as an argument. Address this problem using \u003ccode\u003e./\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003eFilename contains \u003cstrong\u003ewhitespaces\u003c/strong\u003e. This is an issue, as bash interpretes whitespaces to separate commands.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eTo solve the second problem, we must escape the whitespace character in some way. Here is the solution:\u003c/p\u003e","title":"Bandit3"},{"content":"Level description The password for the next level is stored in a hidden file in the inhere directory.\nTips for beginners Learn how to navigate directories in Linux. First understand what a hidden file is. Solution Listing directory files inside bandit4\u0026rsquo;s home directory, show directory inhere.\nNB: How to distinguish files and directories in Linux? Use ls -l and see the difference.\nWe have 2 options now:\nMove to inhere directory and check contens again. Check contents directly. Moving to another directory can be done using cd \u0026lt;dirName\u0026gt;. If you prefer to check directory contents directly, use ls \u0026lt;dirName\u0026gt;.\nAfter checking inhere contents via ls, we see nothing. The reason is the file is a hidden file. A hidden file in Linux is everyfile whose name starts with dot .. Hidden files are not shown by default with ls command, so we must add a special flag -a to list all files: NB: Both flags -l and -a cna be combined into a single flag -al, which is shorter to type.\nAs you can see, filename is \u0026hellip;Hidding-From-You starting with three dots. Reading file contents should be easy at this point!\nNext level is bandit5.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit4/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a hidden file in the inhere directory.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to navigate directories in Linux.\u003c/li\u003e\n\u003cli\u003eFirst understand what a hidden file is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eListing directory files inside bandit4\u0026rsquo;s home directory, show directory \u003cstrong\u003einhere\u003c/strong\u003e.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e How to distinguish files and directories in Linux? Use \u003ccode\u003els -l\u003c/code\u003e and see the difference.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eWe have 2 options now:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eMove to inhere directory and check contens again.\u003c/li\u003e\n\u003cli\u003eCheck contents directly.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eMoving to another directory can be done using \u003ccode\u003ecd \u0026lt;dirName\u0026gt;\u003c/code\u003e. If you prefer to check directory contents directly, use \u003ccode\u003els \u0026lt;dirName\u0026gt;\u003c/code\u003e.\u003c/p\u003e","title":"Bandit4"},{"content":"Level description The password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\nTips for beginners What means human-readable file? Is there any way to check filetype at Linux?. Solution Checking inhere\u0026rsquo;s contents shows some files names \u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII here\nSo now, our goal is checking if file content of every file in the folder is ASCII or not. file \u0026lt;filename\u0026gt; does the job. Note the use of *. That called a wildcard regular expression, we\u0026rsquo;ll deep into it in later levels. An easy approach could be checking every file separately:\nfile ./--file00 file ./--file01 ... file ./--file09 But that\u0026rsquo;s not funny, imagine we have 100 files to check. All the files are in the same directory, so we can use cat ./* where ./* matches every filename in the directory, applying file to every file.\nNB: Another approach is to use find with certaing flags. Try to do in different ways, don\u0026rsquo;t stick to my solution.\nThe file \u0026ndash;file00 content is not readable, so get password from \u0026ndash;file07 and continue with bandit6.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit5/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eWhat means human-readable file?\u003c/li\u003e\n\u003cli\u003eIs there any way to check filetype at Linux?.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eChecking inhere\u0026rsquo;s contents shows some files names \u003cstrong\u003e\u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09\u003c/strong\u003e. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII \u003ca href=\"https://en.wikipedia.org/wiki/ASCII\"\u003ehere\u003c/a\u003e\u003c/p\u003e","title":"Bandit5"},{"content":"Level description The password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\nhuman-readable 1033 bytes in size not executable Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution The purpose of the level is showing us how to find for files. Listing contents of inhere, we can see some folders, containing a lot of files inside: NB: Adding -R to ls shows recursively the content of every folder inside the directory listed.\nSo this time, checking every file is not an option. We need to find a file with some properties, specific size, not excutable and human-readable. Let\u0026rsquo;s explain the command we\u0026rsquo;re using:\nfind inhere/ -size 1033c ! -executable First, we specify the directory, in this case inhere. The option -size 1033c returns files of 1033 bytes. Then, with -executable we would get executable files, but we want not executable files, that\u0026rsquo;s why we are adding ! before.\nNB: By default, the -size option takes as argument the number of blocks. For example, -size 2 means 2 blocks of 512 bytes, so its 1024. The c is used to specify exact bytes. Don\u0026rsquo;t ask me why it\u0026rsquo;s c and not b 😅.\nThe property of human-readability is not implemented in find. This is not an issue, previous command returns a single file and it is human readable (we could confirm using file): Extra tip: try to use the following:\nfind inhere/ -size 1033c ! -executable | file You get the same result! The pipe | is a great tool to execute 2+ commands in one line.\nGet your password and continue with bandit7.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit6/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ehuman-readable\u003c/li\u003e\n\u003cli\u003e1033 bytes in size\u003c/li\u003e\n\u003cli\u003enot executable\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThe purpose of the level is showing us how to find for files. Listing contents of \u003cstrong\u003einhere\u003c/strong\u003e, we can see some folders, containing a lot of files inside:\n\u003cimg alt=\"bandit6_0\" loading=\"lazy\" src=\"/images/otw/bandit/bandit6/0.png\"\u003e\u003c/p\u003e","title":"Bandit6"},{"content":"Level description The password for the next level is stored somewhere on the server and has all of the following properties:\nowned by user bandit7 owned by group bandit6 33 bytes in size Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution This is very straightforward to do after completing previous level. Now we need to identify a file owned by user bandit7 and group bandi6. Furthermore, the file is somewhere on the server, which means we have to find in the root directory /.\nfind / -user bandit7 -group bandit6 -size 33c 2\u0026gt;/dev/null NB: I added that strange 2\u0026gt;/dev/null to filter error output. The reason why it works like that is more technical, for now just save this a fast way to filter errors in terminal. We get some errors because looking for files in the whole server may return some unaccesible files, as we don\u0026rsquo;t have root user permissions. We will study Linux permissions in later levels.\nWe should get a single file, containing password for bandit8.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit7/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored somewhere on the server and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eowned by user bandit7\u003c/li\u003e\n\u003cli\u003eowned by group bandit6\u003c/li\u003e\n\u003cli\u003e33 bytes in size\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is very straightforward to do after completing previous level. Now we need to identify a file owned by user bandit7 and group bandi6. Furthermore, the file is \u003cstrong\u003esomewhere on the server\u003c/strong\u003e, which means we have to find in the root directory \u003ccode\u003e/\u003c/code\u003e.\u003c/p\u003e","title":"Bandit7"},{"content":"Level description The password for the next level is stored in the file data.txt next to the word millionth.\nTips for beginners Learn how to filter file contents. Solution At previous levels, we discovered how to find for files. Now it\u0026rsquo;s time to find for content inside a file. grep command is going to help with that task.\nGet your password and continue with\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit8/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the file data.txt next to the word \u003cstrong\u003emillionth\u003c/strong\u003e.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to filter file contents.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAt previous levels, we discovered how to find for files. Now it\u0026rsquo;s time to find for content inside a file. \u003ccode\u003egrep\u003c/code\u003e command is going to help with that task.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"bandit6_1\" loading=\"lazy\" src=\"/images/otw/bandit/bandit8/0.png\"\u003e\u003c/p\u003e\n\u003cp\u003eGet your password and continue with\u003c/p\u003e","title":"Bandit8"},{"content":"👨‍💻 whoami Hey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\nWhat is this❓​ This blog is basically my thoughts on several hacking topics. Here you’ll see:\nWriteups from CTF challenges, from platforms like HackTheBox or OverTheWire.\nWalkthroughs and notes on pentesting techniques I’m learning or testing.\nSome posts on cryptography — because math can be fun (sometimes).\nRandom topics that freaks like me may (just may) find interesting.\nThe idea is simple: share what I learn, document my journey, and maybe help others who are also diving into the exciting world of ethical hacking.\n📫 Contact Want to say hi, share ideas, or just geek out about hacking? Reach me here:\n📧 Email: mrb0b1073@proton.me 💻​ GitHub: mrb0b173 🟩​ HackTheBox: mrb0b1073 ","permalink":"http://localhost:1313/about/","summary":"\u003ch2 id=\"-whoami\"\u003e👨‍💻 whoami\u003c/h2\u003e\n\u003cp\u003eHey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\u003c/p\u003e\n\u003chr\u003e\n\u003ch2 id=\"what-is-this\"\u003eWhat is this❓​\u003c/h2\u003e\n\u003cp\u003eThis blog is basically my thoughts on several hacking topics. Here you’ll see:\u003c/p\u003e","title":"About"},{"content":"Hey! 👋 I\u0026rsquo;m mrb0b1073 and this is my first post.\nWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\nExcited to start this adventure!\n","permalink":"http://localhost:1313/posts/hello-world/","summary":"\u003cp\u003eHey! 👋 I\u0026rsquo;m \u003cstrong\u003emrb0b1073\u003c/strong\u003e and this is my first post.\u003c/p\u003e\n\u003cp\u003eWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\u003cbr\u003e\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\u003c/p\u003e\n\u003cp\u003eExcited to start this adventure!\u003c/p\u003e","title":"Hello World"},{"content":"Introduction If you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\nIn cybersecurity there are broadly two complementary roles: Blue Team and Red Team. Blue Teams focus on defense, monitoring, incident response, hardening systems and keeping services secure, while Red Teams simulate attackers to find weaknesses and prove what an adversary could do. Ethical hacking aligns closely with Red Team operations, but cybersecurity is highly transversal across IT. There are many specialities or areas, such as cloud security, appsec, pentesting, forensics, governance, risk management, malware analysis, etc. Every topic could deserve its own post, so let\u0026rsquo;s keep it simple and focus on ethical hacking.\nHacker philosophy Let\u0026rsquo;s start with the idea of what is exactly a hacker. A hacker is someone who explores systems to understand how they work, finds creative ways to make or fix things, and solves technical problems. Historically the word describes curiosity, craft, and a drive to improve systems — not criminality. It is important to make the distinction between hacker and cracker, also called cybercriminal. A hacker explores, builds, discloses responsibly and works to improve security. They work in authorized environments or labs. On the other hand, a cracker breaks into systems for theft, vandalism or other illicit gain.\nHere you can find the most popularized ideas often summarized as the hacker ethic:\nCuriosity first: Learn by exploring and tinkering. Freedom of information: All knowledge should be shared to help progress. This fits properly with the idea of open source. Mistrust of needless authority: Centralized control sometimes blocks innovation. It is always good to question anything, specially common assumptions. Meritocracy: Skills, craft and results matter more than titles. Craftsmanship \u0026amp; elegance: Technical beauty matters. Build clean, clever and efficient solutions. Responsability \u0026amp; ethics: Use your skills to build, fix, educate and defend, not to harm. Core fundamentals Assuming you want to init yourself in hacking, you should first build competence across three basic pillars.\nOperating Systems You should learn as much as possible about Linux and Windows. Specially Linux, all the tools you will be using are meant to be used in a Linux environment. Skill with shell is required, learn basic commands and how to interact with the OS using the terminal. Research about processes, file permissions, package management and logs. A large proportion of web servers around the world run on Linux, although Windows is also widely used. Windows knowledge is really valuable too, considering active directory is strongly used in corporate environments.\nNetworking You have to understand how computers communicate each other. Understand basic networking concepts, IP adresses, subnetting, proxies, find out how internet works. Study some protocols such as TCP/IP, HTTP, DNS or SSH. This could sound confusing for beginners, but this step is not optional! Study different client/server models and how services expose attack surfaces.\nProgramming \u0026amp; scripting Is this completely required? Maybe not for complete beginners. Does it help? Absolutely yes. Understanding how web apps or any type of application works makes things much easier. You can imagine different entry points to exploit if you understand how systems are designed. Also writing scripts in bash or python makes you more productive through automation.\nEthical Hacking foundations Once you feel confident with these 3 pillars, you can go to the next step. You can study about different topics and areas. For example, binary exploiting, web pentesting, mobile pentesting, wireless hacking, etc. You should start picking a focus, in this post we focus on web pentesting, as it is beginner friendly. Also web applications are the bread and butter in companies nowadays.\nKey concepts to study:\nCIA Triad: CIA refers to Confidentiality, Integrity and Availability. These three concepts are key in information security, and describe properties we want to ensure in our systems and information. Web Security basics, OWASP: Study the OWASP Top 10, which summarizes most frequent web security risks. Authentication and session control: Understand the concepts of Authentication and Authorization, research about how session is handled in web apps, cookies, JWT tokens, etc. Input validation \u0026amp; injection attacks: Learn about SQL Injection, Cross-Site Scripting (XSS), Code Injection, SSTI, and every injection type. Secure development lifecycle: Find out how to implement security controls in code. This can be more related to Blue Team, but as Red Teamer it is important to understand. Firewall evasion: What a firewall is and some techniques/methods to bypass. Some cryptography: Understand what a chiper and a hash are, how information is encrypted to prevent access from 3rd parties. Focusing on web, read about TLS protocol. There are many more topics you can research and learn, but this could be a nice starting point.\nTools and platforms to learn Now you have an idea of what to study, let\u0026rsquo;s see how to start in practical terms.\nSome platforms I personally recommend:\nOverTheWire: Here you can find some CTFs (Capture The Flag) which are fun to play and also really instructive. Bandit games are a must for complete beginners, as you will explore some linux and bash concepts which are basic to continue. The games are leveled by difficulty, in their web you can get all the information about how to play, only a terminal and SSH is required. This helps building your foundation in Linux OS. HackTheBox: Nº 1 platform in cybersecurity. Has a lot of resources to learn all this core fundamentals, and also red team / blue team security topics. It is focused on labs where you can test your skills hacking different boxes but if you really want to learn it is worth to invest time and money in the academy. I have to say the level here is high, specially if you try to hack machines on your own without using some guide or writeup. TryHackMe: More beginner friendly than hackthebox, it provides a lot of guided learning resources. PortSwigger Labs: Practical labs about specific topics, focused on web hacking. They are great to learn and understand different types of attacks, injections, and security misconfigurations. I would recommend digging into this once you have the theoretical basis about these concepts. I have to mention a few tools I am sure you\u0026rsquo;d end up using:\nNmap: This is probably the most famous tool in hacking, allowing you to gather information about ports and services running in a machine. Burpsuite: A proxy tool widely used in web application security testing. It basically allows you to intercept and modify web requests, which can be used to perform several types of attacks. Metasploit: The most used pentesting framework. Contains a large amount of scripts and exploits ready to run. Another crucial step here is to set up your virtual lab environment to test vulnerable applications. To achieve this goal, there are some Linux distributions like Kali, Parrot or BlackArch, but that\u0026rsquo;s a topic for another post.\nFinal thoughs To sum up, this would be my personal roadmap:\nLearn the fundamentals, specially Linux and networking. Install some Linux in a virtual machine, play with it, get comfortable with the terminal. You can start with bandit wargames in OverTheWire. Complete every level and make sure to understand everything as clear as possible. Move to guided boxes on HackTheBox. I recommend you joining their Discord, ask questions, community is great there! Take notes, repeat, learn, improve your skills. Maybe use your own lab environment, create your own vulnerable apps. Hacking is a mixing of curiosity, study and practice. Being passionate and motivated about it is really helpful and will definitely speed up the process. The path is long and really challenging, so keep it going!\n\u0026ldquo;Yes, I am a criminal. My crime is that of curiosity.\u0026rdquo; — The Mentor (Loyd Blankenship) at The Hacker Manifesto\n","permalink":"http://localhost:1313/posts/starting-point/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIf you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\u003c/p\u003e","title":"Starting Point"},{"content":"Introduction In this post series we are going to solve every level from bandit in OverTheWire This guide pretends to be a writeup containing the solutions of the level, designed for beginners.\nTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing WSL, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\nEvery section will contain the solution as well as some tips for people who is absolutely beginner.\nTips First of all, some tips:\nDo not use this as first resource to solve the levels. Try on your own, make mistakes and learn from them. Only check the solution as last resource or if you are completely new and you have absolutely no idea about what to do next. Take notes from your learning. Write up commands, tips and everything which can be useful in the future. Make sure to understand everything. Is a good idea to note the passwords for every level. If you want to continue letter, you can simply log in in the desired level. It is annoying to repeat everything! Follow the tips and information provided at OverTheWire website. Levels Here is my solution for every level:\nBandit0 Bandit1 Bandit2 Bandit3 Bandit4 Bandit5 Bandit6 Bandit7 ","permalink":"http://localhost:1313/posts/otw/bandit/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIn this post series we are going to solve every level from bandit in \u003ca href=\"https://overthewire.org/wargames/bandit/\"\u003e\u003cem\u003eOverTheWire\u003c/em\u003e\u003c/a\u003e\nThis guide pretends to be a writeup containing the solutions of the level, designed for beginners.\u003c/p\u003e\n\u003cp\u003eTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing \u003ca href=\"https://learn.microsoft.com/en-us/windows/wsl/install\"\u003eWSL\u003c/a\u003e, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\u003c/p\u003e","title":"Bandit"},{"content":"Level description The goal of this level is for you to log into the game using SSH. The host to which you need to connect is bandit.labs.overthewire.org, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\nTips for beginners Read a bit about what SSH is. Research about what a port is. Solution This is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go here.\nAt Linux, we can use ssh client to connect to the server. It should be installed by default on your system. If not, please first research about how to install. Once you have the SSH client installed, you can log in into the first level as follows:\nssh bandit0@bandit.labs.overthewire.org -p 2220 Syntax is simple: ssh \u0026lt;username\u0026gt;@\u0026lt;hostname\u0026gt; -p \u0026lt;port\u0026gt;. Usually SSH runs on port 22 by default, but they changed to port 2220 so we must specify it in the command.\nOnce you try to log in, you will see something like this: NB: If it\u0026rsquo;s the first time you try to log in, you will be asked about the authenticity of the host. Just type yes.\nType the password bandit0 and press enter. Now you are inside bandit server, ready to begin with bandit1!\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit0/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe goal of this level is for you to log into the game using SSH. The host to which you need to connect is \u003cstrong\u003ebandit.labs.overthewire.org\u003c/strong\u003e, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eRead a bit about what SSH is.\u003c/li\u003e\n\u003cli\u003eResearch about what a port is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go \u003ca href=\"https://en.wikipedia.org/wiki/Secure_Shell\"\u003ehere\u003c/a\u003e.\u003c/p\u003e","title":"Bandit0"},{"content":"Level description The password for the next level is stored in a file called readme located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\nTips for beginners Learn about home directory in Linux. Learn to use cat and ls commands. Solution First step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\nls This shows in terminal the files at the current directory. There you will see the readme file.\nNow we can to check the contents, so let\u0026rsquo;s use cat:\ncat readme To read a file, we use cat \u0026lt;filename\u0026gt;.\nNB: Not every file is human readable in Linux. We deep more about this in later levels.\nThe content of the readme file reveals the password for bandit2 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit1/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u003cstrong\u003ereadme\u003c/strong\u003e located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn about home directory in Linux.\u003c/li\u003e\n\u003cli\u003eLearn to use \u003ccode\u003ecat\u003c/code\u003e and \u003ccode\u003els\u003c/code\u003e commands.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eFirst step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\u003c/p\u003e","title":"Bandit1"},{"content":"Level description The password for the next level is stored in a file called - located in the home directory\nTips for beginners Try to understand why previous solution is not working as you expect. Solution You may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our cat command: The terminal is waiting for something else. This happens due to character - is used to pass arguments to our commands, and the linux shell is interpreting that. To prevent that, we could use:\ncat ./- NB: Dot . is used to refer current directory. The slash / is used at the end of directory name.\nWe get the password for bandit3 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit2/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called - located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eTry to understand why previous solution is not working as you expect.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eYou may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our \u003ccode\u003ecat\u003c/code\u003e command:\n\u003cimg alt=\"bandit2\" loading=\"lazy\" src=\"/images/otw/bandit/bandit2/0.png\"\u003e\u003c/p\u003e\n\u003cp\u003eThe terminal is \u003cem\u003ewaiting\u003c/em\u003e for something else. This happens due to character \u003ccode\u003e-\u003c/code\u003e is used to pass arguments to our commands, and the linux shell is interpreting that.\nTo prevent that, we could use:\u003c/p\u003e","title":"Bandit2"},{"content":"Level description The password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\nTips for beginners Think about how to escape the whitespaces. Solution After login in the machine as bandit3, we can see the filename \u0026ndash;spaces in this filename\u0026ndash;.\nNow we have 2 problems:\nSame as previous level, filename starts with --, so it will be interpreted as an argument. Address this problem using ./. Filename contains whitespaces. This is an issue, as bash interpretes whitespaces to separate commands. To solve the second problem, we must escape the whitespace character in some way. Here is the solution:\ncat ./--spaces\\ in\\ this\\ filename-- NB: Little trick, you can start writting filename and press Tab to autocomplete the name. The \\ is going to be inserted automatically.\nJust using the \\ we can escape the whitespace.\nNow we can continue with the bandit4 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit3/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eThink about how to \u003cem\u003eescape\u003c/em\u003e the whitespaces.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAfter login in the machine as bandit3, we can see the filename \u003cem\u003e\u0026ndash;spaces in this filename\u0026ndash;\u003c/em\u003e.\u003c/p\u003e\n\u003cp\u003eNow we have 2 problems:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eSame as previous level, filename starts with \u003ccode\u003e--\u003c/code\u003e, so it will be interpreted as an argument. Address this problem using \u003ccode\u003e./\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003eFilename contains \u003cstrong\u003ewhitespaces\u003c/strong\u003e. This is an issue, as bash interpretes whitespaces to separate commands.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eTo solve the second problem, we must escape the whitespace character in some way. Here is the solution:\u003c/p\u003e","title":"Bandit3"},{"content":"Level description The password for the next level is stored in a hidden file in the inhere directory.\nTips for beginners Learn how to navigate directories in Linux. First understand what a hidden file is. Solution Listing directory files inside bandit4\u0026rsquo;s home directory, show directory inhere.\nNB: How to distinguish files and directories in Linux? Use ls -l and see the difference.\nWe have 2 options now:\nMove to inhere directory and check contens again. Check contents directly. Moving to another directory can be done using cd \u0026lt;dirName\u0026gt;. If you prefer to check directory contents directly, use ls \u0026lt;dirName\u0026gt;.\nAfter checking inhere contents via ls, we see nothing. The reason is the file is a hidden file. A hidden file in Linux is everyfile whose name starts with dot .. Hidden files are not shown by default with ls command, so we must add a special flag -a to list all files: NB: Both flags -l and -a cna be combined into a single flag -al, which is shorter to type.\nAs you can see, filename is \u0026hellip;Hidding-From-You starting with three dots. Reading file contents should be easy at this point!\nNext level is bandit5.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit4/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a hidden file in the inhere directory.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to navigate directories in Linux.\u003c/li\u003e\n\u003cli\u003eFirst understand what a hidden file is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eListing directory files inside bandit4\u0026rsquo;s home directory, show directory \u003cstrong\u003einhere\u003c/strong\u003e.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e How to distinguish files and directories in Linux? Use \u003ccode\u003els -l\u003c/code\u003e and see the difference.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eWe have 2 options now:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eMove to inhere directory and check contens again.\u003c/li\u003e\n\u003cli\u003eCheck contents directly.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eMoving to another directory can be done using \u003ccode\u003ecd \u0026lt;dirName\u0026gt;\u003c/code\u003e. If you prefer to check directory contents directly, use \u003ccode\u003els \u0026lt;dirName\u0026gt;\u003c/code\u003e.\u003c/p\u003e","title":"Bandit4"},{"content":"Level description The password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\nTips for beginners What means human-readable file? Is there any way to check filetype at Linux?. Solution Checking inhere\u0026rsquo;s contents shows some files names \u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII here\nSo now, our goal is checking if file content of every file in the folder is ASCII or not. file \u0026lt;filename\u0026gt; does the job. Note the use of *. That called a wildcard regular expression, we\u0026rsquo;ll deep into it in later levels. An easy approach could be checking every file separately:\nfile ./--file00 file ./--file01 ... file ./--file09 But that\u0026rsquo;s not funny, imagine we have 100 files to check. All the files are in the same directory, so we can use cat ./* where ./* matches every filename in the directory, applying file to every file.\nNB: Another approach is to use find with certaing flags. Try to do in different ways, don\u0026rsquo;t stick to my solution.\nThe file \u0026ndash;file00 content is not readable, so get password from \u0026ndash;file07 and continue with bandit6.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit5/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eWhat means human-readable file?\u003c/li\u003e\n\u003cli\u003eIs there any way to check filetype at Linux?.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eChecking inhere\u0026rsquo;s contents shows some files names \u003cstrong\u003e\u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09\u003c/strong\u003e. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII \u003ca href=\"https://en.wikipedia.org/wiki/ASCII\"\u003ehere\u003c/a\u003e\u003c/p\u003e","title":"Bandit5"},{"content":"Level description The password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\nhuman-readable 1033 bytes in size not executable Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution The purpose of the level is showing us how to find for files. Listing contents of inhere, we can see some folders, containing a lot of files inside: NB: Adding -R to ls shows recursively the content of every folder inside the directory listed.\nSo this time, checking every file is not an option. We need to find a file with some properties, specific size, not excutable and human-readable. Let\u0026rsquo;s explain the command we\u0026rsquo;re using:\nfind inhere/ -size 1033c ! -executable First, we specify the directory, in this case inhere. The option -size 1033c returns files of 1033 bytes. Then, with -executable we would get executable files, but we want not executable files, that\u0026rsquo;s why we are adding ! before.\nNB: By default, the -size option takes as argument the number of blocks. For example, -size 2 means 2 blocks of 512 bytes, so its 1024. The c is used to specify exact bytes. Don\u0026rsquo;t ask me why it\u0026rsquo;s c and not b 😅.\nThe property of human-readability is not implemented in find. This is not an issue, previous command returns a single file and it is human readable (we could confirm using file): Extra tip: try to use the following:\nfind inhere/ -size 1033c ! -executable | file You get the same result! The pipe | is a great tool to execute 2+ commands in one line.\nGet your password and continue with bandit7.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit6/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ehuman-readable\u003c/li\u003e\n\u003cli\u003e1033 bytes in size\u003c/li\u003e\n\u003cli\u003enot executable\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThe purpose of the level is showing us how to find for files. Listing contents of \u003cstrong\u003einhere\u003c/strong\u003e, we can see some folders, containing a lot of files inside:\n\u003cimg alt=\"bandit6_0\" loading=\"lazy\" src=\"/images/otw/bandit/bandit6/0.png\"\u003e\u003c/p\u003e","title":"Bandit6"},{"content":"Level description The password for the next level is stored somewhere on the server and has all of the following properties:\nowned by user bandit7 owned by group bandit6 33 bytes in size Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution This is very straightforward to do after completing previous level. Now we need to identify a file owned by user bandit7 and group bandi6. Furthermore, the file is somewhere on the server, which means we have to find in the root directory /.\nfind / -user bandit7 -group bandit6 -size 33c 2\u0026gt;/dev/null NB: I added that strange 2\u0026gt;/dev/null to filter error output. The reason why it works like that is more technical, for now just save this a fast way to filter errors in terminal. We get some errors because looking for files in the whole server may return some unaccesible files, as we don\u0026rsquo;t have root user permissions. We will study Linux permissions in later levels.\nWe should get a single file, containing password for bandit8.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit7/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored somewhere on the server and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eowned by user bandit7\u003c/li\u003e\n\u003cli\u003eowned by group bandit6\u003c/li\u003e\n\u003cli\u003e33 bytes in size\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is very straightforward to do after completing previous level. Now we need to identify a file owned by user bandit7 and group bandi6. Furthermore, the file is \u003cstrong\u003esomewhere on the server\u003c/strong\u003e, which means we have to find in the root directory \u003ccode\u003e/\u003c/code\u003e.\u003c/p\u003e","title":"Bandit7"},{"content":"Level description The password for the next level is stored in the file data.txt next to the word millionth.\nTips for beginners Learn how to filter file contents. Solution At previous levels, we discovered how to find for files. Now it\u0026rsquo;s time to find for content inside a file. grep command is going to help with that task.\nGet your password and continue with\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit8/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the file data.txt next to the word \u003cstrong\u003emillionth\u003c/strong\u003e.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to filter file contents.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAt previous levels, we discovered how to find for files. Now it\u0026rsquo;s time to find for content inside a file. \u003ccode\u003egrep\u003c/code\u003e command is going to help with that task.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"bandit6_1\" loading=\"lazy\" src=\"/images/otw/bandit/bandit8/0.png\"\u003e\u003c/p\u003e\n\u003cp\u003eGet your password and continue with\u003c/p\u003e","title":"Bandit8"},{"content":"👨‍💻 whoami Hey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\nWhat is this❓​ This blog is basically my thoughts on several hacking topics. Here you’ll see:\nWriteups from CTF challenges, from platforms like HackTheBox or OverTheWire.\nWalkthroughs and notes on pentesting techniques I’m learning or testing.\nSome posts on cryptography — because math can be fun (sometimes).\nRandom topics that freaks like me may (just may) find interesting.\nThe idea is simple: share what I learn, document my journey, and maybe help others who are also diving into the exciting world of ethical hacking.\n📫 Contact Want to say hi, share ideas, or just geek out about hacking? Reach me here:\n📧 Email: mrb0b1073@proton.me 💻​ GitHub: mrb0b173 🟩​ HackTheBox: mrb0b1073 ","permalink":"http://localhost:1313/about/","summary":"\u003ch2 id=\"-whoami\"\u003e👨‍💻 whoami\u003c/h2\u003e\n\u003cp\u003eHey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\u003c/p\u003e\n\u003chr\u003e\n\u003ch2 id=\"what-is-this\"\u003eWhat is this❓​\u003c/h2\u003e\n\u003cp\u003eThis blog is basically my thoughts on several hacking topics. Here you’ll see:\u003c/p\u003e","title":"About"},{"content":"Hey! 👋 I\u0026rsquo;m mrb0b1073 and this is my first post.\nWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\nExcited to start this adventure!\n","permalink":"http://localhost:1313/posts/hello-world/","summary":"\u003cp\u003eHey! 👋 I\u0026rsquo;m \u003cstrong\u003emrb0b1073\u003c/strong\u003e and this is my first post.\u003c/p\u003e\n\u003cp\u003eWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\u003cbr\u003e\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\u003c/p\u003e\n\u003cp\u003eExcited to start this adventure!\u003c/p\u003e","title":"Hello World"},{"content":"Introduction If you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\nIn cybersecurity there are broadly two complementary roles: Blue Team and Red Team. Blue Teams focus on defense, monitoring, incident response, hardening systems and keeping services secure, while Red Teams simulate attackers to find weaknesses and prove what an adversary could do. Ethical hacking aligns closely with Red Team operations, but cybersecurity is highly transversal across IT. There are many specialities or areas, such as cloud security, appsec, pentesting, forensics, governance, risk management, malware analysis, etc. Every topic could deserve its own post, so let\u0026rsquo;s keep it simple and focus on ethical hacking.\nHacker philosophy Let\u0026rsquo;s start with the idea of what is exactly a hacker. A hacker is someone who explores systems to understand how they work, finds creative ways to make or fix things, and solves technical problems. Historically the word describes curiosity, craft, and a drive to improve systems — not criminality. It is important to make the distinction between hacker and cracker, also called cybercriminal. A hacker explores, builds, discloses responsibly and works to improve security. They work in authorized environments or labs. On the other hand, a cracker breaks into systems for theft, vandalism or other illicit gain.\nHere you can find the most popularized ideas often summarized as the hacker ethic:\nCuriosity first: Learn by exploring and tinkering. Freedom of information: All knowledge should be shared to help progress. This fits properly with the idea of open source. Mistrust of needless authority: Centralized control sometimes blocks innovation. It is always good to question anything, specially common assumptions. Meritocracy: Skills, craft and results matter more than titles. Craftsmanship \u0026amp; elegance: Technical beauty matters. Build clean, clever and efficient solutions. Responsability \u0026amp; ethics: Use your skills to build, fix, educate and defend, not to harm. Core fundamentals Assuming you want to init yourself in hacking, you should first build competence across three basic pillars.\nOperating Systems You should learn as much as possible about Linux and Windows. Specially Linux, all the tools you will be using are meant to be used in a Linux environment. Skill with shell is required, learn basic commands and how to interact with the OS using the terminal. Research about processes, file permissions, package management and logs. A large proportion of web servers around the world run on Linux, although Windows is also widely used. Windows knowledge is really valuable too, considering active directory is strongly used in corporate environments.\nNetworking You have to understand how computers communicate each other. Understand basic networking concepts, IP adresses, subnetting, proxies, find out how internet works. Study some protocols such as TCP/IP, HTTP, DNS or SSH. This could sound confusing for beginners, but this step is not optional! Study different client/server models and how services expose attack surfaces.\nProgramming \u0026amp; scripting Is this completely required? Maybe not for complete beginners. Does it help? Absolutely yes. Understanding how web apps or any type of application works makes things much easier. You can imagine different entry points to exploit if you understand how systems are designed. Also writing scripts in bash or python makes you more productive through automation.\nEthical Hacking foundations Once you feel confident with these 3 pillars, you can go to the next step. You can study about different topics and areas. For example, binary exploiting, web pentesting, mobile pentesting, wireless hacking, etc. You should start picking a focus, in this post we focus on web pentesting, as it is beginner friendly. Also web applications are the bread and butter in companies nowadays.\nKey concepts to study:\nCIA Triad: CIA refers to Confidentiality, Integrity and Availability. These three concepts are key in information security, and describe properties we want to ensure in our systems and information. Web Security basics, OWASP: Study the OWASP Top 10, which summarizes most frequent web security risks. Authentication and session control: Understand the concepts of Authentication and Authorization, research about how session is handled in web apps, cookies, JWT tokens, etc. Input validation \u0026amp; injection attacks: Learn about SQL Injection, Cross-Site Scripting (XSS), Code Injection, SSTI, and every injection type. Secure development lifecycle: Find out how to implement security controls in code. This can be more related to Blue Team, but as Red Teamer it is important to understand. Firewall evasion: What a firewall is and some techniques/methods to bypass. Some cryptography: Understand what a chiper and a hash are, how information is encrypted to prevent access from 3rd parties. Focusing on web, read about TLS protocol. There are many more topics you can research and learn, but this could be a nice starting point.\nTools and platforms to learn Now you have an idea of what to study, let\u0026rsquo;s see how to start in practical terms.\nSome platforms I personally recommend:\nOverTheWire: Here you can find some CTFs (Capture The Flag) which are fun to play and also really instructive. Bandit games are a must for complete beginners, as you will explore some linux and bash concepts which are basic to continue. The games are leveled by difficulty, in their web you can get all the information about how to play, only a terminal and SSH is required. This helps building your foundation in Linux OS. HackTheBox: Nº 1 platform in cybersecurity. Has a lot of resources to learn all this core fundamentals, and also red team / blue team security topics. It is focused on labs where you can test your skills hacking different boxes but if you really want to learn it is worth to invest time and money in the academy. I have to say the level here is high, specially if you try to hack machines on your own without using some guide or writeup. TryHackMe: More beginner friendly than hackthebox, it provides a lot of guided learning resources. PortSwigger Labs: Practical labs about specific topics, focused on web hacking. They are great to learn and understand different types of attacks, injections, and security misconfigurations. I would recommend digging into this once you have the theoretical basis about these concepts. I have to mention a few tools I am sure you\u0026rsquo;d end up using:\nNmap: This is probably the most famous tool in hacking, allowing you to gather information about ports and services running in a machine. Burpsuite: A proxy tool widely used in web application security testing. It basically allows you to intercept and modify web requests, which can be used to perform several types of attacks. Metasploit: The most used pentesting framework. Contains a large amount of scripts and exploits ready to run. Another crucial step here is to set up your virtual lab environment to test vulnerable applications. To achieve this goal, there are some Linux distributions like Kali, Parrot or BlackArch, but that\u0026rsquo;s a topic for another post.\nFinal thoughs To sum up, this would be my personal roadmap:\nLearn the fundamentals, specially Linux and networking. Install some Linux in a virtual machine, play with it, get comfortable with the terminal. You can start with bandit wargames in OverTheWire. Complete every level and make sure to understand everything as clear as possible. Move to guided boxes on HackTheBox. I recommend you joining their Discord, ask questions, community is great there! Take notes, repeat, learn, improve your skills. Maybe use your own lab environment, create your own vulnerable apps. Hacking is a mixing of curiosity, study and practice. Being passionate and motivated about it is really helpful and will definitely speed up the process. The path is long and really challenging, so keep it going!\n\u0026ldquo;Yes, I am a criminal. My crime is that of curiosity.\u0026rdquo; — The Mentor (Loyd Blankenship) at The Hacker Manifesto\n","permalink":"http://localhost:1313/posts/starting-point/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIf you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\u003c/p\u003e","title":"Starting Point"},{"content":"Introduction In this post series we are going to solve every level from bandit in OverTheWire This guide pretends to be a writeup containing the solutions of the level, designed for beginners.\nTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing WSL, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\nEvery section will contain the solution as well as some tips for people who is absolutely beginner.\nTips First of all, some tips:\nDo not use this as first resource to solve the levels. Try on your own, make mistakes and learn from them. Only check the solution as last resource or if you are completely new and you have absolutely no idea about what to do next. Take notes from your learning. Write up commands, tips and everything which can be useful in the future. Make sure to understand everything. Is a good idea to note the passwords for every level. If you want to continue letter, you can simply log in in the desired level. It is annoying to repeat everything! Follow the tips and information provided at OverTheWire website. Levels Here is my solution for every level:\nBandit0 Bandit1 Bandit2 Bandit3 Bandit4 Bandit5 Bandit6 Bandit7 ","permalink":"http://localhost:1313/posts/otw/bandit/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIn this post series we are going to solve every level from bandit in \u003ca href=\"https://overthewire.org/wargames/bandit/\"\u003e\u003cem\u003eOverTheWire\u003c/em\u003e\u003c/a\u003e\nThis guide pretends to be a writeup containing the solutions of the level, designed for beginners.\u003c/p\u003e\n\u003cp\u003eTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing \u003ca href=\"https://learn.microsoft.com/en-us/windows/wsl/install\"\u003eWSL\u003c/a\u003e, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\u003c/p\u003e","title":"Bandit"},{"content":"Level description The goal of this level is for you to log into the game using SSH. The host to which you need to connect is bandit.labs.overthewire.org, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\nTips for beginners Read a bit about what SSH is. Research about what a port is. Solution This is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go here.\nAt Linux, we can use ssh client to connect to the server. It should be installed by default on your system. If not, please first research about how to install. Once you have the SSH client installed, you can log in into the first level as follows:\nssh bandit0@bandit.labs.overthewire.org -p 2220 Syntax is simple: ssh \u0026lt;username\u0026gt;@\u0026lt;hostname\u0026gt; -p \u0026lt;port\u0026gt;. Usually SSH runs on port 22 by default, but they changed to port 2220 so we must specify it in the command.\nOnce you try to log in, you will see something like this: NB: If it\u0026rsquo;s the first time you try to log in, you will be asked about the authenticity of the host. Just type yes.\nType the password bandit0 and press enter. Now you are inside bandit server, ready to begin with bandit1!\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit0/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe goal of this level is for you to log into the game using SSH. The host to which you need to connect is \u003cstrong\u003ebandit.labs.overthewire.org\u003c/strong\u003e, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eRead a bit about what SSH is.\u003c/li\u003e\n\u003cli\u003eResearch about what a port is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go \u003ca href=\"https://en.wikipedia.org/wiki/Secure_Shell\"\u003ehere\u003c/a\u003e.\u003c/p\u003e","title":"Bandit0"},{"content":"Level description The password for the next level is stored in a file called readme located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\nTips for beginners Learn about home directory in Linux. Learn to use cat and ls commands. Solution First step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\nls This shows in terminal the files at the current directory. There you will see the readme file.\nNow we can to check the contents, so let\u0026rsquo;s use cat:\ncat readme To read a file, we use cat \u0026lt;filename\u0026gt;.\nNB: Not every file is human readable in Linux. We deep more about this in later levels.\nThe content of the readme file reveals the password for bandit2 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit1/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u003cstrong\u003ereadme\u003c/strong\u003e located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn about home directory in Linux.\u003c/li\u003e\n\u003cli\u003eLearn to use \u003ccode\u003ecat\u003c/code\u003e and \u003ccode\u003els\u003c/code\u003e commands.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eFirst step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\u003c/p\u003e","title":"Bandit1"},{"content":"Level description The password for the next level is stored in a file called - located in the home directory\nTips for beginners Try to understand why previous solution is not working as you expect. Solution You may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our cat command: The terminal is waiting for something else. This happens due to character - is used to pass arguments to our commands, and the linux shell is interpreting that. To prevent that, we could use:\ncat ./- NB: Dot . is used to refer current directory. The slash / is used at the end of directory name.\nWe get the password for bandit3 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit2/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called - located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eTry to understand why previous solution is not working as you expect.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eYou may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our \u003ccode\u003ecat\u003c/code\u003e command:\n\u003cimg alt=\"bandit2\" loading=\"lazy\" src=\"/images/otw/bandit/bandit2/0.png\"\u003e\u003c/p\u003e\n\u003cp\u003eThe terminal is \u003cem\u003ewaiting\u003c/em\u003e for something else. This happens due to character \u003ccode\u003e-\u003c/code\u003e is used to pass arguments to our commands, and the linux shell is interpreting that.\nTo prevent that, we could use:\u003c/p\u003e","title":"Bandit2"},{"content":"Level description The password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\nTips for beginners Think about how to escape the whitespaces. Solution After login in the machine as bandit3, we can see the filename \u0026ndash;spaces in this filename\u0026ndash;.\nNow we have 2 problems:\nSame as previous level, filename starts with --, so it will be interpreted as an argument. Address this problem using ./. Filename contains whitespaces. This is an issue, as bash interpretes whitespaces to separate commands. To solve the second problem, we must escape the whitespace character in some way. Here is the solution:\ncat ./--spaces\\ in\\ this\\ filename-- NB: Little trick, you can start writting filename and press Tab to autocomplete the name. The \\ is going to be inserted automatically.\nJust using the \\ we can escape the whitespace.\nNow we can continue with the bandit4 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit3/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eThink about how to \u003cem\u003eescape\u003c/em\u003e the whitespaces.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAfter login in the machine as bandit3, we can see the filename \u003cem\u003e\u0026ndash;spaces in this filename\u0026ndash;\u003c/em\u003e.\u003c/p\u003e\n\u003cp\u003eNow we have 2 problems:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eSame as previous level, filename starts with \u003ccode\u003e--\u003c/code\u003e, so it will be interpreted as an argument. Address this problem using \u003ccode\u003e./\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003eFilename contains \u003cstrong\u003ewhitespaces\u003c/strong\u003e. This is an issue, as bash interpretes whitespaces to separate commands.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eTo solve the second problem, we must escape the whitespace character in some way. Here is the solution:\u003c/p\u003e","title":"Bandit3"},{"content":"Level description The password for the next level is stored in a hidden file in the inhere directory.\nTips for beginners Learn how to navigate directories in Linux. First understand what a hidden file is. Solution Listing directory files inside bandit4\u0026rsquo;s home directory, show directory inhere.\nNB: How to distinguish files and directories in Linux? Use ls -l and see the difference.\nWe have 2 options now:\nMove to inhere directory and check contens again. Check contents directly. Moving to another directory can be done using cd \u0026lt;dirName\u0026gt;. If you prefer to check directory contents directly, use ls \u0026lt;dirName\u0026gt;.\nAfter checking inhere contents via ls, we see nothing. The reason is the file is a hidden file. A hidden file in Linux is everyfile whose name starts with dot .. Hidden files are not shown by default with ls command, so we must add a special flag -a to list all files: NB: Both flags -l and -a cna be combined into a single flag -al, which is shorter to type.\nAs you can see, filename is \u0026hellip;Hidding-From-You starting with three dots. Reading file contents should be easy at this point!\nNext level is bandit5.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit4/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a hidden file in the inhere directory.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to navigate directories in Linux.\u003c/li\u003e\n\u003cli\u003eFirst understand what a hidden file is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eListing directory files inside bandit4\u0026rsquo;s home directory, show directory \u003cstrong\u003einhere\u003c/strong\u003e.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e How to distinguish files and directories in Linux? Use \u003ccode\u003els -l\u003c/code\u003e and see the difference.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eWe have 2 options now:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eMove to inhere directory and check contens again.\u003c/li\u003e\n\u003cli\u003eCheck contents directly.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eMoving to another directory can be done using \u003ccode\u003ecd \u0026lt;dirName\u0026gt;\u003c/code\u003e. If you prefer to check directory contents directly, use \u003ccode\u003els \u0026lt;dirName\u0026gt;\u003c/code\u003e.\u003c/p\u003e","title":"Bandit4"},{"content":"Level description The password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\nTips for beginners What means human-readable file? Is there any way to check filetype at Linux?. Solution Checking inhere\u0026rsquo;s contents shows some files names \u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII here\nSo now, our goal is checking if file content of every file in the folder is ASCII or not. file \u0026lt;filename\u0026gt; does the job. Note the use of *. That called a wildcard regular expression, we\u0026rsquo;ll deep into it in later levels. An easy approach could be checking every file separately:\nfile ./--file00 file ./--file01 ... file ./--file09 But that\u0026rsquo;s not funny, imagine we have 100 files to check. All the files are in the same directory, so we can use cat ./* where ./* matches every filename in the directory, applying file to every file.\nNB: Another approach is to use find with certaing flags. Try to do in different ways, don\u0026rsquo;t stick to my solution.\nThe file \u0026ndash;file00 content is not readable, so get password from \u0026ndash;file07 and continue with bandit6.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit5/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eWhat means human-readable file?\u003c/li\u003e\n\u003cli\u003eIs there any way to check filetype at Linux?.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eChecking inhere\u0026rsquo;s contents shows some files names \u003cstrong\u003e\u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09\u003c/strong\u003e. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII \u003ca href=\"https://en.wikipedia.org/wiki/ASCII\"\u003ehere\u003c/a\u003e\u003c/p\u003e","title":"Bandit5"},{"content":"Level description The password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\nhuman-readable 1033 bytes in size not executable Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution The purpose of the level is showing us how to find for files. Listing contents of inhere, we can see some folders, containing a lot of files inside: NB: Adding -R to ls shows recursively the content of every folder inside the directory listed.\nSo this time, checking every file is not an option. We need to find a file with some properties, specific size, not excutable and human-readable. Let\u0026rsquo;s explain the command we\u0026rsquo;re using:\nfind inhere/ -size 1033c ! -executable First, we specify the directory, in this case inhere. The option -size 1033c returns files of 1033 bytes. Then, with -executable we would get executable files, but we want not executable files, that\u0026rsquo;s why we are adding ! before.\nNB: By default, the -size option takes as argument the number of blocks. For example, -size 2 means 2 blocks of 512 bytes, so its 1024. The c is used to specify exact bytes. Don\u0026rsquo;t ask me why it\u0026rsquo;s c and not b 😅.\nThe property of human-readability is not implemented in find. This is not an issue, previous command returns a single file and it is human readable (we could confirm using file): Extra tip: try to use the following:\nfind inhere/ -size 1033c ! -executable | file You get the same result! The pipe | is a great tool to execute 2+ commands in one line.\nGet your password and continue with bandit7.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit6/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ehuman-readable\u003c/li\u003e\n\u003cli\u003e1033 bytes in size\u003c/li\u003e\n\u003cli\u003enot executable\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThe purpose of the level is showing us how to find for files. Listing contents of \u003cstrong\u003einhere\u003c/strong\u003e, we can see some folders, containing a lot of files inside:\n\u003cimg alt=\"bandit6_0\" loading=\"lazy\" src=\"/images/otw/bandit/bandit6/0.png\"\u003e\u003c/p\u003e","title":"Bandit6"},{"content":"Level description The password for the next level is stored somewhere on the server and has all of the following properties:\nowned by user bandit7 owned by group bandit6 33 bytes in size Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution This is very straightforward to do after completing previous level. Now we need to identify a file owned by user bandit7 and group bandi6. Furthermore, the file is somewhere on the server, which means we have to find in the root directory /.\nfind / -user bandit7 -group bandit6 -size 33c 2\u0026gt;/dev/null NB: I added that strange 2\u0026gt;/dev/null to filter error output. The reason why it works like that is more technical, for now just save this a fast way to filter errors in terminal. We get some errors because looking for files in the whole server may return some unaccesible files, as we don\u0026rsquo;t have root user permissions. We will study Linux permissions in later levels.\nWe should get a single file, containing password for bandit8.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit7/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored somewhere on the server and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eowned by user bandit7\u003c/li\u003e\n\u003cli\u003eowned by group bandit6\u003c/li\u003e\n\u003cli\u003e33 bytes in size\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is very straightforward to do after completing previous level. Now we need to identify a file owned by user bandit7 and group bandi6. Furthermore, the file is \u003cstrong\u003esomewhere on the server\u003c/strong\u003e, which means we have to find in the root directory \u003ccode\u003e/\u003c/code\u003e.\u003c/p\u003e","title":"Bandit7"},{"content":"Level description The password for the next level is stored in the file data.txt next to the word millionth.\nTips for beginners Learn how to filter file contents. Solution At previous levels, we discovered how to find for files. Now it\u0026rsquo;s time to find for content inside a file. grep command is going to help with that task.\nGet your password and continue with\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit8/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the file data.txt next to the word \u003cstrong\u003emillionth\u003c/strong\u003e.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to filter file contents.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAt previous levels, we discovered how to find for files. Now it\u0026rsquo;s time to find for content inside a file. \u003ccode\u003egrep\u003c/code\u003e command is going to help with that task.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"bandit8\" loading=\"lazy\" src=\"/images/otw/bandit/bandit8/0.png\"\u003e\u003c/p\u003e\n\u003cp\u003eGet your password and continue with\u003c/p\u003e","title":"Bandit8"},{"content":"👨‍💻 whoami Hey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\nWhat is this❓​ This blog is basically my thoughts on several hacking topics. Here you’ll see:\nWriteups from CTF challenges, from platforms like HackTheBox or OverTheWire.\nWalkthroughs and notes on pentesting techniques I’m learning or testing.\nSome posts on cryptography — because math can be fun (sometimes).\nRandom topics that freaks like me may (just may) find interesting.\nThe idea is simple: share what I learn, document my journey, and maybe help others who are also diving into the exciting world of ethical hacking.\n📫 Contact Want to say hi, share ideas, or just geek out about hacking? Reach me here:\n📧 Email: mrb0b1073@proton.me 💻​ GitHub: mrb0b173 🟩​ HackTheBox: mrb0b1073 ","permalink":"http://localhost:1313/about/","summary":"\u003ch2 id=\"-whoami\"\u003e👨‍💻 whoami\u003c/h2\u003e\n\u003cp\u003eHey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\u003c/p\u003e\n\u003chr\u003e\n\u003ch2 id=\"what-is-this\"\u003eWhat is this❓​\u003c/h2\u003e\n\u003cp\u003eThis blog is basically my thoughts on several hacking topics. Here you’ll see:\u003c/p\u003e","title":"About"},{"content":"Hey! 👋 I\u0026rsquo;m mrb0b1073 and this is my first post.\nWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\nExcited to start this adventure!\n","permalink":"http://localhost:1313/posts/hello-world/","summary":"\u003cp\u003eHey! 👋 I\u0026rsquo;m \u003cstrong\u003emrb0b1073\u003c/strong\u003e and this is my first post.\u003c/p\u003e\n\u003cp\u003eWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\u003cbr\u003e\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\u003c/p\u003e\n\u003cp\u003eExcited to start this adventure!\u003c/p\u003e","title":"Hello World"},{"content":"Introduction If you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\nIn cybersecurity there are broadly two complementary roles: Blue Team and Red Team. Blue Teams focus on defense, monitoring, incident response, hardening systems and keeping services secure, while Red Teams simulate attackers to find weaknesses and prove what an adversary could do. Ethical hacking aligns closely with Red Team operations, but cybersecurity is highly transversal across IT. There are many specialities or areas, such as cloud security, appsec, pentesting, forensics, governance, risk management, malware analysis, etc. Every topic could deserve its own post, so let\u0026rsquo;s keep it simple and focus on ethical hacking.\nHacker philosophy Let\u0026rsquo;s start with the idea of what is exactly a hacker. A hacker is someone who explores systems to understand how they work, finds creative ways to make or fix things, and solves technical problems. Historically the word describes curiosity, craft, and a drive to improve systems — not criminality. It is important to make the distinction between hacker and cracker, also called cybercriminal. A hacker explores, builds, discloses responsibly and works to improve security. They work in authorized environments or labs. On the other hand, a cracker breaks into systems for theft, vandalism or other illicit gain.\nHere you can find the most popularized ideas often summarized as the hacker ethic:\nCuriosity first: Learn by exploring and tinkering. Freedom of information: All knowledge should be shared to help progress. This fits properly with the idea of open source. Mistrust of needless authority: Centralized control sometimes blocks innovation. It is always good to question anything, specially common assumptions. Meritocracy: Skills, craft and results matter more than titles. Craftsmanship \u0026amp; elegance: Technical beauty matters. Build clean, clever and efficient solutions. Responsability \u0026amp; ethics: Use your skills to build, fix, educate and defend, not to harm. Core fundamentals Assuming you want to init yourself in hacking, you should first build competence across three basic pillars.\nOperating Systems You should learn as much as possible about Linux and Windows. Specially Linux, all the tools you will be using are meant to be used in a Linux environment. Skill with shell is required, learn basic commands and how to interact with the OS using the terminal. Research about processes, file permissions, package management and logs. A large proportion of web servers around the world run on Linux, although Windows is also widely used. Windows knowledge is really valuable too, considering active directory is strongly used in corporate environments.\nNetworking You have to understand how computers communicate each other. Understand basic networking concepts, IP adresses, subnetting, proxies, find out how internet works. Study some protocols such as TCP/IP, HTTP, DNS or SSH. This could sound confusing for beginners, but this step is not optional! Study different client/server models and how services expose attack surfaces.\nProgramming \u0026amp; scripting Is this completely required? Maybe not for complete beginners. Does it help? Absolutely yes. Understanding how web apps or any type of application works makes things much easier. You can imagine different entry points to exploit if you understand how systems are designed. Also writing scripts in bash or python makes you more productive through automation.\nEthical Hacking foundations Once you feel confident with these 3 pillars, you can go to the next step. You can study about different topics and areas. For example, binary exploiting, web pentesting, mobile pentesting, wireless hacking, etc. You should start picking a focus, in this post we focus on web pentesting, as it is beginner friendly. Also web applications are the bread and butter in companies nowadays.\nKey concepts to study:\nCIA Triad: CIA refers to Confidentiality, Integrity and Availability. These three concepts are key in information security, and describe properties we want to ensure in our systems and information. Web Security basics, OWASP: Study the OWASP Top 10, which summarizes most frequent web security risks. Authentication and session control: Understand the concepts of Authentication and Authorization, research about how session is handled in web apps, cookies, JWT tokens, etc. Input validation \u0026amp; injection attacks: Learn about SQL Injection, Cross-Site Scripting (XSS), Code Injection, SSTI, and every injection type. Secure development lifecycle: Find out how to implement security controls in code. This can be more related to Blue Team, but as Red Teamer it is important to understand. Firewall evasion: What a firewall is and some techniques/methods to bypass. Some cryptography: Understand what a chiper and a hash are, how information is encrypted to prevent access from 3rd parties. Focusing on web, read about TLS protocol. There are many more topics you can research and learn, but this could be a nice starting point.\nTools and platforms to learn Now you have an idea of what to study, let\u0026rsquo;s see how to start in practical terms.\nSome platforms I personally recommend:\nOverTheWire: Here you can find some CTFs (Capture The Flag) which are fun to play and also really instructive. Bandit games are a must for complete beginners, as you will explore some linux and bash concepts which are basic to continue. The games are leveled by difficulty, in their web you can get all the information about how to play, only a terminal and SSH is required. This helps building your foundation in Linux OS. HackTheBox: Nº 1 platform in cybersecurity. Has a lot of resources to learn all this core fundamentals, and also red team / blue team security topics. It is focused on labs where you can test your skills hacking different boxes but if you really want to learn it is worth to invest time and money in the academy. I have to say the level here is high, specially if you try to hack machines on your own without using some guide or writeup. TryHackMe: More beginner friendly than hackthebox, it provides a lot of guided learning resources. PortSwigger Labs: Practical labs about specific topics, focused on web hacking. They are great to learn and understand different types of attacks, injections, and security misconfigurations. I would recommend digging into this once you have the theoretical basis about these concepts. I have to mention a few tools I am sure you\u0026rsquo;d end up using:\nNmap: This is probably the most famous tool in hacking, allowing you to gather information about ports and services running in a machine. Burpsuite: A proxy tool widely used in web application security testing. It basically allows you to intercept and modify web requests, which can be used to perform several types of attacks. Metasploit: The most used pentesting framework. Contains a large amount of scripts and exploits ready to run. Another crucial step here is to set up your virtual lab environment to test vulnerable applications. To achieve this goal, there are some Linux distributions like Kali, Parrot or BlackArch, but that\u0026rsquo;s a topic for another post.\nFinal thoughs To sum up, this would be my personal roadmap:\nLearn the fundamentals, specially Linux and networking. Install some Linux in a virtual machine, play with it, get comfortable with the terminal. You can start with bandit wargames in OverTheWire. Complete every level and make sure to understand everything as clear as possible. Move to guided boxes on HackTheBox. I recommend you joining their Discord, ask questions, community is great there! Take notes, repeat, learn, improve your skills. Maybe use your own lab environment, create your own vulnerable apps. Hacking is a mixing of curiosity, study and practice. Being passionate and motivated about it is really helpful and will definitely speed up the process. The path is long and really challenging, so keep it going!\n\u0026ldquo;Yes, I am a criminal. My crime is that of curiosity.\u0026rdquo; — The Mentor (Loyd Blankenship) at The Hacker Manifesto\n","permalink":"http://localhost:1313/posts/starting-point/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIf you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\u003c/p\u003e","title":"Starting Point"},{"content":"Introduction In this post series we are going to solve every level from bandit in OverTheWire This guide pretends to be a writeup containing the solutions of the level, designed for beginners.\nTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing WSL, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\nEvery section will contain the solution as well as some tips for people who is absolutely beginner.\nTips First of all, some tips:\nDo not use this as first resource to solve the levels. Try on your own, make mistakes and learn from them. Only check the solution as last resource or if you are completely new and you have absolutely no idea about what to do next. Take notes from your learning. Write up commands, tips and everything which can be useful in the future. Make sure to understand everything. Is a good idea to note the passwords for every level. If you want to continue letter, you can simply log in in the desired level. It is annoying to repeat everything! Follow the tips and information provided at OverTheWire website. Levels Here is my solution for every level:\nBandit0 Bandit1 Bandit2 Bandit3 Bandit4 Bandit5 Bandit6 Bandit7 ","permalink":"http://localhost:1313/posts/otw/bandit/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIn this post series we are going to solve every level from bandit in \u003ca href=\"https://overthewire.org/wargames/bandit/\"\u003e\u003cem\u003eOverTheWire\u003c/em\u003e\u003c/a\u003e\nThis guide pretends to be a writeup containing the solutions of the level, designed for beginners.\u003c/p\u003e\n\u003cp\u003eTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing \u003ca href=\"https://learn.microsoft.com/en-us/windows/wsl/install\"\u003eWSL\u003c/a\u003e, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\u003c/p\u003e","title":"Bandit"},{"content":"Level description The goal of this level is for you to log into the game using SSH. The host to which you need to connect is bandit.labs.overthewire.org, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\nTips for beginners Read a bit about what SSH is. Research about what a port is. Solution This is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go here.\nAt Linux, we can use ssh client to connect to the server. It should be installed by default on your system. If not, please first research about how to install. Once you have the SSH client installed, you can log in into the first level as follows:\nssh bandit0@bandit.labs.overthewire.org -p 2220 Syntax is simple: ssh \u0026lt;username\u0026gt;@\u0026lt;hostname\u0026gt; -p \u0026lt;port\u0026gt;. Usually SSH runs on port 22 by default, but they changed to port 2220 so we must specify it in the command.\nOnce you try to log in, you will see something like this: NB: If it\u0026rsquo;s the first time you try to log in, you will be asked about the authenticity of the host. Just type yes.\nType the password bandit0 and press enter. Now you are inside bandit server, ready to begin with bandit1!\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit0/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe goal of this level is for you to log into the game using SSH. The host to which you need to connect is \u003cstrong\u003ebandit.labs.overthewire.org\u003c/strong\u003e, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eRead a bit about what SSH is.\u003c/li\u003e\n\u003cli\u003eResearch about what a port is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go \u003ca href=\"https://en.wikipedia.org/wiki/Secure_Shell\"\u003ehere\u003c/a\u003e.\u003c/p\u003e","title":"Bandit0"},{"content":"Level description The password for the next level is stored in a file called readme located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\nTips for beginners Learn about home directory in Linux. Learn to use cat and ls commands. Solution First step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\nls This shows in terminal the files at the current directory. There you will see the readme file.\nNow we can to check the contents, so let\u0026rsquo;s use cat:\ncat readme To read a file, we use cat \u0026lt;filename\u0026gt;.\nNB: Not every file is human readable in Linux. We deep more about this in later levels.\nThe content of the readme file reveals the password for bandit2 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit1/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u003cstrong\u003ereadme\u003c/strong\u003e located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn about home directory in Linux.\u003c/li\u003e\n\u003cli\u003eLearn to use \u003ccode\u003ecat\u003c/code\u003e and \u003ccode\u003els\u003c/code\u003e commands.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eFirst step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\u003c/p\u003e","title":"Bandit1"},{"content":"Level description The password for the next level is stored in a file called - located in the home directory\nTips for beginners Try to understand why previous solution is not working as you expect. Solution You may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our cat command: The terminal is waiting for something else. This happens due to character - is used to pass arguments to our commands, and the linux shell is interpreting that. To prevent that, we could use:\ncat ./- NB: Dot . is used to refer current directory. The slash / is used at the end of directory name.\nWe get the password for bandit3 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit2/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called - located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eTry to understand why previous solution is not working as you expect.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eYou may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our \u003ccode\u003ecat\u003c/code\u003e command:\n\u003cimg alt=\"bandit2\" loading=\"lazy\" src=\"/images/otw/bandit/bandit2/0.png\"\u003e\u003c/p\u003e\n\u003cp\u003eThe terminal is \u003cem\u003ewaiting\u003c/em\u003e for something else. This happens due to character \u003ccode\u003e-\u003c/code\u003e is used to pass arguments to our commands, and the linux shell is interpreting that.\nTo prevent that, we could use:\u003c/p\u003e","title":"Bandit2"},{"content":"Level description The password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\nTips for beginners Think about how to escape the whitespaces. Solution After login in the machine as bandit3, we can see the filename \u0026ndash;spaces in this filename\u0026ndash;.\nNow we have 2 problems:\nSame as previous level, filename starts with --, so it will be interpreted as an argument. Address this problem using ./. Filename contains whitespaces. This is an issue, as bash interpretes whitespaces to separate commands. To solve the second problem, we must escape the whitespace character in some way. Here is the solution:\ncat ./--spaces\\ in\\ this\\ filename-- NB: Little trick, you can start writting filename and press Tab to autocomplete the name. The \\ is going to be inserted automatically.\nJust using the \\ we can escape the whitespace.\nNow we can continue with the bandit4 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit3/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eThink about how to \u003cem\u003eescape\u003c/em\u003e the whitespaces.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAfter login in the machine as bandit3, we can see the filename \u003cem\u003e\u0026ndash;spaces in this filename\u0026ndash;\u003c/em\u003e.\u003c/p\u003e\n\u003cp\u003eNow we have 2 problems:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eSame as previous level, filename starts with \u003ccode\u003e--\u003c/code\u003e, so it will be interpreted as an argument. Address this problem using \u003ccode\u003e./\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003eFilename contains \u003cstrong\u003ewhitespaces\u003c/strong\u003e. This is an issue, as bash interpretes whitespaces to separate commands.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eTo solve the second problem, we must escape the whitespace character in some way. Here is the solution:\u003c/p\u003e","title":"Bandit3"},{"content":"Level description The password for the next level is stored in a hidden file in the inhere directory.\nTips for beginners Learn how to navigate directories in Linux. First understand what a hidden file is. Solution Listing directory files inside bandit4\u0026rsquo;s home directory, show directory inhere.\nNB: How to distinguish files and directories in Linux? Use ls -l and see the difference.\nWe have 2 options now:\nMove to inhere directory and check contens again. Check contents directly. Moving to another directory can be done using cd \u0026lt;dirName\u0026gt;. If you prefer to check directory contents directly, use ls \u0026lt;dirName\u0026gt;.\nAfter checking inhere contents via ls, we see nothing. The reason is the file is a hidden file. A hidden file in Linux is everyfile whose name starts with dot .. Hidden files are not shown by default with ls command, so we must add a special flag -a to list all files: NB: Both flags -l and -a cna be combined into a single flag -al, which is shorter to type.\nAs you can see, filename is \u0026hellip;Hidding-From-You starting with three dots. Reading file contents should be easy at this point!\nNext level is bandit5.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit4/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a hidden file in the inhere directory.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to navigate directories in Linux.\u003c/li\u003e\n\u003cli\u003eFirst understand what a hidden file is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eListing directory files inside bandit4\u0026rsquo;s home directory, show directory \u003cstrong\u003einhere\u003c/strong\u003e.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e How to distinguish files and directories in Linux? Use \u003ccode\u003els -l\u003c/code\u003e and see the difference.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eWe have 2 options now:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eMove to inhere directory and check contens again.\u003c/li\u003e\n\u003cli\u003eCheck contents directly.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eMoving to another directory can be done using \u003ccode\u003ecd \u0026lt;dirName\u0026gt;\u003c/code\u003e. If you prefer to check directory contents directly, use \u003ccode\u003els \u0026lt;dirName\u0026gt;\u003c/code\u003e.\u003c/p\u003e","title":"Bandit4"},{"content":"Level description The password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\nTips for beginners What means human-readable file? Is there any way to check filetype at Linux?. Solution Checking inhere\u0026rsquo;s contents shows some files names \u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII here\nSo now, our goal is checking if file content of every file in the folder is ASCII or not. file \u0026lt;filename\u0026gt; does the job. Note the use of *. That called a wildcard regular expression, we\u0026rsquo;ll deep into it in later levels. An easy approach could be checking every file separately:\nfile ./--file00 file ./--file01 ... file ./--file09 But that\u0026rsquo;s not funny, imagine we have 100 files to check. All the files are in the same directory, so we can use cat ./* where ./* matches every filename in the directory, applying file to every file.\nNB: Another approach is to use find with certaing flags. Try to do in different ways, don\u0026rsquo;t stick to my solution.\nThe file \u0026ndash;file00 content is not readable, so get password from \u0026ndash;file07 and continue with bandit6.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit5/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eWhat means human-readable file?\u003c/li\u003e\n\u003cli\u003eIs there any way to check filetype at Linux?.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eChecking inhere\u0026rsquo;s contents shows some files names \u003cstrong\u003e\u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09\u003c/strong\u003e. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII \u003ca href=\"https://en.wikipedia.org/wiki/ASCII\"\u003ehere\u003c/a\u003e\u003c/p\u003e","title":"Bandit5"},{"content":"Level description The password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\nhuman-readable 1033 bytes in size not executable Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution The purpose of the level is showing us how to find for files. Listing contents of inhere, we can see some folders, containing a lot of files inside: NB: Adding -R to ls shows recursively the content of every folder inside the directory listed.\nSo this time, checking every file is not an option. We need to find a file with some properties, specific size, not excutable and human-readable. Let\u0026rsquo;s explain the command we\u0026rsquo;re using:\nfind inhere/ -size 1033c ! -executable First, we specify the directory, in this case inhere. The option -size 1033c returns files of 1033 bytes. Then, with -executable we would get executable files, but we want not executable files, that\u0026rsquo;s why we are adding ! before.\nNB: By default, the -size option takes as argument the number of blocks. For example, -size 2 means 2 blocks of 512 bytes, so its 1024. The c is used to specify exact bytes. Don\u0026rsquo;t ask me why it\u0026rsquo;s c and not b 😅.\nThe property of human-readability is not implemented in find. This is not an issue, previous command returns a single file and it is human readable (we could confirm using file): Extra tip: try to use the following:\nfind inhere/ -size 1033c ! -executable | file You get the same result! The pipe | is a great tool to execute 2+ commands in one line.\nGet your password and continue with bandit7.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit6/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ehuman-readable\u003c/li\u003e\n\u003cli\u003e1033 bytes in size\u003c/li\u003e\n\u003cli\u003enot executable\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThe purpose of the level is showing us how to find for files. Listing contents of \u003cstrong\u003einhere\u003c/strong\u003e, we can see some folders, containing a lot of files inside:\n\u003cimg alt=\"bandit6_0\" loading=\"lazy\" src=\"/images/otw/bandit/bandit6/0.png\"\u003e\u003c/p\u003e","title":"Bandit6"},{"content":"Level description The password for the next level is stored somewhere on the server and has all of the following properties:\nowned by user bandit7 owned by group bandit6 33 bytes in size Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution This is very straightforward to do after completing previous level. Now we need to identify a file owned by user bandit7 and group bandi6. Furthermore, the file is somewhere on the server, which means we have to find in the root directory /.\nfind / -user bandit7 -group bandit6 -size 33c 2\u0026gt;/dev/null NB: I added that strange 2\u0026gt;/dev/null to filter error output. The reason why it works like that is more technical, for now just save this a fast way to filter errors in terminal. We get some errors because looking for files in the whole server may return some unaccesible files, as we don\u0026rsquo;t have root user permissions. We will study Linux permissions in later levels.\nWe should get a single file, containing password for bandit8.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit7/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored somewhere on the server and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eowned by user bandit7\u003c/li\u003e\n\u003cli\u003eowned by group bandit6\u003c/li\u003e\n\u003cli\u003e33 bytes in size\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is very straightforward to do after completing previous level. Now we need to identify a file owned by user bandit7 and group bandi6. Furthermore, the file is \u003cstrong\u003esomewhere on the server\u003c/strong\u003e, which means we have to find in the root directory \u003ccode\u003e/\u003c/code\u003e.\u003c/p\u003e","title":"Bandit7"},{"content":"Level description The password for the next level is stored in the file data.txt next to the word millionth.\nTips for beginners Learn how to filter file contents. Solution At previous levels, we discovered how to find for files. Now it\u0026rsquo;s time to find for content inside a file. grep command is going to help with that task.\nNotice how this can achieved in different ways.\nUsing grep \u0026lt;keyword\u0026gt; \u0026lt;filename\u0026gt;. Using the pipe | to execute grep over the result of cat command. ","permalink":"http://localhost:1313/posts/otw/bandit/bandit8/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the file data.txt next to the word \u003cstrong\u003emillionth\u003c/strong\u003e.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to filter file contents.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAt previous levels, we discovered how to find for files. Now it\u0026rsquo;s time to find for content inside a file. \u003ccode\u003egrep\u003c/code\u003e command is going to help with that task.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"bandit8\" loading=\"lazy\" src=\"/images/otw/bandit/bandit8/0.png\"\u003e\u003c/p\u003e\n\u003cp\u003eNotice how this can achieved in different ways.\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eUsing \u003ccode\u003egrep \u0026lt;keyword\u0026gt; \u0026lt;filename\u0026gt;\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003eUsing the pipe \u003ccode\u003e|\u003c/code\u003e to execute \u003ccode\u003egrep\u003c/code\u003e over the result of \u003ccode\u003ecat\u003c/code\u003e command.\u003c/li\u003e\n\u003c/ol\u003e","title":"Bandit8"},{"content":"👨‍💻 whoami Hey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\nWhat is this❓​ This blog is basically my thoughts on several hacking topics. Here you’ll see:\nWriteups from CTF challenges, from platforms like HackTheBox or OverTheWire.\nWalkthroughs and notes on pentesting techniques I’m learning or testing.\nSome posts on cryptography — because math can be fun (sometimes).\nRandom topics that freaks like me may (just may) find interesting.\nThe idea is simple: share what I learn, document my journey, and maybe help others who are also diving into the exciting world of ethical hacking.\n📫 Contact Want to say hi, share ideas, or just geek out about hacking? Reach me here:\n📧 Email: mrb0b1073@proton.me 💻​ GitHub: mrb0b173 🟩​ HackTheBox: mrb0b1073 ","permalink":"http://localhost:1313/about/","summary":"\u003ch2 id=\"-whoami\"\u003e👨‍💻 whoami\u003c/h2\u003e\n\u003cp\u003eHey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\u003c/p\u003e\n\u003chr\u003e\n\u003ch2 id=\"what-is-this\"\u003eWhat is this❓​\u003c/h2\u003e\n\u003cp\u003eThis blog is basically my thoughts on several hacking topics. Here you’ll see:\u003c/p\u003e","title":"About"},{"content":"Hey! 👋 I\u0026rsquo;m mrb0b1073 and this is my first post.\nWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\nExcited to start this adventure!\n","permalink":"http://localhost:1313/posts/hello-world/","summary":"\u003cp\u003eHey! 👋 I\u0026rsquo;m \u003cstrong\u003emrb0b1073\u003c/strong\u003e and this is my first post.\u003c/p\u003e\n\u003cp\u003eWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\u003cbr\u003e\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\u003c/p\u003e\n\u003cp\u003eExcited to start this adventure!\u003c/p\u003e","title":"Hello World"},{"content":"Introduction If you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\nIn cybersecurity there are broadly two complementary roles: Blue Team and Red Team. Blue Teams focus on defense, monitoring, incident response, hardening systems and keeping services secure, while Red Teams simulate attackers to find weaknesses and prove what an adversary could do. Ethical hacking aligns closely with Red Team operations, but cybersecurity is highly transversal across IT. There are many specialities or areas, such as cloud security, appsec, pentesting, forensics, governance, risk management, malware analysis, etc. Every topic could deserve its own post, so let\u0026rsquo;s keep it simple and focus on ethical hacking.\nHacker philosophy Let\u0026rsquo;s start with the idea of what is exactly a hacker. A hacker is someone who explores systems to understand how they work, finds creative ways to make or fix things, and solves technical problems. Historically the word describes curiosity, craft, and a drive to improve systems — not criminality. It is important to make the distinction between hacker and cracker, also called cybercriminal. A hacker explores, builds, discloses responsibly and works to improve security. They work in authorized environments or labs. On the other hand, a cracker breaks into systems for theft, vandalism or other illicit gain.\nHere you can find the most popularized ideas often summarized as the hacker ethic:\nCuriosity first: Learn by exploring and tinkering. Freedom of information: All knowledge should be shared to help progress. This fits properly with the idea of open source. Mistrust of needless authority: Centralized control sometimes blocks innovation. It is always good to question anything, specially common assumptions. Meritocracy: Skills, craft and results matter more than titles. Craftsmanship \u0026amp; elegance: Technical beauty matters. Build clean, clever and efficient solutions. Responsability \u0026amp; ethics: Use your skills to build, fix, educate and defend, not to harm. Core fundamentals Assuming you want to init yourself in hacking, you should first build competence across three basic pillars.\nOperating Systems You should learn as much as possible about Linux and Windows. Specially Linux, all the tools you will be using are meant to be used in a Linux environment. Skill with shell is required, learn basic commands and how to interact with the OS using the terminal. Research about processes, file permissions, package management and logs. A large proportion of web servers around the world run on Linux, although Windows is also widely used. Windows knowledge is really valuable too, considering active directory is strongly used in corporate environments.\nNetworking You have to understand how computers communicate each other. Understand basic networking concepts, IP adresses, subnetting, proxies, find out how internet works. Study some protocols such as TCP/IP, HTTP, DNS or SSH. This could sound confusing for beginners, but this step is not optional! Study different client/server models and how services expose attack surfaces.\nProgramming \u0026amp; scripting Is this completely required? Maybe not for complete beginners. Does it help? Absolutely yes. Understanding how web apps or any type of application works makes things much easier. You can imagine different entry points to exploit if you understand how systems are designed. Also writing scripts in bash or python makes you more productive through automation.\nEthical Hacking foundations Once you feel confident with these 3 pillars, you can go to the next step. You can study about different topics and areas. For example, binary exploiting, web pentesting, mobile pentesting, wireless hacking, etc. You should start picking a focus, in this post we focus on web pentesting, as it is beginner friendly. Also web applications are the bread and butter in companies nowadays.\nKey concepts to study:\nCIA Triad: CIA refers to Confidentiality, Integrity and Availability. These three concepts are key in information security, and describe properties we want to ensure in our systems and information. Web Security basics, OWASP: Study the OWASP Top 10, which summarizes most frequent web security risks. Authentication and session control: Understand the concepts of Authentication and Authorization, research about how session is handled in web apps, cookies, JWT tokens, etc. Input validation \u0026amp; injection attacks: Learn about SQL Injection, Cross-Site Scripting (XSS), Code Injection, SSTI, and every injection type. Secure development lifecycle: Find out how to implement security controls in code. This can be more related to Blue Team, but as Red Teamer it is important to understand. Firewall evasion: What a firewall is and some techniques/methods to bypass. Some cryptography: Understand what a chiper and a hash are, how information is encrypted to prevent access from 3rd parties. Focusing on web, read about TLS protocol. There are many more topics you can research and learn, but this could be a nice starting point.\nTools and platforms to learn Now you have an idea of what to study, let\u0026rsquo;s see how to start in practical terms.\nSome platforms I personally recommend:\nOverTheWire: Here you can find some CTFs (Capture The Flag) which are fun to play and also really instructive. Bandit games are a must for complete beginners, as you will explore some linux and bash concepts which are basic to continue. The games are leveled by difficulty, in their web you can get all the information about how to play, only a terminal and SSH is required. This helps building your foundation in Linux OS. HackTheBox: Nº 1 platform in cybersecurity. Has a lot of resources to learn all this core fundamentals, and also red team / blue team security topics. It is focused on labs where you can test your skills hacking different boxes but if you really want to learn it is worth to invest time and money in the academy. I have to say the level here is high, specially if you try to hack machines on your own without using some guide or writeup. TryHackMe: More beginner friendly than hackthebox, it provides a lot of guided learning resources. PortSwigger Labs: Practical labs about specific topics, focused on web hacking. They are great to learn and understand different types of attacks, injections, and security misconfigurations. I would recommend digging into this once you have the theoretical basis about these concepts. I have to mention a few tools I am sure you\u0026rsquo;d end up using:\nNmap: This is probably the most famous tool in hacking, allowing you to gather information about ports and services running in a machine. Burpsuite: A proxy tool widely used in web application security testing. It basically allows you to intercept and modify web requests, which can be used to perform several types of attacks. Metasploit: The most used pentesting framework. Contains a large amount of scripts and exploits ready to run. Another crucial step here is to set up your virtual lab environment to test vulnerable applications. To achieve this goal, there are some Linux distributions like Kali, Parrot or BlackArch, but that\u0026rsquo;s a topic for another post.\nFinal thoughs To sum up, this would be my personal roadmap:\nLearn the fundamentals, specially Linux and networking. Install some Linux in a virtual machine, play with it, get comfortable with the terminal. You can start with bandit wargames in OverTheWire. Complete every level and make sure to understand everything as clear as possible. Move to guided boxes on HackTheBox. I recommend you joining their Discord, ask questions, community is great there! Take notes, repeat, learn, improve your skills. Maybe use your own lab environment, create your own vulnerable apps. Hacking is a mixing of curiosity, study and practice. Being passionate and motivated about it is really helpful and will definitely speed up the process. The path is long and really challenging, so keep it going!\n\u0026ldquo;Yes, I am a criminal. My crime is that of curiosity.\u0026rdquo; — The Mentor (Loyd Blankenship) at The Hacker Manifesto\n","permalink":"http://localhost:1313/posts/starting-point/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIf you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\u003c/p\u003e","title":"Starting Point"},{"content":"Introduction In this post series we are going to solve every level from bandit in OverTheWire This guide pretends to be a writeup containing the solutions of the level, designed for beginners.\nTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing WSL, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\nEvery section will contain the solution as well as some tips for people who is absolutely beginner.\nTips First of all, some tips:\nDo not use this as first resource to solve the levels. Try on your own, make mistakes and learn from them. Only check the solution as last resource or if you are completely new and you have absolutely no idea about what to do next. Take notes from your learning. Write up commands, tips and everything which can be useful in the future. Make sure to understand everything. Is a good idea to note the passwords for every level. If you want to continue letter, you can simply log in in the desired level. It is annoying to repeat everything! Follow the tips and information provided at OverTheWire website. Levels Here is my solution for every level:\nBandit0 Bandit1 Bandit2 Bandit3 Bandit4 Bandit5 Bandit6 Bandit7 ","permalink":"http://localhost:1313/posts/otw/bandit/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIn this post series we are going to solve every level from bandit in \u003ca href=\"https://overthewire.org/wargames/bandit/\"\u003e\u003cem\u003eOverTheWire\u003c/em\u003e\u003c/a\u003e\nThis guide pretends to be a writeup containing the solutions of the level, designed for beginners.\u003c/p\u003e\n\u003cp\u003eTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing \u003ca href=\"https://learn.microsoft.com/en-us/windows/wsl/install\"\u003eWSL\u003c/a\u003e, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\u003c/p\u003e","title":"Bandit"},{"content":"Level description The goal of this level is for you to log into the game using SSH. The host to which you need to connect is bandit.labs.overthewire.org, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\nTips for beginners Read a bit about what SSH is. Research about what a port is. Solution This is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go here.\nAt Linux, we can use ssh client to connect to the server. It should be installed by default on your system. If not, please first research about how to install. Once you have the SSH client installed, you can log in into the first level as follows:\nssh bandit0@bandit.labs.overthewire.org -p 2220 Syntax is simple: ssh \u0026lt;username\u0026gt;@\u0026lt;hostname\u0026gt; -p \u0026lt;port\u0026gt;. Usually SSH runs on port 22 by default, but they changed to port 2220 so we must specify it in the command.\nOnce you try to log in, you will see something like this: NB: If it\u0026rsquo;s the first time you try to log in, you will be asked about the authenticity of the host. Just type yes.\nType the password bandit0 and press enter. Now you are inside bandit server, ready to begin with bandit1!\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit0/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe goal of this level is for you to log into the game using SSH. The host to which you need to connect is \u003cstrong\u003ebandit.labs.overthewire.org\u003c/strong\u003e, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eRead a bit about what SSH is.\u003c/li\u003e\n\u003cli\u003eResearch about what a port is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go \u003ca href=\"https://en.wikipedia.org/wiki/Secure_Shell\"\u003ehere\u003c/a\u003e.\u003c/p\u003e","title":"Bandit0"},{"content":"Level description The password for the next level is stored in a file called readme located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\nTips for beginners Learn about home directory in Linux. Learn to use cat and ls commands. Solution First step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\nls This shows in terminal the files at the current directory. There you will see the readme file.\nNow we can to check the contents, so let\u0026rsquo;s use cat:\ncat readme To read a file, we use cat \u0026lt;filename\u0026gt;.\nNB: Not every file is human readable in Linux. We deep more about this in later levels.\nThe content of the readme file reveals the password for bandit2 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit1/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u003cstrong\u003ereadme\u003c/strong\u003e located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn about home directory in Linux.\u003c/li\u003e\n\u003cli\u003eLearn to use \u003ccode\u003ecat\u003c/code\u003e and \u003ccode\u003els\u003c/code\u003e commands.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eFirst step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\u003c/p\u003e","title":"Bandit1"},{"content":"Level description The password for the next level is stored in a file called - located in the home directory\nTips for beginners Try to understand why previous solution is not working as you expect. Solution You may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our cat command: The terminal is waiting for something else. This happens due to character - is used to pass arguments to our commands, and the linux shell is interpreting that. To prevent that, we could use:\ncat ./- NB: Dot . is used to refer current directory. The slash / is used at the end of directory name.\nWe get the password for bandit3 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit2/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called - located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eTry to understand why previous solution is not working as you expect.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eYou may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our \u003ccode\u003ecat\u003c/code\u003e command:\n\u003cimg alt=\"bandit2\" loading=\"lazy\" src=\"/images/otw/bandit/bandit2/0.png\"\u003e\u003c/p\u003e\n\u003cp\u003eThe terminal is \u003cem\u003ewaiting\u003c/em\u003e for something else. This happens due to character \u003ccode\u003e-\u003c/code\u003e is used to pass arguments to our commands, and the linux shell is interpreting that.\nTo prevent that, we could use:\u003c/p\u003e","title":"Bandit2"},{"content":"Level description The password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\nTips for beginners Think about how to escape the whitespaces. Solution After login in the machine as bandit3, we can see the filename \u0026ndash;spaces in this filename\u0026ndash;.\nNow we have 2 problems:\nSame as previous level, filename starts with --, so it will be interpreted as an argument. Address this problem using ./. Filename contains whitespaces. This is an issue, as bash interpretes whitespaces to separate commands. To solve the second problem, we must escape the whitespace character in some way. Here is the solution:\ncat ./--spaces\\ in\\ this\\ filename-- NB: Little trick, you can start writting filename and press Tab to autocomplete the name. The \\ is going to be inserted automatically.\nJust using the \\ we can escape the whitespace.\nNow we can continue with the bandit4 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit3/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eThink about how to \u003cem\u003eescape\u003c/em\u003e the whitespaces.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAfter login in the machine as bandit3, we can see the filename \u003cem\u003e\u0026ndash;spaces in this filename\u0026ndash;\u003c/em\u003e.\u003c/p\u003e\n\u003cp\u003eNow we have 2 problems:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eSame as previous level, filename starts with \u003ccode\u003e--\u003c/code\u003e, so it will be interpreted as an argument. Address this problem using \u003ccode\u003e./\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003eFilename contains \u003cstrong\u003ewhitespaces\u003c/strong\u003e. This is an issue, as bash interpretes whitespaces to separate commands.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eTo solve the second problem, we must escape the whitespace character in some way. Here is the solution:\u003c/p\u003e","title":"Bandit3"},{"content":"Level description The password for the next level is stored in a hidden file in the inhere directory.\nTips for beginners Learn how to navigate directories in Linux. First understand what a hidden file is. Solution Listing directory files inside bandit4\u0026rsquo;s home directory, show directory inhere.\nNB: How to distinguish files and directories in Linux? Use ls -l and see the difference.\nWe have 2 options now:\nMove to inhere directory and check contens again. Check contents directly. Moving to another directory can be done using cd \u0026lt;dirName\u0026gt;. If you prefer to check directory contents directly, use ls \u0026lt;dirName\u0026gt;.\nAfter checking inhere contents via ls, we see nothing. The reason is the file is a hidden file. A hidden file in Linux is everyfile whose name starts with dot .. Hidden files are not shown by default with ls command, so we must add a special flag -a to list all files: NB: Both flags -l and -a cna be combined into a single flag -al, which is shorter to type.\nAs you can see, filename is \u0026hellip;Hidding-From-You starting with three dots. Reading file contents should be easy at this point!\nNext level is bandit5.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit4/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a hidden file in the inhere directory.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to navigate directories in Linux.\u003c/li\u003e\n\u003cli\u003eFirst understand what a hidden file is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eListing directory files inside bandit4\u0026rsquo;s home directory, show directory \u003cstrong\u003einhere\u003c/strong\u003e.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e How to distinguish files and directories in Linux? Use \u003ccode\u003els -l\u003c/code\u003e and see the difference.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eWe have 2 options now:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eMove to inhere directory and check contens again.\u003c/li\u003e\n\u003cli\u003eCheck contents directly.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eMoving to another directory can be done using \u003ccode\u003ecd \u0026lt;dirName\u0026gt;\u003c/code\u003e. If you prefer to check directory contents directly, use \u003ccode\u003els \u0026lt;dirName\u0026gt;\u003c/code\u003e.\u003c/p\u003e","title":"Bandit4"},{"content":"Level description The password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\nTips for beginners What means human-readable file? Is there any way to check filetype at Linux?. Solution Checking inhere\u0026rsquo;s contents shows some files names \u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII here\nSo now, our goal is checking if file content of every file in the folder is ASCII or not. file \u0026lt;filename\u0026gt; does the job. Note the use of *. That called a wildcard regular expression, we\u0026rsquo;ll deep into it in later levels. An easy approach could be checking every file separately:\nfile ./--file00 file ./--file01 ... file ./--file09 But that\u0026rsquo;s not funny, imagine we have 100 files to check. All the files are in the same directory, so we can use cat ./* where ./* matches every filename in the directory, applying file to every file.\nNB: Another approach is to use find with certaing flags. Try to do in different ways, don\u0026rsquo;t stick to my solution.\nThe file \u0026ndash;file00 content is not readable, so get password from \u0026ndash;file07 and continue with bandit6.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit5/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eWhat means human-readable file?\u003c/li\u003e\n\u003cli\u003eIs there any way to check filetype at Linux?.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eChecking inhere\u0026rsquo;s contents shows some files names \u003cstrong\u003e\u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09\u003c/strong\u003e. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII \u003ca href=\"https://en.wikipedia.org/wiki/ASCII\"\u003ehere\u003c/a\u003e\u003c/p\u003e","title":"Bandit5"},{"content":"Level description The password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\nhuman-readable 1033 bytes in size not executable Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution The purpose of the level is showing us how to find for files. Listing contents of inhere, we can see some folders, containing a lot of files inside: NB: Adding -R to ls shows recursively the content of every folder inside the directory listed.\nSo this time, checking every file is not an option. We need to find a file with some properties, specific size, not excutable and human-readable. Let\u0026rsquo;s explain the command we\u0026rsquo;re using:\nfind inhere/ -size 1033c ! -executable First, we specify the directory, in this case inhere. The option -size 1033c returns files of 1033 bytes. Then, with -executable we would get executable files, but we want not executable files, that\u0026rsquo;s why we are adding ! before.\nNB: By default, the -size option takes as argument the number of blocks. For example, -size 2 means 2 blocks of 512 bytes, so its 1024. The c is used to specify exact bytes. Don\u0026rsquo;t ask me why it\u0026rsquo;s c and not b 😅.\nThe property of human-readability is not implemented in find. This is not an issue, previous command returns a single file and it is human readable (we could confirm using file): Extra tip: try to use the following:\nfind inhere/ -size 1033c ! -executable | file You get the same result! The pipe | is a great tool to execute 2+ commands in one line.\nGet your password and continue with bandit7.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit6/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ehuman-readable\u003c/li\u003e\n\u003cli\u003e1033 bytes in size\u003c/li\u003e\n\u003cli\u003enot executable\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThe purpose of the level is showing us how to find for files. Listing contents of \u003cstrong\u003einhere\u003c/strong\u003e, we can see some folders, containing a lot of files inside:\n\u003cimg alt=\"bandit6_0\" loading=\"lazy\" src=\"/images/otw/bandit/bandit6/0.png\"\u003e\u003c/p\u003e","title":"Bandit6"},{"content":"Level description The password for the next level is stored somewhere on the server and has all of the following properties:\nowned by user bandit7 owned by group bandit6 33 bytes in size Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution This is very straightforward to do after completing previous level. Now we need to identify a file owned by user bandit7 and group bandi6. Furthermore, the file is somewhere on the server, which means we have to find in the root directory /.\nfind / -user bandit7 -group bandit6 -size 33c 2\u0026gt;/dev/null NB: I added that strange 2\u0026gt;/dev/null to filter error output. The reason why it works like that is more technical, for now just save this a fast way to filter errors in terminal. We get some errors because looking for files in the whole server may return some unaccesible files, as we don\u0026rsquo;t have root user permissions. We will study Linux permissions in later levels.\nWe should get a single file, containing password for bandit8.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit7/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored somewhere on the server and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eowned by user bandit7\u003c/li\u003e\n\u003cli\u003eowned by group bandit6\u003c/li\u003e\n\u003cli\u003e33 bytes in size\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is very straightforward to do after completing previous level. Now we need to identify a file owned by user bandit7 and group bandi6. Furthermore, the file is \u003cstrong\u003esomewhere on the server\u003c/strong\u003e, which means we have to find in the root directory \u003ccode\u003e/\u003c/code\u003e.\u003c/p\u003e","title":"Bandit7"},{"content":"Level description The password for the next level is stored in the file data.txt next to the word millionth.\nTips for beginners Learn how to filter file contents. Solution At previous levels, we discovered how to find for files. Now it\u0026rsquo;s time to find for content inside a file. grep command is going to help with that task.\nNB: Of course I don\u0026rsquo;t want to spoil you the password!\nNotice how this can achieved in different ways.\nUsing grep \u0026lt;keyword\u0026gt; \u0026lt;filename\u0026gt;. Using the pipe | to execute grep over the result of cat command. Take you favorite path to solve the level, and continue with\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit8/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the file data.txt next to the word \u003cstrong\u003emillionth\u003c/strong\u003e.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to filter file contents.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAt previous levels, we discovered how to find for files. Now it\u0026rsquo;s time to find for content inside a file. \u003ccode\u003egrep\u003c/code\u003e command is going to help with that task.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"bandit8\" loading=\"lazy\" src=\"/images/otw/bandit/bandit8/0.png\"\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e Of course I don\u0026rsquo;t want to spoil you the password!\u003c/p\u003e","title":"Bandit8"},{"content":"👨‍💻 whoami Hey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\nWhat is this❓​ This blog is basically my thoughts on several hacking topics. Here you’ll see:\nWriteups from CTF challenges, from platforms like HackTheBox or OverTheWire.\nWalkthroughs and notes on pentesting techniques I’m learning or testing.\nSome posts on cryptography — because math can be fun (sometimes).\nRandom topics that freaks like me may (just may) find interesting.\nThe idea is simple: share what I learn, document my journey, and maybe help others who are also diving into the exciting world of ethical hacking.\n📫 Contact Want to say hi, share ideas, or just geek out about hacking? Reach me here:\n📧 Email: mrb0b1073@proton.me 💻​ GitHub: mrb0b173 🟩​ HackTheBox: mrb0b1073 ","permalink":"http://localhost:1313/about/","summary":"\u003ch2 id=\"-whoami\"\u003e👨‍💻 whoami\u003c/h2\u003e\n\u003cp\u003eHey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\u003c/p\u003e\n\u003chr\u003e\n\u003ch2 id=\"what-is-this\"\u003eWhat is this❓​\u003c/h2\u003e\n\u003cp\u003eThis blog is basically my thoughts on several hacking topics. Here you’ll see:\u003c/p\u003e","title":"About"},{"content":"Hey! 👋 I\u0026rsquo;m mrb0b1073 and this is my first post.\nWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\nExcited to start this adventure!\n","permalink":"http://localhost:1313/posts/hello-world/","summary":"\u003cp\u003eHey! 👋 I\u0026rsquo;m \u003cstrong\u003emrb0b1073\u003c/strong\u003e and this is my first post.\u003c/p\u003e\n\u003cp\u003eWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\u003cbr\u003e\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\u003c/p\u003e\n\u003cp\u003eExcited to start this adventure!\u003c/p\u003e","title":"Hello World"},{"content":"Introduction If you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\nIn cybersecurity there are broadly two complementary roles: Blue Team and Red Team. Blue Teams focus on defense, monitoring, incident response, hardening systems and keeping services secure, while Red Teams simulate attackers to find weaknesses and prove what an adversary could do. Ethical hacking aligns closely with Red Team operations, but cybersecurity is highly transversal across IT. There are many specialities or areas, such as cloud security, appsec, pentesting, forensics, governance, risk management, malware analysis, etc. Every topic could deserve its own post, so let\u0026rsquo;s keep it simple and focus on ethical hacking.\nHacker philosophy Let\u0026rsquo;s start with the idea of what is exactly a hacker. A hacker is someone who explores systems to understand how they work, finds creative ways to make or fix things, and solves technical problems. Historically the word describes curiosity, craft, and a drive to improve systems — not criminality. It is important to make the distinction between hacker and cracker, also called cybercriminal. A hacker explores, builds, discloses responsibly and works to improve security. They work in authorized environments or labs. On the other hand, a cracker breaks into systems for theft, vandalism or other illicit gain.\nHere you can find the most popularized ideas often summarized as the hacker ethic:\nCuriosity first: Learn by exploring and tinkering. Freedom of information: All knowledge should be shared to help progress. This fits properly with the idea of open source. Mistrust of needless authority: Centralized control sometimes blocks innovation. It is always good to question anything, specially common assumptions. Meritocracy: Skills, craft and results matter more than titles. Craftsmanship \u0026amp; elegance: Technical beauty matters. Build clean, clever and efficient solutions. Responsability \u0026amp; ethics: Use your skills to build, fix, educate and defend, not to harm. Core fundamentals Assuming you want to init yourself in hacking, you should first build competence across three basic pillars.\nOperating Systems You should learn as much as possible about Linux and Windows. Specially Linux, all the tools you will be using are meant to be used in a Linux environment. Skill with shell is required, learn basic commands and how to interact with the OS using the terminal. Research about processes, file permissions, package management and logs. A large proportion of web servers around the world run on Linux, although Windows is also widely used. Windows knowledge is really valuable too, considering active directory is strongly used in corporate environments.\nNetworking You have to understand how computers communicate each other. Understand basic networking concepts, IP adresses, subnetting, proxies, find out how internet works. Study some protocols such as TCP/IP, HTTP, DNS or SSH. This could sound confusing for beginners, but this step is not optional! Study different client/server models and how services expose attack surfaces.\nProgramming \u0026amp; scripting Is this completely required? Maybe not for complete beginners. Does it help? Absolutely yes. Understanding how web apps or any type of application works makes things much easier. You can imagine different entry points to exploit if you understand how systems are designed. Also writing scripts in bash or python makes you more productive through automation.\nEthical Hacking foundations Once you feel confident with these 3 pillars, you can go to the next step. You can study about different topics and areas. For example, binary exploiting, web pentesting, mobile pentesting, wireless hacking, etc. You should start picking a focus, in this post we focus on web pentesting, as it is beginner friendly. Also web applications are the bread and butter in companies nowadays.\nKey concepts to study:\nCIA Triad: CIA refers to Confidentiality, Integrity and Availability. These three concepts are key in information security, and describe properties we want to ensure in our systems and information. Web Security basics, OWASP: Study the OWASP Top 10, which summarizes most frequent web security risks. Authentication and session control: Understand the concepts of Authentication and Authorization, research about how session is handled in web apps, cookies, JWT tokens, etc. Input validation \u0026amp; injection attacks: Learn about SQL Injection, Cross-Site Scripting (XSS), Code Injection, SSTI, and every injection type. Secure development lifecycle: Find out how to implement security controls in code. This can be more related to Blue Team, but as Red Teamer it is important to understand. Firewall evasion: What a firewall is and some techniques/methods to bypass. Some cryptography: Understand what a chiper and a hash are, how information is encrypted to prevent access from 3rd parties. Focusing on web, read about TLS protocol. There are many more topics you can research and learn, but this could be a nice starting point.\nTools and platforms to learn Now you have an idea of what to study, let\u0026rsquo;s see how to start in practical terms.\nSome platforms I personally recommend:\nOverTheWire: Here you can find some CTFs (Capture The Flag) which are fun to play and also really instructive. Bandit games are a must for complete beginners, as you will explore some linux and bash concepts which are basic to continue. The games are leveled by difficulty, in their web you can get all the information about how to play, only a terminal and SSH is required. This helps building your foundation in Linux OS. HackTheBox: Nº 1 platform in cybersecurity. Has a lot of resources to learn all this core fundamentals, and also red team / blue team security topics. It is focused on labs where you can test your skills hacking different boxes but if you really want to learn it is worth to invest time and money in the academy. I have to say the level here is high, specially if you try to hack machines on your own without using some guide or writeup. TryHackMe: More beginner friendly than hackthebox, it provides a lot of guided learning resources. PortSwigger Labs: Practical labs about specific topics, focused on web hacking. They are great to learn and understand different types of attacks, injections, and security misconfigurations. I would recommend digging into this once you have the theoretical basis about these concepts. I have to mention a few tools I am sure you\u0026rsquo;d end up using:\nNmap: This is probably the most famous tool in hacking, allowing you to gather information about ports and services running in a machine. Burpsuite: A proxy tool widely used in web application security testing. It basically allows you to intercept and modify web requests, which can be used to perform several types of attacks. Metasploit: The most used pentesting framework. Contains a large amount of scripts and exploits ready to run. Another crucial step here is to set up your virtual lab environment to test vulnerable applications. To achieve this goal, there are some Linux distributions like Kali, Parrot or BlackArch, but that\u0026rsquo;s a topic for another post.\nFinal thoughs To sum up, this would be my personal roadmap:\nLearn the fundamentals, specially Linux and networking. Install some Linux in a virtual machine, play with it, get comfortable with the terminal. You can start with bandit wargames in OverTheWire. Complete every level and make sure to understand everything as clear as possible. Move to guided boxes on HackTheBox. I recommend you joining their Discord, ask questions, community is great there! Take notes, repeat, learn, improve your skills. Maybe use your own lab environment, create your own vulnerable apps. Hacking is a mixing of curiosity, study and practice. Being passionate and motivated about it is really helpful and will definitely speed up the process. The path is long and really challenging, so keep it going!\n\u0026ldquo;Yes, I am a criminal. My crime is that of curiosity.\u0026rdquo; — The Mentor (Loyd Blankenship) at The Hacker Manifesto\n","permalink":"http://localhost:1313/posts/starting-point/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIf you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\u003c/p\u003e","title":"Starting Point"},{"content":"Introduction In this post series we are going to solve every level from bandit in OverTheWire This guide pretends to be a writeup containing the solutions of the level, designed for beginners.\nTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing WSL, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\nEvery section will contain the solution as well as some tips for people who is absolutely beginner.\nTips First of all, some tips:\nDo not use this as first resource to solve the levels. Try on your own, make mistakes and learn from them. Only check the solution as last resource or if you are completely new and you have absolutely no idea about what to do next. Take notes from your learning. Write up commands, tips and everything which can be useful in the future. Make sure to understand everything. Is a good idea to note the passwords for every level. If you want to continue letter, you can simply log in in the desired level. It is annoying to repeat everything! Follow the tips and information provided at OverTheWire website. Levels Here is my solution for every level:\nBandit0 Bandit1 Bandit2 Bandit3 Bandit4 Bandit5 Bandit6 Bandit7 ","permalink":"http://localhost:1313/posts/otw/bandit/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIn this post series we are going to solve every level from bandit in \u003ca href=\"https://overthewire.org/wargames/bandit/\"\u003e\u003cem\u003eOverTheWire\u003c/em\u003e\u003c/a\u003e\nThis guide pretends to be a writeup containing the solutions of the level, designed for beginners.\u003c/p\u003e\n\u003cp\u003eTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing \u003ca href=\"https://learn.microsoft.com/en-us/windows/wsl/install\"\u003eWSL\u003c/a\u003e, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\u003c/p\u003e","title":"Bandit"},{"content":"Level description The goal of this level is for you to log into the game using SSH. The host to which you need to connect is bandit.labs.overthewire.org, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\nTips for beginners Read a bit about what SSH is. Research about what a port is. Solution This is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go here.\nAt Linux, we can use ssh client to connect to the server. It should be installed by default on your system. If not, please first research about how to install. Once you have the SSH client installed, you can log in into the first level as follows:\nssh bandit0@bandit.labs.overthewire.org -p 2220 Syntax is simple: ssh \u0026lt;username\u0026gt;@\u0026lt;hostname\u0026gt; -p \u0026lt;port\u0026gt;. Usually SSH runs on port 22 by default, but they changed to port 2220 so we must specify it in the command.\nOnce you try to log in, you will see something like this: NB: If it\u0026rsquo;s the first time you try to log in, you will be asked about the authenticity of the host. Just type yes.\nType the password bandit0 and press enter. Now you are inside bandit server, ready to begin with bandit1!\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit0/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe goal of this level is for you to log into the game using SSH. The host to which you need to connect is \u003cstrong\u003ebandit.labs.overthewire.org\u003c/strong\u003e, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eRead a bit about what SSH is.\u003c/li\u003e\n\u003cli\u003eResearch about what a port is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go \u003ca href=\"https://en.wikipedia.org/wiki/Secure_Shell\"\u003ehere\u003c/a\u003e.\u003c/p\u003e","title":"Bandit0"},{"content":"Level description The password for the next level is stored in a file called readme located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\nTips for beginners Learn about home directory in Linux. Learn to use cat and ls commands. Solution First step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\nls This shows in terminal the files at the current directory. There you will see the readme file.\nNow we can to check the contents, so let\u0026rsquo;s use cat:\ncat readme To read a file, we use cat \u0026lt;filename\u0026gt;.\nNB: Not every file is human readable in Linux. We deep more about this in later levels.\nThe content of the readme file reveals the password for bandit2 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit1/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u003cstrong\u003ereadme\u003c/strong\u003e located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn about home directory in Linux.\u003c/li\u003e\n\u003cli\u003eLearn to use \u003ccode\u003ecat\u003c/code\u003e and \u003ccode\u003els\u003c/code\u003e commands.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eFirst step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\u003c/p\u003e","title":"Bandit1"},{"content":"Level description The password for the next level is stored in a file called - located in the home directory\nTips for beginners Try to understand why previous solution is not working as you expect. Solution You may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our cat command: The terminal is waiting for something else. This happens due to character - is used to pass arguments to our commands, and the linux shell is interpreting that. To prevent that, we could use:\ncat ./- NB: Dot . is used to refer current directory. The slash / is used at the end of directory name.\nWe get the password for bandit3 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit2/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called - located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eTry to understand why previous solution is not working as you expect.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eYou may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our \u003ccode\u003ecat\u003c/code\u003e command:\n\u003cimg alt=\"bandit2\" loading=\"lazy\" src=\"/images/otw/bandit/bandit2/0.png\"\u003e\u003c/p\u003e\n\u003cp\u003eThe terminal is \u003cem\u003ewaiting\u003c/em\u003e for something else. This happens due to character \u003ccode\u003e-\u003c/code\u003e is used to pass arguments to our commands, and the linux shell is interpreting that.\nTo prevent that, we could use:\u003c/p\u003e","title":"Bandit2"},{"content":"Level description The password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\nTips for beginners Think about how to escape the whitespaces. Solution After login in the machine as bandit3, we can see the filename \u0026ndash;spaces in this filename\u0026ndash;.\nNow we have 2 problems:\nSame as previous level, filename starts with --, so it will be interpreted as an argument. Address this problem using ./. Filename contains whitespaces. This is an issue, as bash interpretes whitespaces to separate commands. To solve the second problem, we must escape the whitespace character in some way. Here is the solution:\ncat ./--spaces\\ in\\ this\\ filename-- NB: Little trick, you can start writting filename and press Tab to autocomplete the name. The \\ is going to be inserted automatically.\nJust using the \\ we can escape the whitespace.\nNow we can continue with the bandit4 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit3/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eThink about how to \u003cem\u003eescape\u003c/em\u003e the whitespaces.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAfter login in the machine as bandit3, we can see the filename \u003cem\u003e\u0026ndash;spaces in this filename\u0026ndash;\u003c/em\u003e.\u003c/p\u003e\n\u003cp\u003eNow we have 2 problems:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eSame as previous level, filename starts with \u003ccode\u003e--\u003c/code\u003e, so it will be interpreted as an argument. Address this problem using \u003ccode\u003e./\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003eFilename contains \u003cstrong\u003ewhitespaces\u003c/strong\u003e. This is an issue, as bash interpretes whitespaces to separate commands.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eTo solve the second problem, we must escape the whitespace character in some way. Here is the solution:\u003c/p\u003e","title":"Bandit3"},{"content":"Level description The password for the next level is stored in a hidden file in the inhere directory.\nTips for beginners Learn how to navigate directories in Linux. First understand what a hidden file is. Solution Listing directory files inside bandit4\u0026rsquo;s home directory, show directory inhere.\nNB: How to distinguish files and directories in Linux? Use ls -l and see the difference.\nWe have 2 options now:\nMove to inhere directory and check contens again. Check contents directly. Moving to another directory can be done using cd \u0026lt;dirName\u0026gt;. If you prefer to check directory contents directly, use ls \u0026lt;dirName\u0026gt;.\nAfter checking inhere contents via ls, we see nothing. The reason is the file is a hidden file. A hidden file in Linux is everyfile whose name starts with dot .. Hidden files are not shown by default with ls command, so we must add a special flag -a to list all files: NB: Both flags -l and -a cna be combined into a single flag -al, which is shorter to type.\nAs you can see, filename is \u0026hellip;Hidding-From-You starting with three dots. Reading file contents should be easy at this point!\nNext level is bandit5.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit4/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a hidden file in the inhere directory.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to navigate directories in Linux.\u003c/li\u003e\n\u003cli\u003eFirst understand what a hidden file is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eListing directory files inside bandit4\u0026rsquo;s home directory, show directory \u003cstrong\u003einhere\u003c/strong\u003e.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e How to distinguish files and directories in Linux? Use \u003ccode\u003els -l\u003c/code\u003e and see the difference.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eWe have 2 options now:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eMove to inhere directory and check contens again.\u003c/li\u003e\n\u003cli\u003eCheck contents directly.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eMoving to another directory can be done using \u003ccode\u003ecd \u0026lt;dirName\u0026gt;\u003c/code\u003e. If you prefer to check directory contents directly, use \u003ccode\u003els \u0026lt;dirName\u0026gt;\u003c/code\u003e.\u003c/p\u003e","title":"Bandit4"},{"content":"Level description The password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\nTips for beginners What means human-readable file? Is there any way to check filetype at Linux?. Solution Checking inhere\u0026rsquo;s contents shows some files names \u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII here\nSo now, our goal is checking if file content of every file in the folder is ASCII or not. file \u0026lt;filename\u0026gt; does the job. Note the use of *. That called a wildcard regular expression, we\u0026rsquo;ll deep into it in later levels. An easy approach could be checking every file separately:\nfile ./--file00 file ./--file01 ... file ./--file09 But that\u0026rsquo;s not funny, imagine we have 100 files to check. All the files are in the same directory, so we can use cat ./* where ./* matches every filename in the directory, applying file to every file.\nNB: Another approach is to use find with certaing flags. Try to do in different ways, don\u0026rsquo;t stick to my solution.\nThe file \u0026ndash;file00 content is not readable, so get password from \u0026ndash;file07 and continue with bandit6.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit5/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eWhat means human-readable file?\u003c/li\u003e\n\u003cli\u003eIs there any way to check filetype at Linux?.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eChecking inhere\u0026rsquo;s contents shows some files names \u003cstrong\u003e\u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09\u003c/strong\u003e. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII \u003ca href=\"https://en.wikipedia.org/wiki/ASCII\"\u003ehere\u003c/a\u003e\u003c/p\u003e","title":"Bandit5"},{"content":"Level description The password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\nhuman-readable 1033 bytes in size not executable Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution The purpose of the level is showing us how to find for files. Listing contents of inhere, we can see some folders, containing a lot of files inside: NB: Adding -R to ls shows recursively the content of every folder inside the directory listed.\nSo this time, checking every file is not an option. We need to find a file with some properties, specific size, not excutable and human-readable. Let\u0026rsquo;s explain the command we\u0026rsquo;re using:\nfind inhere/ -size 1033c ! -executable First, we specify the directory, in this case inhere. The option -size 1033c returns files of 1033 bytes. Then, with -executable we would get executable files, but we want not executable files, that\u0026rsquo;s why we are adding ! before.\nNB: By default, the -size option takes as argument the number of blocks. For example, -size 2 means 2 blocks of 512 bytes, so its 1024. The c is used to specify exact bytes. Don\u0026rsquo;t ask me why it\u0026rsquo;s c and not b 😅.\nThe property of human-readability is not implemented in find. This is not an issue, previous command returns a single file and it is human readable (we could confirm using file): Extra tip: try to use the following:\nfind inhere/ -size 1033c ! -executable | file You get the same result! The pipe | is a great tool to execute 2+ commands in one line.\nGet your password and continue with bandit7.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit6/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ehuman-readable\u003c/li\u003e\n\u003cli\u003e1033 bytes in size\u003c/li\u003e\n\u003cli\u003enot executable\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThe purpose of the level is showing us how to find for files. Listing contents of \u003cstrong\u003einhere\u003c/strong\u003e, we can see some folders, containing a lot of files inside:\n\u003cimg alt=\"bandit6_0\" loading=\"lazy\" src=\"/images/otw/bandit/bandit6/0.png\"\u003e\u003c/p\u003e","title":"Bandit6"},{"content":"Level description The password for the next level is stored somewhere on the server and has all of the following properties:\nowned by user bandit7 owned by group bandit6 33 bytes in size Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution This is very straightforward to do after completing previous level. Now we need to identify a file owned by user bandit7 and group bandi6. Furthermore, the file is somewhere on the server, which means we have to find in the root directory /.\nfind / -user bandit7 -group bandit6 -size 33c 2\u0026gt;/dev/null NB: I added that strange 2\u0026gt;/dev/null to filter error output. The reason why it works like that is more technical, for now just save this a fast way to filter errors in terminal. We get some errors because looking for files in the whole server may return some unaccesible files, as we don\u0026rsquo;t have root user permissions. We will study Linux permissions in later levels.\nWe should get a single file, containing password for bandit8.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit7/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored somewhere on the server and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eowned by user bandit7\u003c/li\u003e\n\u003cli\u003eowned by group bandit6\u003c/li\u003e\n\u003cli\u003e33 bytes in size\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is very straightforward to do after completing previous level. Now we need to identify a file owned by user bandit7 and group bandi6. Furthermore, the file is \u003cstrong\u003esomewhere on the server\u003c/strong\u003e, which means we have to find in the root directory \u003ccode\u003e/\u003c/code\u003e.\u003c/p\u003e","title":"Bandit7"},{"content":"Level description The password for the next level is stored in the file data.txt next to the word millionth.\nTips for beginners Learn how to filter file contents. Solution At previous levels, we discovered how to find for files. Now it\u0026rsquo;s time to find for content inside a file. grep command is going to help with that task.\nNB: Of course I don\u0026rsquo;t want to spoil you the password!\nNotice how this can achieved in different ways.\nUsing grep \u0026lt;keyword\u0026gt; \u0026lt;filename\u0026gt;. Using the pipe | to execute grep over the result of cat command. Take you favorite path to solve the level, and continue with bandit9.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit8/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the file data.txt next to the word \u003cstrong\u003emillionth\u003c/strong\u003e.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to filter file contents.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAt previous levels, we discovered how to find for files. Now it\u0026rsquo;s time to find for content inside a file. \u003ccode\u003egrep\u003c/code\u003e command is going to help with that task.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"bandit8\" loading=\"lazy\" src=\"/images/otw/bandit/bandit8/0.png\"\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e Of course I don\u0026rsquo;t want to spoil you the password!\u003c/p\u003e","title":"Bandit8"},{"content":"👨‍💻 whoami Hey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\nWhat is this❓​ This blog is basically my thoughts on several hacking topics. Here you’ll see:\nWriteups from CTF challenges, from platforms like HackTheBox or OverTheWire.\nWalkthroughs and notes on pentesting techniques I’m learning or testing.\nSome posts on cryptography — because math can be fun (sometimes).\nRandom topics that freaks like me may (just may) find interesting.\nThe idea is simple: share what I learn, document my journey, and maybe help others who are also diving into the exciting world of ethical hacking.\n📫 Contact Want to say hi, share ideas, or just geek out about hacking? Reach me here:\n📧 Email: mrb0b1073@proton.me 💻​ GitHub: mrb0b173 🟩​ HackTheBox: mrb0b1073 ","permalink":"http://localhost:1313/about/","summary":"\u003ch2 id=\"-whoami\"\u003e👨‍💻 whoami\u003c/h2\u003e\n\u003cp\u003eHey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\u003c/p\u003e\n\u003chr\u003e\n\u003ch2 id=\"what-is-this\"\u003eWhat is this❓​\u003c/h2\u003e\n\u003cp\u003eThis blog is basically my thoughts on several hacking topics. Here you’ll see:\u003c/p\u003e","title":"About"},{"content":"Hey! 👋 I\u0026rsquo;m mrb0b1073 and this is my first post.\nWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\nExcited to start this adventure!\n","permalink":"http://localhost:1313/posts/hello-world/","summary":"\u003cp\u003eHey! 👋 I\u0026rsquo;m \u003cstrong\u003emrb0b1073\u003c/strong\u003e and this is my first post.\u003c/p\u003e\n\u003cp\u003eWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\u003cbr\u003e\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\u003c/p\u003e\n\u003cp\u003eExcited to start this adventure!\u003c/p\u003e","title":"Hello World"},{"content":"Introduction If you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\nIn cybersecurity there are broadly two complementary roles: Blue Team and Red Team. Blue Teams focus on defense, monitoring, incident response, hardening systems and keeping services secure, while Red Teams simulate attackers to find weaknesses and prove what an adversary could do. Ethical hacking aligns closely with Red Team operations, but cybersecurity is highly transversal across IT. There are many specialities or areas, such as cloud security, appsec, pentesting, forensics, governance, risk management, malware analysis, etc. Every topic could deserve its own post, so let\u0026rsquo;s keep it simple and focus on ethical hacking.\nHacker philosophy Let\u0026rsquo;s start with the idea of what is exactly a hacker. A hacker is someone who explores systems to understand how they work, finds creative ways to make or fix things, and solves technical problems. Historically the word describes curiosity, craft, and a drive to improve systems — not criminality. It is important to make the distinction between hacker and cracker, also called cybercriminal. A hacker explores, builds, discloses responsibly and works to improve security. They work in authorized environments or labs. On the other hand, a cracker breaks into systems for theft, vandalism or other illicit gain.\nHere you can find the most popularized ideas often summarized as the hacker ethic:\nCuriosity first: Learn by exploring and tinkering. Freedom of information: All knowledge should be shared to help progress. This fits properly with the idea of open source. Mistrust of needless authority: Centralized control sometimes blocks innovation. It is always good to question anything, specially common assumptions. Meritocracy: Skills, craft and results matter more than titles. Craftsmanship \u0026amp; elegance: Technical beauty matters. Build clean, clever and efficient solutions. Responsability \u0026amp; ethics: Use your skills to build, fix, educate and defend, not to harm. Core fundamentals Assuming you want to init yourself in hacking, you should first build competence across three basic pillars.\nOperating Systems You should learn as much as possible about Linux and Windows. Specially Linux, all the tools you will be using are meant to be used in a Linux environment. Skill with shell is required, learn basic commands and how to interact with the OS using the terminal. Research about processes, file permissions, package management and logs. A large proportion of web servers around the world run on Linux, although Windows is also widely used. Windows knowledge is really valuable too, considering active directory is strongly used in corporate environments.\nNetworking You have to understand how computers communicate each other. Understand basic networking concepts, IP adresses, subnetting, proxies, find out how internet works. Study some protocols such as TCP/IP, HTTP, DNS or SSH. This could sound confusing for beginners, but this step is not optional! Study different client/server models and how services expose attack surfaces.\nProgramming \u0026amp; scripting Is this completely required? Maybe not for complete beginners. Does it help? Absolutely yes. Understanding how web apps or any type of application works makes things much easier. You can imagine different entry points to exploit if you understand how systems are designed. Also writing scripts in bash or python makes you more productive through automation.\nEthical Hacking foundations Once you feel confident with these 3 pillars, you can go to the next step. You can study about different topics and areas. For example, binary exploiting, web pentesting, mobile pentesting, wireless hacking, etc. You should start picking a focus, in this post we focus on web pentesting, as it is beginner friendly. Also web applications are the bread and butter in companies nowadays.\nKey concepts to study:\nCIA Triad: CIA refers to Confidentiality, Integrity and Availability. These three concepts are key in information security, and describe properties we want to ensure in our systems and information. Web Security basics, OWASP: Study the OWASP Top 10, which summarizes most frequent web security risks. Authentication and session control: Understand the concepts of Authentication and Authorization, research about how session is handled in web apps, cookies, JWT tokens, etc. Input validation \u0026amp; injection attacks: Learn about SQL Injection, Cross-Site Scripting (XSS), Code Injection, SSTI, and every injection type. Secure development lifecycle: Find out how to implement security controls in code. This can be more related to Blue Team, but as Red Teamer it is important to understand. Firewall evasion: What a firewall is and some techniques/methods to bypass. Some cryptography: Understand what a chiper and a hash are, how information is encrypted to prevent access from 3rd parties. Focusing on web, read about TLS protocol. There are many more topics you can research and learn, but this could be a nice starting point.\nTools and platforms to learn Now you have an idea of what to study, let\u0026rsquo;s see how to start in practical terms.\nSome platforms I personally recommend:\nOverTheWire: Here you can find some CTFs (Capture The Flag) which are fun to play and also really instructive. Bandit games are a must for complete beginners, as you will explore some linux and bash concepts which are basic to continue. The games are leveled by difficulty, in their web you can get all the information about how to play, only a terminal and SSH is required. This helps building your foundation in Linux OS. HackTheBox: Nº 1 platform in cybersecurity. Has a lot of resources to learn all this core fundamentals, and also red team / blue team security topics. It is focused on labs where you can test your skills hacking different boxes but if you really want to learn it is worth to invest time and money in the academy. I have to say the level here is high, specially if you try to hack machines on your own without using some guide or writeup. TryHackMe: More beginner friendly than hackthebox, it provides a lot of guided learning resources. PortSwigger Labs: Practical labs about specific topics, focused on web hacking. They are great to learn and understand different types of attacks, injections, and security misconfigurations. I would recommend digging into this once you have the theoretical basis about these concepts. I have to mention a few tools I am sure you\u0026rsquo;d end up using:\nNmap: This is probably the most famous tool in hacking, allowing you to gather information about ports and services running in a machine. Burpsuite: A proxy tool widely used in web application security testing. It basically allows you to intercept and modify web requests, which can be used to perform several types of attacks. Metasploit: The most used pentesting framework. Contains a large amount of scripts and exploits ready to run. Another crucial step here is to set up your virtual lab environment to test vulnerable applications. To achieve this goal, there are some Linux distributions like Kali, Parrot or BlackArch, but that\u0026rsquo;s a topic for another post.\nFinal thoughs To sum up, this would be my personal roadmap:\nLearn the fundamentals, specially Linux and networking. Install some Linux in a virtual machine, play with it, get comfortable with the terminal. You can start with bandit wargames in OverTheWire. Complete every level and make sure to understand everything as clear as possible. Move to guided boxes on HackTheBox. I recommend you joining their Discord, ask questions, community is great there! Take notes, repeat, learn, improve your skills. Maybe use your own lab environment, create your own vulnerable apps. Hacking is a mixing of curiosity, study and practice. Being passionate and motivated about it is really helpful and will definitely speed up the process. The path is long and really challenging, so keep it going!\n\u0026ldquo;Yes, I am a criminal. My crime is that of curiosity.\u0026rdquo; — The Mentor (Loyd Blankenship) at The Hacker Manifesto\n","permalink":"http://localhost:1313/posts/starting-point/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIf you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\u003c/p\u003e","title":"Starting Point"},{"content":"Introduction In this post series we are going to solve every level from bandit in OverTheWire This guide pretends to be a writeup containing the solutions of the level, designed for beginners.\nTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing WSL, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\nEvery section will contain the solution as well as some tips for people who is absolutely beginner.\nTips First of all, some tips:\nDo not use this as first resource to solve the levels. Try on your own, make mistakes and learn from them. Only check the solution as last resource or if you are completely new and you have absolutely no idea about what to do next. Take notes from your learning. Write up commands, tips and everything which can be useful in the future. Make sure to understand everything. Is a good idea to note the passwords for every level. If you want to continue letter, you can simply log in in the desired level. It is annoying to repeat everything! Follow the tips and information provided at OverTheWire website. Levels Here is my solution for every level:\nBandit0 Bandit1 Bandit2 Bandit3 Bandit4 Bandit5 Bandit6 Bandit7 ","permalink":"http://localhost:1313/posts/otw/bandit/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIn this post series we are going to solve every level from bandit in \u003ca href=\"https://overthewire.org/wargames/bandit/\"\u003e\u003cem\u003eOverTheWire\u003c/em\u003e\u003c/a\u003e\nThis guide pretends to be a writeup containing the solutions of the level, designed for beginners.\u003c/p\u003e\n\u003cp\u003eTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing \u003ca href=\"https://learn.microsoft.com/en-us/windows/wsl/install\"\u003eWSL\u003c/a\u003e, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\u003c/p\u003e","title":"Bandit"},{"content":"Level description The goal of this level is for you to log into the game using SSH. The host to which you need to connect is bandit.labs.overthewire.org, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\nTips for beginners Read a bit about what SSH is. Research about what a port is. Solution This is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go here.\nAt Linux, we can use ssh client to connect to the server. It should be installed by default on your system. If not, please first research about how to install. Once you have the SSH client installed, you can log in into the first level as follows:\nssh bandit0@bandit.labs.overthewire.org -p 2220 Syntax is simple: ssh \u0026lt;username\u0026gt;@\u0026lt;hostname\u0026gt; -p \u0026lt;port\u0026gt;. Usually SSH runs on port 22 by default, but they changed to port 2220 so we must specify it in the command.\nOnce you try to log in, you will see something like this: NB: If it\u0026rsquo;s the first time you try to log in, you will be asked about the authenticity of the host. Just type yes.\nType the password bandit0 and press enter. Now you are inside bandit server, ready to begin with bandit1!\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit0/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe goal of this level is for you to log into the game using SSH. The host to which you need to connect is \u003cstrong\u003ebandit.labs.overthewire.org\u003c/strong\u003e, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eRead a bit about what SSH is.\u003c/li\u003e\n\u003cli\u003eResearch about what a port is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go \u003ca href=\"https://en.wikipedia.org/wiki/Secure_Shell\"\u003ehere\u003c/a\u003e.\u003c/p\u003e","title":"Bandit0"},{"content":"Level description The password for the next level is stored in a file called readme located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\nTips for beginners Learn about home directory in Linux. Learn to use cat and ls commands. Solution First step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\nls This shows in terminal the files at the current directory. There you will see the readme file.\nNow we can to check the contents, so let\u0026rsquo;s use cat:\ncat readme To read a file, we use cat \u0026lt;filename\u0026gt;.\nNB: Not every file is human readable in Linux. We deep more about this in later levels.\nThe content of the readme file reveals the password for bandit2 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit1/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u003cstrong\u003ereadme\u003c/strong\u003e located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn about home directory in Linux.\u003c/li\u003e\n\u003cli\u003eLearn to use \u003ccode\u003ecat\u003c/code\u003e and \u003ccode\u003els\u003c/code\u003e commands.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eFirst step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\u003c/p\u003e","title":"Bandit1"},{"content":"Level description The password for the next level is stored in a file called - located in the home directory\nTips for beginners Try to understand why previous solution is not working as you expect. Solution You may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our cat command: The terminal is waiting for something else. This happens due to character - is used to pass arguments to our commands, and the linux shell is interpreting that. To prevent that, we could use:\ncat ./- NB: Dot . is used to refer current directory. The slash / is used at the end of directory name.\nWe get the password for bandit3 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit2/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called - located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eTry to understand why previous solution is not working as you expect.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eYou may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our \u003ccode\u003ecat\u003c/code\u003e command:\n\u003cimg alt=\"bandit2\" loading=\"lazy\" src=\"/images/otw/bandit/bandit2/0.png\"\u003e\u003c/p\u003e\n\u003cp\u003eThe terminal is \u003cem\u003ewaiting\u003c/em\u003e for something else. This happens due to character \u003ccode\u003e-\u003c/code\u003e is used to pass arguments to our commands, and the linux shell is interpreting that.\nTo prevent that, we could use:\u003c/p\u003e","title":"Bandit2"},{"content":"Level description The password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\nTips for beginners Think about how to escape the whitespaces. Solution After login in the machine as bandit3, we can see the filename \u0026ndash;spaces in this filename\u0026ndash;.\nNow we have 2 problems:\nSame as previous level, filename starts with --, so it will be interpreted as an argument. Address this problem using ./. Filename contains whitespaces. This is an issue, as bash interpretes whitespaces to separate commands. To solve the second problem, we must escape the whitespace character in some way. Here is the solution:\ncat ./--spaces\\ in\\ this\\ filename-- NB: Little trick, you can start writting filename and press Tab to autocomplete the name. The \\ is going to be inserted automatically.\nJust using the \\ we can escape the whitespace.\nNow we can continue with the bandit4 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit3/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eThink about how to \u003cem\u003eescape\u003c/em\u003e the whitespaces.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAfter login in the machine as bandit3, we can see the filename \u003cem\u003e\u0026ndash;spaces in this filename\u0026ndash;\u003c/em\u003e.\u003c/p\u003e\n\u003cp\u003eNow we have 2 problems:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eSame as previous level, filename starts with \u003ccode\u003e--\u003c/code\u003e, so it will be interpreted as an argument. Address this problem using \u003ccode\u003e./\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003eFilename contains \u003cstrong\u003ewhitespaces\u003c/strong\u003e. This is an issue, as bash interpretes whitespaces to separate commands.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eTo solve the second problem, we must escape the whitespace character in some way. Here is the solution:\u003c/p\u003e","title":"Bandit3"},{"content":"Level description The password for the next level is stored in a hidden file in the inhere directory.\nTips for beginners Learn how to navigate directories in Linux. First understand what a hidden file is. Solution Listing directory files inside bandit4\u0026rsquo;s home directory, show directory inhere.\nNB: How to distinguish files and directories in Linux? Use ls -l and see the difference.\nWe have 2 options now:\nMove to inhere directory and check contens again. Check contents directly. Moving to another directory can be done using cd \u0026lt;dirName\u0026gt;. If you prefer to check directory contents directly, use ls \u0026lt;dirName\u0026gt;.\nAfter checking inhere contents via ls, we see nothing. The reason is the file is a hidden file. A hidden file in Linux is everyfile whose name starts with dot .. Hidden files are not shown by default with ls command, so we must add a special flag -a to list all files: NB: Both flags -l and -a cna be combined into a single flag -al, which is shorter to type.\nAs you can see, filename is \u0026hellip;Hidding-From-You starting with three dots. Reading file contents should be easy at this point!\nNext level is bandit5.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit4/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a hidden file in the inhere directory.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to navigate directories in Linux.\u003c/li\u003e\n\u003cli\u003eFirst understand what a hidden file is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eListing directory files inside bandit4\u0026rsquo;s home directory, show directory \u003cstrong\u003einhere\u003c/strong\u003e.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e How to distinguish files and directories in Linux? Use \u003ccode\u003els -l\u003c/code\u003e and see the difference.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eWe have 2 options now:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eMove to inhere directory and check contens again.\u003c/li\u003e\n\u003cli\u003eCheck contents directly.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eMoving to another directory can be done using \u003ccode\u003ecd \u0026lt;dirName\u0026gt;\u003c/code\u003e. If you prefer to check directory contents directly, use \u003ccode\u003els \u0026lt;dirName\u0026gt;\u003c/code\u003e.\u003c/p\u003e","title":"Bandit4"},{"content":"Level description The password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\nTips for beginners What means human-readable file? Is there any way to check filetype at Linux?. Solution Checking inhere\u0026rsquo;s contents shows some files names \u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII here\nSo now, our goal is checking if file content of every file in the folder is ASCII or not. file \u0026lt;filename\u0026gt; does the job. Note the use of *. That called a wildcard regular expression, we\u0026rsquo;ll deep into it in later levels. An easy approach could be checking every file separately:\nfile ./--file00 file ./--file01 ... file ./--file09 But that\u0026rsquo;s not funny, imagine we have 100 files to check. All the files are in the same directory, so we can use cat ./* where ./* matches every filename in the directory, applying file to every file.\nNB: Another approach is to use find with certaing flags. Try to do in different ways, don\u0026rsquo;t stick to my solution.\nThe file \u0026ndash;file00 content is not readable, so get password from \u0026ndash;file07 and continue with bandit6.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit5/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eWhat means human-readable file?\u003c/li\u003e\n\u003cli\u003eIs there any way to check filetype at Linux?.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eChecking inhere\u0026rsquo;s contents shows some files names \u003cstrong\u003e\u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09\u003c/strong\u003e. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII \u003ca href=\"https://en.wikipedia.org/wiki/ASCII\"\u003ehere\u003c/a\u003e\u003c/p\u003e","title":"Bandit5"},{"content":"Level description The password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\nhuman-readable 1033 bytes in size not executable Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution The purpose of the level is showing us how to find for files. Listing contents of inhere, we can see some folders, containing a lot of files inside: NB: Adding -R to ls shows recursively the content of every folder inside the directory listed.\nSo this time, checking every file is not an option. We need to find a file with some properties, specific size, not excutable and human-readable. Let\u0026rsquo;s explain the command we\u0026rsquo;re using:\nfind inhere/ -size 1033c ! -executable First, we specify the directory, in this case inhere. The option -size 1033c returns files of 1033 bytes. Then, with -executable we would get executable files, but we want not executable files, that\u0026rsquo;s why we are adding ! before.\nNB: By default, the -size option takes as argument the number of blocks. For example, -size 2 means 2 blocks of 512 bytes, so its 1024. The c is used to specify exact bytes. Don\u0026rsquo;t ask me why it\u0026rsquo;s c and not b 😅.\nThe property of human-readability is not implemented in find. This is not an issue, previous command returns a single file and it is human readable (we could confirm using file): Extra tip: try to use the following:\nfind inhere/ -size 1033c ! -executable | file You get the same result! The pipe | is a great tool to execute 2+ commands in one line.\nGet your password and continue with bandit7.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit6/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ehuman-readable\u003c/li\u003e\n\u003cli\u003e1033 bytes in size\u003c/li\u003e\n\u003cli\u003enot executable\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThe purpose of the level is showing us how to find for files. Listing contents of \u003cstrong\u003einhere\u003c/strong\u003e, we can see some folders, containing a lot of files inside:\n\u003cimg alt=\"bandit6_0\" loading=\"lazy\" src=\"/images/otw/bandit/bandit6/0.png\"\u003e\u003c/p\u003e","title":"Bandit6"},{"content":"Level description The password for the next level is stored somewhere on the server and has all of the following properties:\nowned by user bandit7 owned by group bandit6 33 bytes in size Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution This is very straightforward to do after completing previous level. Now we need to identify a file owned by user bandit7 and group bandi6. Furthermore, the file is somewhere on the server, which means we have to find in the root directory /.\nfind / -user bandit7 -group bandit6 -size 33c 2\u0026gt;/dev/null NB: I added that strange 2\u0026gt;/dev/null to filter error output. The reason why it works like that is more technical, for now just save this a fast way to filter errors in terminal. We get some errors because looking for files in the whole server may return some unaccesible files, as we don\u0026rsquo;t have root user permissions. We will study Linux permissions in later levels.\nWe should get a single file, containing password for bandit8.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit7/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored somewhere on the server and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eowned by user bandit7\u003c/li\u003e\n\u003cli\u003eowned by group bandit6\u003c/li\u003e\n\u003cli\u003e33 bytes in size\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is very straightforward to do after completing previous level. Now we need to identify a file owned by user bandit7 and group bandi6. Furthermore, the file is \u003cstrong\u003esomewhere on the server\u003c/strong\u003e, which means we have to find in the root directory \u003ccode\u003e/\u003c/code\u003e.\u003c/p\u003e","title":"Bandit7"},{"content":"Level description The password for the next level is stored in the file data.txt next to the word millionth.\nTips for beginners Learn how to filter file contents. Solution At previous levels, we discovered how to find for files. Now it\u0026rsquo;s time to find for content inside a file. grep command is going to help with that task.\nNB: Of course I don\u0026rsquo;t want to spoil you the password!\nNotice how this can achieved in different ways.\nUsing grep \u0026lt;keyword\u0026gt; \u0026lt;filename\u0026gt;. Using the pipe | to execute grep over the result of cat command. Take you favorite path to solve the level, and continue with bandit9.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit8/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the file data.txt next to the word \u003cstrong\u003emillionth\u003c/strong\u003e.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to filter file contents.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAt previous levels, we discovered how to find for files. Now it\u0026rsquo;s time to find for content inside a file. \u003ccode\u003egrep\u003c/code\u003e command is going to help with that task.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"bandit8\" loading=\"lazy\" src=\"/images/otw/bandit/bandit8/0.png\"\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e Of course I don\u0026rsquo;t want to spoil you the password!\u003c/p\u003e","title":"Bandit8"},{"content":"👨‍💻 whoami Hey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\nWhat is this❓​ This blog is basically my thoughts on several hacking topics. Here you’ll see:\nWriteups from CTF challenges, from platforms like HackTheBox or OverTheWire.\nWalkthroughs and notes on pentesting techniques I’m learning or testing.\nSome posts on cryptography — because math can be fun (sometimes).\nRandom topics that freaks like me may (just may) find interesting.\nThe idea is simple: share what I learn, document my journey, and maybe help others who are also diving into the exciting world of ethical hacking.\n📫 Contact Want to say hi, share ideas, or just geek out about hacking? Reach me here:\n📧 Email: mrb0b1073@proton.me 💻​ GitHub: mrb0b173 🟩​ HackTheBox: mrb0b1073 ","permalink":"http://localhost:1313/about/","summary":"\u003ch2 id=\"-whoami\"\u003e👨‍💻 whoami\u003c/h2\u003e\n\u003cp\u003eHey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\u003c/p\u003e\n\u003chr\u003e\n\u003ch2 id=\"what-is-this\"\u003eWhat is this❓​\u003c/h2\u003e\n\u003cp\u003eThis blog is basically my thoughts on several hacking topics. Here you’ll see:\u003c/p\u003e","title":"About"},{"content":"Hey! 👋 I\u0026rsquo;m mrb0b1073 and this is my first post.\nWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\nExcited to start this adventure!\n","permalink":"http://localhost:1313/posts/hello-world/","summary":"\u003cp\u003eHey! 👋 I\u0026rsquo;m \u003cstrong\u003emrb0b1073\u003c/strong\u003e and this is my first post.\u003c/p\u003e\n\u003cp\u003eWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\u003cbr\u003e\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\u003c/p\u003e\n\u003cp\u003eExcited to start this adventure!\u003c/p\u003e","title":"Hello World"},{"content":"Introduction If you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\nIn cybersecurity there are broadly two complementary roles: Blue Team and Red Team. Blue Teams focus on defense, monitoring, incident response, hardening systems and keeping services secure, while Red Teams simulate attackers to find weaknesses and prove what an adversary could do. Ethical hacking aligns closely with Red Team operations, but cybersecurity is highly transversal across IT. There are many specialities or areas, such as cloud security, appsec, pentesting, forensics, governance, risk management, malware analysis, etc. Every topic could deserve its own post, so let\u0026rsquo;s keep it simple and focus on ethical hacking.\nHacker philosophy Let\u0026rsquo;s start with the idea of what is exactly a hacker. A hacker is someone who explores systems to understand how they work, finds creative ways to make or fix things, and solves technical problems. Historically the word describes curiosity, craft, and a drive to improve systems — not criminality. It is important to make the distinction between hacker and cracker, also called cybercriminal. A hacker explores, builds, discloses responsibly and works to improve security. They work in authorized environments or labs. On the other hand, a cracker breaks into systems for theft, vandalism or other illicit gain.\nHere you can find the most popularized ideas often summarized as the hacker ethic:\nCuriosity first: Learn by exploring and tinkering. Freedom of information: All knowledge should be shared to help progress. This fits properly with the idea of open source. Mistrust of needless authority: Centralized control sometimes blocks innovation. It is always good to question anything, specially common assumptions. Meritocracy: Skills, craft and results matter more than titles. Craftsmanship \u0026amp; elegance: Technical beauty matters. Build clean, clever and efficient solutions. Responsability \u0026amp; ethics: Use your skills to build, fix, educate and defend, not to harm. Core fundamentals Assuming you want to init yourself in hacking, you should first build competence across three basic pillars.\nOperating Systems You should learn as much as possible about Linux and Windows. Specially Linux, all the tools you will be using are meant to be used in a Linux environment. Skill with shell is required, learn basic commands and how to interact with the OS using the terminal. Research about processes, file permissions, package management and logs. A large proportion of web servers around the world run on Linux, although Windows is also widely used. Windows knowledge is really valuable too, considering active directory is strongly used in corporate environments.\nNetworking You have to understand how computers communicate each other. Understand basic networking concepts, IP adresses, subnetting, proxies, find out how internet works. Study some protocols such as TCP/IP, HTTP, DNS or SSH. This could sound confusing for beginners, but this step is not optional! Study different client/server models and how services expose attack surfaces.\nProgramming \u0026amp; scripting Is this completely required? Maybe not for complete beginners. Does it help? Absolutely yes. Understanding how web apps or any type of application works makes things much easier. You can imagine different entry points to exploit if you understand how systems are designed. Also writing scripts in bash or python makes you more productive through automation.\nEthical Hacking foundations Once you feel confident with these 3 pillars, you can go to the next step. You can study about different topics and areas. For example, binary exploiting, web pentesting, mobile pentesting, wireless hacking, etc. You should start picking a focus, in this post we focus on web pentesting, as it is beginner friendly. Also web applications are the bread and butter in companies nowadays.\nKey concepts to study:\nCIA Triad: CIA refers to Confidentiality, Integrity and Availability. These three concepts are key in information security, and describe properties we want to ensure in our systems and information. Web Security basics, OWASP: Study the OWASP Top 10, which summarizes most frequent web security risks. Authentication and session control: Understand the concepts of Authentication and Authorization, research about how session is handled in web apps, cookies, JWT tokens, etc. Input validation \u0026amp; injection attacks: Learn about SQL Injection, Cross-Site Scripting (XSS), Code Injection, SSTI, and every injection type. Secure development lifecycle: Find out how to implement security controls in code. This can be more related to Blue Team, but as Red Teamer it is important to understand. Firewall evasion: What a firewall is and some techniques/methods to bypass. Some cryptography: Understand what a chiper and a hash are, how information is encrypted to prevent access from 3rd parties. Focusing on web, read about TLS protocol. There are many more topics you can research and learn, but this could be a nice starting point.\nTools and platforms to learn Now you have an idea of what to study, let\u0026rsquo;s see how to start in practical terms.\nSome platforms I personally recommend:\nOverTheWire: Here you can find some CTFs (Capture The Flag) which are fun to play and also really instructive. Bandit games are a must for complete beginners, as you will explore some linux and bash concepts which are basic to continue. The games are leveled by difficulty, in their web you can get all the information about how to play, only a terminal and SSH is required. This helps building your foundation in Linux OS. HackTheBox: Nº 1 platform in cybersecurity. Has a lot of resources to learn all this core fundamentals, and also red team / blue team security topics. It is focused on labs where you can test your skills hacking different boxes but if you really want to learn it is worth to invest time and money in the academy. I have to say the level here is high, specially if you try to hack machines on your own without using some guide or writeup. TryHackMe: More beginner friendly than hackthebox, it provides a lot of guided learning resources. PortSwigger Labs: Practical labs about specific topics, focused on web hacking. They are great to learn and understand different types of attacks, injections, and security misconfigurations. I would recommend digging into this once you have the theoretical basis about these concepts. I have to mention a few tools I am sure you\u0026rsquo;d end up using:\nNmap: This is probably the most famous tool in hacking, allowing you to gather information about ports and services running in a machine. Burpsuite: A proxy tool widely used in web application security testing. It basically allows you to intercept and modify web requests, which can be used to perform several types of attacks. Metasploit: The most used pentesting framework. Contains a large amount of scripts and exploits ready to run. Another crucial step here is to set up your virtual lab environment to test vulnerable applications. To achieve this goal, there are some Linux distributions like Kali, Parrot or BlackArch, but that\u0026rsquo;s a topic for another post.\nFinal thoughs To sum up, this would be my personal roadmap:\nLearn the fundamentals, specially Linux and networking. Install some Linux in a virtual machine, play with it, get comfortable with the terminal. You can start with bandit wargames in OverTheWire. Complete every level and make sure to understand everything as clear as possible. Move to guided boxes on HackTheBox. I recommend you joining their Discord, ask questions, community is great there! Take notes, repeat, learn, improve your skills. Maybe use your own lab environment, create your own vulnerable apps. Hacking is a mixing of curiosity, study and practice. Being passionate and motivated about it is really helpful and will definitely speed up the process. The path is long and really challenging, so keep it going!\n\u0026ldquo;Yes, I am a criminal. My crime is that of curiosity.\u0026rdquo; — The Mentor (Loyd Blankenship) at The Hacker Manifesto\n","permalink":"http://localhost:1313/posts/starting-point/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIf you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\u003c/p\u003e","title":"Starting Point"},{"content":"Introduction In this post series we are going to solve every level from bandit in OverTheWire This guide pretends to be a writeup containing the solutions of the level, designed for beginners.\nTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing WSL, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\nEvery section will contain the solution as well as some tips for people who is absolutely beginner.\nTips First of all, some tips:\nDo not use this as first resource to solve the levels. Try on your own, make mistakes and learn from them. Only check the solution as last resource or if you are completely new and you have absolutely no idea about what to do next. Take notes from your learning. Write up commands, tips and everything which can be useful in the future. Make sure to understand everything. Is a good idea to note the passwords for every level. If you want to continue letter, you can simply log in in the desired level. It is annoying to repeat everything! Follow the tips and information provided at OverTheWire website. Levels Here is my solution for every level:\nBandit0 Bandit1 Bandit2 Bandit3 Bandit4 Bandit5 Bandit6 Bandit7 ","permalink":"http://localhost:1313/posts/otw/bandit/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIn this post series we are going to solve every level from bandit in \u003ca href=\"https://overthewire.org/wargames/bandit/\"\u003e\u003cem\u003eOverTheWire\u003c/em\u003e\u003c/a\u003e\nThis guide pretends to be a writeup containing the solutions of the level, designed for beginners.\u003c/p\u003e\n\u003cp\u003eTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing \u003ca href=\"https://learn.microsoft.com/en-us/windows/wsl/install\"\u003eWSL\u003c/a\u003e, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\u003c/p\u003e","title":"Bandit"},{"content":"Level description The goal of this level is for you to log into the game using SSH. The host to which you need to connect is bandit.labs.overthewire.org, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\nTips for beginners Read a bit about what SSH is. Research about what a port is. Solution This is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go here.\nAt Linux, we can use ssh client to connect to the server. It should be installed by default on your system. If not, please first research about how to install. Once you have the SSH client installed, you can log in into the first level as follows:\nssh bandit0@bandit.labs.overthewire.org -p 2220 Syntax is simple: ssh \u0026lt;username\u0026gt;@\u0026lt;hostname\u0026gt; -p \u0026lt;port\u0026gt;. Usually SSH runs on port 22 by default, but they changed to port 2220 so we must specify it in the command.\nOnce you try to log in, you will see something like this: NB: If it\u0026rsquo;s the first time you try to log in, you will be asked about the authenticity of the host. Just type yes.\nType the password bandit0 and press enter. Now you are inside bandit server, ready to begin with bandit1!\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit0/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe goal of this level is for you to log into the game using SSH. The host to which you need to connect is \u003cstrong\u003ebandit.labs.overthewire.org\u003c/strong\u003e, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eRead a bit about what SSH is.\u003c/li\u003e\n\u003cli\u003eResearch about what a port is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go \u003ca href=\"https://en.wikipedia.org/wiki/Secure_Shell\"\u003ehere\u003c/a\u003e.\u003c/p\u003e","title":"Bandit0"},{"content":"Level description The password for the next level is stored in a file called readme located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\nTips for beginners Learn about home directory in Linux. Learn to use cat and ls commands. Solution First step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\nls This shows in terminal the files at the current directory. There you will see the readme file.\nNow we can to check the contents, so let\u0026rsquo;s use cat:\ncat readme To read a file, we use cat \u0026lt;filename\u0026gt;.\nNB: Not every file is human readable in Linux. We deep more about this in later levels.\nThe content of the readme file reveals the password for bandit2 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit1/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u003cstrong\u003ereadme\u003c/strong\u003e located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn about home directory in Linux.\u003c/li\u003e\n\u003cli\u003eLearn to use \u003ccode\u003ecat\u003c/code\u003e and \u003ccode\u003els\u003c/code\u003e commands.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eFirst step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\u003c/p\u003e","title":"Bandit1"},{"content":"Level description The password for the next level is stored in a file called - located in the home directory\nTips for beginners Try to understand why previous solution is not working as you expect. Solution You may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our cat command: The terminal is waiting for something else. This happens due to character - is used to pass arguments to our commands, and the linux shell is interpreting that. To prevent that, we could use:\ncat ./- NB: Dot . is used to refer current directory. The slash / is used at the end of directory name.\nWe get the password for bandit3 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit2/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called - located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eTry to understand why previous solution is not working as you expect.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eYou may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our \u003ccode\u003ecat\u003c/code\u003e command:\n\u003cimg alt=\"bandit2\" loading=\"lazy\" src=\"/images/otw/bandit/bandit2/0.png\"\u003e\u003c/p\u003e\n\u003cp\u003eThe terminal is \u003cem\u003ewaiting\u003c/em\u003e for something else. This happens due to character \u003ccode\u003e-\u003c/code\u003e is used to pass arguments to our commands, and the linux shell is interpreting that.\nTo prevent that, we could use:\u003c/p\u003e","title":"Bandit2"},{"content":"Level description The password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\nTips for beginners Think about how to escape the whitespaces. Solution After login in the machine as bandit3, we can see the filename \u0026ndash;spaces in this filename\u0026ndash;.\nNow we have 2 problems:\nSame as previous level, filename starts with --, so it will be interpreted as an argument. Address this problem using ./. Filename contains whitespaces. This is an issue, as bash interpretes whitespaces to separate commands. To solve the second problem, we must escape the whitespace character in some way. Here is the solution:\ncat ./--spaces\\ in\\ this\\ filename-- NB: Little trick, you can start writting filename and press Tab to autocomplete the name. The \\ is going to be inserted automatically.\nJust using the \\ we can escape the whitespace.\nNow we can continue with the bandit4 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit3/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eThink about how to \u003cem\u003eescape\u003c/em\u003e the whitespaces.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAfter login in the machine as bandit3, we can see the filename \u003cem\u003e\u0026ndash;spaces in this filename\u0026ndash;\u003c/em\u003e.\u003c/p\u003e\n\u003cp\u003eNow we have 2 problems:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eSame as previous level, filename starts with \u003ccode\u003e--\u003c/code\u003e, so it will be interpreted as an argument. Address this problem using \u003ccode\u003e./\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003eFilename contains \u003cstrong\u003ewhitespaces\u003c/strong\u003e. This is an issue, as bash interpretes whitespaces to separate commands.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eTo solve the second problem, we must escape the whitespace character in some way. Here is the solution:\u003c/p\u003e","title":"Bandit3"},{"content":"Level description The password for the next level is stored in a hidden file in the inhere directory.\nTips for beginners Learn how to navigate directories in Linux. First understand what a hidden file is. Solution Listing directory files inside bandit4\u0026rsquo;s home directory, show directory inhere.\nNB: How to distinguish files and directories in Linux? Use ls -l and see the difference.\nWe have 2 options now:\nMove to inhere directory and check contens again. Check contents directly. Moving to another directory can be done using cd \u0026lt;dirName\u0026gt;. If you prefer to check directory contents directly, use ls \u0026lt;dirName\u0026gt;.\nAfter checking inhere contents via ls, we see nothing. The reason is the file is a hidden file. A hidden file in Linux is everyfile whose name starts with dot .. Hidden files are not shown by default with ls command, so we must add a special flag -a to list all files: NB: Both flags -l and -a cna be combined into a single flag -al, which is shorter to type.\nAs you can see, filename is \u0026hellip;Hidding-From-You starting with three dots. Reading file contents should be easy at this point!\nNext level is bandit5.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit4/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a hidden file in the inhere directory.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to navigate directories in Linux.\u003c/li\u003e\n\u003cli\u003eFirst understand what a hidden file is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eListing directory files inside bandit4\u0026rsquo;s home directory, show directory \u003cstrong\u003einhere\u003c/strong\u003e.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e How to distinguish files and directories in Linux? Use \u003ccode\u003els -l\u003c/code\u003e and see the difference.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eWe have 2 options now:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eMove to inhere directory and check contens again.\u003c/li\u003e\n\u003cli\u003eCheck contents directly.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eMoving to another directory can be done using \u003ccode\u003ecd \u0026lt;dirName\u0026gt;\u003c/code\u003e. If you prefer to check directory contents directly, use \u003ccode\u003els \u0026lt;dirName\u0026gt;\u003c/code\u003e.\u003c/p\u003e","title":"Bandit4"},{"content":"Level description The password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\nTips for beginners What means human-readable file? Is there any way to check filetype at Linux?. Solution Checking inhere\u0026rsquo;s contents shows some files names \u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII here\nSo now, our goal is checking if file content of every file in the folder is ASCII or not. file \u0026lt;filename\u0026gt; does the job. Note the use of *. That called a wildcard regular expression, we\u0026rsquo;ll deep into it in later levels. An easy approach could be checking every file separately:\nfile ./--file00 file ./--file01 ... file ./--file09 But that\u0026rsquo;s not funny, imagine we have 100 files to check. All the files are in the same directory, so we can use cat ./* where ./* matches every filename in the directory, applying file to every file.\nNB: Another approach is to use find with certaing flags. Try to do in different ways, don\u0026rsquo;t stick to my solution.\nThe file \u0026ndash;file00 content is not readable, so get password from \u0026ndash;file07 and continue with bandit6.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit5/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eWhat means human-readable file?\u003c/li\u003e\n\u003cli\u003eIs there any way to check filetype at Linux?.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eChecking inhere\u0026rsquo;s contents shows some files names \u003cstrong\u003e\u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09\u003c/strong\u003e. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII \u003ca href=\"https://en.wikipedia.org/wiki/ASCII\"\u003ehere\u003c/a\u003e\u003c/p\u003e","title":"Bandit5"},{"content":"Level description The password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\nhuman-readable 1033 bytes in size not executable Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution The purpose of the level is showing us how to find for files. Listing contents of inhere, we can see some folders, containing a lot of files inside: NB: Adding -R to ls shows recursively the content of every folder inside the directory listed.\nSo this time, checking every file is not an option. We need to find a file with some properties, specific size, not excutable and human-readable. Let\u0026rsquo;s explain the command we\u0026rsquo;re using:\nfind inhere/ -size 1033c ! -executable First, we specify the directory, in this case inhere. The option -size 1033c returns files of 1033 bytes. Then, with -executable we would get executable files, but we want not executable files, that\u0026rsquo;s why we are adding ! before.\nNB: By default, the -size option takes as argument the number of blocks. For example, -size 2 means 2 blocks of 512 bytes, so its 1024. The c is used to specify exact bytes. Don\u0026rsquo;t ask me why it\u0026rsquo;s c and not b 😅.\nThe property of human-readability is not implemented in find. This is not an issue, previous command returns a single file and it is human readable (we could confirm using file): Extra tip: try to use the following:\nfind inhere/ -size 1033c ! -executable | file You get the same result! The pipe | is a great tool to execute 2+ commands in one line.\nGet your password and continue with bandit7.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit6/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ehuman-readable\u003c/li\u003e\n\u003cli\u003e1033 bytes in size\u003c/li\u003e\n\u003cli\u003enot executable\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThe purpose of the level is showing us how to find for files. Listing contents of \u003cstrong\u003einhere\u003c/strong\u003e, we can see some folders, containing a lot of files inside:\n\u003cimg alt=\"bandit6_0\" loading=\"lazy\" src=\"/images/otw/bandit/bandit6/0.png\"\u003e\u003c/p\u003e","title":"Bandit6"},{"content":"Level description The password for the next level is stored somewhere on the server and has all of the following properties:\nowned by user bandit7 owned by group bandit6 33 bytes in size Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution This is very straightforward to do after completing previous level. Now we need to identify a file owned by user bandit7 and group bandi6. Furthermore, the file is somewhere on the server, which means we have to find in the root directory /.\nfind / -user bandit7 -group bandit6 -size 33c 2\u0026gt;/dev/null NB: I added that strange 2\u0026gt;/dev/null to filter error output. The reason why it works like that is more technical, for now just save this a fast way to filter errors in terminal. We get some errors because looking for files in the whole server may return some unaccesible files, as we don\u0026rsquo;t have root user permissions. We will study Linux permissions in later levels.\nWe should get a single file, containing password for bandit8.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit7/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored somewhere on the server and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eowned by user bandit7\u003c/li\u003e\n\u003cli\u003eowned by group bandit6\u003c/li\u003e\n\u003cli\u003e33 bytes in size\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is very straightforward to do after completing previous level. Now we need to identify a file owned by user bandit7 and group bandi6. Furthermore, the file is \u003cstrong\u003esomewhere on the server\u003c/strong\u003e, which means we have to find in the root directory \u003ccode\u003e/\u003c/code\u003e.\u003c/p\u003e","title":"Bandit7"},{"content":"Level description The password for the next level is stored in the file data.txt next to the word millionth.\nTips for beginners Learn how to filter file contents. Solution At previous levels, we discovered how to find for files. Now it\u0026rsquo;s time to find for content inside a file. grep command is going to help with that task.\nNB: Of course I don\u0026rsquo;t want to spoil you the password!\nNotice how this can achieved in different ways.\nUsing grep \u0026lt;keyword\u0026gt; \u0026lt;filename\u0026gt;. Using the pipe | to execute grep over the result of cat command. Take you favorite path to solve the level, and continue with bandit9.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit8-copy/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the file data.txt next to the word \u003cstrong\u003emillionth\u003c/strong\u003e.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to filter file contents.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAt previous levels, we discovered how to find for files. Now it\u0026rsquo;s time to find for content inside a file. \u003ccode\u003egrep\u003c/code\u003e command is going to help with that task.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"bandit8\" loading=\"lazy\" src=\"/images/otw/bandit/bandit8/0.png\"\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e Of course I don\u0026rsquo;t want to spoil you the password!\u003c/p\u003e","title":"Bandit8"},{"content":"Level description The password for the next level is stored in the file data.txt next to the word millionth.\nTips for beginners Learn how to filter file contents. Solution At previous levels, we discovered how to find for files. Now it\u0026rsquo;s time to find for content inside a file. grep command is going to help with that task.\nNB: Of course I don\u0026rsquo;t want to spoil you the password!\nNotice how this can achieved in different ways.\nUsing grep \u0026lt;keyword\u0026gt; \u0026lt;filename\u0026gt;. Using the pipe | to execute grep over the result of cat command. Take you favorite path to solve the level, and continue with bandit9.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit8/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the file data.txt next to the word \u003cstrong\u003emillionth\u003c/strong\u003e.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to filter file contents.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAt previous levels, we discovered how to find for files. Now it\u0026rsquo;s time to find for content inside a file. \u003ccode\u003egrep\u003c/code\u003e command is going to help with that task.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"bandit8\" loading=\"lazy\" src=\"/images/otw/bandit/bandit8/0.png\"\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e Of course I don\u0026rsquo;t want to spoil you the password!\u003c/p\u003e","title":"Bandit8"},{"content":"👨‍💻 whoami Hey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\nWhat is this❓​ This blog is basically my thoughts on several hacking topics. Here you’ll see:\nWriteups from CTF challenges, from platforms like HackTheBox or OverTheWire.\nWalkthroughs and notes on pentesting techniques I’m learning or testing.\nSome posts on cryptography — because math can be fun (sometimes).\nRandom topics that freaks like me may (just may) find interesting.\nThe idea is simple: share what I learn, document my journey, and maybe help others who are also diving into the exciting world of ethical hacking.\n📫 Contact Want to say hi, share ideas, or just geek out about hacking? Reach me here:\n📧 Email: mrb0b1073@proton.me 💻​ GitHub: mrb0b173 🟩​ HackTheBox: mrb0b1073 ","permalink":"http://localhost:1313/about/","summary":"\u003ch2 id=\"-whoami\"\u003e👨‍💻 whoami\u003c/h2\u003e\n\u003cp\u003eHey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\u003c/p\u003e\n\u003chr\u003e\n\u003ch2 id=\"what-is-this\"\u003eWhat is this❓​\u003c/h2\u003e\n\u003cp\u003eThis blog is basically my thoughts on several hacking topics. Here you’ll see:\u003c/p\u003e","title":"About"},{"content":"Hey! 👋 I\u0026rsquo;m mrb0b1073 and this is my first post.\nWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\nExcited to start this adventure!\n","permalink":"http://localhost:1313/posts/hello-world/","summary":"\u003cp\u003eHey! 👋 I\u0026rsquo;m \u003cstrong\u003emrb0b1073\u003c/strong\u003e and this is my first post.\u003c/p\u003e\n\u003cp\u003eWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\u003cbr\u003e\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\u003c/p\u003e\n\u003cp\u003eExcited to start this adventure!\u003c/p\u003e","title":"Hello World"},{"content":"Introduction If you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\nIn cybersecurity there are broadly two complementary roles: Blue Team and Red Team. Blue Teams focus on defense, monitoring, incident response, hardening systems and keeping services secure, while Red Teams simulate attackers to find weaknesses and prove what an adversary could do. Ethical hacking aligns closely with Red Team operations, but cybersecurity is highly transversal across IT. There are many specialities or areas, such as cloud security, appsec, pentesting, forensics, governance, risk management, malware analysis, etc. Every topic could deserve its own post, so let\u0026rsquo;s keep it simple and focus on ethical hacking.\nHacker philosophy Let\u0026rsquo;s start with the idea of what is exactly a hacker. A hacker is someone who explores systems to understand how they work, finds creative ways to make or fix things, and solves technical problems. Historically the word describes curiosity, craft, and a drive to improve systems — not criminality. It is important to make the distinction between hacker and cracker, also called cybercriminal. A hacker explores, builds, discloses responsibly and works to improve security. They work in authorized environments or labs. On the other hand, a cracker breaks into systems for theft, vandalism or other illicit gain.\nHere you can find the most popularized ideas often summarized as the hacker ethic:\nCuriosity first: Learn by exploring and tinkering. Freedom of information: All knowledge should be shared to help progress. This fits properly with the idea of open source. Mistrust of needless authority: Centralized control sometimes blocks innovation. It is always good to question anything, specially common assumptions. Meritocracy: Skills, craft and results matter more than titles. Craftsmanship \u0026amp; elegance: Technical beauty matters. Build clean, clever and efficient solutions. Responsability \u0026amp; ethics: Use your skills to build, fix, educate and defend, not to harm. Core fundamentals Assuming you want to init yourself in hacking, you should first build competence across three basic pillars.\nOperating Systems You should learn as much as possible about Linux and Windows. Specially Linux, all the tools you will be using are meant to be used in a Linux environment. Skill with shell is required, learn basic commands and how to interact with the OS using the terminal. Research about processes, file permissions, package management and logs. A large proportion of web servers around the world run on Linux, although Windows is also widely used. Windows knowledge is really valuable too, considering active directory is strongly used in corporate environments.\nNetworking You have to understand how computers communicate each other. Understand basic networking concepts, IP adresses, subnetting, proxies, find out how internet works. Study some protocols such as TCP/IP, HTTP, DNS or SSH. This could sound confusing for beginners, but this step is not optional! Study different client/server models and how services expose attack surfaces.\nProgramming \u0026amp; scripting Is this completely required? Maybe not for complete beginners. Does it help? Absolutely yes. Understanding how web apps or any type of application works makes things much easier. You can imagine different entry points to exploit if you understand how systems are designed. Also writing scripts in bash or python makes you more productive through automation.\nEthical Hacking foundations Once you feel confident with these 3 pillars, you can go to the next step. You can study about different topics and areas. For example, binary exploiting, web pentesting, mobile pentesting, wireless hacking, etc. You should start picking a focus, in this post we focus on web pentesting, as it is beginner friendly. Also web applications are the bread and butter in companies nowadays.\nKey concepts to study:\nCIA Triad: CIA refers to Confidentiality, Integrity and Availability. These three concepts are key in information security, and describe properties we want to ensure in our systems and information. Web Security basics, OWASP: Study the OWASP Top 10, which summarizes most frequent web security risks. Authentication and session control: Understand the concepts of Authentication and Authorization, research about how session is handled in web apps, cookies, JWT tokens, etc. Input validation \u0026amp; injection attacks: Learn about SQL Injection, Cross-Site Scripting (XSS), Code Injection, SSTI, and every injection type. Secure development lifecycle: Find out how to implement security controls in code. This can be more related to Blue Team, but as Red Teamer it is important to understand. Firewall evasion: What a firewall is and some techniques/methods to bypass. Some cryptography: Understand what a chiper and a hash are, how information is encrypted to prevent access from 3rd parties. Focusing on web, read about TLS protocol. There are many more topics you can research and learn, but this could be a nice starting point.\nTools and platforms to learn Now you have an idea of what to study, let\u0026rsquo;s see how to start in practical terms.\nSome platforms I personally recommend:\nOverTheWire: Here you can find some CTFs (Capture The Flag) which are fun to play and also really instructive. Bandit games are a must for complete beginners, as you will explore some linux and bash concepts which are basic to continue. The games are leveled by difficulty, in their web you can get all the information about how to play, only a terminal and SSH is required. This helps building your foundation in Linux OS. HackTheBox: Nº 1 platform in cybersecurity. Has a lot of resources to learn all this core fundamentals, and also red team / blue team security topics. It is focused on labs where you can test your skills hacking different boxes but if you really want to learn it is worth to invest time and money in the academy. I have to say the level here is high, specially if you try to hack machines on your own without using some guide or writeup. TryHackMe: More beginner friendly than hackthebox, it provides a lot of guided learning resources. PortSwigger Labs: Practical labs about specific topics, focused on web hacking. They are great to learn and understand different types of attacks, injections, and security misconfigurations. I would recommend digging into this once you have the theoretical basis about these concepts. I have to mention a few tools I am sure you\u0026rsquo;d end up using:\nNmap: This is probably the most famous tool in hacking, allowing you to gather information about ports and services running in a machine. Burpsuite: A proxy tool widely used in web application security testing. It basically allows you to intercept and modify web requests, which can be used to perform several types of attacks. Metasploit: The most used pentesting framework. Contains a large amount of scripts and exploits ready to run. Another crucial step here is to set up your virtual lab environment to test vulnerable applications. To achieve this goal, there are some Linux distributions like Kali, Parrot or BlackArch, but that\u0026rsquo;s a topic for another post.\nFinal thoughs To sum up, this would be my personal roadmap:\nLearn the fundamentals, specially Linux and networking. Install some Linux in a virtual machine, play with it, get comfortable with the terminal. You can start with bandit wargames in OverTheWire. Complete every level and make sure to understand everything as clear as possible. Move to guided boxes on HackTheBox. I recommend you joining their Discord, ask questions, community is great there! Take notes, repeat, learn, improve your skills. Maybe use your own lab environment, create your own vulnerable apps. Hacking is a mixing of curiosity, study and practice. Being passionate and motivated about it is really helpful and will definitely speed up the process. The path is long and really challenging, so keep it going!\n\u0026ldquo;Yes, I am a criminal. My crime is that of curiosity.\u0026rdquo; — The Mentor (Loyd Blankenship) at The Hacker Manifesto\n","permalink":"http://localhost:1313/posts/starting-point/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIf you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\u003c/p\u003e","title":"Starting Point"},{"content":"Introduction In this post series we are going to solve every level from bandit in OverTheWire This guide pretends to be a writeup containing the solutions of the level, designed for beginners.\nTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing WSL, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\nEvery section will contain the solution as well as some tips for people who is absolutely beginner.\nTips First of all, some tips:\nDo not use this as first resource to solve the levels. Try on your own, make mistakes and learn from them. Only check the solution as last resource or if you are completely new and you have absolutely no idea about what to do next. Take notes from your learning. Write up commands, tips and everything which can be useful in the future. Make sure to understand everything. Is a good idea to note the passwords for every level. If you want to continue letter, you can simply log in in the desired level. It is annoying to repeat everything! Follow the tips and information provided at OverTheWire website. Levels Here is my solution for every level:\nBandit0 Bandit1 Bandit2 Bandit3 Bandit4 Bandit5 Bandit6 Bandit7 ","permalink":"http://localhost:1313/posts/otw/bandit/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIn this post series we are going to solve every level from bandit in \u003ca href=\"https://overthewire.org/wargames/bandit/\"\u003e\u003cem\u003eOverTheWire\u003c/em\u003e\u003c/a\u003e\nThis guide pretends to be a writeup containing the solutions of the level, designed for beginners.\u003c/p\u003e\n\u003cp\u003eTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing \u003ca href=\"https://learn.microsoft.com/en-us/windows/wsl/install\"\u003eWSL\u003c/a\u003e, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\u003c/p\u003e","title":"Bandit"},{"content":"Level description The goal of this level is for you to log into the game using SSH. The host to which you need to connect is bandit.labs.overthewire.org, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\nTips for beginners Read a bit about what SSH is. Research about what a port is. Solution This is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go here.\nAt Linux, we can use ssh client to connect to the server. It should be installed by default on your system. If not, please first research about how to install. Once you have the SSH client installed, you can log in into the first level as follows:\nssh bandit0@bandit.labs.overthewire.org -p 2220 Syntax is simple: ssh \u0026lt;username\u0026gt;@\u0026lt;hostname\u0026gt; -p \u0026lt;port\u0026gt;. Usually SSH runs on port 22 by default, but they changed to port 2220 so we must specify it in the command.\nOnce you try to log in, you will see something like this: NB: If it\u0026rsquo;s the first time you try to log in, you will be asked about the authenticity of the host. Just type yes.\nType the password bandit0 and press enter. Now you are inside bandit server, ready to begin with bandit1!\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit0/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe goal of this level is for you to log into the game using SSH. The host to which you need to connect is \u003cstrong\u003ebandit.labs.overthewire.org\u003c/strong\u003e, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eRead a bit about what SSH is.\u003c/li\u003e\n\u003cli\u003eResearch about what a port is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go \u003ca href=\"https://en.wikipedia.org/wiki/Secure_Shell\"\u003ehere\u003c/a\u003e.\u003c/p\u003e","title":"Bandit0"},{"content":"Level description The password for the next level is stored in a file called readme located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\nTips for beginners Learn about home directory in Linux. Learn to use cat and ls commands. Solution First step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\nls This shows in terminal the files at the current directory. There you will see the readme file.\nNow we can to check the contents, so let\u0026rsquo;s use cat:\ncat readme To read a file, we use cat \u0026lt;filename\u0026gt;.\nNB: Not every file is human readable in Linux. We deep more about this in later levels.\nThe content of the readme file reveals the password for bandit2 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit1/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u003cstrong\u003ereadme\u003c/strong\u003e located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn about home directory in Linux.\u003c/li\u003e\n\u003cli\u003eLearn to use \u003ccode\u003ecat\u003c/code\u003e and \u003ccode\u003els\u003c/code\u003e commands.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eFirst step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\u003c/p\u003e","title":"Bandit1"},{"content":"Level description The password for the next level is stored in a file called - located in the home directory\nTips for beginners Try to understand why previous solution is not working as you expect. Solution You may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our cat command: The terminal is waiting for something else. This happens due to character - is used to pass arguments to our commands, and the linux shell is interpreting that. To prevent that, we could use:\ncat ./- NB: Dot . is used to refer current directory. The slash / is used at the end of directory name.\nWe get the password for bandit3 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit2/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called - located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eTry to understand why previous solution is not working as you expect.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eYou may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our \u003ccode\u003ecat\u003c/code\u003e command:\n\u003cimg alt=\"bandit2\" loading=\"lazy\" src=\"/images/otw/bandit/bandit2/0.png\"\u003e\u003c/p\u003e\n\u003cp\u003eThe terminal is \u003cem\u003ewaiting\u003c/em\u003e for something else. This happens due to character \u003ccode\u003e-\u003c/code\u003e is used to pass arguments to our commands, and the linux shell is interpreting that.\nTo prevent that, we could use:\u003c/p\u003e","title":"Bandit2"},{"content":"Level description The password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\nTips for beginners Think about how to escape the whitespaces. Solution After login in the machine as bandit3, we can see the filename \u0026ndash;spaces in this filename\u0026ndash;.\nNow we have 2 problems:\nSame as previous level, filename starts with --, so it will be interpreted as an argument. Address this problem using ./. Filename contains whitespaces. This is an issue, as bash interpretes whitespaces to separate commands. To solve the second problem, we must escape the whitespace character in some way. Here is the solution:\ncat ./--spaces\\ in\\ this\\ filename-- NB: Little trick, you can start writting filename and press Tab to autocomplete the name. The \\ is going to be inserted automatically.\nJust using the \\ we can escape the whitespace.\nNow we can continue with the bandit4 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit3/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eThink about how to \u003cem\u003eescape\u003c/em\u003e the whitespaces.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAfter login in the machine as bandit3, we can see the filename \u003cem\u003e\u0026ndash;spaces in this filename\u0026ndash;\u003c/em\u003e.\u003c/p\u003e\n\u003cp\u003eNow we have 2 problems:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eSame as previous level, filename starts with \u003ccode\u003e--\u003c/code\u003e, so it will be interpreted as an argument. Address this problem using \u003ccode\u003e./\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003eFilename contains \u003cstrong\u003ewhitespaces\u003c/strong\u003e. This is an issue, as bash interpretes whitespaces to separate commands.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eTo solve the second problem, we must escape the whitespace character in some way. Here is the solution:\u003c/p\u003e","title":"Bandit3"},{"content":"Level description The password for the next level is stored in a hidden file in the inhere directory.\nTips for beginners Learn how to navigate directories in Linux. First understand what a hidden file is. Solution Listing directory files inside bandit4\u0026rsquo;s home directory, show directory inhere.\nNB: How to distinguish files and directories in Linux? Use ls -l and see the difference.\nWe have 2 options now:\nMove to inhere directory and check contens again. Check contents directly. Moving to another directory can be done using cd \u0026lt;dirName\u0026gt;. If you prefer to check directory contents directly, use ls \u0026lt;dirName\u0026gt;.\nAfter checking inhere contents via ls, we see nothing. The reason is the file is a hidden file. A hidden file in Linux is everyfile whose name starts with dot .. Hidden files are not shown by default with ls command, so we must add a special flag -a to list all files: NB: Both flags -l and -a cna be combined into a single flag -al, which is shorter to type.\nAs you can see, filename is \u0026hellip;Hidding-From-You starting with three dots. Reading file contents should be easy at this point!\nNext level is bandit5.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit4/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a hidden file in the inhere directory.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to navigate directories in Linux.\u003c/li\u003e\n\u003cli\u003eFirst understand what a hidden file is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eListing directory files inside bandit4\u0026rsquo;s home directory, show directory \u003cstrong\u003einhere\u003c/strong\u003e.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e How to distinguish files and directories in Linux? Use \u003ccode\u003els -l\u003c/code\u003e and see the difference.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eWe have 2 options now:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eMove to inhere directory and check contens again.\u003c/li\u003e\n\u003cli\u003eCheck contents directly.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eMoving to another directory can be done using \u003ccode\u003ecd \u0026lt;dirName\u0026gt;\u003c/code\u003e. If you prefer to check directory contents directly, use \u003ccode\u003els \u0026lt;dirName\u0026gt;\u003c/code\u003e.\u003c/p\u003e","title":"Bandit4"},{"content":"Level description The password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\nTips for beginners What means human-readable file? Is there any way to check filetype at Linux?. Solution Checking inhere\u0026rsquo;s contents shows some files names \u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII here\nSo now, our goal is checking if file content of every file in the folder is ASCII or not. file \u0026lt;filename\u0026gt; does the job. Note the use of *. That called a wildcard regular expression, we\u0026rsquo;ll deep into it in later levels. An easy approach could be checking every file separately:\nfile ./--file00 file ./--file01 ... file ./--file09 But that\u0026rsquo;s not funny, imagine we have 100 files to check. All the files are in the same directory, so we can use cat ./* where ./* matches every filename in the directory, applying file to every file.\nNB: Another approach is to use find with certaing flags. Try to do in different ways, don\u0026rsquo;t stick to my solution.\nThe file \u0026ndash;file00 content is not readable, so get password from \u0026ndash;file07 and continue with bandit6.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit5/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eWhat means human-readable file?\u003c/li\u003e\n\u003cli\u003eIs there any way to check filetype at Linux?.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eChecking inhere\u0026rsquo;s contents shows some files names \u003cstrong\u003e\u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09\u003c/strong\u003e. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII \u003ca href=\"https://en.wikipedia.org/wiki/ASCII\"\u003ehere\u003c/a\u003e\u003c/p\u003e","title":"Bandit5"},{"content":"Level description The password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\nhuman-readable 1033 bytes in size not executable Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution The purpose of the level is showing us how to find for files. Listing contents of inhere, we can see some folders, containing a lot of files inside: NB: Adding -R to ls shows recursively the content of every folder inside the directory listed.\nSo this time, checking every file is not an option. We need to find a file with some properties, specific size, not excutable and human-readable. Let\u0026rsquo;s explain the command we\u0026rsquo;re using:\nfind inhere/ -size 1033c ! -executable First, we specify the directory, in this case inhere. The option -size 1033c returns files of 1033 bytes. Then, with -executable we would get executable files, but we want not executable files, that\u0026rsquo;s why we are adding ! before.\nNB: By default, the -size option takes as argument the number of blocks. For example, -size 2 means 2 blocks of 512 bytes, so its 1024. The c is used to specify exact bytes. Don\u0026rsquo;t ask me why it\u0026rsquo;s c and not b 😅.\nThe property of human-readability is not implemented in find. This is not an issue, previous command returns a single file and it is human readable (we could confirm using file): Extra tip: try to use the following:\nfind inhere/ -size 1033c ! -executable | file You get the same result! The pipe | is a great tool to execute 2+ commands in one line.\nGet your password and continue with bandit7.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit6/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ehuman-readable\u003c/li\u003e\n\u003cli\u003e1033 bytes in size\u003c/li\u003e\n\u003cli\u003enot executable\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThe purpose of the level is showing us how to find for files. Listing contents of \u003cstrong\u003einhere\u003c/strong\u003e, we can see some folders, containing a lot of files inside:\n\u003cimg alt=\"bandit6_0\" loading=\"lazy\" src=\"/images/otw/bandit/bandit6/0.png\"\u003e\u003c/p\u003e","title":"Bandit6"},{"content":"Level description The password for the next level is stored somewhere on the server and has all of the following properties:\nowned by user bandit7 owned by group bandit6 33 bytes in size Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution This is very straightforward to do after completing previous level. Now we need to identify a file owned by user bandit7 and group bandi6. Furthermore, the file is somewhere on the server, which means we have to find in the root directory /.\nfind / -user bandit7 -group bandit6 -size 33c 2\u0026gt;/dev/null NB: I added that strange 2\u0026gt;/dev/null to filter error output. The reason why it works like that is more technical, for now just save this a fast way to filter errors in terminal. We get some errors because looking for files in the whole server may return some unaccesible files, as we don\u0026rsquo;t have root user permissions. We will study Linux permissions in later levels.\nWe should get a single file, containing password for bandit8.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit7/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored somewhere on the server and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eowned by user bandit7\u003c/li\u003e\n\u003cli\u003eowned by group bandit6\u003c/li\u003e\n\u003cli\u003e33 bytes in size\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is very straightforward to do after completing previous level. Now we need to identify a file owned by user bandit7 and group bandi6. Furthermore, the file is \u003cstrong\u003esomewhere on the server\u003c/strong\u003e, which means we have to find in the root directory \u003ccode\u003e/\u003c/code\u003e.\u003c/p\u003e","title":"Bandit7"},{"content":"Level description The password for the next level is stored in the file data.txt next to the word millionth.\nTips for beginners Learn how to filter file contents. Solution At previous levels, we discovered how to find for files. Now it\u0026rsquo;s time to find for content inside a file. grep command is going to help with that task.\nNB: Of course I don\u0026rsquo;t want to spoil you the password!\nNotice how this can achieved in different ways.\nUsing grep \u0026lt;keyword\u0026gt; \u0026lt;filename\u0026gt;. Using the pipe | to execute grep over the result of cat command. Take you favorite path to solve the level, and continue with bandit9.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit8/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the file data.txt next to the word \u003cstrong\u003emillionth\u003c/strong\u003e.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to filter file contents.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAt previous levels, we discovered how to find for files. Now it\u0026rsquo;s time to find for content inside a file. \u003ccode\u003egrep\u003c/code\u003e command is going to help with that task.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"bandit8\" loading=\"lazy\" src=\"/images/otw/bandit/bandit8/0.png\"\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e Of course I don\u0026rsquo;t want to spoil you the password!\u003c/p\u003e","title":"Bandit8"},{"content":"Level description The password for the next level is stored in the file data.txt next to the word millionth.\nTips for beginners Learn how to filter file contents. Solution At previous levels, we discovered how to find for files. Now it\u0026rsquo;s time to find for content inside a file. grep command is going to help with that task.\nNB: Of course I don\u0026rsquo;t want to spoil you the password!\nNotice how this can achieved in different ways.\nUsing grep \u0026lt;keyword\u0026gt; \u0026lt;filename\u0026gt;. Using the pipe | to execute grep over the result of cat command. Take you favorite path to solve the level, and continue with bandit9.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit9/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the file data.txt next to the word \u003cstrong\u003emillionth\u003c/strong\u003e.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to filter file contents.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAt previous levels, we discovered how to find for files. Now it\u0026rsquo;s time to find for content inside a file. \u003ccode\u003egrep\u003c/code\u003e command is going to help with that task.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"bandit8\" loading=\"lazy\" src=\"/images/otw/bandit/bandit8/0.png\"\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e Of course I don\u0026rsquo;t want to spoil you the password!\u003c/p\u003e","title":"Bandit8"},{"content":"👨‍💻 whoami Hey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\nWhat is this❓​ This blog is basically my thoughts on several hacking topics. Here you’ll see:\nWriteups from CTF challenges, from platforms like HackTheBox or OverTheWire.\nWalkthroughs and notes on pentesting techniques I’m learning or testing.\nSome posts on cryptography — because math can be fun (sometimes).\nRandom topics that freaks like me may (just may) find interesting.\nThe idea is simple: share what I learn, document my journey, and maybe help others who are also diving into the exciting world of ethical hacking.\n📫 Contact Want to say hi, share ideas, or just geek out about hacking? Reach me here:\n📧 Email: mrb0b1073@proton.me 💻​ GitHub: mrb0b173 🟩​ HackTheBox: mrb0b1073 ","permalink":"http://localhost:1313/about/","summary":"\u003ch2 id=\"-whoami\"\u003e👨‍💻 whoami\u003c/h2\u003e\n\u003cp\u003eHey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\u003c/p\u003e\n\u003chr\u003e\n\u003ch2 id=\"what-is-this\"\u003eWhat is this❓​\u003c/h2\u003e\n\u003cp\u003eThis blog is basically my thoughts on several hacking topics. Here you’ll see:\u003c/p\u003e","title":"About"},{"content":"Hey! 👋 I\u0026rsquo;m mrb0b1073 and this is my first post.\nWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\nExcited to start this adventure!\n","permalink":"http://localhost:1313/posts/hello-world/","summary":"\u003cp\u003eHey! 👋 I\u0026rsquo;m \u003cstrong\u003emrb0b1073\u003c/strong\u003e and this is my first post.\u003c/p\u003e\n\u003cp\u003eWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\u003cbr\u003e\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\u003c/p\u003e\n\u003cp\u003eExcited to start this adventure!\u003c/p\u003e","title":"Hello World"},{"content":"Introduction If you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\nIn cybersecurity there are broadly two complementary roles: Blue Team and Red Team. Blue Teams focus on defense, monitoring, incident response, hardening systems and keeping services secure, while Red Teams simulate attackers to find weaknesses and prove what an adversary could do. Ethical hacking aligns closely with Red Team operations, but cybersecurity is highly transversal across IT. There are many specialities or areas, such as cloud security, appsec, pentesting, forensics, governance, risk management, malware analysis, etc. Every topic could deserve its own post, so let\u0026rsquo;s keep it simple and focus on ethical hacking.\nHacker philosophy Let\u0026rsquo;s start with the idea of what is exactly a hacker. A hacker is someone who explores systems to understand how they work, finds creative ways to make or fix things, and solves technical problems. Historically the word describes curiosity, craft, and a drive to improve systems — not criminality. It is important to make the distinction between hacker and cracker, also called cybercriminal. A hacker explores, builds, discloses responsibly and works to improve security. They work in authorized environments or labs. On the other hand, a cracker breaks into systems for theft, vandalism or other illicit gain.\nHere you can find the most popularized ideas often summarized as the hacker ethic:\nCuriosity first: Learn by exploring and tinkering. Freedom of information: All knowledge should be shared to help progress. This fits properly with the idea of open source. Mistrust of needless authority: Centralized control sometimes blocks innovation. It is always good to question anything, specially common assumptions. Meritocracy: Skills, craft and results matter more than titles. Craftsmanship \u0026amp; elegance: Technical beauty matters. Build clean, clever and efficient solutions. Responsability \u0026amp; ethics: Use your skills to build, fix, educate and defend, not to harm. Core fundamentals Assuming you want to init yourself in hacking, you should first build competence across three basic pillars.\nOperating Systems You should learn as much as possible about Linux and Windows. Specially Linux, all the tools you will be using are meant to be used in a Linux environment. Skill with shell is required, learn basic commands and how to interact with the OS using the terminal. Research about processes, file permissions, package management and logs. A large proportion of web servers around the world run on Linux, although Windows is also widely used. Windows knowledge is really valuable too, considering active directory is strongly used in corporate environments.\nNetworking You have to understand how computers communicate each other. Understand basic networking concepts, IP adresses, subnetting, proxies, find out how internet works. Study some protocols such as TCP/IP, HTTP, DNS or SSH. This could sound confusing for beginners, but this step is not optional! Study different client/server models and how services expose attack surfaces.\nProgramming \u0026amp; scripting Is this completely required? Maybe not for complete beginners. Does it help? Absolutely yes. Understanding how web apps or any type of application works makes things much easier. You can imagine different entry points to exploit if you understand how systems are designed. Also writing scripts in bash or python makes you more productive through automation.\nEthical Hacking foundations Once you feel confident with these 3 pillars, you can go to the next step. You can study about different topics and areas. For example, binary exploiting, web pentesting, mobile pentesting, wireless hacking, etc. You should start picking a focus, in this post we focus on web pentesting, as it is beginner friendly. Also web applications are the bread and butter in companies nowadays.\nKey concepts to study:\nCIA Triad: CIA refers to Confidentiality, Integrity and Availability. These three concepts are key in information security, and describe properties we want to ensure in our systems and information. Web Security basics, OWASP: Study the OWASP Top 10, which summarizes most frequent web security risks. Authentication and session control: Understand the concepts of Authentication and Authorization, research about how session is handled in web apps, cookies, JWT tokens, etc. Input validation \u0026amp; injection attacks: Learn about SQL Injection, Cross-Site Scripting (XSS), Code Injection, SSTI, and every injection type. Secure development lifecycle: Find out how to implement security controls in code. This can be more related to Blue Team, but as Red Teamer it is important to understand. Firewall evasion: What a firewall is and some techniques/methods to bypass. Some cryptography: Understand what a chiper and a hash are, how information is encrypted to prevent access from 3rd parties. Focusing on web, read about TLS protocol. There are many more topics you can research and learn, but this could be a nice starting point.\nTools and platforms to learn Now you have an idea of what to study, let\u0026rsquo;s see how to start in practical terms.\nSome platforms I personally recommend:\nOverTheWire: Here you can find some CTFs (Capture The Flag) which are fun to play and also really instructive. Bandit games are a must for complete beginners, as you will explore some linux and bash concepts which are basic to continue. The games are leveled by difficulty, in their web you can get all the information about how to play, only a terminal and SSH is required. This helps building your foundation in Linux OS. HackTheBox: Nº 1 platform in cybersecurity. Has a lot of resources to learn all this core fundamentals, and also red team / blue team security topics. It is focused on labs where you can test your skills hacking different boxes but if you really want to learn it is worth to invest time and money in the academy. I have to say the level here is high, specially if you try to hack machines on your own without using some guide or writeup. TryHackMe: More beginner friendly than hackthebox, it provides a lot of guided learning resources. PortSwigger Labs: Practical labs about specific topics, focused on web hacking. They are great to learn and understand different types of attacks, injections, and security misconfigurations. I would recommend digging into this once you have the theoretical basis about these concepts. I have to mention a few tools I am sure you\u0026rsquo;d end up using:\nNmap: This is probably the most famous tool in hacking, allowing you to gather information about ports and services running in a machine. Burpsuite: A proxy tool widely used in web application security testing. It basically allows you to intercept and modify web requests, which can be used to perform several types of attacks. Metasploit: The most used pentesting framework. Contains a large amount of scripts and exploits ready to run. Another crucial step here is to set up your virtual lab environment to test vulnerable applications. To achieve this goal, there are some Linux distributions like Kali, Parrot or BlackArch, but that\u0026rsquo;s a topic for another post.\nFinal thoughs To sum up, this would be my personal roadmap:\nLearn the fundamentals, specially Linux and networking. Install some Linux in a virtual machine, play with it, get comfortable with the terminal. You can start with bandit wargames in OverTheWire. Complete every level and make sure to understand everything as clear as possible. Move to guided boxes on HackTheBox. I recommend you joining their Discord, ask questions, community is great there! Take notes, repeat, learn, improve your skills. Maybe use your own lab environment, create your own vulnerable apps. Hacking is a mixing of curiosity, study and practice. Being passionate and motivated about it is really helpful and will definitely speed up the process. The path is long and really challenging, so keep it going!\n\u0026ldquo;Yes, I am a criminal. My crime is that of curiosity.\u0026rdquo; — The Mentor (Loyd Blankenship) at The Hacker Manifesto\n","permalink":"http://localhost:1313/posts/starting-point/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIf you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\u003c/p\u003e","title":"Starting Point"},{"content":"Introduction In this post series we are going to solve every level from bandit in OverTheWire This guide pretends to be a writeup containing the solutions of the level, designed for beginners.\nTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing WSL, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\nEvery section will contain the solution as well as some tips for people who is absolutely beginner.\nTips First of all, some tips:\nDo not use this as first resource to solve the levels. Try on your own, make mistakes and learn from them. Only check the solution as last resource or if you are completely new and you have absolutely no idea about what to do next. Take notes from your learning. Write up commands, tips and everything which can be useful in the future. Make sure to understand everything. Is a good idea to note the passwords for every level. If you want to continue letter, you can simply log in in the desired level. It is annoying to repeat everything! Follow the tips and information provided at OverTheWire website. Levels Here is my solution for every level:\nBandit0 Bandit1 Bandit2 Bandit3 Bandit4 Bandit5 Bandit6 Bandit7 ","permalink":"http://localhost:1313/posts/otw/bandit/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIn this post series we are going to solve every level from bandit in \u003ca href=\"https://overthewire.org/wargames/bandit/\"\u003e\u003cem\u003eOverTheWire\u003c/em\u003e\u003c/a\u003e\nThis guide pretends to be a writeup containing the solutions of the level, designed for beginners.\u003c/p\u003e\n\u003cp\u003eTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing \u003ca href=\"https://learn.microsoft.com/en-us/windows/wsl/install\"\u003eWSL\u003c/a\u003e, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\u003c/p\u003e","title":"Bandit"},{"content":"Level description The goal of this level is for you to log into the game using SSH. The host to which you need to connect is bandit.labs.overthewire.org, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\nTips for beginners Read a bit about what SSH is. Research about what a port is. Solution This is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go here.\nAt Linux, we can use ssh client to connect to the server. It should be installed by default on your system. If not, please first research about how to install. Once you have the SSH client installed, you can log in into the first level as follows:\nssh bandit0@bandit.labs.overthewire.org -p 2220 Syntax is simple: ssh \u0026lt;username\u0026gt;@\u0026lt;hostname\u0026gt; -p \u0026lt;port\u0026gt;. Usually SSH runs on port 22 by default, but they changed to port 2220 so we must specify it in the command.\nOnce you try to log in, you will see something like this: NB: If it\u0026rsquo;s the first time you try to log in, you will be asked about the authenticity of the host. Just type yes.\nType the password bandit0 and press enter. Now you are inside bandit server, ready to begin with bandit1!\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit0/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe goal of this level is for you to log into the game using SSH. The host to which you need to connect is \u003cstrong\u003ebandit.labs.overthewire.org\u003c/strong\u003e, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eRead a bit about what SSH is.\u003c/li\u003e\n\u003cli\u003eResearch about what a port is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go \u003ca href=\"https://en.wikipedia.org/wiki/Secure_Shell\"\u003ehere\u003c/a\u003e.\u003c/p\u003e","title":"Bandit0"},{"content":"Level description The password for the next level is stored in a file called readme located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\nTips for beginners Learn about home directory in Linux. Learn to use cat and ls commands. Solution First step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\nls This shows in terminal the files at the current directory. There you will see the readme file.\nNow we can to check the contents, so let\u0026rsquo;s use cat:\ncat readme To read a file, we use cat \u0026lt;filename\u0026gt;.\nNB: Not every file is human readable in Linux. We deep more about this in later levels.\nThe content of the readme file reveals the password for bandit2 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit1/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u003cstrong\u003ereadme\u003c/strong\u003e located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn about home directory in Linux.\u003c/li\u003e\n\u003cli\u003eLearn to use \u003ccode\u003ecat\u003c/code\u003e and \u003ccode\u003els\u003c/code\u003e commands.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eFirst step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\u003c/p\u003e","title":"Bandit1"},{"content":"Level description The password for the next level is stored in a file called - located in the home directory\nTips for beginners Try to understand why previous solution is not working as you expect. Solution You may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our cat command: The terminal is waiting for something else. This happens due to character - is used to pass arguments to our commands, and the linux shell is interpreting that. To prevent that, we could use:\ncat ./- NB: Dot . is used to refer current directory. The slash / is used at the end of directory name.\nWe get the password for bandit3 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit2/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called - located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eTry to understand why previous solution is not working as you expect.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eYou may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our \u003ccode\u003ecat\u003c/code\u003e command:\n\u003cimg alt=\"bandit2\" loading=\"lazy\" src=\"/images/otw/bandit/bandit2/0.png\"\u003e\u003c/p\u003e\n\u003cp\u003eThe terminal is \u003cem\u003ewaiting\u003c/em\u003e for something else. This happens due to character \u003ccode\u003e-\u003c/code\u003e is used to pass arguments to our commands, and the linux shell is interpreting that.\nTo prevent that, we could use:\u003c/p\u003e","title":"Bandit2"},{"content":"Level description The password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\nTips for beginners Think about how to escape the whitespaces. Solution After login in the machine as bandit3, we can see the filename \u0026ndash;spaces in this filename\u0026ndash;.\nNow we have 2 problems:\nSame as previous level, filename starts with --, so it will be interpreted as an argument. Address this problem using ./. Filename contains whitespaces. This is an issue, as bash interpretes whitespaces to separate commands. To solve the second problem, we must escape the whitespace character in some way. Here is the solution:\ncat ./--spaces\\ in\\ this\\ filename-- NB: Little trick, you can start writting filename and press Tab to autocomplete the name. The \\ is going to be inserted automatically.\nJust using the \\ we can escape the whitespace.\nNow we can continue with the bandit4 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit3/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eThink about how to \u003cem\u003eescape\u003c/em\u003e the whitespaces.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAfter login in the machine as bandit3, we can see the filename \u003cem\u003e\u0026ndash;spaces in this filename\u0026ndash;\u003c/em\u003e.\u003c/p\u003e\n\u003cp\u003eNow we have 2 problems:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eSame as previous level, filename starts with \u003ccode\u003e--\u003c/code\u003e, so it will be interpreted as an argument. Address this problem using \u003ccode\u003e./\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003eFilename contains \u003cstrong\u003ewhitespaces\u003c/strong\u003e. This is an issue, as bash interpretes whitespaces to separate commands.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eTo solve the second problem, we must escape the whitespace character in some way. Here is the solution:\u003c/p\u003e","title":"Bandit3"},{"content":"Level description The password for the next level is stored in a hidden file in the inhere directory.\nTips for beginners Learn how to navigate directories in Linux. First understand what a hidden file is. Solution Listing directory files inside bandit4\u0026rsquo;s home directory, show directory inhere.\nNB: How to distinguish files and directories in Linux? Use ls -l and see the difference.\nWe have 2 options now:\nMove to inhere directory and check contens again. Check contents directly. Moving to another directory can be done using cd \u0026lt;dirName\u0026gt;. If you prefer to check directory contents directly, use ls \u0026lt;dirName\u0026gt;.\nAfter checking inhere contents via ls, we see nothing. The reason is the file is a hidden file. A hidden file in Linux is everyfile whose name starts with dot .. Hidden files are not shown by default with ls command, so we must add a special flag -a to list all files: NB: Both flags -l and -a cna be combined into a single flag -al, which is shorter to type.\nAs you can see, filename is \u0026hellip;Hidding-From-You starting with three dots. Reading file contents should be easy at this point!\nNext level is bandit5.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit4/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a hidden file in the inhere directory.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to navigate directories in Linux.\u003c/li\u003e\n\u003cli\u003eFirst understand what a hidden file is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eListing directory files inside bandit4\u0026rsquo;s home directory, show directory \u003cstrong\u003einhere\u003c/strong\u003e.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e How to distinguish files and directories in Linux? Use \u003ccode\u003els -l\u003c/code\u003e and see the difference.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eWe have 2 options now:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eMove to inhere directory and check contens again.\u003c/li\u003e\n\u003cli\u003eCheck contents directly.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eMoving to another directory can be done using \u003ccode\u003ecd \u0026lt;dirName\u0026gt;\u003c/code\u003e. If you prefer to check directory contents directly, use \u003ccode\u003els \u0026lt;dirName\u0026gt;\u003c/code\u003e.\u003c/p\u003e","title":"Bandit4"},{"content":"Level description The password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\nTips for beginners What means human-readable file? Is there any way to check filetype at Linux?. Solution Checking inhere\u0026rsquo;s contents shows some files names \u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII here\nSo now, our goal is checking if file content of every file in the folder is ASCII or not. file \u0026lt;filename\u0026gt; does the job. Note the use of *. That called a wildcard regular expression, we\u0026rsquo;ll deep into it in later levels. An easy approach could be checking every file separately:\nfile ./--file00 file ./--file01 ... file ./--file09 But that\u0026rsquo;s not funny, imagine we have 100 files to check. All the files are in the same directory, so we can use cat ./* where ./* matches every filename in the directory, applying file to every file.\nNB: Another approach is to use find with certaing flags. Try to do in different ways, don\u0026rsquo;t stick to my solution.\nThe file \u0026ndash;file00 content is not readable, so get password from \u0026ndash;file07 and continue with bandit6.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit5/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eWhat means human-readable file?\u003c/li\u003e\n\u003cli\u003eIs there any way to check filetype at Linux?.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eChecking inhere\u0026rsquo;s contents shows some files names \u003cstrong\u003e\u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09\u003c/strong\u003e. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII \u003ca href=\"https://en.wikipedia.org/wiki/ASCII\"\u003ehere\u003c/a\u003e\u003c/p\u003e","title":"Bandit5"},{"content":"Level description The password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\nhuman-readable 1033 bytes in size not executable Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution The purpose of the level is showing us how to find for files. Listing contents of inhere, we can see some folders, containing a lot of files inside: NB: Adding -R to ls shows recursively the content of every folder inside the directory listed.\nSo this time, checking every file is not an option. We need to find a file with some properties, specific size, not excutable and human-readable. Let\u0026rsquo;s explain the command we\u0026rsquo;re using:\nfind inhere/ -size 1033c ! -executable First, we specify the directory, in this case inhere. The option -size 1033c returns files of 1033 bytes. Then, with -executable we would get executable files, but we want not executable files, that\u0026rsquo;s why we are adding ! before.\nNB: By default, the -size option takes as argument the number of blocks. For example, -size 2 means 2 blocks of 512 bytes, so its 1024. The c is used to specify exact bytes. Don\u0026rsquo;t ask me why it\u0026rsquo;s c and not b 😅.\nThe property of human-readability is not implemented in find. This is not an issue, previous command returns a single file and it is human readable (we could confirm using file): Extra tip: try to use the following:\nfind inhere/ -size 1033c ! -executable | file You get the same result! The pipe | is a great tool to execute 2+ commands in one line.\nGet your password and continue with bandit7.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit6/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ehuman-readable\u003c/li\u003e\n\u003cli\u003e1033 bytes in size\u003c/li\u003e\n\u003cli\u003enot executable\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThe purpose of the level is showing us how to find for files. Listing contents of \u003cstrong\u003einhere\u003c/strong\u003e, we can see some folders, containing a lot of files inside:\n\u003cimg alt=\"bandit6_0\" loading=\"lazy\" src=\"/images/otw/bandit/bandit6/0.png\"\u003e\u003c/p\u003e","title":"Bandit6"},{"content":"Level description The password for the next level is stored somewhere on the server and has all of the following properties:\nowned by user bandit7 owned by group bandit6 33 bytes in size Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution This is very straightforward to do after completing previous level. Now we need to identify a file owned by user bandit7 and group bandi6. Furthermore, the file is somewhere on the server, which means we have to find in the root directory /.\nfind / -user bandit7 -group bandit6 -size 33c 2\u0026gt;/dev/null NB: I added that strange 2\u0026gt;/dev/null to filter error output. The reason why it works like that is more technical, for now just save this a fast way to filter errors in terminal. We get some errors because looking for files in the whole server may return some unaccesible files, as we don\u0026rsquo;t have root user permissions. We will study Linux permissions in later levels.\nWe should get a single file, containing password for bandit8.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit7/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored somewhere on the server and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eowned by user bandit7\u003c/li\u003e\n\u003cli\u003eowned by group bandit6\u003c/li\u003e\n\u003cli\u003e33 bytes in size\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is very straightforward to do after completing previous level. Now we need to identify a file owned by user bandit7 and group bandi6. Furthermore, the file is \u003cstrong\u003esomewhere on the server\u003c/strong\u003e, which means we have to find in the root directory \u003ccode\u003e/\u003c/code\u003e.\u003c/p\u003e","title":"Bandit7"},{"content":"Level description The password for the next level is stored in the file data.txt next to the word millionth.\nTips for beginners Learn how to filter file contents. Solution At previous levels, we discovered how to find for files. Now it\u0026rsquo;s time to find for content inside a file. grep command is going to help with that task.\nNB: Of course I don\u0026rsquo;t want to spoil you the password!\nNotice how this can achieved in different ways.\nUsing grep \u0026lt;keyword\u0026gt; \u0026lt;filename\u0026gt;. Using the pipe | to execute grep over the result of cat command. Take you favorite path to solve the level, and continue with bandit9.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit8/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the file data.txt next to the word \u003cstrong\u003emillionth\u003c/strong\u003e.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to filter file contents.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAt previous levels, we discovered how to find for files. Now it\u0026rsquo;s time to find for content inside a file. \u003ccode\u003egrep\u003c/code\u003e command is going to help with that task.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"bandit8\" loading=\"lazy\" src=\"/images/otw/bandit/bandit8/0.png\"\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e Of course I don\u0026rsquo;t want to spoil you the password!\u003c/p\u003e","title":"Bandit8"},{"content":"Level description The password for the next level is stored in the file data.txt next to the word millionth.\nTips for beginners Learn how to filter file contents. Solution At previous levels, we discovered how to find for files. Now it\u0026rsquo;s time to find for content inside a file. grep command is going to help with that task.\nNB: Of course I don\u0026rsquo;t want to spoil you the password!\nNotice how this can achieved in different ways.\nUsing grep \u0026lt;keyword\u0026gt; \u0026lt;filename\u0026gt;. Using the pipe | to execute grep over the result of cat command. Take you favorite path to solve the level, and continue with bandit9.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit9/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the file data.txt next to the word \u003cstrong\u003emillionth\u003c/strong\u003e.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to filter file contents.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAt previous levels, we discovered how to find for files. Now it\u0026rsquo;s time to find for content inside a file. \u003ccode\u003egrep\u003c/code\u003e command is going to help with that task.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"bandit8\" loading=\"lazy\" src=\"/images/otw/bandit/bandit8/0.png\"\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e Of course I don\u0026rsquo;t want to spoil you the password!\u003c/p\u003e","title":"Bandit9"},{"content":"👨‍💻 whoami Hey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\nWhat is this❓​ This blog is basically my thoughts on several hacking topics. Here you’ll see:\nWriteups from CTF challenges, from platforms like HackTheBox or OverTheWire.\nWalkthroughs and notes on pentesting techniques I’m learning or testing.\nSome posts on cryptography — because math can be fun (sometimes).\nRandom topics that freaks like me may (just may) find interesting.\nThe idea is simple: share what I learn, document my journey, and maybe help others who are also diving into the exciting world of ethical hacking.\n📫 Contact Want to say hi, share ideas, or just geek out about hacking? Reach me here:\n📧 Email: mrb0b1073@proton.me 💻​ GitHub: mrb0b173 🟩​ HackTheBox: mrb0b1073 ","permalink":"http://localhost:1313/about/","summary":"\u003ch2 id=\"-whoami\"\u003e👨‍💻 whoami\u003c/h2\u003e\n\u003cp\u003eHey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\u003c/p\u003e\n\u003chr\u003e\n\u003ch2 id=\"what-is-this\"\u003eWhat is this❓​\u003c/h2\u003e\n\u003cp\u003eThis blog is basically my thoughts on several hacking topics. Here you’ll see:\u003c/p\u003e","title":"About"},{"content":"Hey! 👋 I\u0026rsquo;m mrb0b1073 and this is my first post.\nWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\nExcited to start this adventure!\n","permalink":"http://localhost:1313/posts/hello-world/","summary":"\u003cp\u003eHey! 👋 I\u0026rsquo;m \u003cstrong\u003emrb0b1073\u003c/strong\u003e and this is my first post.\u003c/p\u003e\n\u003cp\u003eWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\u003cbr\u003e\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\u003c/p\u003e\n\u003cp\u003eExcited to start this adventure!\u003c/p\u003e","title":"Hello World"},{"content":"Introduction If you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\nIn cybersecurity there are broadly two complementary roles: Blue Team and Red Team. Blue Teams focus on defense, monitoring, incident response, hardening systems and keeping services secure, while Red Teams simulate attackers to find weaknesses and prove what an adversary could do. Ethical hacking aligns closely with Red Team operations, but cybersecurity is highly transversal across IT. There are many specialities or areas, such as cloud security, appsec, pentesting, forensics, governance, risk management, malware analysis, etc. Every topic could deserve its own post, so let\u0026rsquo;s keep it simple and focus on ethical hacking.\nHacker philosophy Let\u0026rsquo;s start with the idea of what is exactly a hacker. A hacker is someone who explores systems to understand how they work, finds creative ways to make or fix things, and solves technical problems. Historically the word describes curiosity, craft, and a drive to improve systems — not criminality. It is important to make the distinction between hacker and cracker, also called cybercriminal. A hacker explores, builds, discloses responsibly and works to improve security. They work in authorized environments or labs. On the other hand, a cracker breaks into systems for theft, vandalism or other illicit gain.\nHere you can find the most popularized ideas often summarized as the hacker ethic:\nCuriosity first: Learn by exploring and tinkering. Freedom of information: All knowledge should be shared to help progress. This fits properly with the idea of open source. Mistrust of needless authority: Centralized control sometimes blocks innovation. It is always good to question anything, specially common assumptions. Meritocracy: Skills, craft and results matter more than titles. Craftsmanship \u0026amp; elegance: Technical beauty matters. Build clean, clever and efficient solutions. Responsability \u0026amp; ethics: Use your skills to build, fix, educate and defend, not to harm. Core fundamentals Assuming you want to init yourself in hacking, you should first build competence across three basic pillars.\nOperating Systems You should learn as much as possible about Linux and Windows. Specially Linux, all the tools you will be using are meant to be used in a Linux environment. Skill with shell is required, learn basic commands and how to interact with the OS using the terminal. Research about processes, file permissions, package management and logs. A large proportion of web servers around the world run on Linux, although Windows is also widely used. Windows knowledge is really valuable too, considering active directory is strongly used in corporate environments.\nNetworking You have to understand how computers communicate each other. Understand basic networking concepts, IP adresses, subnetting, proxies, find out how internet works. Study some protocols such as TCP/IP, HTTP, DNS or SSH. This could sound confusing for beginners, but this step is not optional! Study different client/server models and how services expose attack surfaces.\nProgramming \u0026amp; scripting Is this completely required? Maybe not for complete beginners. Does it help? Absolutely yes. Understanding how web apps or any type of application works makes things much easier. You can imagine different entry points to exploit if you understand how systems are designed. Also writing scripts in bash or python makes you more productive through automation.\nEthical Hacking foundations Once you feel confident with these 3 pillars, you can go to the next step. You can study about different topics and areas. For example, binary exploiting, web pentesting, mobile pentesting, wireless hacking, etc. You should start picking a focus, in this post we focus on web pentesting, as it is beginner friendly. Also web applications are the bread and butter in companies nowadays.\nKey concepts to study:\nCIA Triad: CIA refers to Confidentiality, Integrity and Availability. These three concepts are key in information security, and describe properties we want to ensure in our systems and information. Web Security basics, OWASP: Study the OWASP Top 10, which summarizes most frequent web security risks. Authentication and session control: Understand the concepts of Authentication and Authorization, research about how session is handled in web apps, cookies, JWT tokens, etc. Input validation \u0026amp; injection attacks: Learn about SQL Injection, Cross-Site Scripting (XSS), Code Injection, SSTI, and every injection type. Secure development lifecycle: Find out how to implement security controls in code. This can be more related to Blue Team, but as Red Teamer it is important to understand. Firewall evasion: What a firewall is and some techniques/methods to bypass. Some cryptography: Understand what a chiper and a hash are, how information is encrypted to prevent access from 3rd parties. Focusing on web, read about TLS protocol. There are many more topics you can research and learn, but this could be a nice starting point.\nTools and platforms to learn Now you have an idea of what to study, let\u0026rsquo;s see how to start in practical terms.\nSome platforms I personally recommend:\nOverTheWire: Here you can find some CTFs (Capture The Flag) which are fun to play and also really instructive. Bandit games are a must for complete beginners, as you will explore some linux and bash concepts which are basic to continue. The games are leveled by difficulty, in their web you can get all the information about how to play, only a terminal and SSH is required. This helps building your foundation in Linux OS. HackTheBox: Nº 1 platform in cybersecurity. Has a lot of resources to learn all this core fundamentals, and also red team / blue team security topics. It is focused on labs where you can test your skills hacking different boxes but if you really want to learn it is worth to invest time and money in the academy. I have to say the level here is high, specially if you try to hack machines on your own without using some guide or writeup. TryHackMe: More beginner friendly than hackthebox, it provides a lot of guided learning resources. PortSwigger Labs: Practical labs about specific topics, focused on web hacking. They are great to learn and understand different types of attacks, injections, and security misconfigurations. I would recommend digging into this once you have the theoretical basis about these concepts. I have to mention a few tools I am sure you\u0026rsquo;d end up using:\nNmap: This is probably the most famous tool in hacking, allowing you to gather information about ports and services running in a machine. Burpsuite: A proxy tool widely used in web application security testing. It basically allows you to intercept and modify web requests, which can be used to perform several types of attacks. Metasploit: The most used pentesting framework. Contains a large amount of scripts and exploits ready to run. Another crucial step here is to set up your virtual lab environment to test vulnerable applications. To achieve this goal, there are some Linux distributions like Kali, Parrot or BlackArch, but that\u0026rsquo;s a topic for another post.\nFinal thoughs To sum up, this would be my personal roadmap:\nLearn the fundamentals, specially Linux and networking. Install some Linux in a virtual machine, play with it, get comfortable with the terminal. You can start with bandit wargames in OverTheWire. Complete every level and make sure to understand everything as clear as possible. Move to guided boxes on HackTheBox. I recommend you joining their Discord, ask questions, community is great there! Take notes, repeat, learn, improve your skills. Maybe use your own lab environment, create your own vulnerable apps. Hacking is a mixing of curiosity, study and practice. Being passionate and motivated about it is really helpful and will definitely speed up the process. The path is long and really challenging, so keep it going!\n\u0026ldquo;Yes, I am a criminal. My crime is that of curiosity.\u0026rdquo; — The Mentor (Loyd Blankenship) at The Hacker Manifesto\n","permalink":"http://localhost:1313/posts/starting-point/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIf you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\u003c/p\u003e","title":"Starting Point"},{"content":"Introduction In this post series we are going to solve every level from bandit in OverTheWire This guide pretends to be a writeup containing the solutions of the level, designed for beginners.\nTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing WSL, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\nEvery section will contain the solution as well as some tips for people who is absolutely beginner.\nTips First of all, some tips:\nDo not use this as first resource to solve the levels. Try on your own, make mistakes and learn from them. Only check the solution as last resource or if you are completely new and you have absolutely no idea about what to do next. Take notes from your learning. Write up commands, tips and everything which can be useful in the future. Make sure to understand everything. Is a good idea to note the passwords for every level. If you want to continue letter, you can simply log in in the desired level. It is annoying to repeat everything! Follow the tips and information provided at OverTheWire website. Levels Here is my solution for every level:\nBandit0 Bandit1 Bandit2 Bandit3 Bandit4 Bandit5 Bandit6 Bandit7 ","permalink":"http://localhost:1313/posts/otw/bandit/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIn this post series we are going to solve every level from bandit in \u003ca href=\"https://overthewire.org/wargames/bandit/\"\u003e\u003cem\u003eOverTheWire\u003c/em\u003e\u003c/a\u003e\nThis guide pretends to be a writeup containing the solutions of the level, designed for beginners.\u003c/p\u003e\n\u003cp\u003eTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing \u003ca href=\"https://learn.microsoft.com/en-us/windows/wsl/install\"\u003eWSL\u003c/a\u003e, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\u003c/p\u003e","title":"Bandit"},{"content":"Level description The goal of this level is for you to log into the game using SSH. The host to which you need to connect is bandit.labs.overthewire.org, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\nTips for beginners Read a bit about what SSH is. Research about what a port is. Solution This is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go here.\nAt Linux, we can use ssh client to connect to the server. It should be installed by default on your system. If not, please first research about how to install. Once you have the SSH client installed, you can log in into the first level as follows:\nssh bandit0@bandit.labs.overthewire.org -p 2220 Syntax is simple: ssh \u0026lt;username\u0026gt;@\u0026lt;hostname\u0026gt; -p \u0026lt;port\u0026gt;. Usually SSH runs on port 22 by default, but they changed to port 2220 so we must specify it in the command.\nOnce you try to log in, you will see something like this: NB: If it\u0026rsquo;s the first time you try to log in, you will be asked about the authenticity of the host. Just type yes.\nType the password bandit0 and press enter. Now you are inside bandit server, ready to begin with bandit1!\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit0/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe goal of this level is for you to log into the game using SSH. The host to which you need to connect is \u003cstrong\u003ebandit.labs.overthewire.org\u003c/strong\u003e, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eRead a bit about what SSH is.\u003c/li\u003e\n\u003cli\u003eResearch about what a port is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go \u003ca href=\"https://en.wikipedia.org/wiki/Secure_Shell\"\u003ehere\u003c/a\u003e.\u003c/p\u003e","title":"Bandit0"},{"content":"Level description The password for the next level is stored in a file called readme located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\nTips for beginners Learn about home directory in Linux. Learn to use cat and ls commands. Solution First step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\nls This shows in terminal the files at the current directory. There you will see the readme file.\nNow we can to check the contents, so let\u0026rsquo;s use cat:\ncat readme To read a file, we use cat \u0026lt;filename\u0026gt;.\nNB: Not every file is human readable in Linux. We deep more about this in later levels.\nThe content of the readme file reveals the password for bandit2 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit1/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u003cstrong\u003ereadme\u003c/strong\u003e located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn about home directory in Linux.\u003c/li\u003e\n\u003cli\u003eLearn to use \u003ccode\u003ecat\u003c/code\u003e and \u003ccode\u003els\u003c/code\u003e commands.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eFirst step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\u003c/p\u003e","title":"Bandit1"},{"content":"Level description The password for the next level is stored in a file called - located in the home directory\nTips for beginners Try to understand why previous solution is not working as you expect. Solution You may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our cat command: The terminal is waiting for something else. This happens due to character - is used to pass arguments to our commands, and the linux shell is interpreting that. To prevent that, we could use:\ncat ./- NB: Dot . is used to refer current directory. The slash / is used at the end of directory name.\nWe get the password for bandit3 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit2/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called - located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eTry to understand why previous solution is not working as you expect.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eYou may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our \u003ccode\u003ecat\u003c/code\u003e command:\n\u003cimg alt=\"bandit2\" loading=\"lazy\" src=\"/images/otw/bandit/bandit2/0.png\"\u003e\u003c/p\u003e\n\u003cp\u003eThe terminal is \u003cem\u003ewaiting\u003c/em\u003e for something else. This happens due to character \u003ccode\u003e-\u003c/code\u003e is used to pass arguments to our commands, and the linux shell is interpreting that.\nTo prevent that, we could use:\u003c/p\u003e","title":"Bandit2"},{"content":"Level description The password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\nTips for beginners Think about how to escape the whitespaces. Solution After login in the machine as bandit3, we can see the filename \u0026ndash;spaces in this filename\u0026ndash;.\nNow we have 2 problems:\nSame as previous level, filename starts with --, so it will be interpreted as an argument. Address this problem using ./. Filename contains whitespaces. This is an issue, as bash interpretes whitespaces to separate commands. To solve the second problem, we must escape the whitespace character in some way. Here is the solution:\ncat ./--spaces\\ in\\ this\\ filename-- NB: Little trick, you can start writting filename and press Tab to autocomplete the name. The \\ is going to be inserted automatically.\nJust using the \\ we can escape the whitespace.\nNow we can continue with the bandit4 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit3/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eThink about how to \u003cem\u003eescape\u003c/em\u003e the whitespaces.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAfter login in the machine as bandit3, we can see the filename \u003cem\u003e\u0026ndash;spaces in this filename\u0026ndash;\u003c/em\u003e.\u003c/p\u003e\n\u003cp\u003eNow we have 2 problems:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eSame as previous level, filename starts with \u003ccode\u003e--\u003c/code\u003e, so it will be interpreted as an argument. Address this problem using \u003ccode\u003e./\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003eFilename contains \u003cstrong\u003ewhitespaces\u003c/strong\u003e. This is an issue, as bash interpretes whitespaces to separate commands.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eTo solve the second problem, we must escape the whitespace character in some way. Here is the solution:\u003c/p\u003e","title":"Bandit3"},{"content":"Level description The password for the next level is stored in a hidden file in the inhere directory.\nTips for beginners Learn how to navigate directories in Linux. First understand what a hidden file is. Solution Listing directory files inside bandit4\u0026rsquo;s home directory, show directory inhere.\nNB: How to distinguish files and directories in Linux? Use ls -l and see the difference.\nWe have 2 options now:\nMove to inhere directory and check contens again. Check contents directly. Moving to another directory can be done using cd \u0026lt;dirName\u0026gt;. If you prefer to check directory contents directly, use ls \u0026lt;dirName\u0026gt;.\nAfter checking inhere contents via ls, we see nothing. The reason is the file is a hidden file. A hidden file in Linux is everyfile whose name starts with dot .. Hidden files are not shown by default with ls command, so we must add a special flag -a to list all files: NB: Both flags -l and -a cna be combined into a single flag -al, which is shorter to type.\nAs you can see, filename is \u0026hellip;Hidding-From-You starting with three dots. Reading file contents should be easy at this point!\nNext level is bandit5.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit4/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a hidden file in the inhere directory.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to navigate directories in Linux.\u003c/li\u003e\n\u003cli\u003eFirst understand what a hidden file is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eListing directory files inside bandit4\u0026rsquo;s home directory, show directory \u003cstrong\u003einhere\u003c/strong\u003e.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e How to distinguish files and directories in Linux? Use \u003ccode\u003els -l\u003c/code\u003e and see the difference.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eWe have 2 options now:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eMove to inhere directory and check contens again.\u003c/li\u003e\n\u003cli\u003eCheck contents directly.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eMoving to another directory can be done using \u003ccode\u003ecd \u0026lt;dirName\u0026gt;\u003c/code\u003e. If you prefer to check directory contents directly, use \u003ccode\u003els \u0026lt;dirName\u0026gt;\u003c/code\u003e.\u003c/p\u003e","title":"Bandit4"},{"content":"Level description The password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\nTips for beginners What means human-readable file? Is there any way to check filetype at Linux?. Solution Checking inhere\u0026rsquo;s contents shows some files names \u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII here\nSo now, our goal is checking if file content of every file in the folder is ASCII or not. file \u0026lt;filename\u0026gt; does the job. Note the use of *. That called a wildcard regular expression, we\u0026rsquo;ll deep into it in later levels. An easy approach could be checking every file separately:\nfile ./--file00 file ./--file01 ... file ./--file09 But that\u0026rsquo;s not funny, imagine we have 100 files to check. All the files are in the same directory, so we can use cat ./* where ./* matches every filename in the directory, applying file to every file.\nNB: Another approach is to use find with certaing flags. Try to do in different ways, don\u0026rsquo;t stick to my solution.\nThe file \u0026ndash;file00 content is not readable, so get password from \u0026ndash;file07 and continue with bandit6.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit5/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eWhat means human-readable file?\u003c/li\u003e\n\u003cli\u003eIs there any way to check filetype at Linux?.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eChecking inhere\u0026rsquo;s contents shows some files names \u003cstrong\u003e\u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09\u003c/strong\u003e. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII \u003ca href=\"https://en.wikipedia.org/wiki/ASCII\"\u003ehere\u003c/a\u003e\u003c/p\u003e","title":"Bandit5"},{"content":"Level description The password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\nhuman-readable 1033 bytes in size not executable Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution The purpose of the level is showing us how to find for files. Listing contents of inhere, we can see some folders, containing a lot of files inside: NB: Adding -R to ls shows recursively the content of every folder inside the directory listed.\nSo this time, checking every file is not an option. We need to find a file with some properties, specific size, not excutable and human-readable. Let\u0026rsquo;s explain the command we\u0026rsquo;re using:\nfind inhere/ -size 1033c ! -executable First, we specify the directory, in this case inhere. The option -size 1033c returns files of 1033 bytes. Then, with -executable we would get executable files, but we want not executable files, that\u0026rsquo;s why we are adding ! before.\nNB: By default, the -size option takes as argument the number of blocks. For example, -size 2 means 2 blocks of 512 bytes, so its 1024. The c is used to specify exact bytes. Don\u0026rsquo;t ask me why it\u0026rsquo;s c and not b 😅.\nThe property of human-readability is not implemented in find. This is not an issue, previous command returns a single file and it is human readable (we could confirm using file): Extra tip: try to use the following:\nfind inhere/ -size 1033c ! -executable | file You get the same result! The pipe | is a great tool to execute 2+ commands in one line.\nGet your password and continue with bandit7.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit6/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ehuman-readable\u003c/li\u003e\n\u003cli\u003e1033 bytes in size\u003c/li\u003e\n\u003cli\u003enot executable\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThe purpose of the level is showing us how to find for files. Listing contents of \u003cstrong\u003einhere\u003c/strong\u003e, we can see some folders, containing a lot of files inside:\n\u003cimg alt=\"bandit6_0\" loading=\"lazy\" src=\"/images/otw/bandit/bandit6/0.png\"\u003e\u003c/p\u003e","title":"Bandit6"},{"content":"Level description The password for the next level is stored somewhere on the server and has all of the following properties:\nowned by user bandit7 owned by group bandit6 33 bytes in size Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution This is very straightforward to do after completing previous level. Now we need to identify a file owned by user bandit7 and group bandi6. Furthermore, the file is somewhere on the server, which means we have to find in the root directory /.\nfind / -user bandit7 -group bandit6 -size 33c 2\u0026gt;/dev/null NB: I added that strange 2\u0026gt;/dev/null to filter error output. The reason why it works like that is more technical, for now just save this a fast way to filter errors in terminal. We get some errors because looking for files in the whole server may return some unaccesible files, as we don\u0026rsquo;t have root user permissions. We will study Linux permissions in later levels.\nWe should get a single file, containing password for bandit8.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit7/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored somewhere on the server and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eowned by user bandit7\u003c/li\u003e\n\u003cli\u003eowned by group bandit6\u003c/li\u003e\n\u003cli\u003e33 bytes in size\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is very straightforward to do after completing previous level. Now we need to identify a file owned by user bandit7 and group bandi6. Furthermore, the file is \u003cstrong\u003esomewhere on the server\u003c/strong\u003e, which means we have to find in the root directory \u003ccode\u003e/\u003c/code\u003e.\u003c/p\u003e","title":"Bandit7"},{"content":"Level description The password for the next level is stored in the file data.txt next to the word millionth.\nTips for beginners Learn how to filter file contents. Solution At previous levels, we discovered how to find for files. Now it\u0026rsquo;s time to find for content inside a file. grep command is going to help with that task.\nNB: Of course I don\u0026rsquo;t want to spoil you the password!\nNotice how this can achieved in different ways.\nUsing grep \u0026lt;keyword\u0026gt; \u0026lt;filename\u0026gt;. Using the pipe | to execute grep over the result of cat command. Take you favorite path to solve the level, and continue with bandit9.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit8/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the file data.txt next to the word \u003cstrong\u003emillionth\u003c/strong\u003e.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to filter file contents.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAt previous levels, we discovered how to find for files. Now it\u0026rsquo;s time to find for content inside a file. \u003ccode\u003egrep\u003c/code\u003e command is going to help with that task.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"bandit8\" loading=\"lazy\" src=\"/images/otw/bandit/bandit8/0.png\"\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e Of course I don\u0026rsquo;t want to spoil you the password!\u003c/p\u003e","title":"Bandit8"},{"content":"Level description The password for the next level is stored in the file data.txt next to the word millionth.\nTips for beginners Learn how to filter file contents. Solution At previous levels, we discovered how to find for files. Now it\u0026rsquo;s time to find for content inside a file. grep command is going to help with that task.\nNB: Of course I don\u0026rsquo;t want to spoil you the password!\nNotice how this can achieved in different ways.\nUsing grep \u0026lt;keyword\u0026gt; \u0026lt;filename\u0026gt;. Using the pipe | to execute grep over the result of cat command. Take you favorite path to solve the level, and continue with bandit9.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit9/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the file data.txt next to the word \u003cstrong\u003emillionth\u003c/strong\u003e.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to filter file contents.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAt previous levels, we discovered how to find for files. Now it\u0026rsquo;s time to find for content inside a file. \u003ccode\u003egrep\u003c/code\u003e command is going to help with that task.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"bandit8\" loading=\"lazy\" src=\"/images/otw/bandit/bandit8/0.png\"\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e Of course I don\u0026rsquo;t want to spoil you the password!\u003c/p\u003e","title":"Bandit9"},{"content":"👨‍💻 whoami Hey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\nWhat is this❓​ This blog is basically my thoughts on several hacking topics. Here you’ll see:\nWriteups from CTF challenges, from platforms like HackTheBox or OverTheWire.\nWalkthroughs and notes on pentesting techniques I’m learning or testing.\nSome posts on cryptography — because math can be fun (sometimes).\nRandom topics that freaks like me may (just may) find interesting.\nThe idea is simple: share what I learn, document my journey, and maybe help others who are also diving into the exciting world of ethical hacking.\n📫 Contact Want to say hi, share ideas, or just geek out about hacking? Reach me here:\n📧 Email: mrb0b1073@proton.me 💻​ GitHub: mrb0b173 🟩​ HackTheBox: mrb0b1073 ","permalink":"http://localhost:1313/about/","summary":"\u003ch2 id=\"-whoami\"\u003e👨‍💻 whoami\u003c/h2\u003e\n\u003cp\u003eHey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\u003c/p\u003e\n\u003chr\u003e\n\u003ch2 id=\"what-is-this\"\u003eWhat is this❓​\u003c/h2\u003e\n\u003cp\u003eThis blog is basically my thoughts on several hacking topics. Here you’ll see:\u003c/p\u003e","title":"About"},{"content":"Hey! 👋 I\u0026rsquo;m mrb0b1073 and this is my first post.\nWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\nExcited to start this adventure!\n","permalink":"http://localhost:1313/posts/hello-world/","summary":"\u003cp\u003eHey! 👋 I\u0026rsquo;m \u003cstrong\u003emrb0b1073\u003c/strong\u003e and this is my first post.\u003c/p\u003e\n\u003cp\u003eWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\u003cbr\u003e\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\u003c/p\u003e\n\u003cp\u003eExcited to start this adventure!\u003c/p\u003e","title":"Hello World"},{"content":"Introduction If you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\nIn cybersecurity there are broadly two complementary roles: Blue Team and Red Team. Blue Teams focus on defense, monitoring, incident response, hardening systems and keeping services secure, while Red Teams simulate attackers to find weaknesses and prove what an adversary could do. Ethical hacking aligns closely with Red Team operations, but cybersecurity is highly transversal across IT. There are many specialities or areas, such as cloud security, appsec, pentesting, forensics, governance, risk management, malware analysis, etc. Every topic could deserve its own post, so let\u0026rsquo;s keep it simple and focus on ethical hacking.\nHacker philosophy Let\u0026rsquo;s start with the idea of what is exactly a hacker. A hacker is someone who explores systems to understand how they work, finds creative ways to make or fix things, and solves technical problems. Historically the word describes curiosity, craft, and a drive to improve systems — not criminality. It is important to make the distinction between hacker and cracker, also called cybercriminal. A hacker explores, builds, discloses responsibly and works to improve security. They work in authorized environments or labs. On the other hand, a cracker breaks into systems for theft, vandalism or other illicit gain.\nHere you can find the most popularized ideas often summarized as the hacker ethic:\nCuriosity first: Learn by exploring and tinkering. Freedom of information: All knowledge should be shared to help progress. This fits properly with the idea of open source. Mistrust of needless authority: Centralized control sometimes blocks innovation. It is always good to question anything, specially common assumptions. Meritocracy: Skills, craft and results matter more than titles. Craftsmanship \u0026amp; elegance: Technical beauty matters. Build clean, clever and efficient solutions. Responsability \u0026amp; ethics: Use your skills to build, fix, educate and defend, not to harm. Core fundamentals Assuming you want to init yourself in hacking, you should first build competence across three basic pillars.\nOperating Systems You should learn as much as possible about Linux and Windows. Specially Linux, all the tools you will be using are meant to be used in a Linux environment. Skill with shell is required, learn basic commands and how to interact with the OS using the terminal. Research about processes, file permissions, package management and logs. A large proportion of web servers around the world run on Linux, although Windows is also widely used. Windows knowledge is really valuable too, considering active directory is strongly used in corporate environments.\nNetworking You have to understand how computers communicate each other. Understand basic networking concepts, IP adresses, subnetting, proxies, find out how internet works. Study some protocols such as TCP/IP, HTTP, DNS or SSH. This could sound confusing for beginners, but this step is not optional! Study different client/server models and how services expose attack surfaces.\nProgramming \u0026amp; scripting Is this completely required? Maybe not for complete beginners. Does it help? Absolutely yes. Understanding how web apps or any type of application works makes things much easier. You can imagine different entry points to exploit if you understand how systems are designed. Also writing scripts in bash or python makes you more productive through automation.\nEthical Hacking foundations Once you feel confident with these 3 pillars, you can go to the next step. You can study about different topics and areas. For example, binary exploiting, web pentesting, mobile pentesting, wireless hacking, etc. You should start picking a focus, in this post we focus on web pentesting, as it is beginner friendly. Also web applications are the bread and butter in companies nowadays.\nKey concepts to study:\nCIA Triad: CIA refers to Confidentiality, Integrity and Availability. These three concepts are key in information security, and describe properties we want to ensure in our systems and information. Web Security basics, OWASP: Study the OWASP Top 10, which summarizes most frequent web security risks. Authentication and session control: Understand the concepts of Authentication and Authorization, research about how session is handled in web apps, cookies, JWT tokens, etc. Input validation \u0026amp; injection attacks: Learn about SQL Injection, Cross-Site Scripting (XSS), Code Injection, SSTI, and every injection type. Secure development lifecycle: Find out how to implement security controls in code. This can be more related to Blue Team, but as Red Teamer it is important to understand. Firewall evasion: What a firewall is and some techniques/methods to bypass. Some cryptography: Understand what a chiper and a hash are, how information is encrypted to prevent access from 3rd parties. Focusing on web, read about TLS protocol. There are many more topics you can research and learn, but this could be a nice starting point.\nTools and platforms to learn Now you have an idea of what to study, let\u0026rsquo;s see how to start in practical terms.\nSome platforms I personally recommend:\nOverTheWire: Here you can find some CTFs (Capture The Flag) which are fun to play and also really instructive. Bandit games are a must for complete beginners, as you will explore some linux and bash concepts which are basic to continue. The games are leveled by difficulty, in their web you can get all the information about how to play, only a terminal and SSH is required. This helps building your foundation in Linux OS. HackTheBox: Nº 1 platform in cybersecurity. Has a lot of resources to learn all this core fundamentals, and also red team / blue team security topics. It is focused on labs where you can test your skills hacking different boxes but if you really want to learn it is worth to invest time and money in the academy. I have to say the level here is high, specially if you try to hack machines on your own without using some guide or writeup. TryHackMe: More beginner friendly than hackthebox, it provides a lot of guided learning resources. PortSwigger Labs: Practical labs about specific topics, focused on web hacking. They are great to learn and understand different types of attacks, injections, and security misconfigurations. I would recommend digging into this once you have the theoretical basis about these concepts. I have to mention a few tools I am sure you\u0026rsquo;d end up using:\nNmap: This is probably the most famous tool in hacking, allowing you to gather information about ports and services running in a machine. Burpsuite: A proxy tool widely used in web application security testing. It basically allows you to intercept and modify web requests, which can be used to perform several types of attacks. Metasploit: The most used pentesting framework. Contains a large amount of scripts and exploits ready to run. Another crucial step here is to set up your virtual lab environment to test vulnerable applications. To achieve this goal, there are some Linux distributions like Kali, Parrot or BlackArch, but that\u0026rsquo;s a topic for another post.\nFinal thoughs To sum up, this would be my personal roadmap:\nLearn the fundamentals, specially Linux and networking. Install some Linux in a virtual machine, play with it, get comfortable with the terminal. You can start with bandit wargames in OverTheWire. Complete every level and make sure to understand everything as clear as possible. Move to guided boxes on HackTheBox. I recommend you joining their Discord, ask questions, community is great there! Take notes, repeat, learn, improve your skills. Maybe use your own lab environment, create your own vulnerable apps. Hacking is a mixing of curiosity, study and practice. Being passionate and motivated about it is really helpful and will definitely speed up the process. The path is long and really challenging, so keep it going!\n\u0026ldquo;Yes, I am a criminal. My crime is that of curiosity.\u0026rdquo; — The Mentor (Loyd Blankenship) at The Hacker Manifesto\n","permalink":"http://localhost:1313/posts/starting-point/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIf you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\u003c/p\u003e","title":"Starting Point"},{"content":"Introduction In this post series we are going to solve every level from bandit in OverTheWire This guide pretends to be a writeup containing the solutions of the level, designed for beginners.\nTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing WSL, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\nEvery section will contain the solution as well as some tips for people who is absolutely beginner.\nTips First of all, some tips:\nDo not use this as first resource to solve the levels. Try on your own, make mistakes and learn from them. Only check the solution as last resource or if you are completely new and you have absolutely no idea about what to do next. Take notes from your learning. Write up commands, tips and everything which can be useful in the future. Make sure to understand everything. Is a good idea to note the passwords for every level. If you want to continue letter, you can simply log in in the desired level. It is annoying to repeat everything! Follow the tips and information provided at OverTheWire website. Levels Here is my solution for every level:\nBandit0 Bandit1 Bandit2 Bandit3 Bandit4 Bandit5 Bandit6 Bandit7 ","permalink":"http://localhost:1313/posts/otw/bandit/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIn this post series we are going to solve every level from bandit in \u003ca href=\"https://overthewire.org/wargames/bandit/\"\u003e\u003cem\u003eOverTheWire\u003c/em\u003e\u003c/a\u003e\nThis guide pretends to be a writeup containing the solutions of the level, designed for beginners.\u003c/p\u003e\n\u003cp\u003eTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing \u003ca href=\"https://learn.microsoft.com/en-us/windows/wsl/install\"\u003eWSL\u003c/a\u003e, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\u003c/p\u003e","title":"Bandit"},{"content":"Level description The goal of this level is for you to log into the game using SSH. The host to which you need to connect is bandit.labs.overthewire.org, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\nTips for beginners Read a bit about what SSH is. Research about what a port is. Solution This is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go here.\nAt Linux, we can use ssh client to connect to the server. It should be installed by default on your system. If not, please first research about how to install. Once you have the SSH client installed, you can log in into the first level as follows:\nssh bandit0@bandit.labs.overthewire.org -p 2220 Syntax is simple: ssh \u0026lt;username\u0026gt;@\u0026lt;hostname\u0026gt; -p \u0026lt;port\u0026gt;. Usually SSH runs on port 22 by default, but they changed to port 2220 so we must specify it in the command.\nOnce you try to log in, you will see something like this: NB: If it\u0026rsquo;s the first time you try to log in, you will be asked about the authenticity of the host. Just type yes.\nType the password bandit0 and press enter. Now you are inside bandit server, ready to begin with bandit1!\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit0/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe goal of this level is for you to log into the game using SSH. The host to which you need to connect is \u003cstrong\u003ebandit.labs.overthewire.org\u003c/strong\u003e, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eRead a bit about what SSH is.\u003c/li\u003e\n\u003cli\u003eResearch about what a port is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go \u003ca href=\"https://en.wikipedia.org/wiki/Secure_Shell\"\u003ehere\u003c/a\u003e.\u003c/p\u003e","title":"Bandit0"},{"content":"Level description The password for the next level is stored in a file called readme located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\nTips for beginners Learn about home directory in Linux. Learn to use cat and ls commands. Solution First step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\nls This shows in terminal the files at the current directory. There you will see the readme file.\nNow we can to check the contents, so let\u0026rsquo;s use cat:\ncat readme To read a file, we use cat \u0026lt;filename\u0026gt;.\nNB: Not every file is human readable in Linux. We deep more about this in later levels.\nThe content of the readme file reveals the password for bandit2 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit1/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u003cstrong\u003ereadme\u003c/strong\u003e located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn about home directory in Linux.\u003c/li\u003e\n\u003cli\u003eLearn to use \u003ccode\u003ecat\u003c/code\u003e and \u003ccode\u003els\u003c/code\u003e commands.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eFirst step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\u003c/p\u003e","title":"Bandit1"},{"content":"Level description The password for the next level is stored in a file called - located in the home directory\nTips for beginners Try to understand why previous solution is not working as you expect. Solution You may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our cat command: The terminal is waiting for something else. This happens due to character - is used to pass arguments to our commands, and the linux shell is interpreting that. To prevent that, we could use:\ncat ./- NB: Dot . is used to refer current directory. The slash / is used at the end of directory name.\nWe get the password for bandit3 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit2/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called - located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eTry to understand why previous solution is not working as you expect.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eYou may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our \u003ccode\u003ecat\u003c/code\u003e command:\n\u003cimg alt=\"bandit2\" loading=\"lazy\" src=\"/images/otw/bandit/bandit2/0.png\"\u003e\u003c/p\u003e\n\u003cp\u003eThe terminal is \u003cem\u003ewaiting\u003c/em\u003e for something else. This happens due to character \u003ccode\u003e-\u003c/code\u003e is used to pass arguments to our commands, and the linux shell is interpreting that.\nTo prevent that, we could use:\u003c/p\u003e","title":"Bandit2"},{"content":"Level description The password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\nTips for beginners Think about how to escape the whitespaces. Solution After login in the machine as bandit3, we can see the filename \u0026ndash;spaces in this filename\u0026ndash;.\nNow we have 2 problems:\nSame as previous level, filename starts with --, so it will be interpreted as an argument. Address this problem using ./. Filename contains whitespaces. This is an issue, as bash interpretes whitespaces to separate commands. To solve the second problem, we must escape the whitespace character in some way. Here is the solution:\ncat ./--spaces\\ in\\ this\\ filename-- NB: Little trick, you can start writting filename and press Tab to autocomplete the name. The \\ is going to be inserted automatically.\nJust using the \\ we can escape the whitespace.\nNow we can continue with the bandit4 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit3/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eThink about how to \u003cem\u003eescape\u003c/em\u003e the whitespaces.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAfter login in the machine as bandit3, we can see the filename \u003cem\u003e\u0026ndash;spaces in this filename\u0026ndash;\u003c/em\u003e.\u003c/p\u003e\n\u003cp\u003eNow we have 2 problems:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eSame as previous level, filename starts with \u003ccode\u003e--\u003c/code\u003e, so it will be interpreted as an argument. Address this problem using \u003ccode\u003e./\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003eFilename contains \u003cstrong\u003ewhitespaces\u003c/strong\u003e. This is an issue, as bash interpretes whitespaces to separate commands.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eTo solve the second problem, we must escape the whitespace character in some way. Here is the solution:\u003c/p\u003e","title":"Bandit3"},{"content":"Level description The password for the next level is stored in a hidden file in the inhere directory.\nTips for beginners Learn how to navigate directories in Linux. First understand what a hidden file is. Solution Listing directory files inside bandit4\u0026rsquo;s home directory, show directory inhere.\nNB: How to distinguish files and directories in Linux? Use ls -l and see the difference.\nWe have 2 options now:\nMove to inhere directory and check contens again. Check contents directly. Moving to another directory can be done using cd \u0026lt;dirName\u0026gt;. If you prefer to check directory contents directly, use ls \u0026lt;dirName\u0026gt;.\nAfter checking inhere contents via ls, we see nothing. The reason is the file is a hidden file. A hidden file in Linux is everyfile whose name starts with dot .. Hidden files are not shown by default with ls command, so we must add a special flag -a to list all files: NB: Both flags -l and -a cna be combined into a single flag -al, which is shorter to type.\nAs you can see, filename is \u0026hellip;Hidding-From-You starting with three dots. Reading file contents should be easy at this point!\nNext level is bandit5.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit4/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a hidden file in the inhere directory.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to navigate directories in Linux.\u003c/li\u003e\n\u003cli\u003eFirst understand what a hidden file is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eListing directory files inside bandit4\u0026rsquo;s home directory, show directory \u003cstrong\u003einhere\u003c/strong\u003e.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e How to distinguish files and directories in Linux? Use \u003ccode\u003els -l\u003c/code\u003e and see the difference.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eWe have 2 options now:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eMove to inhere directory and check contens again.\u003c/li\u003e\n\u003cli\u003eCheck contents directly.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eMoving to another directory can be done using \u003ccode\u003ecd \u0026lt;dirName\u0026gt;\u003c/code\u003e. If you prefer to check directory contents directly, use \u003ccode\u003els \u0026lt;dirName\u0026gt;\u003c/code\u003e.\u003c/p\u003e","title":"Bandit4"},{"content":"Level description The password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\nTips for beginners What means human-readable file? Is there any way to check filetype at Linux?. Solution Checking inhere\u0026rsquo;s contents shows some files names \u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII here\nSo now, our goal is checking if file content of every file in the folder is ASCII or not. file \u0026lt;filename\u0026gt; does the job. Note the use of *. That called a wildcard regular expression, we\u0026rsquo;ll deep into it in later levels. An easy approach could be checking every file separately:\nfile ./--file00 file ./--file01 ... file ./--file09 But that\u0026rsquo;s not funny, imagine we have 100 files to check. All the files are in the same directory, so we can use cat ./* where ./* matches every filename in the directory, applying file to every file.\nNB: Another approach is to use find with certaing flags. Try to do in different ways, don\u0026rsquo;t stick to my solution.\nThe file \u0026ndash;file00 content is not readable, so get password from \u0026ndash;file07 and continue with bandit6.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit5/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eWhat means human-readable file?\u003c/li\u003e\n\u003cli\u003eIs there any way to check filetype at Linux?.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eChecking inhere\u0026rsquo;s contents shows some files names \u003cstrong\u003e\u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09\u003c/strong\u003e. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII \u003ca href=\"https://en.wikipedia.org/wiki/ASCII\"\u003ehere\u003c/a\u003e\u003c/p\u003e","title":"Bandit5"},{"content":"Level description The password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\nhuman-readable 1033 bytes in size not executable Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution The purpose of the level is showing us how to find for files. Listing contents of inhere, we can see some folders, containing a lot of files inside: NB: Adding -R to ls shows recursively the content of every folder inside the directory listed.\nSo this time, checking every file is not an option. We need to find a file with some properties, specific size, not excutable and human-readable. Let\u0026rsquo;s explain the command we\u0026rsquo;re using:\nfind inhere/ -size 1033c ! -executable First, we specify the directory, in this case inhere. The option -size 1033c returns files of 1033 bytes. Then, with -executable we would get executable files, but we want not executable files, that\u0026rsquo;s why we are adding ! before.\nNB: By default, the -size option takes as argument the number of blocks. For example, -size 2 means 2 blocks of 512 bytes, so its 1024. The c is used to specify exact bytes. Don\u0026rsquo;t ask me why it\u0026rsquo;s c and not b 😅.\nThe property of human-readability is not implemented in find. This is not an issue, previous command returns a single file and it is human readable (we could confirm using file): Extra tip: try to use the following:\nfind inhere/ -size 1033c ! -executable | file You get the same result! The pipe | is a great tool to execute 2+ commands in one line.\nGet your password and continue with bandit7.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit6/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ehuman-readable\u003c/li\u003e\n\u003cli\u003e1033 bytes in size\u003c/li\u003e\n\u003cli\u003enot executable\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThe purpose of the level is showing us how to find for files. Listing contents of \u003cstrong\u003einhere\u003c/strong\u003e, we can see some folders, containing a lot of files inside:\n\u003cimg alt=\"bandit6_0\" loading=\"lazy\" src=\"/images/otw/bandit/bandit6/0.png\"\u003e\u003c/p\u003e","title":"Bandit6"},{"content":"Level description The password for the next level is stored somewhere on the server and has all of the following properties:\nowned by user bandit7 owned by group bandit6 33 bytes in size Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution This is very straightforward to do after completing previous level. Now we need to identify a file owned by user bandit7 and group bandi6. Furthermore, the file is somewhere on the server, which means we have to find in the root directory /.\nfind / -user bandit7 -group bandit6 -size 33c 2\u0026gt;/dev/null NB: I added that strange 2\u0026gt;/dev/null to filter error output. The reason why it works like that is more technical, for now just save this a fast way to filter errors in terminal. We get some errors because looking for files in the whole server may return some unaccesible files, as we don\u0026rsquo;t have root user permissions. We will study Linux permissions in later levels.\nWe should get a single file, containing password for bandit8.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit7/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored somewhere on the server and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eowned by user bandit7\u003c/li\u003e\n\u003cli\u003eowned by group bandit6\u003c/li\u003e\n\u003cli\u003e33 bytes in size\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is very straightforward to do after completing previous level. Now we need to identify a file owned by user bandit7 and group bandi6. Furthermore, the file is \u003cstrong\u003esomewhere on the server\u003c/strong\u003e, which means we have to find in the root directory \u003ccode\u003e/\u003c/code\u003e.\u003c/p\u003e","title":"Bandit7"},{"content":"Level description The password for the next level is stored in the file data.txt next to the word millionth.\nTips for beginners Learn how to filter file contents. Solution At previous levels, we discovered how to find for files. Now it\u0026rsquo;s time to find for content inside a file. grep command is going to help with that task.\nNB: Of course I don\u0026rsquo;t want to spoil you the password!\nNotice how this can achieved in different ways.\nUsing grep \u0026lt;keyword\u0026gt; \u0026lt;filename\u0026gt;. Using the pipe | to execute grep over the result of cat command. Take you favorite path to solve the level, and continue with bandit9.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit8/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the file data.txt next to the word \u003cstrong\u003emillionth\u003c/strong\u003e.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to filter file contents.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAt previous levels, we discovered how to find for files. Now it\u0026rsquo;s time to find for content inside a file. \u003ccode\u003egrep\u003c/code\u003e command is going to help with that task.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"bandit8\" loading=\"lazy\" src=\"/images/otw/bandit/bandit8/0.png\"\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e Of course I don\u0026rsquo;t want to spoil you the password!\u003c/p\u003e","title":"Bandit8"},{"content":"Level description The password for the next level is stored in the file data.txt and is the only line of text that occurs only once\nTips for beginners Learn how to filter file contents. Solution At previous levels, we discovered how to find for files. Now it\u0026rsquo;s time to find for content inside a file. grep command is going to help with that task.\nNB: Of course I don\u0026rsquo;t want to spoil you the password!\nNotice how this can achieved in different ways.\nUsing grep \u0026lt;keyword\u0026gt; \u0026lt;filename\u0026gt;. Using the pipe | to execute grep over the result of cat command. Take you favorite path to solve the level, and continue with bandit9.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit9/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the file \u003cstrong\u003edata.txt\u003c/strong\u003e and is the only line of text that occurs only once\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to filter file contents.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAt previous levels, we discovered how to find for files. Now it\u0026rsquo;s time to find for content inside a file. \u003ccode\u003egrep\u003c/code\u003e command is going to help with that task.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"bandit8\" loading=\"lazy\" src=\"/images/otw/bandit/bandit8/0.png\"\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e Of course I don\u0026rsquo;t want to spoil you the password!\u003c/p\u003e","title":"Bandit9"},{"content":"👨‍💻 whoami Hey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\nWhat is this❓​ This blog is basically my thoughts on several hacking topics. Here you’ll see:\nWriteups from CTF challenges, from platforms like HackTheBox or OverTheWire.\nWalkthroughs and notes on pentesting techniques I’m learning or testing.\nSome posts on cryptography — because math can be fun (sometimes).\nRandom topics that freaks like me may (just may) find interesting.\nThe idea is simple: share what I learn, document my journey, and maybe help others who are also diving into the exciting world of ethical hacking.\n📫 Contact Want to say hi, share ideas, or just geek out about hacking? Reach me here:\n📧 Email: mrb0b1073@proton.me 💻​ GitHub: mrb0b173 🟩​ HackTheBox: mrb0b1073 ","permalink":"http://localhost:1313/about/","summary":"\u003ch2 id=\"-whoami\"\u003e👨‍💻 whoami\u003c/h2\u003e\n\u003cp\u003eHey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\u003c/p\u003e\n\u003chr\u003e\n\u003ch2 id=\"what-is-this\"\u003eWhat is this❓​\u003c/h2\u003e\n\u003cp\u003eThis blog is basically my thoughts on several hacking topics. Here you’ll see:\u003c/p\u003e","title":"About"},{"content":"Hey! 👋 I\u0026rsquo;m mrb0b1073 and this is my first post.\nWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\nExcited to start this adventure!\n","permalink":"http://localhost:1313/posts/hello-world/","summary":"\u003cp\u003eHey! 👋 I\u0026rsquo;m \u003cstrong\u003emrb0b1073\u003c/strong\u003e and this is my first post.\u003c/p\u003e\n\u003cp\u003eWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\u003cbr\u003e\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\u003c/p\u003e\n\u003cp\u003eExcited to start this adventure!\u003c/p\u003e","title":"Hello World"},{"content":"Introduction If you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\nIn cybersecurity there are broadly two complementary roles: Blue Team and Red Team. Blue Teams focus on defense, monitoring, incident response, hardening systems and keeping services secure, while Red Teams simulate attackers to find weaknesses and prove what an adversary could do. Ethical hacking aligns closely with Red Team operations, but cybersecurity is highly transversal across IT. There are many specialities or areas, such as cloud security, appsec, pentesting, forensics, governance, risk management, malware analysis, etc. Every topic could deserve its own post, so let\u0026rsquo;s keep it simple and focus on ethical hacking.\nHacker philosophy Let\u0026rsquo;s start with the idea of what is exactly a hacker. A hacker is someone who explores systems to understand how they work, finds creative ways to make or fix things, and solves technical problems. Historically the word describes curiosity, craft, and a drive to improve systems — not criminality. It is important to make the distinction between hacker and cracker, also called cybercriminal. A hacker explores, builds, discloses responsibly and works to improve security. They work in authorized environments or labs. On the other hand, a cracker breaks into systems for theft, vandalism or other illicit gain.\nHere you can find the most popularized ideas often summarized as the hacker ethic:\nCuriosity first: Learn by exploring and tinkering. Freedom of information: All knowledge should be shared to help progress. This fits properly with the idea of open source. Mistrust of needless authority: Centralized control sometimes blocks innovation. It is always good to question anything, specially common assumptions. Meritocracy: Skills, craft and results matter more than titles. Craftsmanship \u0026amp; elegance: Technical beauty matters. Build clean, clever and efficient solutions. Responsability \u0026amp; ethics: Use your skills to build, fix, educate and defend, not to harm. Core fundamentals Assuming you want to init yourself in hacking, you should first build competence across three basic pillars.\nOperating Systems You should learn as much as possible about Linux and Windows. Specially Linux, all the tools you will be using are meant to be used in a Linux environment. Skill with shell is required, learn basic commands and how to interact with the OS using the terminal. Research about processes, file permissions, package management and logs. A large proportion of web servers around the world run on Linux, although Windows is also widely used. Windows knowledge is really valuable too, considering active directory is strongly used in corporate environments.\nNetworking You have to understand how computers communicate each other. Understand basic networking concepts, IP adresses, subnetting, proxies, find out how internet works. Study some protocols such as TCP/IP, HTTP, DNS or SSH. This could sound confusing for beginners, but this step is not optional! Study different client/server models and how services expose attack surfaces.\nProgramming \u0026amp; scripting Is this completely required? Maybe not for complete beginners. Does it help? Absolutely yes. Understanding how web apps or any type of application works makes things much easier. You can imagine different entry points to exploit if you understand how systems are designed. Also writing scripts in bash or python makes you more productive through automation.\nEthical Hacking foundations Once you feel confident with these 3 pillars, you can go to the next step. You can study about different topics and areas. For example, binary exploiting, web pentesting, mobile pentesting, wireless hacking, etc. You should start picking a focus, in this post we focus on web pentesting, as it is beginner friendly. Also web applications are the bread and butter in companies nowadays.\nKey concepts to study:\nCIA Triad: CIA refers to Confidentiality, Integrity and Availability. These three concepts are key in information security, and describe properties we want to ensure in our systems and information. Web Security basics, OWASP: Study the OWASP Top 10, which summarizes most frequent web security risks. Authentication and session control: Understand the concepts of Authentication and Authorization, research about how session is handled in web apps, cookies, JWT tokens, etc. Input validation \u0026amp; injection attacks: Learn about SQL Injection, Cross-Site Scripting (XSS), Code Injection, SSTI, and every injection type. Secure development lifecycle: Find out how to implement security controls in code. This can be more related to Blue Team, but as Red Teamer it is important to understand. Firewall evasion: What a firewall is and some techniques/methods to bypass. Some cryptography: Understand what a chiper and a hash are, how information is encrypted to prevent access from 3rd parties. Focusing on web, read about TLS protocol. There are many more topics you can research and learn, but this could be a nice starting point.\nTools and platforms to learn Now you have an idea of what to study, let\u0026rsquo;s see how to start in practical terms.\nSome platforms I personally recommend:\nOverTheWire: Here you can find some CTFs (Capture The Flag) which are fun to play and also really instructive. Bandit games are a must for complete beginners, as you will explore some linux and bash concepts which are basic to continue. The games are leveled by difficulty, in their web you can get all the information about how to play, only a terminal and SSH is required. This helps building your foundation in Linux OS. HackTheBox: Nº 1 platform in cybersecurity. Has a lot of resources to learn all this core fundamentals, and also red team / blue team security topics. It is focused on labs where you can test your skills hacking different boxes but if you really want to learn it is worth to invest time and money in the academy. I have to say the level here is high, specially if you try to hack machines on your own without using some guide or writeup. TryHackMe: More beginner friendly than hackthebox, it provides a lot of guided learning resources. PortSwigger Labs: Practical labs about specific topics, focused on web hacking. They are great to learn and understand different types of attacks, injections, and security misconfigurations. I would recommend digging into this once you have the theoretical basis about these concepts. I have to mention a few tools I am sure you\u0026rsquo;d end up using:\nNmap: This is probably the most famous tool in hacking, allowing you to gather information about ports and services running in a machine. Burpsuite: A proxy tool widely used in web application security testing. It basically allows you to intercept and modify web requests, which can be used to perform several types of attacks. Metasploit: The most used pentesting framework. Contains a large amount of scripts and exploits ready to run. Another crucial step here is to set up your virtual lab environment to test vulnerable applications. To achieve this goal, there are some Linux distributions like Kali, Parrot or BlackArch, but that\u0026rsquo;s a topic for another post.\nFinal thoughs To sum up, this would be my personal roadmap:\nLearn the fundamentals, specially Linux and networking. Install some Linux in a virtual machine, play with it, get comfortable with the terminal. You can start with bandit wargames in OverTheWire. Complete every level and make sure to understand everything as clear as possible. Move to guided boxes on HackTheBox. I recommend you joining their Discord, ask questions, community is great there! Take notes, repeat, learn, improve your skills. Maybe use your own lab environment, create your own vulnerable apps. Hacking is a mixing of curiosity, study and practice. Being passionate and motivated about it is really helpful and will definitely speed up the process. The path is long and really challenging, so keep it going!\n\u0026ldquo;Yes, I am a criminal. My crime is that of curiosity.\u0026rdquo; — The Mentor (Loyd Blankenship) at The Hacker Manifesto\n","permalink":"http://localhost:1313/posts/starting-point/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIf you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\u003c/p\u003e","title":"Starting Point"},{"content":"Introduction In this post series we are going to solve every level from bandit in OverTheWire This guide pretends to be a writeup containing the solutions of the level, designed for beginners.\nTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing WSL, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\nEvery section will contain the solution as well as some tips for people who is absolutely beginner.\nTips First of all, some tips:\nDo not use this as first resource to solve the levels. Try on your own, make mistakes and learn from them. Only check the solution as last resource or if you are completely new and you have absolutely no idea about what to do next. Take notes from your learning. Write up commands, tips and everything which can be useful in the future. Make sure to understand everything. Is a good idea to note the passwords for every level. If you want to continue letter, you can simply log in in the desired level. It is annoying to repeat everything! Follow the tips and information provided at OverTheWire website. Levels Here is my solution for every level:\nBandit0 Bandit1 Bandit2 Bandit3 Bandit4 Bandit5 Bandit6 Bandit7 ","permalink":"http://localhost:1313/posts/otw/bandit/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIn this post series we are going to solve every level from bandit in \u003ca href=\"https://overthewire.org/wargames/bandit/\"\u003e\u003cem\u003eOverTheWire\u003c/em\u003e\u003c/a\u003e\nThis guide pretends to be a writeup containing the solutions of the level, designed for beginners.\u003c/p\u003e\n\u003cp\u003eTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing \u003ca href=\"https://learn.microsoft.com/en-us/windows/wsl/install\"\u003eWSL\u003c/a\u003e, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\u003c/p\u003e","title":"Bandit"},{"content":"Level description The goal of this level is for you to log into the game using SSH. The host to which you need to connect is bandit.labs.overthewire.org, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\nTips for beginners Read a bit about what SSH is. Research about what a port is. Solution This is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go here.\nAt Linux, we can use ssh client to connect to the server. It should be installed by default on your system. If not, please first research about how to install. Once you have the SSH client installed, you can log in into the first level as follows:\nssh bandit0@bandit.labs.overthewire.org -p 2220 Syntax is simple: ssh \u0026lt;username\u0026gt;@\u0026lt;hostname\u0026gt; -p \u0026lt;port\u0026gt;. Usually SSH runs on port 22 by default, but they changed to port 2220 so we must specify it in the command.\nOnce you try to log in, you will see something like this: NB: If it\u0026rsquo;s the first time you try to log in, you will be asked about the authenticity of the host. Just type yes.\nType the password bandit0 and press enter. Now you are inside bandit server, ready to begin with bandit1!\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit0/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe goal of this level is for you to log into the game using SSH. The host to which you need to connect is \u003cstrong\u003ebandit.labs.overthewire.org\u003c/strong\u003e, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eRead a bit about what SSH is.\u003c/li\u003e\n\u003cli\u003eResearch about what a port is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go \u003ca href=\"https://en.wikipedia.org/wiki/Secure_Shell\"\u003ehere\u003c/a\u003e.\u003c/p\u003e","title":"Bandit0"},{"content":"Level description The password for the next level is stored in a file called readme located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\nTips for beginners Learn about home directory in Linux. Learn to use cat and ls commands. Solution First step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\nls This shows in terminal the files at the current directory. There you will see the readme file.\nNow we can to check the contents, so let\u0026rsquo;s use cat:\ncat readme To read a file, we use cat \u0026lt;filename\u0026gt;.\nNB: Not every file is human readable in Linux. We deep more about this in later levels.\nThe content of the readme file reveals the password for bandit2 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit1/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u003cstrong\u003ereadme\u003c/strong\u003e located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn about home directory in Linux.\u003c/li\u003e\n\u003cli\u003eLearn to use \u003ccode\u003ecat\u003c/code\u003e and \u003ccode\u003els\u003c/code\u003e commands.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eFirst step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\u003c/p\u003e","title":"Bandit1"},{"content":"Level description The password for the next level is stored in a file called - located in the home directory\nTips for beginners Try to understand why previous solution is not working as you expect. Solution You may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our cat command: The terminal is waiting for something else. This happens due to character - is used to pass arguments to our commands, and the linux shell is interpreting that. To prevent that, we could use:\ncat ./- NB: Dot . is used to refer current directory. The slash / is used at the end of directory name.\nWe get the password for bandit3 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit2/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called - located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eTry to understand why previous solution is not working as you expect.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eYou may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our \u003ccode\u003ecat\u003c/code\u003e command:\n\u003cimg alt=\"bandit2\" loading=\"lazy\" src=\"/images/otw/bandit/bandit2/0.png\"\u003e\u003c/p\u003e\n\u003cp\u003eThe terminal is \u003cem\u003ewaiting\u003c/em\u003e for something else. This happens due to character \u003ccode\u003e-\u003c/code\u003e is used to pass arguments to our commands, and the linux shell is interpreting that.\nTo prevent that, we could use:\u003c/p\u003e","title":"Bandit2"},{"content":"Level description The password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\nTips for beginners Think about how to escape the whitespaces. Solution After login in the machine as bandit3, we can see the filename \u0026ndash;spaces in this filename\u0026ndash;.\nNow we have 2 problems:\nSame as previous level, filename starts with --, so it will be interpreted as an argument. Address this problem using ./. Filename contains whitespaces. This is an issue, as bash interpretes whitespaces to separate commands. To solve the second problem, we must escape the whitespace character in some way. Here is the solution:\ncat ./--spaces\\ in\\ this\\ filename-- NB: Little trick, you can start writting filename and press Tab to autocomplete the name. The \\ is going to be inserted automatically.\nJust using the \\ we can escape the whitespace.\nNow we can continue with the bandit4 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit3/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eThink about how to \u003cem\u003eescape\u003c/em\u003e the whitespaces.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAfter login in the machine as bandit3, we can see the filename \u003cem\u003e\u0026ndash;spaces in this filename\u0026ndash;\u003c/em\u003e.\u003c/p\u003e\n\u003cp\u003eNow we have 2 problems:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eSame as previous level, filename starts with \u003ccode\u003e--\u003c/code\u003e, so it will be interpreted as an argument. Address this problem using \u003ccode\u003e./\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003eFilename contains \u003cstrong\u003ewhitespaces\u003c/strong\u003e. This is an issue, as bash interpretes whitespaces to separate commands.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eTo solve the second problem, we must escape the whitespace character in some way. Here is the solution:\u003c/p\u003e","title":"Bandit3"},{"content":"Level description The password for the next level is stored in a hidden file in the inhere directory.\nTips for beginners Learn how to navigate directories in Linux. First understand what a hidden file is. Solution Listing directory files inside bandit4\u0026rsquo;s home directory, show directory inhere.\nNB: How to distinguish files and directories in Linux? Use ls -l and see the difference.\nWe have 2 options now:\nMove to inhere directory and check contens again. Check contents directly. Moving to another directory can be done using cd \u0026lt;dirName\u0026gt;. If you prefer to check directory contents directly, use ls \u0026lt;dirName\u0026gt;.\nAfter checking inhere contents via ls, we see nothing. The reason is the file is a hidden file. A hidden file in Linux is everyfile whose name starts with dot .. Hidden files are not shown by default with ls command, so we must add a special flag -a to list all files: NB: Both flags -l and -a cna be combined into a single flag -al, which is shorter to type.\nAs you can see, filename is \u0026hellip;Hidding-From-You starting with three dots. Reading file contents should be easy at this point!\nNext level is bandit5.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit4/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a hidden file in the inhere directory.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to navigate directories in Linux.\u003c/li\u003e\n\u003cli\u003eFirst understand what a hidden file is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eListing directory files inside bandit4\u0026rsquo;s home directory, show directory \u003cstrong\u003einhere\u003c/strong\u003e.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e How to distinguish files and directories in Linux? Use \u003ccode\u003els -l\u003c/code\u003e and see the difference.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eWe have 2 options now:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eMove to inhere directory and check contens again.\u003c/li\u003e\n\u003cli\u003eCheck contents directly.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eMoving to another directory can be done using \u003ccode\u003ecd \u0026lt;dirName\u0026gt;\u003c/code\u003e. If you prefer to check directory contents directly, use \u003ccode\u003els \u0026lt;dirName\u0026gt;\u003c/code\u003e.\u003c/p\u003e","title":"Bandit4"},{"content":"Level description The password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\nTips for beginners What means human-readable file? Is there any way to check filetype at Linux?. Solution Checking inhere\u0026rsquo;s contents shows some files names \u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII here\nSo now, our goal is checking if file content of every file in the folder is ASCII or not. file \u0026lt;filename\u0026gt; does the job. Note the use of *. That called a wildcard regular expression, we\u0026rsquo;ll deep into it in later levels. An easy approach could be checking every file separately:\nfile ./--file00 file ./--file01 ... file ./--file09 But that\u0026rsquo;s not funny, imagine we have 100 files to check. All the files are in the same directory, so we can use cat ./* where ./* matches every filename in the directory, applying file to every file.\nNB: Another approach is to use find with certaing flags. Try to do in different ways, don\u0026rsquo;t stick to my solution.\nThe file \u0026ndash;file00 content is not readable, so get password from \u0026ndash;file07 and continue with bandit6.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit5/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eWhat means human-readable file?\u003c/li\u003e\n\u003cli\u003eIs there any way to check filetype at Linux?.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eChecking inhere\u0026rsquo;s contents shows some files names \u003cstrong\u003e\u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09\u003c/strong\u003e. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII \u003ca href=\"https://en.wikipedia.org/wiki/ASCII\"\u003ehere\u003c/a\u003e\u003c/p\u003e","title":"Bandit5"},{"content":"Level description The password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\nhuman-readable 1033 bytes in size not executable Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution The purpose of the level is showing us how to find for files. Listing contents of inhere, we can see some folders, containing a lot of files inside: NB: Adding -R to ls shows recursively the content of every folder inside the directory listed.\nSo this time, checking every file is not an option. We need to find a file with some properties, specific size, not excutable and human-readable. Let\u0026rsquo;s explain the command we\u0026rsquo;re using:\nfind inhere/ -size 1033c ! -executable First, we specify the directory, in this case inhere. The option -size 1033c returns files of 1033 bytes. Then, with -executable we would get executable files, but we want not executable files, that\u0026rsquo;s why we are adding ! before.\nNB: By default, the -size option takes as argument the number of blocks. For example, -size 2 means 2 blocks of 512 bytes, so its 1024. The c is used to specify exact bytes. Don\u0026rsquo;t ask me why it\u0026rsquo;s c and not b 😅.\nThe property of human-readability is not implemented in find. This is not an issue, previous command returns a single file and it is human readable (we could confirm using file): Extra tip: try to use the following:\nfind inhere/ -size 1033c ! -executable | file You get the same result! The pipe | is a great tool to execute 2+ commands in one line.\nGet your password and continue with bandit7.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit6/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ehuman-readable\u003c/li\u003e\n\u003cli\u003e1033 bytes in size\u003c/li\u003e\n\u003cli\u003enot executable\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThe purpose of the level is showing us how to find for files. Listing contents of \u003cstrong\u003einhere\u003c/strong\u003e, we can see some folders, containing a lot of files inside:\n\u003cimg alt=\"bandit6_0\" loading=\"lazy\" src=\"/images/otw/bandit/bandit6/0.png\"\u003e\u003c/p\u003e","title":"Bandit6"},{"content":"Level description The password for the next level is stored somewhere on the server and has all of the following properties:\nowned by user bandit7 owned by group bandit6 33 bytes in size Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution This is very straightforward to do after completing previous level. Now we need to identify a file owned by user bandit7 and group bandi6. Furthermore, the file is somewhere on the server, which means we have to find in the root directory /.\nfind / -user bandit7 -group bandit6 -size 33c 2\u0026gt;/dev/null NB: I added that strange 2\u0026gt;/dev/null to filter error output. The reason why it works like that is more technical, for now just save this a fast way to filter errors in terminal. We get some errors because looking for files in the whole server may return some unaccesible files, as we don\u0026rsquo;t have root user permissions. We will study Linux permissions in later levels.\nWe should get a single file, containing password for bandit8.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit7/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored somewhere on the server and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eowned by user bandit7\u003c/li\u003e\n\u003cli\u003eowned by group bandit6\u003c/li\u003e\n\u003cli\u003e33 bytes in size\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is very straightforward to do after completing previous level. Now we need to identify a file owned by user bandit7 and group bandi6. Furthermore, the file is \u003cstrong\u003esomewhere on the server\u003c/strong\u003e, which means we have to find in the root directory \u003ccode\u003e/\u003c/code\u003e.\u003c/p\u003e","title":"Bandit7"},{"content":"Level description The password for the next level is stored in the file data.txt next to the word millionth.\nTips for beginners Learn how to filter file contents. Solution At previous levels, we discovered how to find for files. Now it\u0026rsquo;s time to find for content inside a file. grep command is going to help with that task.\nNB: Of course I don\u0026rsquo;t want to spoil you the password!\nNotice how this can achieved in different ways.\nUsing grep \u0026lt;keyword\u0026gt; \u0026lt;filename\u0026gt;. Using the pipe | to execute grep over the result of cat command. Take you favorite path to solve the level, and continue with bandit9.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit8/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the file \u003cstrong\u003edata.txt\u003c/strong\u003e next to the word \u003cstrong\u003emillionth\u003c/strong\u003e.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to filter file contents.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAt previous levels, we discovered how to find for files. Now it\u0026rsquo;s time to find for content inside a file. \u003ccode\u003egrep\u003c/code\u003e command is going to help with that task.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"bandit8\" loading=\"lazy\" src=\"/images/otw/bandit/bandit8/0.png\"\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e Of course I don\u0026rsquo;t want to spoil you the password!\u003c/p\u003e","title":"Bandit8"},{"content":"Level description The password for the next level is stored in the file data.txt and is the only line of text that occurs only once\nTips for beginners Learn how to filter file contents. Solution At previous levels, we discovered how to find for files. Now it\u0026rsquo;s time to find for content inside a file. grep command is going to help with that task.\nNB: Of course I don\u0026rsquo;t want to spoil you the password!\nNotice how this can achieved in different ways.\nUsing grep \u0026lt;keyword\u0026gt; \u0026lt;filename\u0026gt;. Using the pipe | to execute grep over the result of cat command. Take you favorite path to solve the level, and continue with bandit9.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit9/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the file \u003cstrong\u003edata.txt\u003c/strong\u003e and is the only line of text that occurs only once\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to filter file contents.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAt previous levels, we discovered how to find for files. Now it\u0026rsquo;s time to find for content inside a file. \u003ccode\u003egrep\u003c/code\u003e command is going to help with that task.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"bandit8\" loading=\"lazy\" src=\"/images/otw/bandit/bandit8/0.png\"\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e Of course I don\u0026rsquo;t want to spoil you the password!\u003c/p\u003e","title":"Bandit9"},{"content":"👨‍💻 whoami Hey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\nWhat is this❓​ This blog is basically my thoughts on several hacking topics. Here you’ll see:\nWriteups from CTF challenges, from platforms like HackTheBox or OverTheWire.\nWalkthroughs and notes on pentesting techniques I’m learning or testing.\nSome posts on cryptography — because math can be fun (sometimes).\nRandom topics that freaks like me may (just may) find interesting.\nThe idea is simple: share what I learn, document my journey, and maybe help others who are also diving into the exciting world of ethical hacking.\n📫 Contact Want to say hi, share ideas, or just geek out about hacking? Reach me here:\n📧 Email: mrb0b1073@proton.me 💻​ GitHub: mrb0b173 🟩​ HackTheBox: mrb0b1073 ","permalink":"http://localhost:1313/about/","summary":"\u003ch2 id=\"-whoami\"\u003e👨‍💻 whoami\u003c/h2\u003e\n\u003cp\u003eHey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\u003c/p\u003e\n\u003chr\u003e\n\u003ch2 id=\"what-is-this\"\u003eWhat is this❓​\u003c/h2\u003e\n\u003cp\u003eThis blog is basically my thoughts on several hacking topics. Here you’ll see:\u003c/p\u003e","title":"About"},{"content":"Hey! 👋 I\u0026rsquo;m mrb0b1073 and this is my first post.\nWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\nExcited to start this adventure!\n","permalink":"http://localhost:1313/posts/hello-world/","summary":"\u003cp\u003eHey! 👋 I\u0026rsquo;m \u003cstrong\u003emrb0b1073\u003c/strong\u003e and this is my first post.\u003c/p\u003e\n\u003cp\u003eWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\u003cbr\u003e\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\u003c/p\u003e\n\u003cp\u003eExcited to start this adventure!\u003c/p\u003e","title":"Hello World"},{"content":"Introduction If you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\nIn cybersecurity there are broadly two complementary roles: Blue Team and Red Team. Blue Teams focus on defense, monitoring, incident response, hardening systems and keeping services secure, while Red Teams simulate attackers to find weaknesses and prove what an adversary could do. Ethical hacking aligns closely with Red Team operations, but cybersecurity is highly transversal across IT. There are many specialities or areas, such as cloud security, appsec, pentesting, forensics, governance, risk management, malware analysis, etc. Every topic could deserve its own post, so let\u0026rsquo;s keep it simple and focus on ethical hacking.\nHacker philosophy Let\u0026rsquo;s start with the idea of what is exactly a hacker. A hacker is someone who explores systems to understand how they work, finds creative ways to make or fix things, and solves technical problems. Historically the word describes curiosity, craft, and a drive to improve systems — not criminality. It is important to make the distinction between hacker and cracker, also called cybercriminal. A hacker explores, builds, discloses responsibly and works to improve security. They work in authorized environments or labs. On the other hand, a cracker breaks into systems for theft, vandalism or other illicit gain.\nHere you can find the most popularized ideas often summarized as the hacker ethic:\nCuriosity first: Learn by exploring and tinkering. Freedom of information: All knowledge should be shared to help progress. This fits properly with the idea of open source. Mistrust of needless authority: Centralized control sometimes blocks innovation. It is always good to question anything, specially common assumptions. Meritocracy: Skills, craft and results matter more than titles. Craftsmanship \u0026amp; elegance: Technical beauty matters. Build clean, clever and efficient solutions. Responsability \u0026amp; ethics: Use your skills to build, fix, educate and defend, not to harm. Core fundamentals Assuming you want to init yourself in hacking, you should first build competence across three basic pillars.\nOperating Systems You should learn as much as possible about Linux and Windows. Specially Linux, all the tools you will be using are meant to be used in a Linux environment. Skill with shell is required, learn basic commands and how to interact with the OS using the terminal. Research about processes, file permissions, package management and logs. A large proportion of web servers around the world run on Linux, although Windows is also widely used. Windows knowledge is really valuable too, considering active directory is strongly used in corporate environments.\nNetworking You have to understand how computers communicate each other. Understand basic networking concepts, IP adresses, subnetting, proxies, find out how internet works. Study some protocols such as TCP/IP, HTTP, DNS or SSH. This could sound confusing for beginners, but this step is not optional! Study different client/server models and how services expose attack surfaces.\nProgramming \u0026amp; scripting Is this completely required? Maybe not for complete beginners. Does it help? Absolutely yes. Understanding how web apps or any type of application works makes things much easier. You can imagine different entry points to exploit if you understand how systems are designed. Also writing scripts in bash or python makes you more productive through automation.\nEthical Hacking foundations Once you feel confident with these 3 pillars, you can go to the next step. You can study about different topics and areas. For example, binary exploiting, web pentesting, mobile pentesting, wireless hacking, etc. You should start picking a focus, in this post we focus on web pentesting, as it is beginner friendly. Also web applications are the bread and butter in companies nowadays.\nKey concepts to study:\nCIA Triad: CIA refers to Confidentiality, Integrity and Availability. These three concepts are key in information security, and describe properties we want to ensure in our systems and information. Web Security basics, OWASP: Study the OWASP Top 10, which summarizes most frequent web security risks. Authentication and session control: Understand the concepts of Authentication and Authorization, research about how session is handled in web apps, cookies, JWT tokens, etc. Input validation \u0026amp; injection attacks: Learn about SQL Injection, Cross-Site Scripting (XSS), Code Injection, SSTI, and every injection type. Secure development lifecycle: Find out how to implement security controls in code. This can be more related to Blue Team, but as Red Teamer it is important to understand. Firewall evasion: What a firewall is and some techniques/methods to bypass. Some cryptography: Understand what a chiper and a hash are, how information is encrypted to prevent access from 3rd parties. Focusing on web, read about TLS protocol. There are many more topics you can research and learn, but this could be a nice starting point.\nTools and platforms to learn Now you have an idea of what to study, let\u0026rsquo;s see how to start in practical terms.\nSome platforms I personally recommend:\nOverTheWire: Here you can find some CTFs (Capture The Flag) which are fun to play and also really instructive. Bandit games are a must for complete beginners, as you will explore some linux and bash concepts which are basic to continue. The games are leveled by difficulty, in their web you can get all the information about how to play, only a terminal and SSH is required. This helps building your foundation in Linux OS. HackTheBox: Nº 1 platform in cybersecurity. Has a lot of resources to learn all this core fundamentals, and also red team / blue team security topics. It is focused on labs where you can test your skills hacking different boxes but if you really want to learn it is worth to invest time and money in the academy. I have to say the level here is high, specially if you try to hack machines on your own without using some guide or writeup. TryHackMe: More beginner friendly than hackthebox, it provides a lot of guided learning resources. PortSwigger Labs: Practical labs about specific topics, focused on web hacking. They are great to learn and understand different types of attacks, injections, and security misconfigurations. I would recommend digging into this once you have the theoretical basis about these concepts. I have to mention a few tools I am sure you\u0026rsquo;d end up using:\nNmap: This is probably the most famous tool in hacking, allowing you to gather information about ports and services running in a machine. Burpsuite: A proxy tool widely used in web application security testing. It basically allows you to intercept and modify web requests, which can be used to perform several types of attacks. Metasploit: The most used pentesting framework. Contains a large amount of scripts and exploits ready to run. Another crucial step here is to set up your virtual lab environment to test vulnerable applications. To achieve this goal, there are some Linux distributions like Kali, Parrot or BlackArch, but that\u0026rsquo;s a topic for another post.\nFinal thoughs To sum up, this would be my personal roadmap:\nLearn the fundamentals, specially Linux and networking. Install some Linux in a virtual machine, play with it, get comfortable with the terminal. You can start with bandit wargames in OverTheWire. Complete every level and make sure to understand everything as clear as possible. Move to guided boxes on HackTheBox. I recommend you joining their Discord, ask questions, community is great there! Take notes, repeat, learn, improve your skills. Maybe use your own lab environment, create your own vulnerable apps. Hacking is a mixing of curiosity, study and practice. Being passionate and motivated about it is really helpful and will definitely speed up the process. The path is long and really challenging, so keep it going!\n\u0026ldquo;Yes, I am a criminal. My crime is that of curiosity.\u0026rdquo; — The Mentor (Loyd Blankenship) at The Hacker Manifesto\n","permalink":"http://localhost:1313/posts/starting-point/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIf you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\u003c/p\u003e","title":"Starting Point"},{"content":"Introduction In this post series we are going to solve every level from bandit in OverTheWire This guide pretends to be a writeup containing the solutions of the level, designed for beginners.\nTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing WSL, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\nEvery section will contain the solution as well as some tips for people who is absolutely beginner.\nTips First of all, some tips:\nDo not use this as first resource to solve the levels. Try on your own, make mistakes and learn from them. Only check the solution as last resource or if you are completely new and you have absolutely no idea about what to do next. Take notes from your learning. Write up commands, tips and everything which can be useful in the future. Make sure to understand everything. Is a good idea to note the passwords for every level. If you want to continue letter, you can simply log in in the desired level. It is annoying to repeat everything! Follow the tips and information provided at OverTheWire website. Levels Here is my solution for every level:\nBandit0 Bandit1 Bandit2 Bandit3 Bandit4 Bandit5 Bandit6 Bandit7 ","permalink":"http://localhost:1313/posts/otw/bandit/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIn this post series we are going to solve every level from bandit in \u003ca href=\"https://overthewire.org/wargames/bandit/\"\u003e\u003cem\u003eOverTheWire\u003c/em\u003e\u003c/a\u003e\nThis guide pretends to be a writeup containing the solutions of the level, designed for beginners.\u003c/p\u003e\n\u003cp\u003eTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing \u003ca href=\"https://learn.microsoft.com/en-us/windows/wsl/install\"\u003eWSL\u003c/a\u003e, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\u003c/p\u003e","title":"Bandit"},{"content":"Level description The goal of this level is for you to log into the game using SSH. The host to which you need to connect is bandit.labs.overthewire.org, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\nTips for beginners Read a bit about what SSH is. Research about what a port is. Solution This is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go here.\nAt Linux, we can use ssh client to connect to the server. It should be installed by default on your system. If not, please first research about how to install. Once you have the SSH client installed, you can log in into the first level as follows:\nssh bandit0@bandit.labs.overthewire.org -p 2220 Syntax is simple: ssh \u0026lt;username\u0026gt;@\u0026lt;hostname\u0026gt; -p \u0026lt;port\u0026gt;. Usually SSH runs on port 22 by default, but they changed to port 2220 so we must specify it in the command.\nOnce you try to log in, you will see something like this: NB: If it\u0026rsquo;s the first time you try to log in, you will be asked about the authenticity of the host. Just type yes.\nType the password bandit0 and press enter. Now you are inside bandit server, ready to begin with bandit1!\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit0/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe goal of this level is for you to log into the game using SSH. The host to which you need to connect is \u003cstrong\u003ebandit.labs.overthewire.org\u003c/strong\u003e, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eRead a bit about what SSH is.\u003c/li\u003e\n\u003cli\u003eResearch about what a port is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go \u003ca href=\"https://en.wikipedia.org/wiki/Secure_Shell\"\u003ehere\u003c/a\u003e.\u003c/p\u003e","title":"Bandit0"},{"content":"Level description The password for the next level is stored in a file called readme located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\nTips for beginners Learn about home directory in Linux. Learn to use cat and ls commands. Solution First step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\nls This shows in terminal the files at the current directory. There you will see the readme file.\nNow we can to check the contents, so let\u0026rsquo;s use cat:\ncat readme To read a file, we use cat \u0026lt;filename\u0026gt;.\nNB: Not every file is human readable in Linux. We deep more about this in later levels.\nThe content of the readme file reveals the password for bandit2 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit1/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u003cstrong\u003ereadme\u003c/strong\u003e located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn about home directory in Linux.\u003c/li\u003e\n\u003cli\u003eLearn to use \u003ccode\u003ecat\u003c/code\u003e and \u003ccode\u003els\u003c/code\u003e commands.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eFirst step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\u003c/p\u003e","title":"Bandit1"},{"content":"Level description The password for the next level is stored in a file called - located in the home directory\nTips for beginners Try to understand why previous solution is not working as you expect. Solution You may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our cat command: The terminal is waiting for something else. This happens due to character - is used to pass arguments to our commands, and the linux shell is interpreting that. To prevent that, we could use:\ncat ./- NB: Dot . is used to refer current directory. The slash / is used at the end of directory name.\nWe get the password for bandit3 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit2/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called - located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eTry to understand why previous solution is not working as you expect.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eYou may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our \u003ccode\u003ecat\u003c/code\u003e command:\n\u003cimg alt=\"bandit2\" loading=\"lazy\" src=\"/images/otw/bandit/bandit2/0.png\"\u003e\u003c/p\u003e\n\u003cp\u003eThe terminal is \u003cem\u003ewaiting\u003c/em\u003e for something else. This happens due to character \u003ccode\u003e-\u003c/code\u003e is used to pass arguments to our commands, and the linux shell is interpreting that.\nTo prevent that, we could use:\u003c/p\u003e","title":"Bandit2"},{"content":"Level description The password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\nTips for beginners Think about how to escape the whitespaces. Solution After login in the machine as bandit3, we can see the filename \u0026ndash;spaces in this filename\u0026ndash;.\nNow we have 2 problems:\nSame as previous level, filename starts with --, so it will be interpreted as an argument. Address this problem using ./. Filename contains whitespaces. This is an issue, as bash interpretes whitespaces to separate commands. To solve the second problem, we must escape the whitespace character in some way. Here is the solution:\ncat ./--spaces\\ in\\ this\\ filename-- NB: Little trick, you can start writting filename and press Tab to autocomplete the name. The \\ is going to be inserted automatically.\nJust using the \\ we can escape the whitespace.\nNow we can continue with the bandit4 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit3/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eThink about how to \u003cem\u003eescape\u003c/em\u003e the whitespaces.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAfter login in the machine as bandit3, we can see the filename \u003cem\u003e\u0026ndash;spaces in this filename\u0026ndash;\u003c/em\u003e.\u003c/p\u003e\n\u003cp\u003eNow we have 2 problems:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eSame as previous level, filename starts with \u003ccode\u003e--\u003c/code\u003e, so it will be interpreted as an argument. Address this problem using \u003ccode\u003e./\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003eFilename contains \u003cstrong\u003ewhitespaces\u003c/strong\u003e. This is an issue, as bash interpretes whitespaces to separate commands.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eTo solve the second problem, we must escape the whitespace character in some way. Here is the solution:\u003c/p\u003e","title":"Bandit3"},{"content":"Level description The password for the next level is stored in a hidden file in the inhere directory.\nTips for beginners Learn how to navigate directories in Linux. First understand what a hidden file is. Solution Listing directory files inside bandit4\u0026rsquo;s home directory, show directory inhere.\nNB: How to distinguish files and directories in Linux? Use ls -l and see the difference.\nWe have 2 options now:\nMove to inhere directory and check contens again. Check contents directly. Moving to another directory can be done using cd \u0026lt;dirName\u0026gt;. If you prefer to check directory contents directly, use ls \u0026lt;dirName\u0026gt;.\nAfter checking inhere contents via ls, we see nothing. The reason is the file is a hidden file. A hidden file in Linux is everyfile whose name starts with dot .. Hidden files are not shown by default with ls command, so we must add a special flag -a to list all files: NB: Both flags -l and -a cna be combined into a single flag -al, which is shorter to type.\nAs you can see, filename is \u0026hellip;Hidding-From-You starting with three dots. Reading file contents should be easy at this point!\nNext level is bandit5.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit4/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a hidden file in the inhere directory.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to navigate directories in Linux.\u003c/li\u003e\n\u003cli\u003eFirst understand what a hidden file is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eListing directory files inside bandit4\u0026rsquo;s home directory, show directory \u003cstrong\u003einhere\u003c/strong\u003e.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e How to distinguish files and directories in Linux? Use \u003ccode\u003els -l\u003c/code\u003e and see the difference.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eWe have 2 options now:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eMove to inhere directory and check contens again.\u003c/li\u003e\n\u003cli\u003eCheck contents directly.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eMoving to another directory can be done using \u003ccode\u003ecd \u0026lt;dirName\u0026gt;\u003c/code\u003e. If you prefer to check directory contents directly, use \u003ccode\u003els \u0026lt;dirName\u0026gt;\u003c/code\u003e.\u003c/p\u003e","title":"Bandit4"},{"content":"Level description The password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\nTips for beginners What means human-readable file? Is there any way to check filetype at Linux?. Solution Checking inhere\u0026rsquo;s contents shows some files names \u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII here\nSo now, our goal is checking if file content of every file in the folder is ASCII or not. file \u0026lt;filename\u0026gt; does the job. Note the use of *. That called a wildcard regular expression, we\u0026rsquo;ll deep into it in later levels. An easy approach could be checking every file separately:\nfile ./--file00 file ./--file01 ... file ./--file09 But that\u0026rsquo;s not funny, imagine we have 100 files to check. All the files are in the same directory, so we can use cat ./* where ./* matches every filename in the directory, applying file to every file.\nNB: Another approach is to use find with certaing flags. Try to do in different ways, don\u0026rsquo;t stick to my solution.\nThe file \u0026ndash;file00 content is not readable, so get password from \u0026ndash;file07 and continue with bandit6.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit5/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eWhat means human-readable file?\u003c/li\u003e\n\u003cli\u003eIs there any way to check filetype at Linux?.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eChecking inhere\u0026rsquo;s contents shows some files names \u003cstrong\u003e\u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09\u003c/strong\u003e. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII \u003ca href=\"https://en.wikipedia.org/wiki/ASCII\"\u003ehere\u003c/a\u003e\u003c/p\u003e","title":"Bandit5"},{"content":"Level description The password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\nhuman-readable 1033 bytes in size not executable Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution The purpose of the level is showing us how to find for files. Listing contents of inhere, we can see some folders, containing a lot of files inside: NB: Adding -R to ls shows recursively the content of every folder inside the directory listed.\nSo this time, checking every file is not an option. We need to find a file with some properties, specific size, not excutable and human-readable. Let\u0026rsquo;s explain the command we\u0026rsquo;re using:\nfind inhere/ -size 1033c ! -executable First, we specify the directory, in this case inhere. The option -size 1033c returns files of 1033 bytes. Then, with -executable we would get executable files, but we want not executable files, that\u0026rsquo;s why we are adding ! before.\nNB: By default, the -size option takes as argument the number of blocks. For example, -size 2 means 2 blocks of 512 bytes, so its 1024. The c is used to specify exact bytes. Don\u0026rsquo;t ask me why it\u0026rsquo;s c and not b 😅.\nThe property of human-readability is not implemented in find. This is not an issue, previous command returns a single file and it is human readable (we could confirm using file): Extra tip: try to use the following:\nfind inhere/ -size 1033c ! -executable | file You get the same result! The pipe | is a great tool to execute 2+ commands in one line.\nGet your password and continue with bandit7.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit6/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ehuman-readable\u003c/li\u003e\n\u003cli\u003e1033 bytes in size\u003c/li\u003e\n\u003cli\u003enot executable\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThe purpose of the level is showing us how to find for files. Listing contents of \u003cstrong\u003einhere\u003c/strong\u003e, we can see some folders, containing a lot of files inside:\n\u003cimg alt=\"bandit6_0\" loading=\"lazy\" src=\"/images/otw/bandit/bandit6/0.png\"\u003e\u003c/p\u003e","title":"Bandit6"},{"content":"Level description The password for the next level is stored somewhere on the server and has all of the following properties:\nowned by user bandit7 owned by group bandit6 33 bytes in size Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution This is very straightforward to do after completing previous level. Now we need to identify a file owned by user bandit7 and group bandi6. Furthermore, the file is somewhere on the server, which means we have to find in the root directory /.\nfind / -user bandit7 -group bandit6 -size 33c 2\u0026gt;/dev/null NB: I added that strange 2\u0026gt;/dev/null to filter error output. The reason why it works like that is more technical, for now just save this a fast way to filter errors in terminal. We get some errors because looking for files in the whole server may return some unaccesible files, as we don\u0026rsquo;t have root user permissions. We will study Linux permissions in later levels.\nWe should get a single file, containing password for bandit8.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit7/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored somewhere on the server and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eowned by user bandit7\u003c/li\u003e\n\u003cli\u003eowned by group bandit6\u003c/li\u003e\n\u003cli\u003e33 bytes in size\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is very straightforward to do after completing previous level. Now we need to identify a file owned by user bandit7 and group bandi6. Furthermore, the file is \u003cstrong\u003esomewhere on the server\u003c/strong\u003e, which means we have to find in the root directory \u003ccode\u003e/\u003c/code\u003e.\u003c/p\u003e","title":"Bandit7"},{"content":"Level description The password for the next level is stored in the file data.txt next to the word millionth.\nTips for beginners Learn how to filter file contents. Solution At previous levels, we discovered how to find for files. Now it\u0026rsquo;s time to find for content inside a file. grep command is going to help with that task.\nNB: Of course I don\u0026rsquo;t want to spoil you the password!\nNotice how this can achieved in different ways.\nUsing grep \u0026lt;keyword\u0026gt; \u0026lt;filename\u0026gt;. Using the pipe | to execute grep over the result of cat command. Take you favorite path to solve the level, and continue with bandit9.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit8/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the file \u003cstrong\u003edata.txt\u003c/strong\u003e next to the word \u003cstrong\u003emillionth\u003c/strong\u003e.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to filter file contents.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAt previous levels, we discovered how to find for files. Now it\u0026rsquo;s time to find for content inside a file. \u003ccode\u003egrep\u003c/code\u003e command is going to help with that task.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"bandit8\" loading=\"lazy\" src=\"/images/otw/bandit/bandit8/0.png\"\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e Of course I don\u0026rsquo;t want to spoil you the password!\u003c/p\u003e","title":"Bandit8"},{"content":"Level description The password for the next level is stored in the file data.txt and is the only line of text that occurs only once.\nTips for beginners Learn how to filter file contents. Solution At previous levels, we discovered how to find for files. Now it\u0026rsquo;s time to find for content inside a file. grep command is going to help with that task.\nNB: Of course I don\u0026rsquo;t want to spoil you the password!\nNotice how this can achieved in different ways.\nUsing grep \u0026lt;keyword\u0026gt; \u0026lt;filename\u0026gt;. Using the pipe | to execute grep over the result of cat command. Take you favorite path to solve the level, and continue with bandit9.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit9/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the file \u003cstrong\u003edata.txt\u003c/strong\u003e and is the only line of text that occurs only once.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to filter file contents.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAt previous levels, we discovered how to find for files. Now it\u0026rsquo;s time to find for content inside a file. \u003ccode\u003egrep\u003c/code\u003e command is going to help with that task.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"bandit8\" loading=\"lazy\" src=\"/images/otw/bandit/bandit8/0.png\"\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e Of course I don\u0026rsquo;t want to spoil you the password!\u003c/p\u003e","title":"Bandit9"},{"content":"👨‍💻 whoami Hey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\nWhat is this❓​ This blog is basically my thoughts on several hacking topics. Here you’ll see:\nWriteups from CTF challenges, from platforms like HackTheBox or OverTheWire.\nWalkthroughs and notes on pentesting techniques I’m learning or testing.\nSome posts on cryptography — because math can be fun (sometimes).\nRandom topics that freaks like me may (just may) find interesting.\nThe idea is simple: share what I learn, document my journey, and maybe help others who are also diving into the exciting world of ethical hacking.\n📫 Contact Want to say hi, share ideas, or just geek out about hacking? Reach me here:\n📧 Email: mrb0b1073@proton.me 💻​ GitHub: mrb0b173 🟩​ HackTheBox: mrb0b1073 ","permalink":"http://localhost:1313/about/","summary":"\u003ch2 id=\"-whoami\"\u003e👨‍💻 whoami\u003c/h2\u003e\n\u003cp\u003eHey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\u003c/p\u003e\n\u003chr\u003e\n\u003ch2 id=\"what-is-this\"\u003eWhat is this❓​\u003c/h2\u003e\n\u003cp\u003eThis blog is basically my thoughts on several hacking topics. Here you’ll see:\u003c/p\u003e","title":"About"},{"content":"Hey! 👋 I\u0026rsquo;m mrb0b1073 and this is my first post.\nWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\nExcited to start this adventure!\n","permalink":"http://localhost:1313/posts/hello-world/","summary":"\u003cp\u003eHey! 👋 I\u0026rsquo;m \u003cstrong\u003emrb0b1073\u003c/strong\u003e and this is my first post.\u003c/p\u003e\n\u003cp\u003eWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\u003cbr\u003e\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\u003c/p\u003e\n\u003cp\u003eExcited to start this adventure!\u003c/p\u003e","title":"Hello World"},{"content":"Introduction If you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\nIn cybersecurity there are broadly two complementary roles: Blue Team and Red Team. Blue Teams focus on defense, monitoring, incident response, hardening systems and keeping services secure, while Red Teams simulate attackers to find weaknesses and prove what an adversary could do. Ethical hacking aligns closely with Red Team operations, but cybersecurity is highly transversal across IT. There are many specialities or areas, such as cloud security, appsec, pentesting, forensics, governance, risk management, malware analysis, etc. Every topic could deserve its own post, so let\u0026rsquo;s keep it simple and focus on ethical hacking.\nHacker philosophy Let\u0026rsquo;s start with the idea of what is exactly a hacker. A hacker is someone who explores systems to understand how they work, finds creative ways to make or fix things, and solves technical problems. Historically the word describes curiosity, craft, and a drive to improve systems — not criminality. It is important to make the distinction between hacker and cracker, also called cybercriminal. A hacker explores, builds, discloses responsibly and works to improve security. They work in authorized environments or labs. On the other hand, a cracker breaks into systems for theft, vandalism or other illicit gain.\nHere you can find the most popularized ideas often summarized as the hacker ethic:\nCuriosity first: Learn by exploring and tinkering. Freedom of information: All knowledge should be shared to help progress. This fits properly with the idea of open source. Mistrust of needless authority: Centralized control sometimes blocks innovation. It is always good to question anything, specially common assumptions. Meritocracy: Skills, craft and results matter more than titles. Craftsmanship \u0026amp; elegance: Technical beauty matters. Build clean, clever and efficient solutions. Responsability \u0026amp; ethics: Use your skills to build, fix, educate and defend, not to harm. Core fundamentals Assuming you want to init yourself in hacking, you should first build competence across three basic pillars.\nOperating Systems You should learn as much as possible about Linux and Windows. Specially Linux, all the tools you will be using are meant to be used in a Linux environment. Skill with shell is required, learn basic commands and how to interact with the OS using the terminal. Research about processes, file permissions, package management and logs. A large proportion of web servers around the world run on Linux, although Windows is also widely used. Windows knowledge is really valuable too, considering active directory is strongly used in corporate environments.\nNetworking You have to understand how computers communicate each other. Understand basic networking concepts, IP adresses, subnetting, proxies, find out how internet works. Study some protocols such as TCP/IP, HTTP, DNS or SSH. This could sound confusing for beginners, but this step is not optional! Study different client/server models and how services expose attack surfaces.\nProgramming \u0026amp; scripting Is this completely required? Maybe not for complete beginners. Does it help? Absolutely yes. Understanding how web apps or any type of application works makes things much easier. You can imagine different entry points to exploit if you understand how systems are designed. Also writing scripts in bash or python makes you more productive through automation.\nEthical Hacking foundations Once you feel confident with these 3 pillars, you can go to the next step. You can study about different topics and areas. For example, binary exploiting, web pentesting, mobile pentesting, wireless hacking, etc. You should start picking a focus, in this post we focus on web pentesting, as it is beginner friendly. Also web applications are the bread and butter in companies nowadays.\nKey concepts to study:\nCIA Triad: CIA refers to Confidentiality, Integrity and Availability. These three concepts are key in information security, and describe properties we want to ensure in our systems and information. Web Security basics, OWASP: Study the OWASP Top 10, which summarizes most frequent web security risks. Authentication and session control: Understand the concepts of Authentication and Authorization, research about how session is handled in web apps, cookies, JWT tokens, etc. Input validation \u0026amp; injection attacks: Learn about SQL Injection, Cross-Site Scripting (XSS), Code Injection, SSTI, and every injection type. Secure development lifecycle: Find out how to implement security controls in code. This can be more related to Blue Team, but as Red Teamer it is important to understand. Firewall evasion: What a firewall is and some techniques/methods to bypass. Some cryptography: Understand what a chiper and a hash are, how information is encrypted to prevent access from 3rd parties. Focusing on web, read about TLS protocol. There are many more topics you can research and learn, but this could be a nice starting point.\nTools and platforms to learn Now you have an idea of what to study, let\u0026rsquo;s see how to start in practical terms.\nSome platforms I personally recommend:\nOverTheWire: Here you can find some CTFs (Capture The Flag) which are fun to play and also really instructive. Bandit games are a must for complete beginners, as you will explore some linux and bash concepts which are basic to continue. The games are leveled by difficulty, in their web you can get all the information about how to play, only a terminal and SSH is required. This helps building your foundation in Linux OS. HackTheBox: Nº 1 platform in cybersecurity. Has a lot of resources to learn all this core fundamentals, and also red team / blue team security topics. It is focused on labs where you can test your skills hacking different boxes but if you really want to learn it is worth to invest time and money in the academy. I have to say the level here is high, specially if you try to hack machines on your own without using some guide or writeup. TryHackMe: More beginner friendly than hackthebox, it provides a lot of guided learning resources. PortSwigger Labs: Practical labs about specific topics, focused on web hacking. They are great to learn and understand different types of attacks, injections, and security misconfigurations. I would recommend digging into this once you have the theoretical basis about these concepts. I have to mention a few tools I am sure you\u0026rsquo;d end up using:\nNmap: This is probably the most famous tool in hacking, allowing you to gather information about ports and services running in a machine. Burpsuite: A proxy tool widely used in web application security testing. It basically allows you to intercept and modify web requests, which can be used to perform several types of attacks. Metasploit: The most used pentesting framework. Contains a large amount of scripts and exploits ready to run. Another crucial step here is to set up your virtual lab environment to test vulnerable applications. To achieve this goal, there are some Linux distributions like Kali, Parrot or BlackArch, but that\u0026rsquo;s a topic for another post.\nFinal thoughs To sum up, this would be my personal roadmap:\nLearn the fundamentals, specially Linux and networking. Install some Linux in a virtual machine, play with it, get comfortable with the terminal. You can start with bandit wargames in OverTheWire. Complete every level and make sure to understand everything as clear as possible. Move to guided boxes on HackTheBox. I recommend you joining their Discord, ask questions, community is great there! Take notes, repeat, learn, improve your skills. Maybe use your own lab environment, create your own vulnerable apps. Hacking is a mixing of curiosity, study and practice. Being passionate and motivated about it is really helpful and will definitely speed up the process. The path is long and really challenging, so keep it going!\n\u0026ldquo;Yes, I am a criminal. My crime is that of curiosity.\u0026rdquo; — The Mentor (Loyd Blankenship) at The Hacker Manifesto\n","permalink":"http://localhost:1313/posts/starting-point/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIf you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\u003c/p\u003e","title":"Starting Point"},{"content":"Introduction In this post series we are going to solve every level from bandit in OverTheWire This guide pretends to be a writeup containing the solutions of the level, designed for beginners.\nTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing WSL, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\nEvery section will contain the solution as well as some tips for people who is absolutely beginner.\nTips First of all, some tips:\nDo not use this as first resource to solve the levels. Try on your own, make mistakes and learn from them. Only check the solution as last resource or if you are completely new and you have absolutely no idea about what to do next. Take notes from your learning. Write up commands, tips and everything which can be useful in the future. Make sure to understand everything. Is a good idea to note the passwords for every level. If you want to continue letter, you can simply log in in the desired level. It is annoying to repeat everything! Follow the tips and information provided at OverTheWire website. Levels Here is my solution for every level:\nBandit0 Bandit1 Bandit2 Bandit3 Bandit4 Bandit5 Bandit6 Bandit7 ","permalink":"http://localhost:1313/posts/otw/bandit/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIn this post series we are going to solve every level from bandit in \u003ca href=\"https://overthewire.org/wargames/bandit/\"\u003e\u003cem\u003eOverTheWire\u003c/em\u003e\u003c/a\u003e\nThis guide pretends to be a writeup containing the solutions of the level, designed for beginners.\u003c/p\u003e\n\u003cp\u003eTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing \u003ca href=\"https://learn.microsoft.com/en-us/windows/wsl/install\"\u003eWSL\u003c/a\u003e, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\u003c/p\u003e","title":"Bandit"},{"content":"Level description The goal of this level is for you to log into the game using SSH. The host to which you need to connect is bandit.labs.overthewire.org, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\nTips for beginners Read a bit about what SSH is. Research about what a port is. Solution This is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go here.\nAt Linux, we can use ssh client to connect to the server. It should be installed by default on your system. If not, please first research about how to install. Once you have the SSH client installed, you can log in into the first level as follows:\nssh bandit0@bandit.labs.overthewire.org -p 2220 Syntax is simple: ssh \u0026lt;username\u0026gt;@\u0026lt;hostname\u0026gt; -p \u0026lt;port\u0026gt;. Usually SSH runs on port 22 by default, but they changed to port 2220 so we must specify it in the command.\nOnce you try to log in, you will see something like this: NB: If it\u0026rsquo;s the first time you try to log in, you will be asked about the authenticity of the host. Just type yes.\nType the password bandit0 and press enter. Now you are inside bandit server, ready to begin with bandit1!\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit0/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe goal of this level is for you to log into the game using SSH. The host to which you need to connect is \u003cstrong\u003ebandit.labs.overthewire.org\u003c/strong\u003e, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eRead a bit about what SSH is.\u003c/li\u003e\n\u003cli\u003eResearch about what a port is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go \u003ca href=\"https://en.wikipedia.org/wiki/Secure_Shell\"\u003ehere\u003c/a\u003e.\u003c/p\u003e","title":"Bandit0"},{"content":"Level description The password for the next level is stored in a file called readme located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\nTips for beginners Learn about home directory in Linux. Learn to use cat and ls commands. Solution First step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\nls This shows in terminal the files at the current directory. There you will see the readme file.\nNow we can to check the contents, so let\u0026rsquo;s use cat:\ncat readme To read a file, we use cat \u0026lt;filename\u0026gt;.\nNB: Not every file is human readable in Linux. We deep more about this in later levels.\nThe content of the readme file reveals the password for bandit2 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit1/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u003cstrong\u003ereadme\u003c/strong\u003e located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn about home directory in Linux.\u003c/li\u003e\n\u003cli\u003eLearn to use \u003ccode\u003ecat\u003c/code\u003e and \u003ccode\u003els\u003c/code\u003e commands.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eFirst step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\u003c/p\u003e","title":"Bandit1"},{"content":"Level description The password for the next level is stored in a file called - located in the home directory\nTips for beginners Try to understand why previous solution is not working as you expect. Solution You may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our cat command: The terminal is waiting for something else. This happens due to character - is used to pass arguments to our commands, and the linux shell is interpreting that. To prevent that, we could use:\ncat ./- NB: Dot . is used to refer current directory. The slash / is used at the end of directory name.\nWe get the password for bandit3 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit2/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called - located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eTry to understand why previous solution is not working as you expect.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eYou may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our \u003ccode\u003ecat\u003c/code\u003e command:\n\u003cimg alt=\"bandit2\" loading=\"lazy\" src=\"/images/otw/bandit/bandit2/0.png\"\u003e\u003c/p\u003e\n\u003cp\u003eThe terminal is \u003cem\u003ewaiting\u003c/em\u003e for something else. This happens due to character \u003ccode\u003e-\u003c/code\u003e is used to pass arguments to our commands, and the linux shell is interpreting that.\nTo prevent that, we could use:\u003c/p\u003e","title":"Bandit2"},{"content":"Level description The password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\nTips for beginners Think about how to escape the whitespaces. Solution After login in the machine as bandit3, we can see the filename \u0026ndash;spaces in this filename\u0026ndash;.\nNow we have 2 problems:\nSame as previous level, filename starts with --, so it will be interpreted as an argument. Address this problem using ./. Filename contains whitespaces. This is an issue, as bash interpretes whitespaces to separate commands. To solve the second problem, we must escape the whitespace character in some way. Here is the solution:\ncat ./--spaces\\ in\\ this\\ filename-- NB: Little trick, you can start writting filename and press Tab to autocomplete the name. The \\ is going to be inserted automatically.\nJust using the \\ we can escape the whitespace.\nNow we can continue with the bandit4 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit3/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eThink about how to \u003cem\u003eescape\u003c/em\u003e the whitespaces.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAfter login in the machine as bandit3, we can see the filename \u003cem\u003e\u0026ndash;spaces in this filename\u0026ndash;\u003c/em\u003e.\u003c/p\u003e\n\u003cp\u003eNow we have 2 problems:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eSame as previous level, filename starts with \u003ccode\u003e--\u003c/code\u003e, so it will be interpreted as an argument. Address this problem using \u003ccode\u003e./\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003eFilename contains \u003cstrong\u003ewhitespaces\u003c/strong\u003e. This is an issue, as bash interpretes whitespaces to separate commands.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eTo solve the second problem, we must escape the whitespace character in some way. Here is the solution:\u003c/p\u003e","title":"Bandit3"},{"content":"Level description The password for the next level is stored in a hidden file in the inhere directory.\nTips for beginners Learn how to navigate directories in Linux. First understand what a hidden file is. Solution Listing directory files inside bandit4\u0026rsquo;s home directory, show directory inhere.\nNB: How to distinguish files and directories in Linux? Use ls -l and see the difference.\nWe have 2 options now:\nMove to inhere directory and check contens again. Check contents directly. Moving to another directory can be done using cd \u0026lt;dirName\u0026gt;. If you prefer to check directory contents directly, use ls \u0026lt;dirName\u0026gt;.\nAfter checking inhere contents via ls, we see nothing. The reason is the file is a hidden file. A hidden file in Linux is everyfile whose name starts with dot .. Hidden files are not shown by default with ls command, so we must add a special flag -a to list all files: NB: Both flags -l and -a cna be combined into a single flag -al, which is shorter to type.\nAs you can see, filename is \u0026hellip;Hidding-From-You starting with three dots. Reading file contents should be easy at this point!\nNext level is bandit5.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit4/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a hidden file in the inhere directory.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to navigate directories in Linux.\u003c/li\u003e\n\u003cli\u003eFirst understand what a hidden file is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eListing directory files inside bandit4\u0026rsquo;s home directory, show directory \u003cstrong\u003einhere\u003c/strong\u003e.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e How to distinguish files and directories in Linux? Use \u003ccode\u003els -l\u003c/code\u003e and see the difference.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eWe have 2 options now:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eMove to inhere directory and check contens again.\u003c/li\u003e\n\u003cli\u003eCheck contents directly.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eMoving to another directory can be done using \u003ccode\u003ecd \u0026lt;dirName\u0026gt;\u003c/code\u003e. If you prefer to check directory contents directly, use \u003ccode\u003els \u0026lt;dirName\u0026gt;\u003c/code\u003e.\u003c/p\u003e","title":"Bandit4"},{"content":"Level description The password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\nTips for beginners What means human-readable file? Is there any way to check filetype at Linux?. Solution Checking inhere\u0026rsquo;s contents shows some files names \u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII here\nSo now, our goal is checking if file content of every file in the folder is ASCII or not. file \u0026lt;filename\u0026gt; does the job. Note the use of *. That called a wildcard regular expression, we\u0026rsquo;ll deep into it in later levels. An easy approach could be checking every file separately:\nfile ./--file00 file ./--file01 ... file ./--file09 But that\u0026rsquo;s not funny, imagine we have 100 files to check. All the files are in the same directory, so we can use cat ./* where ./* matches every filename in the directory, applying file to every file.\nNB: Another approach is to use find with certaing flags. Try to do in different ways, don\u0026rsquo;t stick to my solution.\nThe file \u0026ndash;file00 content is not readable, so get password from \u0026ndash;file07 and continue with bandit6.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit5/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eWhat means human-readable file?\u003c/li\u003e\n\u003cli\u003eIs there any way to check filetype at Linux?.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eChecking inhere\u0026rsquo;s contents shows some files names \u003cstrong\u003e\u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09\u003c/strong\u003e. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII \u003ca href=\"https://en.wikipedia.org/wiki/ASCII\"\u003ehere\u003c/a\u003e\u003c/p\u003e","title":"Bandit5"},{"content":"Level description The password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\nhuman-readable 1033 bytes in size not executable Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution The purpose of the level is showing us how to find for files. Listing contents of inhere, we can see some folders, containing a lot of files inside: NB: Adding -R to ls shows recursively the content of every folder inside the directory listed.\nSo this time, checking every file is not an option. We need to find a file with some properties, specific size, not excutable and human-readable. Let\u0026rsquo;s explain the command we\u0026rsquo;re using:\nfind inhere/ -size 1033c ! -executable First, we specify the directory, in this case inhere. The option -size 1033c returns files of 1033 bytes. Then, with -executable we would get executable files, but we want not executable files, that\u0026rsquo;s why we are adding ! before.\nNB: By default, the -size option takes as argument the number of blocks. For example, -size 2 means 2 blocks of 512 bytes, so its 1024. The c is used to specify exact bytes. Don\u0026rsquo;t ask me why it\u0026rsquo;s c and not b 😅.\nThe property of human-readability is not implemented in find. This is not an issue, previous command returns a single file and it is human readable (we could confirm using file): Extra tip: try to use the following:\nfind inhere/ -size 1033c ! -executable | file You get the same result! The pipe | is a great tool to execute 2+ commands in one line.\nGet your password and continue with bandit7.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit6/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ehuman-readable\u003c/li\u003e\n\u003cli\u003e1033 bytes in size\u003c/li\u003e\n\u003cli\u003enot executable\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThe purpose of the level is showing us how to find for files. Listing contents of \u003cstrong\u003einhere\u003c/strong\u003e, we can see some folders, containing a lot of files inside:\n\u003cimg alt=\"bandit6_0\" loading=\"lazy\" src=\"/images/otw/bandit/bandit6/0.png\"\u003e\u003c/p\u003e","title":"Bandit6"},{"content":"Level description The password for the next level is stored somewhere on the server and has all of the following properties:\nowned by user bandit7 owned by group bandit6 33 bytes in size Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution This is very straightforward to do after completing previous level. Now we need to identify a file owned by user bandit7 and group bandi6. Furthermore, the file is somewhere on the server, which means we have to find in the root directory /.\nfind / -user bandit7 -group bandit6 -size 33c 2\u0026gt;/dev/null NB: I added that strange 2\u0026gt;/dev/null to filter error output. The reason why it works like that is more technical, for now just save this a fast way to filter errors in terminal. We get some errors because looking for files in the whole server may return some unaccesible files, as we don\u0026rsquo;t have root user permissions. We will study Linux permissions in later levels.\nWe should get a single file, containing password for bandit8.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit7/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored somewhere on the server and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eowned by user bandit7\u003c/li\u003e\n\u003cli\u003eowned by group bandit6\u003c/li\u003e\n\u003cli\u003e33 bytes in size\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is very straightforward to do after completing previous level. Now we need to identify a file owned by user bandit7 and group bandi6. Furthermore, the file is \u003cstrong\u003esomewhere on the server\u003c/strong\u003e, which means we have to find in the root directory \u003ccode\u003e/\u003c/code\u003e.\u003c/p\u003e","title":"Bandit7"},{"content":"Level description The password for the next level is stored in the file data.txt next to the word millionth.\nTips for beginners Learn how to filter file contents. Solution At previous levels, we discovered how to find for files. Now it\u0026rsquo;s time to find for content inside a file. grep command is going to help with that task.\nNB: Of course I don\u0026rsquo;t want to spoil you the password!\nNotice how this can achieved in different ways.\nUsing grep \u0026lt;keyword\u0026gt; \u0026lt;filename\u0026gt;. Using the pipe | to execute grep over the result of cat command. Take you favorite path to solve the level, and continue with bandit9.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit8/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the file \u003cstrong\u003edata.txt\u003c/strong\u003e next to the word \u003cstrong\u003emillionth\u003c/strong\u003e.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to filter file contents.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAt previous levels, we discovered how to find for files. Now it\u0026rsquo;s time to find for content inside a file. \u003ccode\u003egrep\u003c/code\u003e command is going to help with that task.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"bandit8\" loading=\"lazy\" src=\"/images/otw/bandit/bandit8/0.png\"\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e Of course I don\u0026rsquo;t want to spoil you the password!\u003c/p\u003e","title":"Bandit8"},{"content":"Level description The password for the next level is stored in the file data.txt and is the only line of text that occurs only once.\nTips for beginners First, apply sort to file content. Solution At previous levels, we discovered how to find for files. Now it\u0026rsquo;s time to find for content inside a file. grep command is going to help with that task.\nNB: Of course I don\u0026rsquo;t want to spoil you the password!\nNotice how this can achieved in different ways.\nUsing grep \u0026lt;keyword\u0026gt; \u0026lt;filename\u0026gt;. Using the pipe | to execute grep over the result of cat command. Take you favorite path to solve the level, and continue with bandit9.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit9/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the file \u003cstrong\u003edata.txt\u003c/strong\u003e and is the only line of text that occurs only once.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst, apply \u003ccode\u003esort\u003c/code\u003e to file content.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAt previous levels, we discovered how to find for files. Now it\u0026rsquo;s time to find for content inside a file. \u003ccode\u003egrep\u003c/code\u003e command is going to help with that task.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"bandit8\" loading=\"lazy\" src=\"/images/otw/bandit/bandit8/0.png\"\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e Of course I don\u0026rsquo;t want to spoil you the password!\u003c/p\u003e","title":"Bandit9"},{"content":"👨‍💻 whoami Hey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\nWhat is this❓​ This blog is basically my thoughts on several hacking topics. Here you’ll see:\nWriteups from CTF challenges, from platforms like HackTheBox or OverTheWire.\nWalkthroughs and notes on pentesting techniques I’m learning or testing.\nSome posts on cryptography — because math can be fun (sometimes).\nRandom topics that freaks like me may (just may) find interesting.\nThe idea is simple: share what I learn, document my journey, and maybe help others who are also diving into the exciting world of ethical hacking.\n📫 Contact Want to say hi, share ideas, or just geek out about hacking? Reach me here:\n📧 Email: mrb0b1073@proton.me 💻​ GitHub: mrb0b173 🟩​ HackTheBox: mrb0b1073 ","permalink":"http://localhost:1313/about/","summary":"\u003ch2 id=\"-whoami\"\u003e👨‍💻 whoami\u003c/h2\u003e\n\u003cp\u003eHey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\u003c/p\u003e\n\u003chr\u003e\n\u003ch2 id=\"what-is-this\"\u003eWhat is this❓​\u003c/h2\u003e\n\u003cp\u003eThis blog is basically my thoughts on several hacking topics. Here you’ll see:\u003c/p\u003e","title":"About"},{"content":"Hey! 👋 I\u0026rsquo;m mrb0b1073 and this is my first post.\nWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\nExcited to start this adventure!\n","permalink":"http://localhost:1313/posts/hello-world/","summary":"\u003cp\u003eHey! 👋 I\u0026rsquo;m \u003cstrong\u003emrb0b1073\u003c/strong\u003e and this is my first post.\u003c/p\u003e\n\u003cp\u003eWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\u003cbr\u003e\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\u003c/p\u003e\n\u003cp\u003eExcited to start this adventure!\u003c/p\u003e","title":"Hello World"},{"content":"Introduction If you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\nIn cybersecurity there are broadly two complementary roles: Blue Team and Red Team. Blue Teams focus on defense, monitoring, incident response, hardening systems and keeping services secure, while Red Teams simulate attackers to find weaknesses and prove what an adversary could do. Ethical hacking aligns closely with Red Team operations, but cybersecurity is highly transversal across IT. There are many specialities or areas, such as cloud security, appsec, pentesting, forensics, governance, risk management, malware analysis, etc. Every topic could deserve its own post, so let\u0026rsquo;s keep it simple and focus on ethical hacking.\nHacker philosophy Let\u0026rsquo;s start with the idea of what is exactly a hacker. A hacker is someone who explores systems to understand how they work, finds creative ways to make or fix things, and solves technical problems. Historically the word describes curiosity, craft, and a drive to improve systems — not criminality. It is important to make the distinction between hacker and cracker, also called cybercriminal. A hacker explores, builds, discloses responsibly and works to improve security. They work in authorized environments or labs. On the other hand, a cracker breaks into systems for theft, vandalism or other illicit gain.\nHere you can find the most popularized ideas often summarized as the hacker ethic:\nCuriosity first: Learn by exploring and tinkering. Freedom of information: All knowledge should be shared to help progress. This fits properly with the idea of open source. Mistrust of needless authority: Centralized control sometimes blocks innovation. It is always good to question anything, specially common assumptions. Meritocracy: Skills, craft and results matter more than titles. Craftsmanship \u0026amp; elegance: Technical beauty matters. Build clean, clever and efficient solutions. Responsability \u0026amp; ethics: Use your skills to build, fix, educate and defend, not to harm. Core fundamentals Assuming you want to init yourself in hacking, you should first build competence across three basic pillars.\nOperating Systems You should learn as much as possible about Linux and Windows. Specially Linux, all the tools you will be using are meant to be used in a Linux environment. Skill with shell is required, learn basic commands and how to interact with the OS using the terminal. Research about processes, file permissions, package management and logs. A large proportion of web servers around the world run on Linux, although Windows is also widely used. Windows knowledge is really valuable too, considering active directory is strongly used in corporate environments.\nNetworking You have to understand how computers communicate each other. Understand basic networking concepts, IP adresses, subnetting, proxies, find out how internet works. Study some protocols such as TCP/IP, HTTP, DNS or SSH. This could sound confusing for beginners, but this step is not optional! Study different client/server models and how services expose attack surfaces.\nProgramming \u0026amp; scripting Is this completely required? Maybe not for complete beginners. Does it help? Absolutely yes. Understanding how web apps or any type of application works makes things much easier. You can imagine different entry points to exploit if you understand how systems are designed. Also writing scripts in bash or python makes you more productive through automation.\nEthical Hacking foundations Once you feel confident with these 3 pillars, you can go to the next step. You can study about different topics and areas. For example, binary exploiting, web pentesting, mobile pentesting, wireless hacking, etc. You should start picking a focus, in this post we focus on web pentesting, as it is beginner friendly. Also web applications are the bread and butter in companies nowadays.\nKey concepts to study:\nCIA Triad: CIA refers to Confidentiality, Integrity and Availability. These three concepts are key in information security, and describe properties we want to ensure in our systems and information. Web Security basics, OWASP: Study the OWASP Top 10, which summarizes most frequent web security risks. Authentication and session control: Understand the concepts of Authentication and Authorization, research about how session is handled in web apps, cookies, JWT tokens, etc. Input validation \u0026amp; injection attacks: Learn about SQL Injection, Cross-Site Scripting (XSS), Code Injection, SSTI, and every injection type. Secure development lifecycle: Find out how to implement security controls in code. This can be more related to Blue Team, but as Red Teamer it is important to understand. Firewall evasion: What a firewall is and some techniques/methods to bypass. Some cryptography: Understand what a chiper and a hash are, how information is encrypted to prevent access from 3rd parties. Focusing on web, read about TLS protocol. There are many more topics you can research and learn, but this could be a nice starting point.\nTools and platforms to learn Now you have an idea of what to study, let\u0026rsquo;s see how to start in practical terms.\nSome platforms I personally recommend:\nOverTheWire: Here you can find some CTFs (Capture The Flag) which are fun to play and also really instructive. Bandit games are a must for complete beginners, as you will explore some linux and bash concepts which are basic to continue. The games are leveled by difficulty, in their web you can get all the information about how to play, only a terminal and SSH is required. This helps building your foundation in Linux OS. HackTheBox: Nº 1 platform in cybersecurity. Has a lot of resources to learn all this core fundamentals, and also red team / blue team security topics. It is focused on labs where you can test your skills hacking different boxes but if you really want to learn it is worth to invest time and money in the academy. I have to say the level here is high, specially if you try to hack machines on your own without using some guide or writeup. TryHackMe: More beginner friendly than hackthebox, it provides a lot of guided learning resources. PortSwigger Labs: Practical labs about specific topics, focused on web hacking. They are great to learn and understand different types of attacks, injections, and security misconfigurations. I would recommend digging into this once you have the theoretical basis about these concepts. I have to mention a few tools I am sure you\u0026rsquo;d end up using:\nNmap: This is probably the most famous tool in hacking, allowing you to gather information about ports and services running in a machine. Burpsuite: A proxy tool widely used in web application security testing. It basically allows you to intercept and modify web requests, which can be used to perform several types of attacks. Metasploit: The most used pentesting framework. Contains a large amount of scripts and exploits ready to run. Another crucial step here is to set up your virtual lab environment to test vulnerable applications. To achieve this goal, there are some Linux distributions like Kali, Parrot or BlackArch, but that\u0026rsquo;s a topic for another post.\nFinal thoughs To sum up, this would be my personal roadmap:\nLearn the fundamentals, specially Linux and networking. Install some Linux in a virtual machine, play with it, get comfortable with the terminal. You can start with bandit wargames in OverTheWire. Complete every level and make sure to understand everything as clear as possible. Move to guided boxes on HackTheBox. I recommend you joining their Discord, ask questions, community is great there! Take notes, repeat, learn, improve your skills. Maybe use your own lab environment, create your own vulnerable apps. Hacking is a mixing of curiosity, study and practice. Being passionate and motivated about it is really helpful and will definitely speed up the process. The path is long and really challenging, so keep it going!\n\u0026ldquo;Yes, I am a criminal. My crime is that of curiosity.\u0026rdquo; — The Mentor (Loyd Blankenship) at The Hacker Manifesto\n","permalink":"http://localhost:1313/posts/starting-point/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIf you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\u003c/p\u003e","title":"Starting Point"},{"content":"Introduction In this post series we are going to solve every level from bandit in OverTheWire This guide pretends to be a writeup containing the solutions of the level, designed for beginners.\nTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing WSL, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\nEvery section will contain the solution as well as some tips for people who is absolutely beginner.\nTips First of all, some tips:\nDo not use this as first resource to solve the levels. Try on your own, make mistakes and learn from them. Only check the solution as last resource or if you are completely new and you have absolutely no idea about what to do next. Take notes from your learning. Write up commands, tips and everything which can be useful in the future. Make sure to understand everything. Is a good idea to note the passwords for every level. If you want to continue letter, you can simply log in in the desired level. It is annoying to repeat everything! Follow the tips and information provided at OverTheWire website. Levels Here is my solution for every level:\nBandit0 Bandit1 Bandit2 Bandit3 Bandit4 Bandit5 Bandit6 Bandit7 ","permalink":"http://localhost:1313/posts/otw/bandit/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIn this post series we are going to solve every level from bandit in \u003ca href=\"https://overthewire.org/wargames/bandit/\"\u003e\u003cem\u003eOverTheWire\u003c/em\u003e\u003c/a\u003e\nThis guide pretends to be a writeup containing the solutions of the level, designed for beginners.\u003c/p\u003e\n\u003cp\u003eTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing \u003ca href=\"https://learn.microsoft.com/en-us/windows/wsl/install\"\u003eWSL\u003c/a\u003e, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\u003c/p\u003e","title":"Bandit"},{"content":"Level description The goal of this level is for you to log into the game using SSH. The host to which you need to connect is bandit.labs.overthewire.org, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\nTips for beginners Read a bit about what SSH is. Research about what a port is. Solution This is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go here.\nAt Linux, we can use ssh client to connect to the server. It should be installed by default on your system. If not, please first research about how to install. Once you have the SSH client installed, you can log in into the first level as follows:\nssh bandit0@bandit.labs.overthewire.org -p 2220 Syntax is simple: ssh \u0026lt;username\u0026gt;@\u0026lt;hostname\u0026gt; -p \u0026lt;port\u0026gt;. Usually SSH runs on port 22 by default, but they changed to port 2220 so we must specify it in the command.\nOnce you try to log in, you will see something like this: NB: If it\u0026rsquo;s the first time you try to log in, you will be asked about the authenticity of the host. Just type yes.\nType the password bandit0 and press enter. Now you are inside bandit server, ready to begin with bandit1!\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit0/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe goal of this level is for you to log into the game using SSH. The host to which you need to connect is \u003cstrong\u003ebandit.labs.overthewire.org\u003c/strong\u003e, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eRead a bit about what SSH is.\u003c/li\u003e\n\u003cli\u003eResearch about what a port is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go \u003ca href=\"https://en.wikipedia.org/wiki/Secure_Shell\"\u003ehere\u003c/a\u003e.\u003c/p\u003e","title":"Bandit0"},{"content":"Level description The password for the next level is stored in a file called readme located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\nTips for beginners Learn about home directory in Linux. Learn to use cat and ls commands. Solution First step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\nls This shows in terminal the files at the current directory. There you will see the readme file.\nNow we can to check the contents, so let\u0026rsquo;s use cat:\ncat readme To read a file, we use cat \u0026lt;filename\u0026gt;.\nNB: Not every file is human readable in Linux. We deep more about this in later levels.\nThe content of the readme file reveals the password for bandit2 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit1/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u003cstrong\u003ereadme\u003c/strong\u003e located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn about home directory in Linux.\u003c/li\u003e\n\u003cli\u003eLearn to use \u003ccode\u003ecat\u003c/code\u003e and \u003ccode\u003els\u003c/code\u003e commands.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eFirst step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\u003c/p\u003e","title":"Bandit1"},{"content":"Level description The password for the next level is stored in a file called - located in the home directory\nTips for beginners Try to understand why previous solution is not working as you expect. Solution You may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our cat command: The terminal is waiting for something else. This happens due to character - is used to pass arguments to our commands, and the linux shell is interpreting that. To prevent that, we could use:\ncat ./- NB: Dot . is used to refer current directory. The slash / is used at the end of directory name.\nWe get the password for bandit3 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit2/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called - located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eTry to understand why previous solution is not working as you expect.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eYou may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our \u003ccode\u003ecat\u003c/code\u003e command:\n\u003cimg alt=\"bandit2\" loading=\"lazy\" src=\"/images/otw/bandit/bandit2/0.png\"\u003e\u003c/p\u003e\n\u003cp\u003eThe terminal is \u003cem\u003ewaiting\u003c/em\u003e for something else. This happens due to character \u003ccode\u003e-\u003c/code\u003e is used to pass arguments to our commands, and the linux shell is interpreting that.\nTo prevent that, we could use:\u003c/p\u003e","title":"Bandit2"},{"content":"Level description The password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\nTips for beginners Think about how to escape the whitespaces. Solution After login in the machine as bandit3, we can see the filename \u0026ndash;spaces in this filename\u0026ndash;.\nNow we have 2 problems:\nSame as previous level, filename starts with --, so it will be interpreted as an argument. Address this problem using ./. Filename contains whitespaces. This is an issue, as bash interpretes whitespaces to separate commands. To solve the second problem, we must escape the whitespace character in some way. Here is the solution:\ncat ./--spaces\\ in\\ this\\ filename-- NB: Little trick, you can start writting filename and press Tab to autocomplete the name. The \\ is going to be inserted automatically.\nJust using the \\ we can escape the whitespace.\nNow we can continue with the bandit4 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit3/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eThink about how to \u003cem\u003eescape\u003c/em\u003e the whitespaces.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAfter login in the machine as bandit3, we can see the filename \u003cem\u003e\u0026ndash;spaces in this filename\u0026ndash;\u003c/em\u003e.\u003c/p\u003e\n\u003cp\u003eNow we have 2 problems:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eSame as previous level, filename starts with \u003ccode\u003e--\u003c/code\u003e, so it will be interpreted as an argument. Address this problem using \u003ccode\u003e./\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003eFilename contains \u003cstrong\u003ewhitespaces\u003c/strong\u003e. This is an issue, as bash interpretes whitespaces to separate commands.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eTo solve the second problem, we must escape the whitespace character in some way. Here is the solution:\u003c/p\u003e","title":"Bandit3"},{"content":"Level description The password for the next level is stored in a hidden file in the inhere directory.\nTips for beginners Learn how to navigate directories in Linux. First understand what a hidden file is. Solution Listing directory files inside bandit4\u0026rsquo;s home directory, show directory inhere.\nNB: How to distinguish files and directories in Linux? Use ls -l and see the difference.\nWe have 2 options now:\nMove to inhere directory and check contens again. Check contents directly. Moving to another directory can be done using cd \u0026lt;dirName\u0026gt;. If you prefer to check directory contents directly, use ls \u0026lt;dirName\u0026gt;.\nAfter checking inhere contents via ls, we see nothing. The reason is the file is a hidden file. A hidden file in Linux is everyfile whose name starts with dot .. Hidden files are not shown by default with ls command, so we must add a special flag -a to list all files: NB: Both flags -l and -a cna be combined into a single flag -al, which is shorter to type.\nAs you can see, filename is \u0026hellip;Hidding-From-You starting with three dots. Reading file contents should be easy at this point!\nNext level is bandit5.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit4/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a hidden file in the inhere directory.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to navigate directories in Linux.\u003c/li\u003e\n\u003cli\u003eFirst understand what a hidden file is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eListing directory files inside bandit4\u0026rsquo;s home directory, show directory \u003cstrong\u003einhere\u003c/strong\u003e.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e How to distinguish files and directories in Linux? Use \u003ccode\u003els -l\u003c/code\u003e and see the difference.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eWe have 2 options now:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eMove to inhere directory and check contens again.\u003c/li\u003e\n\u003cli\u003eCheck contents directly.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eMoving to another directory can be done using \u003ccode\u003ecd \u0026lt;dirName\u0026gt;\u003c/code\u003e. If you prefer to check directory contents directly, use \u003ccode\u003els \u0026lt;dirName\u0026gt;\u003c/code\u003e.\u003c/p\u003e","title":"Bandit4"},{"content":"Level description The password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\nTips for beginners What means human-readable file? Is there any way to check filetype at Linux?. Solution Checking inhere\u0026rsquo;s contents shows some files names \u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII here\nSo now, our goal is checking if file content of every file in the folder is ASCII or not. file \u0026lt;filename\u0026gt; does the job. Note the use of *. That called a wildcard regular expression, we\u0026rsquo;ll deep into it in later levels. An easy approach could be checking every file separately:\nfile ./--file00 file ./--file01 ... file ./--file09 But that\u0026rsquo;s not funny, imagine we have 100 files to check. All the files are in the same directory, so we can use cat ./* where ./* matches every filename in the directory, applying file to every file.\nNB: Another approach is to use find with certaing flags. Try to do in different ways, don\u0026rsquo;t stick to my solution.\nThe file \u0026ndash;file00 content is not readable, so get password from \u0026ndash;file07 and continue with bandit6.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit5/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eWhat means human-readable file?\u003c/li\u003e\n\u003cli\u003eIs there any way to check filetype at Linux?.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eChecking inhere\u0026rsquo;s contents shows some files names \u003cstrong\u003e\u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09\u003c/strong\u003e. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII \u003ca href=\"https://en.wikipedia.org/wiki/ASCII\"\u003ehere\u003c/a\u003e\u003c/p\u003e","title":"Bandit5"},{"content":"Level description The password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\nhuman-readable 1033 bytes in size not executable Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution The purpose of the level is showing us how to find for files. Listing contents of inhere, we can see some folders, containing a lot of files inside: NB: Adding -R to ls shows recursively the content of every folder inside the directory listed.\nSo this time, checking every file is not an option. We need to find a file with some properties, specific size, not excutable and human-readable. Let\u0026rsquo;s explain the command we\u0026rsquo;re using:\nfind inhere/ -size 1033c ! -executable First, we specify the directory, in this case inhere. The option -size 1033c returns files of 1033 bytes. Then, with -executable we would get executable files, but we want not executable files, that\u0026rsquo;s why we are adding ! before.\nNB: By default, the -size option takes as argument the number of blocks. For example, -size 2 means 2 blocks of 512 bytes, so its 1024. The c is used to specify exact bytes. Don\u0026rsquo;t ask me why it\u0026rsquo;s c and not b 😅.\nThe property of human-readability is not implemented in find. This is not an issue, previous command returns a single file and it is human readable (we could confirm using file): Extra tip: try to use the following:\nfind inhere/ -size 1033c ! -executable | file You get the same result! The pipe | is a great tool to execute 2+ commands in one line.\nGet your password and continue with bandit7.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit6/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ehuman-readable\u003c/li\u003e\n\u003cli\u003e1033 bytes in size\u003c/li\u003e\n\u003cli\u003enot executable\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThe purpose of the level is showing us how to find for files. Listing contents of \u003cstrong\u003einhere\u003c/strong\u003e, we can see some folders, containing a lot of files inside:\n\u003cimg alt=\"bandit6_0\" loading=\"lazy\" src=\"/images/otw/bandit/bandit6/0.png\"\u003e\u003c/p\u003e","title":"Bandit6"},{"content":"Level description The password for the next level is stored somewhere on the server and has all of the following properties:\nowned by user bandit7 owned by group bandit6 33 bytes in size Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution This is very straightforward to do after completing previous level. Now we need to identify a file owned by user bandit7 and group bandi6. Furthermore, the file is somewhere on the server, which means we have to find in the root directory /.\nfind / -user bandit7 -group bandit6 -size 33c 2\u0026gt;/dev/null NB: I added that strange 2\u0026gt;/dev/null to filter error output. The reason why it works like that is more technical, for now just save this a fast way to filter errors in terminal. We get some errors because looking for files in the whole server may return some unaccesible files, as we don\u0026rsquo;t have root user permissions. We will study Linux permissions in later levels.\nWe should get a single file, containing password for bandit8.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit7/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored somewhere on the server and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eowned by user bandit7\u003c/li\u003e\n\u003cli\u003eowned by group bandit6\u003c/li\u003e\n\u003cli\u003e33 bytes in size\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is very straightforward to do after completing previous level. Now we need to identify a file owned by user bandit7 and group bandi6. Furthermore, the file is \u003cstrong\u003esomewhere on the server\u003c/strong\u003e, which means we have to find in the root directory \u003ccode\u003e/\u003c/code\u003e.\u003c/p\u003e","title":"Bandit7"},{"content":"Level description The password for the next level is stored in the file data.txt next to the word millionth.\nTips for beginners Learn how to filter file contents. Solution At previous levels, we discovered how to find for files. Now it\u0026rsquo;s time to find for content inside a file. grep command is going to help with that task.\nNB: Of course I don\u0026rsquo;t want to spoil you the password!\nNotice how this can achieved in different ways.\nUsing grep \u0026lt;keyword\u0026gt; \u0026lt;filename\u0026gt;. Using the pipe | to execute grep over the result of cat command. Take you favorite path to solve the level, and continue with bandit9.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit8/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the file \u003cstrong\u003edata.txt\u003c/strong\u003e next to the word \u003cstrong\u003emillionth\u003c/strong\u003e.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to filter file contents.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAt previous levels, we discovered how to find for files. Now it\u0026rsquo;s time to find for content inside a file. \u003ccode\u003egrep\u003c/code\u003e command is going to help with that task.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"bandit8\" loading=\"lazy\" src=\"/images/otw/bandit/bandit8/0.png\"\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e Of course I don\u0026rsquo;t want to spoil you the password!\u003c/p\u003e","title":"Bandit8"},{"content":"Level description The password for the next level is stored in the file data.txt and is the only line of text that occurs only once.\nTips for beginners First, apply sort to file content. Solution This level is a bit tricky.\nNB: Of course I don\u0026rsquo;t want to spoil you the password!\nNotice how this can achieved in different ways.\nUsing grep \u0026lt;keyword\u0026gt; \u0026lt;filename\u0026gt;. Using the pipe | to execute grep over the result of cat command. Take you favorite path to solve the level, and continue with bandit9.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit9/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the file \u003cstrong\u003edata.txt\u003c/strong\u003e and is the only line of text that occurs only once.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst, apply \u003ccode\u003esort\u003c/code\u003e to file content.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis level is a bit tricky.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"bandit8\" loading=\"lazy\" src=\"/images/otw/bandit/bandit8/0.png\"\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e Of course I don\u0026rsquo;t want to spoil you the password!\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eNotice how this can achieved in different ways.\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eUsing \u003ccode\u003egrep \u0026lt;keyword\u0026gt; \u0026lt;filename\u0026gt;\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003eUsing the pipe \u003ccode\u003e|\u003c/code\u003e to execute \u003ccode\u003egrep\u003c/code\u003e over the result of \u003ccode\u003ecat\u003c/code\u003e command.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eTake you favorite path to solve the level, and continue with \u003ca href=\"/posts/otw/bandit/bandit9/\"\u003ebandit9\u003c/a\u003e.\u003c/p\u003e","title":"Bandit9"},{"content":"👨‍💻 whoami Hey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\nWhat is this❓​ This blog is basically my thoughts on several hacking topics. Here you’ll see:\nWriteups from CTF challenges, from platforms like HackTheBox or OverTheWire.\nWalkthroughs and notes on pentesting techniques I’m learning or testing.\nSome posts on cryptography — because math can be fun (sometimes).\nRandom topics that freaks like me may (just may) find interesting.\nThe idea is simple: share what I learn, document my journey, and maybe help others who are also diving into the exciting world of ethical hacking.\n📫 Contact Want to say hi, share ideas, or just geek out about hacking? Reach me here:\n📧 Email: mrb0b1073@proton.me 💻​ GitHub: mrb0b173 🟩​ HackTheBox: mrb0b1073 ","permalink":"http://localhost:1313/about/","summary":"\u003ch2 id=\"-whoami\"\u003e👨‍💻 whoami\u003c/h2\u003e\n\u003cp\u003eHey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\u003c/p\u003e\n\u003chr\u003e\n\u003ch2 id=\"what-is-this\"\u003eWhat is this❓​\u003c/h2\u003e\n\u003cp\u003eThis blog is basically my thoughts on several hacking topics. Here you’ll see:\u003c/p\u003e","title":"About"},{"content":"Hey! 👋 I\u0026rsquo;m mrb0b1073 and this is my first post.\nWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\nExcited to start this adventure!\n","permalink":"http://localhost:1313/posts/hello-world/","summary":"\u003cp\u003eHey! 👋 I\u0026rsquo;m \u003cstrong\u003emrb0b1073\u003c/strong\u003e and this is my first post.\u003c/p\u003e\n\u003cp\u003eWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\u003cbr\u003e\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\u003c/p\u003e\n\u003cp\u003eExcited to start this adventure!\u003c/p\u003e","title":"Hello World"},{"content":"Introduction If you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\nIn cybersecurity there are broadly two complementary roles: Blue Team and Red Team. Blue Teams focus on defense, monitoring, incident response, hardening systems and keeping services secure, while Red Teams simulate attackers to find weaknesses and prove what an adversary could do. Ethical hacking aligns closely with Red Team operations, but cybersecurity is highly transversal across IT. There are many specialities or areas, such as cloud security, appsec, pentesting, forensics, governance, risk management, malware analysis, etc. Every topic could deserve its own post, so let\u0026rsquo;s keep it simple and focus on ethical hacking.\nHacker philosophy Let\u0026rsquo;s start with the idea of what is exactly a hacker. A hacker is someone who explores systems to understand how they work, finds creative ways to make or fix things, and solves technical problems. Historically the word describes curiosity, craft, and a drive to improve systems — not criminality. It is important to make the distinction between hacker and cracker, also called cybercriminal. A hacker explores, builds, discloses responsibly and works to improve security. They work in authorized environments or labs. On the other hand, a cracker breaks into systems for theft, vandalism or other illicit gain.\nHere you can find the most popularized ideas often summarized as the hacker ethic:\nCuriosity first: Learn by exploring and tinkering. Freedom of information: All knowledge should be shared to help progress. This fits properly with the idea of open source. Mistrust of needless authority: Centralized control sometimes blocks innovation. It is always good to question anything, specially common assumptions. Meritocracy: Skills, craft and results matter more than titles. Craftsmanship \u0026amp; elegance: Technical beauty matters. Build clean, clever and efficient solutions. Responsability \u0026amp; ethics: Use your skills to build, fix, educate and defend, not to harm. Core fundamentals Assuming you want to init yourself in hacking, you should first build competence across three basic pillars.\nOperating Systems You should learn as much as possible about Linux and Windows. Specially Linux, all the tools you will be using are meant to be used in a Linux environment. Skill with shell is required, learn basic commands and how to interact with the OS using the terminal. Research about processes, file permissions, package management and logs. A large proportion of web servers around the world run on Linux, although Windows is also widely used. Windows knowledge is really valuable too, considering active directory is strongly used in corporate environments.\nNetworking You have to understand how computers communicate each other. Understand basic networking concepts, IP adresses, subnetting, proxies, find out how internet works. Study some protocols such as TCP/IP, HTTP, DNS or SSH. This could sound confusing for beginners, but this step is not optional! Study different client/server models and how services expose attack surfaces.\nProgramming \u0026amp; scripting Is this completely required? Maybe not for complete beginners. Does it help? Absolutely yes. Understanding how web apps or any type of application works makes things much easier. You can imagine different entry points to exploit if you understand how systems are designed. Also writing scripts in bash or python makes you more productive through automation.\nEthical Hacking foundations Once you feel confident with these 3 pillars, you can go to the next step. You can study about different topics and areas. For example, binary exploiting, web pentesting, mobile pentesting, wireless hacking, etc. You should start picking a focus, in this post we focus on web pentesting, as it is beginner friendly. Also web applications are the bread and butter in companies nowadays.\nKey concepts to study:\nCIA Triad: CIA refers to Confidentiality, Integrity and Availability. These three concepts are key in information security, and describe properties we want to ensure in our systems and information. Web Security basics, OWASP: Study the OWASP Top 10, which summarizes most frequent web security risks. Authentication and session control: Understand the concepts of Authentication and Authorization, research about how session is handled in web apps, cookies, JWT tokens, etc. Input validation \u0026amp; injection attacks: Learn about SQL Injection, Cross-Site Scripting (XSS), Code Injection, SSTI, and every injection type. Secure development lifecycle: Find out how to implement security controls in code. This can be more related to Blue Team, but as Red Teamer it is important to understand. Firewall evasion: What a firewall is and some techniques/methods to bypass. Some cryptography: Understand what a chiper and a hash are, how information is encrypted to prevent access from 3rd parties. Focusing on web, read about TLS protocol. There are many more topics you can research and learn, but this could be a nice starting point.\nTools and platforms to learn Now you have an idea of what to study, let\u0026rsquo;s see how to start in practical terms.\nSome platforms I personally recommend:\nOverTheWire: Here you can find some CTFs (Capture The Flag) which are fun to play and also really instructive. Bandit games are a must for complete beginners, as you will explore some linux and bash concepts which are basic to continue. The games are leveled by difficulty, in their web you can get all the information about how to play, only a terminal and SSH is required. This helps building your foundation in Linux OS. HackTheBox: Nº 1 platform in cybersecurity. Has a lot of resources to learn all this core fundamentals, and also red team / blue team security topics. It is focused on labs where you can test your skills hacking different boxes but if you really want to learn it is worth to invest time and money in the academy. I have to say the level here is high, specially if you try to hack machines on your own without using some guide or writeup. TryHackMe: More beginner friendly than hackthebox, it provides a lot of guided learning resources. PortSwigger Labs: Practical labs about specific topics, focused on web hacking. They are great to learn and understand different types of attacks, injections, and security misconfigurations. I would recommend digging into this once you have the theoretical basis about these concepts. I have to mention a few tools I am sure you\u0026rsquo;d end up using:\nNmap: This is probably the most famous tool in hacking, allowing you to gather information about ports and services running in a machine. Burpsuite: A proxy tool widely used in web application security testing. It basically allows you to intercept and modify web requests, which can be used to perform several types of attacks. Metasploit: The most used pentesting framework. Contains a large amount of scripts and exploits ready to run. Another crucial step here is to set up your virtual lab environment to test vulnerable applications. To achieve this goal, there are some Linux distributions like Kali, Parrot or BlackArch, but that\u0026rsquo;s a topic for another post.\nFinal thoughs To sum up, this would be my personal roadmap:\nLearn the fundamentals, specially Linux and networking. Install some Linux in a virtual machine, play with it, get comfortable with the terminal. You can start with bandit wargames in OverTheWire. Complete every level and make sure to understand everything as clear as possible. Move to guided boxes on HackTheBox. I recommend you joining their Discord, ask questions, community is great there! Take notes, repeat, learn, improve your skills. Maybe use your own lab environment, create your own vulnerable apps. Hacking is a mixing of curiosity, study and practice. Being passionate and motivated about it is really helpful and will definitely speed up the process. The path is long and really challenging, so keep it going!\n\u0026ldquo;Yes, I am a criminal. My crime is that of curiosity.\u0026rdquo; — The Mentor (Loyd Blankenship) at The Hacker Manifesto\n","permalink":"http://localhost:1313/posts/starting-point/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIf you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\u003c/p\u003e","title":"Starting Point"},{"content":"Introduction In this post series we are going to solve every level from bandit in OverTheWire This guide pretends to be a writeup containing the solutions of the level, designed for beginners.\nTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing WSL, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\nEvery section will contain the solution as well as some tips for people who is absolutely beginner.\nTips First of all, some tips:\nDo not use this as first resource to solve the levels. Try on your own, make mistakes and learn from them. Only check the solution as last resource or if you are completely new and you have absolutely no idea about what to do next. Take notes from your learning. Write up commands, tips and everything which can be useful in the future. Make sure to understand everything. Is a good idea to note the passwords for every level. If you want to continue letter, you can simply log in in the desired level. It is annoying to repeat everything! Follow the tips and information provided at OverTheWire website. Levels Here is my solution for every level:\nBandit0 Bandit1 Bandit2 Bandit3 Bandit4 Bandit5 Bandit6 Bandit7 ","permalink":"http://localhost:1313/posts/otw/bandit/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIn this post series we are going to solve every level from bandit in \u003ca href=\"https://overthewire.org/wargames/bandit/\"\u003e\u003cem\u003eOverTheWire\u003c/em\u003e\u003c/a\u003e\nThis guide pretends to be a writeup containing the solutions of the level, designed for beginners.\u003c/p\u003e\n\u003cp\u003eTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing \u003ca href=\"https://learn.microsoft.com/en-us/windows/wsl/install\"\u003eWSL\u003c/a\u003e, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\u003c/p\u003e","title":"Bandit"},{"content":"Level description The goal of this level is for you to log into the game using SSH. The host to which you need to connect is bandit.labs.overthewire.org, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\nTips for beginners Read a bit about what SSH is. Research about what a port is. Solution This is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go here.\nAt Linux, we can use ssh client to connect to the server. It should be installed by default on your system. If not, please first research about how to install. Once you have the SSH client installed, you can log in into the first level as follows:\nssh bandit0@bandit.labs.overthewire.org -p 2220 Syntax is simple: ssh \u0026lt;username\u0026gt;@\u0026lt;hostname\u0026gt; -p \u0026lt;port\u0026gt;. Usually SSH runs on port 22 by default, but they changed to port 2220 so we must specify it in the command.\nOnce you try to log in, you will see something like this: NB: If it\u0026rsquo;s the first time you try to log in, you will be asked about the authenticity of the host. Just type yes.\nType the password bandit0 and press enter. Now you are inside bandit server, ready to begin with bandit1!\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit0/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe goal of this level is for you to log into the game using SSH. The host to which you need to connect is \u003cstrong\u003ebandit.labs.overthewire.org\u003c/strong\u003e, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eRead a bit about what SSH is.\u003c/li\u003e\n\u003cli\u003eResearch about what a port is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go \u003ca href=\"https://en.wikipedia.org/wiki/Secure_Shell\"\u003ehere\u003c/a\u003e.\u003c/p\u003e","title":"Bandit0"},{"content":"Level description The password for the next level is stored in a file called readme located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\nTips for beginners Learn about home directory in Linux. Learn to use cat and ls commands. Solution First step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\nls This shows in terminal the files at the current directory. There you will see the readme file.\nNow we can to check the contents, so let\u0026rsquo;s use cat:\ncat readme To read a file, we use cat \u0026lt;filename\u0026gt;.\nNB: Not every file is human readable in Linux. We deep more about this in later levels.\nThe content of the readme file reveals the password for bandit2 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit1/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u003cstrong\u003ereadme\u003c/strong\u003e located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn about home directory in Linux.\u003c/li\u003e\n\u003cli\u003eLearn to use \u003ccode\u003ecat\u003c/code\u003e and \u003ccode\u003els\u003c/code\u003e commands.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eFirst step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\u003c/p\u003e","title":"Bandit1"},{"content":"Level description The password for the next level is stored in a file called - located in the home directory\nTips for beginners Try to understand why previous solution is not working as you expect. Solution You may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our cat command: The terminal is waiting for something else. This happens due to character - is used to pass arguments to our commands, and the linux shell is interpreting that. To prevent that, we could use:\ncat ./- NB: Dot . is used to refer current directory. The slash / is used at the end of directory name.\nWe get the password for bandit3 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit2/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called - located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eTry to understand why previous solution is not working as you expect.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eYou may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our \u003ccode\u003ecat\u003c/code\u003e command:\n\u003cimg alt=\"bandit2\" loading=\"lazy\" src=\"/images/otw/bandit/bandit2/0.png\"\u003e\u003c/p\u003e\n\u003cp\u003eThe terminal is \u003cem\u003ewaiting\u003c/em\u003e for something else. This happens due to character \u003ccode\u003e-\u003c/code\u003e is used to pass arguments to our commands, and the linux shell is interpreting that.\nTo prevent that, we could use:\u003c/p\u003e","title":"Bandit2"},{"content":"Level description The password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\nTips for beginners Think about how to escape the whitespaces. Solution After login in the machine as bandit3, we can see the filename \u0026ndash;spaces in this filename\u0026ndash;.\nNow we have 2 problems:\nSame as previous level, filename starts with --, so it will be interpreted as an argument. Address this problem using ./. Filename contains whitespaces. This is an issue, as bash interpretes whitespaces to separate commands. To solve the second problem, we must escape the whitespace character in some way. Here is the solution:\ncat ./--spaces\\ in\\ this\\ filename-- NB: Little trick, you can start writting filename and press Tab to autocomplete the name. The \\ is going to be inserted automatically.\nJust using the \\ we can escape the whitespace.\nNow we can continue with the bandit4 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit3/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eThink about how to \u003cem\u003eescape\u003c/em\u003e the whitespaces.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAfter login in the machine as bandit3, we can see the filename \u003cem\u003e\u0026ndash;spaces in this filename\u0026ndash;\u003c/em\u003e.\u003c/p\u003e\n\u003cp\u003eNow we have 2 problems:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eSame as previous level, filename starts with \u003ccode\u003e--\u003c/code\u003e, so it will be interpreted as an argument. Address this problem using \u003ccode\u003e./\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003eFilename contains \u003cstrong\u003ewhitespaces\u003c/strong\u003e. This is an issue, as bash interpretes whitespaces to separate commands.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eTo solve the second problem, we must escape the whitespace character in some way. Here is the solution:\u003c/p\u003e","title":"Bandit3"},{"content":"Level description The password for the next level is stored in a hidden file in the inhere directory.\nTips for beginners Learn how to navigate directories in Linux. First understand what a hidden file is. Solution Listing directory files inside bandit4\u0026rsquo;s home directory, show directory inhere.\nNB: How to distinguish files and directories in Linux? Use ls -l and see the difference.\nWe have 2 options now:\nMove to inhere directory and check contens again. Check contents directly. Moving to another directory can be done using cd \u0026lt;dirName\u0026gt;. If you prefer to check directory contents directly, use ls \u0026lt;dirName\u0026gt;.\nAfter checking inhere contents via ls, we see nothing. The reason is the file is a hidden file. A hidden file in Linux is everyfile whose name starts with dot .. Hidden files are not shown by default with ls command, so we must add a special flag -a to list all files: NB: Both flags -l and -a cna be combined into a single flag -al, which is shorter to type.\nAs you can see, filename is \u0026hellip;Hidding-From-You starting with three dots. Reading file contents should be easy at this point!\nNext level is bandit5.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit4/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a hidden file in the inhere directory.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to navigate directories in Linux.\u003c/li\u003e\n\u003cli\u003eFirst understand what a hidden file is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eListing directory files inside bandit4\u0026rsquo;s home directory, show directory \u003cstrong\u003einhere\u003c/strong\u003e.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e How to distinguish files and directories in Linux? Use \u003ccode\u003els -l\u003c/code\u003e and see the difference.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eWe have 2 options now:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eMove to inhere directory and check contens again.\u003c/li\u003e\n\u003cli\u003eCheck contents directly.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eMoving to another directory can be done using \u003ccode\u003ecd \u0026lt;dirName\u0026gt;\u003c/code\u003e. If you prefer to check directory contents directly, use \u003ccode\u003els \u0026lt;dirName\u0026gt;\u003c/code\u003e.\u003c/p\u003e","title":"Bandit4"},{"content":"Level description The password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\nTips for beginners What means human-readable file? Is there any way to check filetype at Linux?. Solution Checking inhere\u0026rsquo;s contents shows some files names \u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII here\nSo now, our goal is checking if file content of every file in the folder is ASCII or not. file \u0026lt;filename\u0026gt; does the job. Note the use of *. That called a wildcard regular expression, we\u0026rsquo;ll deep into it in later levels. An easy approach could be checking every file separately:\nfile ./--file00 file ./--file01 ... file ./--file09 But that\u0026rsquo;s not funny, imagine we have 100 files to check. All the files are in the same directory, so we can use cat ./* where ./* matches every filename in the directory, applying file to every file.\nNB: Another approach is to use find with certaing flags. Try to do in different ways, don\u0026rsquo;t stick to my solution.\nThe file \u0026ndash;file00 content is not readable, so get password from \u0026ndash;file07 and continue with bandit6.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit5/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eWhat means human-readable file?\u003c/li\u003e\n\u003cli\u003eIs there any way to check filetype at Linux?.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eChecking inhere\u0026rsquo;s contents shows some files names \u003cstrong\u003e\u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09\u003c/strong\u003e. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII \u003ca href=\"https://en.wikipedia.org/wiki/ASCII\"\u003ehere\u003c/a\u003e\u003c/p\u003e","title":"Bandit5"},{"content":"Level description The password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\nhuman-readable 1033 bytes in size not executable Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution The purpose of the level is showing us how to find for files. Listing contents of inhere, we can see some folders, containing a lot of files inside: NB: Adding -R to ls shows recursively the content of every folder inside the directory listed.\nSo this time, checking every file is not an option. We need to find a file with some properties, specific size, not excutable and human-readable. Let\u0026rsquo;s explain the command we\u0026rsquo;re using:\nfind inhere/ -size 1033c ! -executable First, we specify the directory, in this case inhere. The option -size 1033c returns files of 1033 bytes. Then, with -executable we would get executable files, but we want not executable files, that\u0026rsquo;s why we are adding ! before.\nNB: By default, the -size option takes as argument the number of blocks. For example, -size 2 means 2 blocks of 512 bytes, so its 1024. The c is used to specify exact bytes. Don\u0026rsquo;t ask me why it\u0026rsquo;s c and not b 😅.\nThe property of human-readability is not implemented in find. This is not an issue, previous command returns a single file and it is human readable (we could confirm using file): Extra tip: try to use the following:\nfind inhere/ -size 1033c ! -executable | file You get the same result! The pipe | is a great tool to execute 2+ commands in one line.\nGet your password and continue with bandit7.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit6/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ehuman-readable\u003c/li\u003e\n\u003cli\u003e1033 bytes in size\u003c/li\u003e\n\u003cli\u003enot executable\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThe purpose of the level is showing us how to find for files. Listing contents of \u003cstrong\u003einhere\u003c/strong\u003e, we can see some folders, containing a lot of files inside:\n\u003cimg alt=\"bandit6_0\" loading=\"lazy\" src=\"/images/otw/bandit/bandit6/0.png\"\u003e\u003c/p\u003e","title":"Bandit6"},{"content":"Level description The password for the next level is stored somewhere on the server and has all of the following properties:\nowned by user bandit7 owned by group bandit6 33 bytes in size Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution This is very straightforward to do after completing previous level. Now we need to identify a file owned by user bandit7 and group bandi6. Furthermore, the file is somewhere on the server, which means we have to find in the root directory /.\nfind / -user bandit7 -group bandit6 -size 33c 2\u0026gt;/dev/null NB: I added that strange 2\u0026gt;/dev/null to filter error output. The reason why it works like that is more technical, for now just save this a fast way to filter errors in terminal. We get some errors because looking for files in the whole server may return some unaccesible files, as we don\u0026rsquo;t have root user permissions. We will study Linux permissions in later levels.\nWe should get a single file, containing password for bandit8.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit7/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored somewhere on the server and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eowned by user bandit7\u003c/li\u003e\n\u003cli\u003eowned by group bandit6\u003c/li\u003e\n\u003cli\u003e33 bytes in size\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is very straightforward to do after completing previous level. Now we need to identify a file owned by user bandit7 and group bandi6. Furthermore, the file is \u003cstrong\u003esomewhere on the server\u003c/strong\u003e, which means we have to find in the root directory \u003ccode\u003e/\u003c/code\u003e.\u003c/p\u003e","title":"Bandit7"},{"content":"Level description The password for the next level is stored in the file data.txt next to the word millionth.\nTips for beginners Learn how to filter file contents. Solution At previous levels, we discovered how to find for files. Now it\u0026rsquo;s time to find for content inside a file. grep command is going to help with that task.\nNB: Of course I don\u0026rsquo;t want to spoil you the password!\nNotice how this can achieved in different ways.\nUsing grep \u0026lt;keyword\u0026gt; \u0026lt;filename\u0026gt;. Using the pipe | to execute grep over the result of cat command. Take you favorite path to solve the level, and continue with bandit9.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit8/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the file \u003cstrong\u003edata.txt\u003c/strong\u003e next to the word \u003cstrong\u003emillionth\u003c/strong\u003e.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to filter file contents.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAt previous levels, we discovered how to find for files. Now it\u0026rsquo;s time to find for content inside a file. \u003ccode\u003egrep\u003c/code\u003e command is going to help with that task.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"bandit8\" loading=\"lazy\" src=\"/images/otw/bandit/bandit8/0.png\"\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e Of course I don\u0026rsquo;t want to spoil you the password!\u003c/p\u003e","title":"Bandit8"},{"content":"Level description The password for the next level is stored in the file data.txt and is the only line of text that occurs only once.\nTips for beginners First, apply sort to file content. Solution This level is a bit tricky. First, examine the file contents. Using head shows the 10 first lines of a file:\nNB: Of course I don\u0026rsquo;t want to spoil you the password!\nNotice how this can achieved in different ways.\nUsing grep \u0026lt;keyword\u0026gt; \u0026lt;filename\u0026gt;. Using the pipe | to execute grep over the result of cat command. Take you favorite path to solve the level, and continue with bandit9.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit9/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the file \u003cstrong\u003edata.txt\u003c/strong\u003e and is the only line of text that occurs only once.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst, apply \u003ccode\u003esort\u003c/code\u003e to file content.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis level is a bit tricky. First, examine the file contents. Using \u003ccode\u003ehead\u003c/code\u003e shows the 10 first lines of a file:\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"bandit9\" loading=\"lazy\" src=\"/images/otw/bandit/bandit9/0.png\"\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e Of course I don\u0026rsquo;t want to spoil you the password!\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eNotice how this can achieved in different ways.\u003c/p\u003e","title":"Bandit9"},{"content":"👨‍💻 whoami Hey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\nWhat is this❓​ This blog is basically my thoughts on several hacking topics. Here you’ll see:\nWriteups from CTF challenges, from platforms like HackTheBox or OverTheWire.\nWalkthroughs and notes on pentesting techniques I’m learning or testing.\nSome posts on cryptography — because math can be fun (sometimes).\nRandom topics that freaks like me may (just may) find interesting.\nThe idea is simple: share what I learn, document my journey, and maybe help others who are also diving into the exciting world of ethical hacking.\n📫 Contact Want to say hi, share ideas, or just geek out about hacking? Reach me here:\n📧 Email: mrb0b1073@proton.me 💻​ GitHub: mrb0b173 🟩​ HackTheBox: mrb0b1073 ","permalink":"http://localhost:1313/about/","summary":"\u003ch2 id=\"-whoami\"\u003e👨‍💻 whoami\u003c/h2\u003e\n\u003cp\u003eHey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\u003c/p\u003e\n\u003chr\u003e\n\u003ch2 id=\"what-is-this\"\u003eWhat is this❓​\u003c/h2\u003e\n\u003cp\u003eThis blog is basically my thoughts on several hacking topics. Here you’ll see:\u003c/p\u003e","title":"About"},{"content":"Hey! 👋 I\u0026rsquo;m mrb0b1073 and this is my first post.\nWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\nExcited to start this adventure!\n","permalink":"http://localhost:1313/posts/hello-world/","summary":"\u003cp\u003eHey! 👋 I\u0026rsquo;m \u003cstrong\u003emrb0b1073\u003c/strong\u003e and this is my first post.\u003c/p\u003e\n\u003cp\u003eWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\u003cbr\u003e\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\u003c/p\u003e\n\u003cp\u003eExcited to start this adventure!\u003c/p\u003e","title":"Hello World"},{"content":"Introduction If you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\nIn cybersecurity there are broadly two complementary roles: Blue Team and Red Team. Blue Teams focus on defense, monitoring, incident response, hardening systems and keeping services secure, while Red Teams simulate attackers to find weaknesses and prove what an adversary could do. Ethical hacking aligns closely with Red Team operations, but cybersecurity is highly transversal across IT. There are many specialities or areas, such as cloud security, appsec, pentesting, forensics, governance, risk management, malware analysis, etc. Every topic could deserve its own post, so let\u0026rsquo;s keep it simple and focus on ethical hacking.\nHacker philosophy Let\u0026rsquo;s start with the idea of what is exactly a hacker. A hacker is someone who explores systems to understand how they work, finds creative ways to make or fix things, and solves technical problems. Historically the word describes curiosity, craft, and a drive to improve systems — not criminality. It is important to make the distinction between hacker and cracker, also called cybercriminal. A hacker explores, builds, discloses responsibly and works to improve security. They work in authorized environments or labs. On the other hand, a cracker breaks into systems for theft, vandalism or other illicit gain.\nHere you can find the most popularized ideas often summarized as the hacker ethic:\nCuriosity first: Learn by exploring and tinkering. Freedom of information: All knowledge should be shared to help progress. This fits properly with the idea of open source. Mistrust of needless authority: Centralized control sometimes blocks innovation. It is always good to question anything, specially common assumptions. Meritocracy: Skills, craft and results matter more than titles. Craftsmanship \u0026amp; elegance: Technical beauty matters. Build clean, clever and efficient solutions. Responsability \u0026amp; ethics: Use your skills to build, fix, educate and defend, not to harm. Core fundamentals Assuming you want to init yourself in hacking, you should first build competence across three basic pillars.\nOperating Systems You should learn as much as possible about Linux and Windows. Specially Linux, all the tools you will be using are meant to be used in a Linux environment. Skill with shell is required, learn basic commands and how to interact with the OS using the terminal. Research about processes, file permissions, package management and logs. A large proportion of web servers around the world run on Linux, although Windows is also widely used. Windows knowledge is really valuable too, considering active directory is strongly used in corporate environments.\nNetworking You have to understand how computers communicate each other. Understand basic networking concepts, IP adresses, subnetting, proxies, find out how internet works. Study some protocols such as TCP/IP, HTTP, DNS or SSH. This could sound confusing for beginners, but this step is not optional! Study different client/server models and how services expose attack surfaces.\nProgramming \u0026amp; scripting Is this completely required? Maybe not for complete beginners. Does it help? Absolutely yes. Understanding how web apps or any type of application works makes things much easier. You can imagine different entry points to exploit if you understand how systems are designed. Also writing scripts in bash or python makes you more productive through automation.\nEthical Hacking foundations Once you feel confident with these 3 pillars, you can go to the next step. You can study about different topics and areas. For example, binary exploiting, web pentesting, mobile pentesting, wireless hacking, etc. You should start picking a focus, in this post we focus on web pentesting, as it is beginner friendly. Also web applications are the bread and butter in companies nowadays.\nKey concepts to study:\nCIA Triad: CIA refers to Confidentiality, Integrity and Availability. These three concepts are key in information security, and describe properties we want to ensure in our systems and information. Web Security basics, OWASP: Study the OWASP Top 10, which summarizes most frequent web security risks. Authentication and session control: Understand the concepts of Authentication and Authorization, research about how session is handled in web apps, cookies, JWT tokens, etc. Input validation \u0026amp; injection attacks: Learn about SQL Injection, Cross-Site Scripting (XSS), Code Injection, SSTI, and every injection type. Secure development lifecycle: Find out how to implement security controls in code. This can be more related to Blue Team, but as Red Teamer it is important to understand. Firewall evasion: What a firewall is and some techniques/methods to bypass. Some cryptography: Understand what a chiper and a hash are, how information is encrypted to prevent access from 3rd parties. Focusing on web, read about TLS protocol. There are many more topics you can research and learn, but this could be a nice starting point.\nTools and platforms to learn Now you have an idea of what to study, let\u0026rsquo;s see how to start in practical terms.\nSome platforms I personally recommend:\nOverTheWire: Here you can find some CTFs (Capture The Flag) which are fun to play and also really instructive. Bandit games are a must for complete beginners, as you will explore some linux and bash concepts which are basic to continue. The games are leveled by difficulty, in their web you can get all the information about how to play, only a terminal and SSH is required. This helps building your foundation in Linux OS. HackTheBox: Nº 1 platform in cybersecurity. Has a lot of resources to learn all this core fundamentals, and also red team / blue team security topics. It is focused on labs where you can test your skills hacking different boxes but if you really want to learn it is worth to invest time and money in the academy. I have to say the level here is high, specially if you try to hack machines on your own without using some guide or writeup. TryHackMe: More beginner friendly than hackthebox, it provides a lot of guided learning resources. PortSwigger Labs: Practical labs about specific topics, focused on web hacking. They are great to learn and understand different types of attacks, injections, and security misconfigurations. I would recommend digging into this once you have the theoretical basis about these concepts. I have to mention a few tools I am sure you\u0026rsquo;d end up using:\nNmap: This is probably the most famous tool in hacking, allowing you to gather information about ports and services running in a machine. Burpsuite: A proxy tool widely used in web application security testing. It basically allows you to intercept and modify web requests, which can be used to perform several types of attacks. Metasploit: The most used pentesting framework. Contains a large amount of scripts and exploits ready to run. Another crucial step here is to set up your virtual lab environment to test vulnerable applications. To achieve this goal, there are some Linux distributions like Kali, Parrot or BlackArch, but that\u0026rsquo;s a topic for another post.\nFinal thoughs To sum up, this would be my personal roadmap:\nLearn the fundamentals, specially Linux and networking. Install some Linux in a virtual machine, play with it, get comfortable with the terminal. You can start with bandit wargames in OverTheWire. Complete every level and make sure to understand everything as clear as possible. Move to guided boxes on HackTheBox. I recommend you joining their Discord, ask questions, community is great there! Take notes, repeat, learn, improve your skills. Maybe use your own lab environment, create your own vulnerable apps. Hacking is a mixing of curiosity, study and practice. Being passionate and motivated about it is really helpful and will definitely speed up the process. The path is long and really challenging, so keep it going!\n\u0026ldquo;Yes, I am a criminal. My crime is that of curiosity.\u0026rdquo; — The Mentor (Loyd Blankenship) at The Hacker Manifesto\n","permalink":"http://localhost:1313/posts/starting-point/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIf you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\u003c/p\u003e","title":"Starting Point"},{"content":"Introduction In this post series we are going to solve every level from bandit in OverTheWire This guide pretends to be a writeup containing the solutions of the level, designed for beginners.\nTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing WSL, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\nEvery section will contain the solution as well as some tips for people who is absolutely beginner.\nTips First of all, some tips:\nDo not use this as first resource to solve the levels. Try on your own, make mistakes and learn from them. Only check the solution as last resource or if you are completely new and you have absolutely no idea about what to do next. Take notes from your learning. Write up commands, tips and everything which can be useful in the future. Make sure to understand everything. Is a good idea to note the passwords for every level. If you want to continue letter, you can simply log in in the desired level. It is annoying to repeat everything! Follow the tips and information provided at OverTheWire website. Levels Here is my solution for every level:\nBandit0 Bandit1 Bandit2 Bandit3 Bandit4 Bandit5 Bandit6 Bandit7 ","permalink":"http://localhost:1313/posts/otw/bandit/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIn this post series we are going to solve every level from bandit in \u003ca href=\"https://overthewire.org/wargames/bandit/\"\u003e\u003cem\u003eOverTheWire\u003c/em\u003e\u003c/a\u003e\nThis guide pretends to be a writeup containing the solutions of the level, designed for beginners.\u003c/p\u003e\n\u003cp\u003eTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing \u003ca href=\"https://learn.microsoft.com/en-us/windows/wsl/install\"\u003eWSL\u003c/a\u003e, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\u003c/p\u003e","title":"Bandit"},{"content":"Level description The goal of this level is for you to log into the game using SSH. The host to which you need to connect is bandit.labs.overthewire.org, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\nTips for beginners Read a bit about what SSH is. Research about what a port is. Solution This is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go here.\nAt Linux, we can use ssh client to connect to the server. It should be installed by default on your system. If not, please first research about how to install. Once you have the SSH client installed, you can log in into the first level as follows:\nssh bandit0@bandit.labs.overthewire.org -p 2220 Syntax is simple: ssh \u0026lt;username\u0026gt;@\u0026lt;hostname\u0026gt; -p \u0026lt;port\u0026gt;. Usually SSH runs on port 22 by default, but they changed to port 2220 so we must specify it in the command.\nOnce you try to log in, you will see something like this: NB: If it\u0026rsquo;s the first time you try to log in, you will be asked about the authenticity of the host. Just type yes.\nType the password bandit0 and press enter. Now you are inside bandit server, ready to begin with bandit1!\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit0/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe goal of this level is for you to log into the game using SSH. The host to which you need to connect is \u003cstrong\u003ebandit.labs.overthewire.org\u003c/strong\u003e, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eRead a bit about what SSH is.\u003c/li\u003e\n\u003cli\u003eResearch about what a port is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go \u003ca href=\"https://en.wikipedia.org/wiki/Secure_Shell\"\u003ehere\u003c/a\u003e.\u003c/p\u003e","title":"Bandit0"},{"content":"Level description The password for the next level is stored in a file called readme located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\nTips for beginners Learn about home directory in Linux. Learn to use cat and ls commands. Solution First step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\nls This shows in terminal the files at the current directory. There you will see the readme file.\nNow we can to check the contents, so let\u0026rsquo;s use cat:\ncat readme To read a file, we use cat \u0026lt;filename\u0026gt;.\nNB: Not every file is human readable in Linux. We deep more about this in later levels.\nThe content of the readme file reveals the password for bandit2 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit1/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u003cstrong\u003ereadme\u003c/strong\u003e located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn about home directory in Linux.\u003c/li\u003e\n\u003cli\u003eLearn to use \u003ccode\u003ecat\u003c/code\u003e and \u003ccode\u003els\u003c/code\u003e commands.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eFirst step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\u003c/p\u003e","title":"Bandit1"},{"content":"Level description The password for the next level is stored in a file called - located in the home directory\nTips for beginners Try to understand why previous solution is not working as you expect. Solution You may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our cat command: The terminal is waiting for something else. This happens due to character - is used to pass arguments to our commands, and the linux shell is interpreting that. To prevent that, we could use:\ncat ./- NB: Dot . is used to refer current directory. The slash / is used at the end of directory name.\nWe get the password for bandit3 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit2/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called - located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eTry to understand why previous solution is not working as you expect.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eYou may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our \u003ccode\u003ecat\u003c/code\u003e command:\n\u003cimg alt=\"bandit2\" loading=\"lazy\" src=\"/images/otw/bandit/bandit2/0.png\"\u003e\u003c/p\u003e\n\u003cp\u003eThe terminal is \u003cem\u003ewaiting\u003c/em\u003e for something else. This happens due to character \u003ccode\u003e-\u003c/code\u003e is used to pass arguments to our commands, and the linux shell is interpreting that.\nTo prevent that, we could use:\u003c/p\u003e","title":"Bandit2"},{"content":"Level description The password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\nTips for beginners Think about how to escape the whitespaces. Solution After login in the machine as bandit3, we can see the filename \u0026ndash;spaces in this filename\u0026ndash;.\nNow we have 2 problems:\nSame as previous level, filename starts with --, so it will be interpreted as an argument. Address this problem using ./. Filename contains whitespaces. This is an issue, as bash interpretes whitespaces to separate commands. To solve the second problem, we must escape the whitespace character in some way. Here is the solution:\ncat ./--spaces\\ in\\ this\\ filename-- NB: Little trick, you can start writting filename and press Tab to autocomplete the name. The \\ is going to be inserted automatically.\nJust using the \\ we can escape the whitespace.\nNow we can continue with the bandit4 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit3/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eThink about how to \u003cem\u003eescape\u003c/em\u003e the whitespaces.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAfter login in the machine as bandit3, we can see the filename \u003cem\u003e\u0026ndash;spaces in this filename\u0026ndash;\u003c/em\u003e.\u003c/p\u003e\n\u003cp\u003eNow we have 2 problems:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eSame as previous level, filename starts with \u003ccode\u003e--\u003c/code\u003e, so it will be interpreted as an argument. Address this problem using \u003ccode\u003e./\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003eFilename contains \u003cstrong\u003ewhitespaces\u003c/strong\u003e. This is an issue, as bash interpretes whitespaces to separate commands.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eTo solve the second problem, we must escape the whitespace character in some way. Here is the solution:\u003c/p\u003e","title":"Bandit3"},{"content":"Level description The password for the next level is stored in a hidden file in the inhere directory.\nTips for beginners Learn how to navigate directories in Linux. First understand what a hidden file is. Solution Listing directory files inside bandit4\u0026rsquo;s home directory, show directory inhere.\nNB: How to distinguish files and directories in Linux? Use ls -l and see the difference.\nWe have 2 options now:\nMove to inhere directory and check contens again. Check contents directly. Moving to another directory can be done using cd \u0026lt;dirName\u0026gt;. If you prefer to check directory contents directly, use ls \u0026lt;dirName\u0026gt;.\nAfter checking inhere contents via ls, we see nothing. The reason is the file is a hidden file. A hidden file in Linux is everyfile whose name starts with dot .. Hidden files are not shown by default with ls command, so we must add a special flag -a to list all files: NB: Both flags -l and -a cna be combined into a single flag -al, which is shorter to type.\nAs you can see, filename is \u0026hellip;Hidding-From-You starting with three dots. Reading file contents should be easy at this point!\nNext level is bandit5.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit4/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a hidden file in the inhere directory.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to navigate directories in Linux.\u003c/li\u003e\n\u003cli\u003eFirst understand what a hidden file is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eListing directory files inside bandit4\u0026rsquo;s home directory, show directory \u003cstrong\u003einhere\u003c/strong\u003e.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e How to distinguish files and directories in Linux? Use \u003ccode\u003els -l\u003c/code\u003e and see the difference.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eWe have 2 options now:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eMove to inhere directory and check contens again.\u003c/li\u003e\n\u003cli\u003eCheck contents directly.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eMoving to another directory can be done using \u003ccode\u003ecd \u0026lt;dirName\u0026gt;\u003c/code\u003e. If you prefer to check directory contents directly, use \u003ccode\u003els \u0026lt;dirName\u0026gt;\u003c/code\u003e.\u003c/p\u003e","title":"Bandit4"},{"content":"Level description The password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\nTips for beginners What means human-readable file? Is there any way to check filetype at Linux?. Solution Checking inhere\u0026rsquo;s contents shows some files names \u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII here\nSo now, our goal is checking if file content of every file in the folder is ASCII or not. file \u0026lt;filename\u0026gt; does the job. Note the use of *. That called a wildcard regular expression, we\u0026rsquo;ll deep into it in later levels. An easy approach could be checking every file separately:\nfile ./--file00 file ./--file01 ... file ./--file09 But that\u0026rsquo;s not funny, imagine we have 100 files to check. All the files are in the same directory, so we can use cat ./* where ./* matches every filename in the directory, applying file to every file.\nNB: Another approach is to use find with certaing flags. Try to do in different ways, don\u0026rsquo;t stick to my solution.\nThe file \u0026ndash;file00 content is not readable, so get password from \u0026ndash;file07 and continue with bandit6.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit5/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eWhat means human-readable file?\u003c/li\u003e\n\u003cli\u003eIs there any way to check filetype at Linux?.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eChecking inhere\u0026rsquo;s contents shows some files names \u003cstrong\u003e\u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09\u003c/strong\u003e. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII \u003ca href=\"https://en.wikipedia.org/wiki/ASCII\"\u003ehere\u003c/a\u003e\u003c/p\u003e","title":"Bandit5"},{"content":"Level description The password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\nhuman-readable 1033 bytes in size not executable Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution The purpose of the level is showing us how to find for files. Listing contents of inhere, we can see some folders, containing a lot of files inside: NB: Adding -R to ls shows recursively the content of every folder inside the directory listed.\nSo this time, checking every file is not an option. We need to find a file with some properties, specific size, not excutable and human-readable. Let\u0026rsquo;s explain the command we\u0026rsquo;re using:\nfind inhere/ -size 1033c ! -executable First, we specify the directory, in this case inhere. The option -size 1033c returns files of 1033 bytes. Then, with -executable we would get executable files, but we want not executable files, that\u0026rsquo;s why we are adding ! before.\nNB: By default, the -size option takes as argument the number of blocks. For example, -size 2 means 2 blocks of 512 bytes, so its 1024. The c is used to specify exact bytes. Don\u0026rsquo;t ask me why it\u0026rsquo;s c and not b 😅.\nThe property of human-readability is not implemented in find. This is not an issue, previous command returns a single file and it is human readable (we could confirm using file): Extra tip: try to use the following:\nfind inhere/ -size 1033c ! -executable | file You get the same result! The pipe | is a great tool to execute 2+ commands in one line.\nGet your password and continue with bandit7.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit6/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ehuman-readable\u003c/li\u003e\n\u003cli\u003e1033 bytes in size\u003c/li\u003e\n\u003cli\u003enot executable\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThe purpose of the level is showing us how to find for files. Listing contents of \u003cstrong\u003einhere\u003c/strong\u003e, we can see some folders, containing a lot of files inside:\n\u003cimg alt=\"bandit6_0\" loading=\"lazy\" src=\"/images/otw/bandit/bandit6/0.png\"\u003e\u003c/p\u003e","title":"Bandit6"},{"content":"Level description The password for the next level is stored somewhere on the server and has all of the following properties:\nowned by user bandit7 owned by group bandit6 33 bytes in size Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution This is very straightforward to do after completing previous level. Now we need to identify a file owned by user bandit7 and group bandi6. Furthermore, the file is somewhere on the server, which means we have to find in the root directory /.\nfind / -user bandit7 -group bandit6 -size 33c 2\u0026gt;/dev/null NB: I added that strange 2\u0026gt;/dev/null to filter error output. The reason why it works like that is more technical, for now just save this a fast way to filter errors in terminal. We get some errors because looking for files in the whole server may return some unaccesible files, as we don\u0026rsquo;t have root user permissions. We will study Linux permissions in later levels.\nWe should get a single file, containing password for bandit8.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit7/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored somewhere on the server and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eowned by user bandit7\u003c/li\u003e\n\u003cli\u003eowned by group bandit6\u003c/li\u003e\n\u003cli\u003e33 bytes in size\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is very straightforward to do after completing previous level. Now we need to identify a file owned by user bandit7 and group bandi6. Furthermore, the file is \u003cstrong\u003esomewhere on the server\u003c/strong\u003e, which means we have to find in the root directory \u003ccode\u003e/\u003c/code\u003e.\u003c/p\u003e","title":"Bandit7"},{"content":"Level description The password for the next level is stored in the file data.txt next to the word millionth.\nTips for beginners Learn how to filter file contents. Solution At previous levels, we discovered how to find for files. Now it\u0026rsquo;s time to find for content inside a file. grep command is going to help with that task.\nNB: Of course I don\u0026rsquo;t want to spoil you the password!\nNotice how this can achieved in different ways.\nUsing grep \u0026lt;keyword\u0026gt; \u0026lt;filename\u0026gt;. Using the pipe | to execute grep over the result of cat command. Take you favorite path to solve the level, and continue with bandit9.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit8/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the file \u003cstrong\u003edata.txt\u003c/strong\u003e next to the word \u003cstrong\u003emillionth\u003c/strong\u003e.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to filter file contents.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAt previous levels, we discovered how to find for files. Now it\u0026rsquo;s time to find for content inside a file. \u003ccode\u003egrep\u003c/code\u003e command is going to help with that task.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"bandit8\" loading=\"lazy\" src=\"/images/otw/bandit/bandit8/0.png\"\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e Of course I don\u0026rsquo;t want to spoil you the password!\u003c/p\u003e","title":"Bandit8"},{"content":"Level description The password for the next level is stored in the file data.txt and is the only line of text that occurs only once.\nTips for beginners First, apply sort to file content. Solution This level is a bit tricky. First, examine the file contents. Using head shows the 10 first lines of a file:\nNB: If you want to show more lines, head -20 or the number of your choice.\nNotice how this can achieved in different ways.\nUsing grep \u0026lt;keyword\u0026gt; \u0026lt;filename\u0026gt;. Using the pipe | to execute grep over the result of cat command. Take you favorite path to solve the level, and continue with bandit9.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit9/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the file \u003cstrong\u003edata.txt\u003c/strong\u003e and is the only line of text that occurs only once.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst, apply \u003ccode\u003esort\u003c/code\u003e to file content.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis level is a bit tricky. First, examine the file contents. Using \u003ccode\u003ehead\u003c/code\u003e shows the 10 first lines of a file:\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"bandit9\" loading=\"lazy\" src=\"/images/otw/bandit/bandit9/0.png\"\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e If you want to show more lines, \u003ccode\u003ehead -20\u003c/code\u003e or the number of your choice.\u003c/p\u003e","title":"Bandit9"},{"content":"👨‍💻 whoami Hey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\nWhat is this❓​ This blog is basically my thoughts on several hacking topics. Here you’ll see:\nWriteups from CTF challenges, from platforms like HackTheBox or OverTheWire.\nWalkthroughs and notes on pentesting techniques I’m learning or testing.\nSome posts on cryptography — because math can be fun (sometimes).\nRandom topics that freaks like me may (just may) find interesting.\nThe idea is simple: share what I learn, document my journey, and maybe help others who are also diving into the exciting world of ethical hacking.\n📫 Contact Want to say hi, share ideas, or just geek out about hacking? Reach me here:\n📧 Email: mrb0b1073@proton.me 💻​ GitHub: mrb0b173 🟩​ HackTheBox: mrb0b1073 ","permalink":"http://localhost:1313/about/","summary":"\u003ch2 id=\"-whoami\"\u003e👨‍💻 whoami\u003c/h2\u003e\n\u003cp\u003eHey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\u003c/p\u003e\n\u003chr\u003e\n\u003ch2 id=\"what-is-this\"\u003eWhat is this❓​\u003c/h2\u003e\n\u003cp\u003eThis blog is basically my thoughts on several hacking topics. Here you’ll see:\u003c/p\u003e","title":"About"},{"content":"Hey! 👋 I\u0026rsquo;m mrb0b1073 and this is my first post.\nWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\nExcited to start this adventure!\n","permalink":"http://localhost:1313/posts/hello-world/","summary":"\u003cp\u003eHey! 👋 I\u0026rsquo;m \u003cstrong\u003emrb0b1073\u003c/strong\u003e and this is my first post.\u003c/p\u003e\n\u003cp\u003eWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\u003cbr\u003e\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\u003c/p\u003e\n\u003cp\u003eExcited to start this adventure!\u003c/p\u003e","title":"Hello World"},{"content":"Introduction If you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\nIn cybersecurity there are broadly two complementary roles: Blue Team and Red Team. Blue Teams focus on defense, monitoring, incident response, hardening systems and keeping services secure, while Red Teams simulate attackers to find weaknesses and prove what an adversary could do. Ethical hacking aligns closely with Red Team operations, but cybersecurity is highly transversal across IT. There are many specialities or areas, such as cloud security, appsec, pentesting, forensics, governance, risk management, malware analysis, etc. Every topic could deserve its own post, so let\u0026rsquo;s keep it simple and focus on ethical hacking.\nHacker philosophy Let\u0026rsquo;s start with the idea of what is exactly a hacker. A hacker is someone who explores systems to understand how they work, finds creative ways to make or fix things, and solves technical problems. Historically the word describes curiosity, craft, and a drive to improve systems — not criminality. It is important to make the distinction between hacker and cracker, also called cybercriminal. A hacker explores, builds, discloses responsibly and works to improve security. They work in authorized environments or labs. On the other hand, a cracker breaks into systems for theft, vandalism or other illicit gain.\nHere you can find the most popularized ideas often summarized as the hacker ethic:\nCuriosity first: Learn by exploring and tinkering. Freedom of information: All knowledge should be shared to help progress. This fits properly with the idea of open source. Mistrust of needless authority: Centralized control sometimes blocks innovation. It is always good to question anything, specially common assumptions. Meritocracy: Skills, craft and results matter more than titles. Craftsmanship \u0026amp; elegance: Technical beauty matters. Build clean, clever and efficient solutions. Responsability \u0026amp; ethics: Use your skills to build, fix, educate and defend, not to harm. Core fundamentals Assuming you want to init yourself in hacking, you should first build competence across three basic pillars.\nOperating Systems You should learn as much as possible about Linux and Windows. Specially Linux, all the tools you will be using are meant to be used in a Linux environment. Skill with shell is required, learn basic commands and how to interact with the OS using the terminal. Research about processes, file permissions, package management and logs. A large proportion of web servers around the world run on Linux, although Windows is also widely used. Windows knowledge is really valuable too, considering active directory is strongly used in corporate environments.\nNetworking You have to understand how computers communicate each other. Understand basic networking concepts, IP adresses, subnetting, proxies, find out how internet works. Study some protocols such as TCP/IP, HTTP, DNS or SSH. This could sound confusing for beginners, but this step is not optional! Study different client/server models and how services expose attack surfaces.\nProgramming \u0026amp; scripting Is this completely required? Maybe not for complete beginners. Does it help? Absolutely yes. Understanding how web apps or any type of application works makes things much easier. You can imagine different entry points to exploit if you understand how systems are designed. Also writing scripts in bash or python makes you more productive through automation.\nEthical Hacking foundations Once you feel confident with these 3 pillars, you can go to the next step. You can study about different topics and areas. For example, binary exploiting, web pentesting, mobile pentesting, wireless hacking, etc. You should start picking a focus, in this post we focus on web pentesting, as it is beginner friendly. Also web applications are the bread and butter in companies nowadays.\nKey concepts to study:\nCIA Triad: CIA refers to Confidentiality, Integrity and Availability. These three concepts are key in information security, and describe properties we want to ensure in our systems and information. Web Security basics, OWASP: Study the OWASP Top 10, which summarizes most frequent web security risks. Authentication and session control: Understand the concepts of Authentication and Authorization, research about how session is handled in web apps, cookies, JWT tokens, etc. Input validation \u0026amp; injection attacks: Learn about SQL Injection, Cross-Site Scripting (XSS), Code Injection, SSTI, and every injection type. Secure development lifecycle: Find out how to implement security controls in code. This can be more related to Blue Team, but as Red Teamer it is important to understand. Firewall evasion: What a firewall is and some techniques/methods to bypass. Some cryptography: Understand what a chiper and a hash are, how information is encrypted to prevent access from 3rd parties. Focusing on web, read about TLS protocol. There are many more topics you can research and learn, but this could be a nice starting point.\nTools and platforms to learn Now you have an idea of what to study, let\u0026rsquo;s see how to start in practical terms.\nSome platforms I personally recommend:\nOverTheWire: Here you can find some CTFs (Capture The Flag) which are fun to play and also really instructive. Bandit games are a must for complete beginners, as you will explore some linux and bash concepts which are basic to continue. The games are leveled by difficulty, in their web you can get all the information about how to play, only a terminal and SSH is required. This helps building your foundation in Linux OS. HackTheBox: Nº 1 platform in cybersecurity. Has a lot of resources to learn all this core fundamentals, and also red team / blue team security topics. It is focused on labs where you can test your skills hacking different boxes but if you really want to learn it is worth to invest time and money in the academy. I have to say the level here is high, specially if you try to hack machines on your own without using some guide or writeup. TryHackMe: More beginner friendly than hackthebox, it provides a lot of guided learning resources. PortSwigger Labs: Practical labs about specific topics, focused on web hacking. They are great to learn and understand different types of attacks, injections, and security misconfigurations. I would recommend digging into this once you have the theoretical basis about these concepts. I have to mention a few tools I am sure you\u0026rsquo;d end up using:\nNmap: This is probably the most famous tool in hacking, allowing you to gather information about ports and services running in a machine. Burpsuite: A proxy tool widely used in web application security testing. It basically allows you to intercept and modify web requests, which can be used to perform several types of attacks. Metasploit: The most used pentesting framework. Contains a large amount of scripts and exploits ready to run. Another crucial step here is to set up your virtual lab environment to test vulnerable applications. To achieve this goal, there are some Linux distributions like Kali, Parrot or BlackArch, but that\u0026rsquo;s a topic for another post.\nFinal thoughs To sum up, this would be my personal roadmap:\nLearn the fundamentals, specially Linux and networking. Install some Linux in a virtual machine, play with it, get comfortable with the terminal. You can start with bandit wargames in OverTheWire. Complete every level and make sure to understand everything as clear as possible. Move to guided boxes on HackTheBox. I recommend you joining their Discord, ask questions, community is great there! Take notes, repeat, learn, improve your skills. Maybe use your own lab environment, create your own vulnerable apps. Hacking is a mixing of curiosity, study and practice. Being passionate and motivated about it is really helpful and will definitely speed up the process. The path is long and really challenging, so keep it going!\n\u0026ldquo;Yes, I am a criminal. My crime is that of curiosity.\u0026rdquo; — The Mentor (Loyd Blankenship) at The Hacker Manifesto\n","permalink":"http://localhost:1313/posts/starting-point/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIf you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\u003c/p\u003e","title":"Starting Point"},{"content":"Introduction In this post series we are going to solve every level from bandit in OverTheWire This guide pretends to be a writeup containing the solutions of the level, designed for beginners.\nTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing WSL, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\nEvery section will contain the solution as well as some tips for people who is absolutely beginner.\nTips First of all, some tips:\nDo not use this as first resource to solve the levels. Try on your own, make mistakes and learn from them. Only check the solution as last resource or if you are completely new and you have absolutely no idea about what to do next. Take notes from your learning. Write up commands, tips and everything which can be useful in the future. Make sure to understand everything. Is a good idea to note the passwords for every level. If you want to continue letter, you can simply log in in the desired level. It is annoying to repeat everything! Follow the tips and information provided at OverTheWire website. Levels Here is my solution for every level:\nBandit0 Bandit1 Bandit2 Bandit3 Bandit4 Bandit5 Bandit6 Bandit7 ","permalink":"http://localhost:1313/posts/otw/bandit/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIn this post series we are going to solve every level from bandit in \u003ca href=\"https://overthewire.org/wargames/bandit/\"\u003e\u003cem\u003eOverTheWire\u003c/em\u003e\u003c/a\u003e\nThis guide pretends to be a writeup containing the solutions of the level, designed for beginners.\u003c/p\u003e\n\u003cp\u003eTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing \u003ca href=\"https://learn.microsoft.com/en-us/windows/wsl/install\"\u003eWSL\u003c/a\u003e, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\u003c/p\u003e","title":"Bandit"},{"content":"Level description The goal of this level is for you to log into the game using SSH. The host to which you need to connect is bandit.labs.overthewire.org, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\nTips for beginners Read a bit about what SSH is. Research about what a port is. Solution This is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go here.\nAt Linux, we can use ssh client to connect to the server. It should be installed by default on your system. If not, please first research about how to install. Once you have the SSH client installed, you can log in into the first level as follows:\nssh bandit0@bandit.labs.overthewire.org -p 2220 Syntax is simple: ssh \u0026lt;username\u0026gt;@\u0026lt;hostname\u0026gt; -p \u0026lt;port\u0026gt;. Usually SSH runs on port 22 by default, but they changed to port 2220 so we must specify it in the command.\nOnce you try to log in, you will see something like this: NB: If it\u0026rsquo;s the first time you try to log in, you will be asked about the authenticity of the host. Just type yes.\nType the password bandit0 and press enter. Now you are inside bandit server, ready to begin with bandit1!\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit0/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe goal of this level is for you to log into the game using SSH. The host to which you need to connect is \u003cstrong\u003ebandit.labs.overthewire.org\u003c/strong\u003e, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eRead a bit about what SSH is.\u003c/li\u003e\n\u003cli\u003eResearch about what a port is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go \u003ca href=\"https://en.wikipedia.org/wiki/Secure_Shell\"\u003ehere\u003c/a\u003e.\u003c/p\u003e","title":"Bandit0"},{"content":"Level description The password for the next level is stored in a file called readme located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\nTips for beginners Learn about home directory in Linux. Learn to use cat and ls commands. Solution First step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\nls This shows in terminal the files at the current directory. There you will see the readme file.\nNow we can to check the contents, so let\u0026rsquo;s use cat:\ncat readme To read a file, we use cat \u0026lt;filename\u0026gt;.\nNB: Not every file is human readable in Linux. We deep more about this in later levels.\nThe content of the readme file reveals the password for bandit2 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit1/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u003cstrong\u003ereadme\u003c/strong\u003e located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn about home directory in Linux.\u003c/li\u003e\n\u003cli\u003eLearn to use \u003ccode\u003ecat\u003c/code\u003e and \u003ccode\u003els\u003c/code\u003e commands.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eFirst step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\u003c/p\u003e","title":"Bandit1"},{"content":"Level description The password for the next level is stored in a file called - located in the home directory\nTips for beginners Try to understand why previous solution is not working as you expect. Solution You may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our cat command: The terminal is waiting for something else. This happens due to character - is used to pass arguments to our commands, and the linux shell is interpreting that. To prevent that, we could use:\ncat ./- NB: Dot . is used to refer current directory. The slash / is used at the end of directory name.\nWe get the password for bandit3 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit2/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called - located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eTry to understand why previous solution is not working as you expect.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eYou may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our \u003ccode\u003ecat\u003c/code\u003e command:\n\u003cimg alt=\"bandit2\" loading=\"lazy\" src=\"/images/otw/bandit/bandit2/0.png\"\u003e\u003c/p\u003e\n\u003cp\u003eThe terminal is \u003cem\u003ewaiting\u003c/em\u003e for something else. This happens due to character \u003ccode\u003e-\u003c/code\u003e is used to pass arguments to our commands, and the linux shell is interpreting that.\nTo prevent that, we could use:\u003c/p\u003e","title":"Bandit2"},{"content":"Level description The password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\nTips for beginners Think about how to escape the whitespaces. Solution After login in the machine as bandit3, we can see the filename \u0026ndash;spaces in this filename\u0026ndash;.\nNow we have 2 problems:\nSame as previous level, filename starts with --, so it will be interpreted as an argument. Address this problem using ./. Filename contains whitespaces. This is an issue, as bash interpretes whitespaces to separate commands. To solve the second problem, we must escape the whitespace character in some way. Here is the solution:\ncat ./--spaces\\ in\\ this\\ filename-- NB: Little trick, you can start writting filename and press Tab to autocomplete the name. The \\ is going to be inserted automatically.\nJust using the \\ we can escape the whitespace.\nNow we can continue with the bandit4 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit3/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eThink about how to \u003cem\u003eescape\u003c/em\u003e the whitespaces.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAfter login in the machine as bandit3, we can see the filename \u003cem\u003e\u0026ndash;spaces in this filename\u0026ndash;\u003c/em\u003e.\u003c/p\u003e\n\u003cp\u003eNow we have 2 problems:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eSame as previous level, filename starts with \u003ccode\u003e--\u003c/code\u003e, so it will be interpreted as an argument. Address this problem using \u003ccode\u003e./\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003eFilename contains \u003cstrong\u003ewhitespaces\u003c/strong\u003e. This is an issue, as bash interpretes whitespaces to separate commands.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eTo solve the second problem, we must escape the whitespace character in some way. Here is the solution:\u003c/p\u003e","title":"Bandit3"},{"content":"Level description The password for the next level is stored in a hidden file in the inhere directory.\nTips for beginners Learn how to navigate directories in Linux. First understand what a hidden file is. Solution Listing directory files inside bandit4\u0026rsquo;s home directory, show directory inhere.\nNB: How to distinguish files and directories in Linux? Use ls -l and see the difference.\nWe have 2 options now:\nMove to inhere directory and check contens again. Check contents directly. Moving to another directory can be done using cd \u0026lt;dirName\u0026gt;. If you prefer to check directory contents directly, use ls \u0026lt;dirName\u0026gt;.\nAfter checking inhere contents via ls, we see nothing. The reason is the file is a hidden file. A hidden file in Linux is everyfile whose name starts with dot .. Hidden files are not shown by default with ls command, so we must add a special flag -a to list all files: NB: Both flags -l and -a cna be combined into a single flag -al, which is shorter to type.\nAs you can see, filename is \u0026hellip;Hidding-From-You starting with three dots. Reading file contents should be easy at this point!\nNext level is bandit5.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit4/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a hidden file in the inhere directory.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to navigate directories in Linux.\u003c/li\u003e\n\u003cli\u003eFirst understand what a hidden file is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eListing directory files inside bandit4\u0026rsquo;s home directory, show directory \u003cstrong\u003einhere\u003c/strong\u003e.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e How to distinguish files and directories in Linux? Use \u003ccode\u003els -l\u003c/code\u003e and see the difference.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eWe have 2 options now:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eMove to inhere directory and check contens again.\u003c/li\u003e\n\u003cli\u003eCheck contents directly.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eMoving to another directory can be done using \u003ccode\u003ecd \u0026lt;dirName\u0026gt;\u003c/code\u003e. If you prefer to check directory contents directly, use \u003ccode\u003els \u0026lt;dirName\u0026gt;\u003c/code\u003e.\u003c/p\u003e","title":"Bandit4"},{"content":"Level description The password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\nTips for beginners What means human-readable file? Is there any way to check filetype at Linux?. Solution Checking inhere\u0026rsquo;s contents shows some files names \u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII here\nSo now, our goal is checking if file content of every file in the folder is ASCII or not. file \u0026lt;filename\u0026gt; does the job. Note the use of *. That called a wildcard regular expression, we\u0026rsquo;ll deep into it in later levels. An easy approach could be checking every file separately:\nfile ./--file00 file ./--file01 ... file ./--file09 But that\u0026rsquo;s not funny, imagine we have 100 files to check. All the files are in the same directory, so we can use cat ./* where ./* matches every filename in the directory, applying file to every file.\nNB: Another approach is to use find with certaing flags. Try to do in different ways, don\u0026rsquo;t stick to my solution.\nThe file \u0026ndash;file00 content is not readable, so get password from \u0026ndash;file07 and continue with bandit6.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit5/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eWhat means human-readable file?\u003c/li\u003e\n\u003cli\u003eIs there any way to check filetype at Linux?.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eChecking inhere\u0026rsquo;s contents shows some files names \u003cstrong\u003e\u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09\u003c/strong\u003e. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII \u003ca href=\"https://en.wikipedia.org/wiki/ASCII\"\u003ehere\u003c/a\u003e\u003c/p\u003e","title":"Bandit5"},{"content":"Level description The password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\nhuman-readable 1033 bytes in size not executable Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution The purpose of the level is showing us how to find for files. Listing contents of inhere, we can see some folders, containing a lot of files inside: NB: Adding -R to ls shows recursively the content of every folder inside the directory listed.\nSo this time, checking every file is not an option. We need to find a file with some properties, specific size, not excutable and human-readable. Let\u0026rsquo;s explain the command we\u0026rsquo;re using:\nfind inhere/ -size 1033c ! -executable First, we specify the directory, in this case inhere. The option -size 1033c returns files of 1033 bytes. Then, with -executable we would get executable files, but we want not executable files, that\u0026rsquo;s why we are adding ! before.\nNB: By default, the -size option takes as argument the number of blocks. For example, -size 2 means 2 blocks of 512 bytes, so its 1024. The c is used to specify exact bytes. Don\u0026rsquo;t ask me why it\u0026rsquo;s c and not b 😅.\nThe property of human-readability is not implemented in find. This is not an issue, previous command returns a single file and it is human readable (we could confirm using file): Extra tip: try to use the following:\nfind inhere/ -size 1033c ! -executable | file You get the same result! The pipe | is a great tool to execute 2+ commands in one line.\nGet your password and continue with bandit7.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit6/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ehuman-readable\u003c/li\u003e\n\u003cli\u003e1033 bytes in size\u003c/li\u003e\n\u003cli\u003enot executable\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThe purpose of the level is showing us how to find for files. Listing contents of \u003cstrong\u003einhere\u003c/strong\u003e, we can see some folders, containing a lot of files inside:\n\u003cimg alt=\"bandit6_0\" loading=\"lazy\" src=\"/images/otw/bandit/bandit6/0.png\"\u003e\u003c/p\u003e","title":"Bandit6"},{"content":"Level description The password for the next level is stored somewhere on the server and has all of the following properties:\nowned by user bandit7 owned by group bandit6 33 bytes in size Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution This is very straightforward to do after completing previous level. Now we need to identify a file owned by user bandit7 and group bandi6. Furthermore, the file is somewhere on the server, which means we have to find in the root directory /.\nfind / -user bandit7 -group bandit6 -size 33c 2\u0026gt;/dev/null NB: I added that strange 2\u0026gt;/dev/null to filter error output. The reason why it works like that is more technical, for now just save this a fast way to filter errors in terminal. We get some errors because looking for files in the whole server may return some unaccesible files, as we don\u0026rsquo;t have root user permissions. We will study Linux permissions in later levels.\nWe should get a single file, containing password for bandit8.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit7/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored somewhere on the server and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eowned by user bandit7\u003c/li\u003e\n\u003cli\u003eowned by group bandit6\u003c/li\u003e\n\u003cli\u003e33 bytes in size\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is very straightforward to do after completing previous level. Now we need to identify a file owned by user bandit7 and group bandi6. Furthermore, the file is \u003cstrong\u003esomewhere on the server\u003c/strong\u003e, which means we have to find in the root directory \u003ccode\u003e/\u003c/code\u003e.\u003c/p\u003e","title":"Bandit7"},{"content":"Level description The password for the next level is stored in the file data.txt next to the word millionth.\nTips for beginners Learn how to filter file contents. Solution At previous levels, we discovered how to find for files. Now it\u0026rsquo;s time to find for content inside a file. grep command is going to help with that task.\nNB: Of course I don\u0026rsquo;t want to spoil you the password!\nNotice how this can achieved in different ways.\nUsing grep \u0026lt;keyword\u0026gt; \u0026lt;filename\u0026gt;. Using the pipe | to execute grep over the result of cat command. Take you favorite path to solve the level, and continue with bandit9.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit8/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the file \u003cstrong\u003edata.txt\u003c/strong\u003e next to the word \u003cstrong\u003emillionth\u003c/strong\u003e.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to filter file contents.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAt previous levels, we discovered how to find for files. Now it\u0026rsquo;s time to find for content inside a file. \u003ccode\u003egrep\u003c/code\u003e command is going to help with that task.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"bandit8\" loading=\"lazy\" src=\"/images/otw/bandit/bandit8/0.png\"\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e Of course I don\u0026rsquo;t want to spoil you the password!\u003c/p\u003e","title":"Bandit8"},{"content":"Level description The password for the next level is stored in the file data.txt and is the only line of text that occurs only once.\nTips for beginners First, apply sort to file content. Solution This level is a bit tricky. First, examine the file contents. Using head shows the 10 first lines of a file:\nNB: If you want to show more lines: head -20 or the number of your choice.\nNotice how this can achieved in different ways.\nUsing grep \u0026lt;keyword\u0026gt; \u0026lt;filename\u0026gt;. Using the pipe | to execute grep over the result of cat command. Take you favorite path to solve the level, and continue with bandit9.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit9/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the file \u003cstrong\u003edata.txt\u003c/strong\u003e and is the only line of text that occurs only once.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst, apply \u003ccode\u003esort\u003c/code\u003e to file content.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis level is a bit tricky. First, examine the file contents. Using \u003ccode\u003ehead\u003c/code\u003e shows the 10 first lines of a file:\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"bandit9\" loading=\"lazy\" src=\"/images/otw/bandit/bandit9/0.png\"\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e If you want to show more lines: \u003ccode\u003ehead -20\u003c/code\u003e or the number of your choice.\u003c/p\u003e","title":"Bandit9"},{"content":"👨‍💻 whoami Hey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\nWhat is this❓​ This blog is basically my thoughts on several hacking topics. Here you’ll see:\nWriteups from CTF challenges, from platforms like HackTheBox or OverTheWire.\nWalkthroughs and notes on pentesting techniques I’m learning or testing.\nSome posts on cryptography — because math can be fun (sometimes).\nRandom topics that freaks like me may (just may) find interesting.\nThe idea is simple: share what I learn, document my journey, and maybe help others who are also diving into the exciting world of ethical hacking.\n📫 Contact Want to say hi, share ideas, or just geek out about hacking? Reach me here:\n📧 Email: mrb0b1073@proton.me 💻​ GitHub: mrb0b173 🟩​ HackTheBox: mrb0b1073 ","permalink":"http://localhost:1313/about/","summary":"\u003ch2 id=\"-whoami\"\u003e👨‍💻 whoami\u003c/h2\u003e\n\u003cp\u003eHey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\u003c/p\u003e\n\u003chr\u003e\n\u003ch2 id=\"what-is-this\"\u003eWhat is this❓​\u003c/h2\u003e\n\u003cp\u003eThis blog is basically my thoughts on several hacking topics. Here you’ll see:\u003c/p\u003e","title":"About"},{"content":"Hey! 👋 I\u0026rsquo;m mrb0b1073 and this is my first post.\nWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\nExcited to start this adventure!\n","permalink":"http://localhost:1313/posts/hello-world/","summary":"\u003cp\u003eHey! 👋 I\u0026rsquo;m \u003cstrong\u003emrb0b1073\u003c/strong\u003e and this is my first post.\u003c/p\u003e\n\u003cp\u003eWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\u003cbr\u003e\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\u003c/p\u003e\n\u003cp\u003eExcited to start this adventure!\u003c/p\u003e","title":"Hello World"},{"content":"Introduction If you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\nIn cybersecurity there are broadly two complementary roles: Blue Team and Red Team. Blue Teams focus on defense, monitoring, incident response, hardening systems and keeping services secure, while Red Teams simulate attackers to find weaknesses and prove what an adversary could do. Ethical hacking aligns closely with Red Team operations, but cybersecurity is highly transversal across IT. There are many specialities or areas, such as cloud security, appsec, pentesting, forensics, governance, risk management, malware analysis, etc. Every topic could deserve its own post, so let\u0026rsquo;s keep it simple and focus on ethical hacking.\nHacker philosophy Let\u0026rsquo;s start with the idea of what is exactly a hacker. A hacker is someone who explores systems to understand how they work, finds creative ways to make or fix things, and solves technical problems. Historically the word describes curiosity, craft, and a drive to improve systems — not criminality. It is important to make the distinction between hacker and cracker, also called cybercriminal. A hacker explores, builds, discloses responsibly and works to improve security. They work in authorized environments or labs. On the other hand, a cracker breaks into systems for theft, vandalism or other illicit gain.\nHere you can find the most popularized ideas often summarized as the hacker ethic:\nCuriosity first: Learn by exploring and tinkering. Freedom of information: All knowledge should be shared to help progress. This fits properly with the idea of open source. Mistrust of needless authority: Centralized control sometimes blocks innovation. It is always good to question anything, specially common assumptions. Meritocracy: Skills, craft and results matter more than titles. Craftsmanship \u0026amp; elegance: Technical beauty matters. Build clean, clever and efficient solutions. Responsability \u0026amp; ethics: Use your skills to build, fix, educate and defend, not to harm. Core fundamentals Assuming you want to init yourself in hacking, you should first build competence across three basic pillars.\nOperating Systems You should learn as much as possible about Linux and Windows. Specially Linux, all the tools you will be using are meant to be used in a Linux environment. Skill with shell is required, learn basic commands and how to interact with the OS using the terminal. Research about processes, file permissions, package management and logs. A large proportion of web servers around the world run on Linux, although Windows is also widely used. Windows knowledge is really valuable too, considering active directory is strongly used in corporate environments.\nNetworking You have to understand how computers communicate each other. Understand basic networking concepts, IP adresses, subnetting, proxies, find out how internet works. Study some protocols such as TCP/IP, HTTP, DNS or SSH. This could sound confusing for beginners, but this step is not optional! Study different client/server models and how services expose attack surfaces.\nProgramming \u0026amp; scripting Is this completely required? Maybe not for complete beginners. Does it help? Absolutely yes. Understanding how web apps or any type of application works makes things much easier. You can imagine different entry points to exploit if you understand how systems are designed. Also writing scripts in bash or python makes you more productive through automation.\nEthical Hacking foundations Once you feel confident with these 3 pillars, you can go to the next step. You can study about different topics and areas. For example, binary exploiting, web pentesting, mobile pentesting, wireless hacking, etc. You should start picking a focus, in this post we focus on web pentesting, as it is beginner friendly. Also web applications are the bread and butter in companies nowadays.\nKey concepts to study:\nCIA Triad: CIA refers to Confidentiality, Integrity and Availability. These three concepts are key in information security, and describe properties we want to ensure in our systems and information. Web Security basics, OWASP: Study the OWASP Top 10, which summarizes most frequent web security risks. Authentication and session control: Understand the concepts of Authentication and Authorization, research about how session is handled in web apps, cookies, JWT tokens, etc. Input validation \u0026amp; injection attacks: Learn about SQL Injection, Cross-Site Scripting (XSS), Code Injection, SSTI, and every injection type. Secure development lifecycle: Find out how to implement security controls in code. This can be more related to Blue Team, but as Red Teamer it is important to understand. Firewall evasion: What a firewall is and some techniques/methods to bypass. Some cryptography: Understand what a chiper and a hash are, how information is encrypted to prevent access from 3rd parties. Focusing on web, read about TLS protocol. There are many more topics you can research and learn, but this could be a nice starting point.\nTools and platforms to learn Now you have an idea of what to study, let\u0026rsquo;s see how to start in practical terms.\nSome platforms I personally recommend:\nOverTheWire: Here you can find some CTFs (Capture The Flag) which are fun to play and also really instructive. Bandit games are a must for complete beginners, as you will explore some linux and bash concepts which are basic to continue. The games are leveled by difficulty, in their web you can get all the information about how to play, only a terminal and SSH is required. This helps building your foundation in Linux OS. HackTheBox: Nº 1 platform in cybersecurity. Has a lot of resources to learn all this core fundamentals, and also red team / blue team security topics. It is focused on labs where you can test your skills hacking different boxes but if you really want to learn it is worth to invest time and money in the academy. I have to say the level here is high, specially if you try to hack machines on your own without using some guide or writeup. TryHackMe: More beginner friendly than hackthebox, it provides a lot of guided learning resources. PortSwigger Labs: Practical labs about specific topics, focused on web hacking. They are great to learn and understand different types of attacks, injections, and security misconfigurations. I would recommend digging into this once you have the theoretical basis about these concepts. I have to mention a few tools I am sure you\u0026rsquo;d end up using:\nNmap: This is probably the most famous tool in hacking, allowing you to gather information about ports and services running in a machine. Burpsuite: A proxy tool widely used in web application security testing. It basically allows you to intercept and modify web requests, which can be used to perform several types of attacks. Metasploit: The most used pentesting framework. Contains a large amount of scripts and exploits ready to run. Another crucial step here is to set up your virtual lab environment to test vulnerable applications. To achieve this goal, there are some Linux distributions like Kali, Parrot or BlackArch, but that\u0026rsquo;s a topic for another post.\nFinal thoughs To sum up, this would be my personal roadmap:\nLearn the fundamentals, specially Linux and networking. Install some Linux in a virtual machine, play with it, get comfortable with the terminal. You can start with bandit wargames in OverTheWire. Complete every level and make sure to understand everything as clear as possible. Move to guided boxes on HackTheBox. I recommend you joining their Discord, ask questions, community is great there! Take notes, repeat, learn, improve your skills. Maybe use your own lab environment, create your own vulnerable apps. Hacking is a mixing of curiosity, study and practice. Being passionate and motivated about it is really helpful and will definitely speed up the process. The path is long and really challenging, so keep it going!\n\u0026ldquo;Yes, I am a criminal. My crime is that of curiosity.\u0026rdquo; — The Mentor (Loyd Blankenship) at The Hacker Manifesto\n","permalink":"http://localhost:1313/posts/starting-point/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIf you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\u003c/p\u003e","title":"Starting Point"},{"content":"Introduction In this post series we are going to solve every level from bandit in OverTheWire This guide pretends to be a writeup containing the solutions of the level, designed for beginners.\nTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing WSL, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\nEvery section will contain the solution as well as some tips for people who is absolutely beginner.\nTips First of all, some tips:\nDo not use this as first resource to solve the levels. Try on your own, make mistakes and learn from them. Only check the solution as last resource or if you are completely new and you have absolutely no idea about what to do next. Take notes from your learning. Write up commands, tips and everything which can be useful in the future. Make sure to understand everything. Is a good idea to note the passwords for every level. If you want to continue letter, you can simply log in in the desired level. It is annoying to repeat everything! Follow the tips and information provided at OverTheWire website. Levels Here is my solution for every level:\nBandit0 Bandit1 Bandit2 Bandit3 Bandit4 Bandit5 Bandit6 Bandit7 ","permalink":"http://localhost:1313/posts/otw/bandit/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIn this post series we are going to solve every level from bandit in \u003ca href=\"https://overthewire.org/wargames/bandit/\"\u003e\u003cem\u003eOverTheWire\u003c/em\u003e\u003c/a\u003e\nThis guide pretends to be a writeup containing the solutions of the level, designed for beginners.\u003c/p\u003e\n\u003cp\u003eTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing \u003ca href=\"https://learn.microsoft.com/en-us/windows/wsl/install\"\u003eWSL\u003c/a\u003e, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\u003c/p\u003e","title":"Bandit"},{"content":"Level description The goal of this level is for you to log into the game using SSH. The host to which you need to connect is bandit.labs.overthewire.org, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\nTips for beginners Read a bit about what SSH is. Research about what a port is. Solution This is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go here.\nAt Linux, we can use ssh client to connect to the server. It should be installed by default on your system. If not, please first research about how to install. Once you have the SSH client installed, you can log in into the first level as follows:\nssh bandit0@bandit.labs.overthewire.org -p 2220 Syntax is simple: ssh \u0026lt;username\u0026gt;@\u0026lt;hostname\u0026gt; -p \u0026lt;port\u0026gt;. Usually SSH runs on port 22 by default, but they changed to port 2220 so we must specify it in the command.\nOnce you try to log in, you will see something like this: NB: If it\u0026rsquo;s the first time you try to log in, you will be asked about the authenticity of the host. Just type yes.\nType the password bandit0 and press enter. Now you are inside bandit server, ready to begin with bandit1!\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit0/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe goal of this level is for you to log into the game using SSH. The host to which you need to connect is \u003cstrong\u003ebandit.labs.overthewire.org\u003c/strong\u003e, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eRead a bit about what SSH is.\u003c/li\u003e\n\u003cli\u003eResearch about what a port is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go \u003ca href=\"https://en.wikipedia.org/wiki/Secure_Shell\"\u003ehere\u003c/a\u003e.\u003c/p\u003e","title":"Bandit0"},{"content":"Level description The password for the next level is stored in a file called readme located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\nTips for beginners Learn about home directory in Linux. Learn to use cat and ls commands. Solution First step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\nls This shows in terminal the files at the current directory. There you will see the readme file.\nNow we can to check the contents, so let\u0026rsquo;s use cat:\ncat readme To read a file, we use cat \u0026lt;filename\u0026gt;.\nNB: Not every file is human readable in Linux. We deep more about this in later levels.\nThe content of the readme file reveals the password for bandit2 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit1/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u003cstrong\u003ereadme\u003c/strong\u003e located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn about home directory in Linux.\u003c/li\u003e\n\u003cli\u003eLearn to use \u003ccode\u003ecat\u003c/code\u003e and \u003ccode\u003els\u003c/code\u003e commands.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eFirst step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\u003c/p\u003e","title":"Bandit1"},{"content":"Level description The password for the next level is stored in a file called - located in the home directory\nTips for beginners Try to understand why previous solution is not working as you expect. Solution You may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our cat command: The terminal is waiting for something else. This happens due to character - is used to pass arguments to our commands, and the linux shell is interpreting that. To prevent that, we could use:\ncat ./- NB: Dot . is used to refer current directory. The slash / is used at the end of directory name.\nWe get the password for bandit3 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit2/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called - located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eTry to understand why previous solution is not working as you expect.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eYou may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our \u003ccode\u003ecat\u003c/code\u003e command:\n\u003cimg alt=\"bandit2\" loading=\"lazy\" src=\"/images/otw/bandit/bandit2/0.png\"\u003e\u003c/p\u003e\n\u003cp\u003eThe terminal is \u003cem\u003ewaiting\u003c/em\u003e for something else. This happens due to character \u003ccode\u003e-\u003c/code\u003e is used to pass arguments to our commands, and the linux shell is interpreting that.\nTo prevent that, we could use:\u003c/p\u003e","title":"Bandit2"},{"content":"Level description The password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\nTips for beginners Think about how to escape the whitespaces. Solution After login in the machine as bandit3, we can see the filename \u0026ndash;spaces in this filename\u0026ndash;.\nNow we have 2 problems:\nSame as previous level, filename starts with --, so it will be interpreted as an argument. Address this problem using ./. Filename contains whitespaces. This is an issue, as bash interpretes whitespaces to separate commands. To solve the second problem, we must escape the whitespace character in some way. Here is the solution:\ncat ./--spaces\\ in\\ this\\ filename-- NB: Little trick, you can start writting filename and press Tab to autocomplete the name. The \\ is going to be inserted automatically.\nJust using the \\ we can escape the whitespace.\nNow we can continue with the bandit4 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit3/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eThink about how to \u003cem\u003eescape\u003c/em\u003e the whitespaces.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAfter login in the machine as bandit3, we can see the filename \u003cem\u003e\u0026ndash;spaces in this filename\u0026ndash;\u003c/em\u003e.\u003c/p\u003e\n\u003cp\u003eNow we have 2 problems:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eSame as previous level, filename starts with \u003ccode\u003e--\u003c/code\u003e, so it will be interpreted as an argument. Address this problem using \u003ccode\u003e./\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003eFilename contains \u003cstrong\u003ewhitespaces\u003c/strong\u003e. This is an issue, as bash interpretes whitespaces to separate commands.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eTo solve the second problem, we must escape the whitespace character in some way. Here is the solution:\u003c/p\u003e","title":"Bandit3"},{"content":"Level description The password for the next level is stored in a hidden file in the inhere directory.\nTips for beginners Learn how to navigate directories in Linux. First understand what a hidden file is. Solution Listing directory files inside bandit4\u0026rsquo;s home directory, show directory inhere.\nNB: How to distinguish files and directories in Linux? Use ls -l and see the difference.\nWe have 2 options now:\nMove to inhere directory and check contens again. Check contents directly. Moving to another directory can be done using cd \u0026lt;dirName\u0026gt;. If you prefer to check directory contents directly, use ls \u0026lt;dirName\u0026gt;.\nAfter checking inhere contents via ls, we see nothing. The reason is the file is a hidden file. A hidden file in Linux is everyfile whose name starts with dot .. Hidden files are not shown by default with ls command, so we must add a special flag -a to list all files: NB: Both flags -l and -a cna be combined into a single flag -al, which is shorter to type.\nAs you can see, filename is \u0026hellip;Hidding-From-You starting with three dots. Reading file contents should be easy at this point!\nNext level is bandit5.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit4/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a hidden file in the inhere directory.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to navigate directories in Linux.\u003c/li\u003e\n\u003cli\u003eFirst understand what a hidden file is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eListing directory files inside bandit4\u0026rsquo;s home directory, show directory \u003cstrong\u003einhere\u003c/strong\u003e.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e How to distinguish files and directories in Linux? Use \u003ccode\u003els -l\u003c/code\u003e and see the difference.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eWe have 2 options now:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eMove to inhere directory and check contens again.\u003c/li\u003e\n\u003cli\u003eCheck contents directly.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eMoving to another directory can be done using \u003ccode\u003ecd \u0026lt;dirName\u0026gt;\u003c/code\u003e. If you prefer to check directory contents directly, use \u003ccode\u003els \u0026lt;dirName\u0026gt;\u003c/code\u003e.\u003c/p\u003e","title":"Bandit4"},{"content":"Level description The password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\nTips for beginners What means human-readable file? Is there any way to check filetype at Linux?. Solution Checking inhere\u0026rsquo;s contents shows some files names \u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII here\nSo now, our goal is checking if file content of every file in the folder is ASCII or not. file \u0026lt;filename\u0026gt; does the job. Note the use of *. That called a wildcard regular expression, we\u0026rsquo;ll deep into it in later levels. An easy approach could be checking every file separately:\nfile ./--file00 file ./--file01 ... file ./--file09 But that\u0026rsquo;s not funny, imagine we have 100 files to check. All the files are in the same directory, so we can use cat ./* where ./* matches every filename in the directory, applying file to every file.\nNB: Another approach is to use find with certaing flags. Try to do in different ways, don\u0026rsquo;t stick to my solution.\nThe file \u0026ndash;file00 content is not readable, so get password from \u0026ndash;file07 and continue with bandit6.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit5/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eWhat means human-readable file?\u003c/li\u003e\n\u003cli\u003eIs there any way to check filetype at Linux?.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eChecking inhere\u0026rsquo;s contents shows some files names \u003cstrong\u003e\u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09\u003c/strong\u003e. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII \u003ca href=\"https://en.wikipedia.org/wiki/ASCII\"\u003ehere\u003c/a\u003e\u003c/p\u003e","title":"Bandit5"},{"content":"Level description The password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\nhuman-readable 1033 bytes in size not executable Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution The purpose of the level is showing us how to find for files. Listing contents of inhere, we can see some folders, containing a lot of files inside: NB: Adding -R to ls shows recursively the content of every folder inside the directory listed.\nSo this time, checking every file is not an option. We need to find a file with some properties, specific size, not excutable and human-readable. Let\u0026rsquo;s explain the command we\u0026rsquo;re using:\nfind inhere/ -size 1033c ! -executable First, we specify the directory, in this case inhere. The option -size 1033c returns files of 1033 bytes. Then, with -executable we would get executable files, but we want not executable files, that\u0026rsquo;s why we are adding ! before.\nNB: By default, the -size option takes as argument the number of blocks. For example, -size 2 means 2 blocks of 512 bytes, so its 1024. The c is used to specify exact bytes. Don\u0026rsquo;t ask me why it\u0026rsquo;s c and not b 😅.\nThe property of human-readability is not implemented in find. This is not an issue, previous command returns a single file and it is human readable (we could confirm using file): Extra tip: try to use the following:\nfind inhere/ -size 1033c ! -executable | file You get the same result! The pipe | is a great tool to execute 2+ commands in one line.\nGet your password and continue with bandit7.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit6/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ehuman-readable\u003c/li\u003e\n\u003cli\u003e1033 bytes in size\u003c/li\u003e\n\u003cli\u003enot executable\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThe purpose of the level is showing us how to find for files. Listing contents of \u003cstrong\u003einhere\u003c/strong\u003e, we can see some folders, containing a lot of files inside:\n\u003cimg alt=\"bandit6_0\" loading=\"lazy\" src=\"/images/otw/bandit/bandit6/0.png\"\u003e\u003c/p\u003e","title":"Bandit6"},{"content":"Level description The password for the next level is stored somewhere on the server and has all of the following properties:\nowned by user bandit7 owned by group bandit6 33 bytes in size Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution This is very straightforward to do after completing previous level. Now we need to identify a file owned by user bandit7 and group bandi6. Furthermore, the file is somewhere on the server, which means we have to find in the root directory /.\nfind / -user bandit7 -group bandit6 -size 33c 2\u0026gt;/dev/null NB: I added that strange 2\u0026gt;/dev/null to filter error output. The reason why it works like that is more technical, for now just save this a fast way to filter errors in terminal. We get some errors because looking for files in the whole server may return some unaccesible files, as we don\u0026rsquo;t have root user permissions. We will study Linux permissions in later levels.\nWe should get a single file, containing password for bandit8.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit7/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored somewhere on the server and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eowned by user bandit7\u003c/li\u003e\n\u003cli\u003eowned by group bandit6\u003c/li\u003e\n\u003cli\u003e33 bytes in size\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is very straightforward to do after completing previous level. Now we need to identify a file owned by user bandit7 and group bandi6. Furthermore, the file is \u003cstrong\u003esomewhere on the server\u003c/strong\u003e, which means we have to find in the root directory \u003ccode\u003e/\u003c/code\u003e.\u003c/p\u003e","title":"Bandit7"},{"content":"Level description The password for the next level is stored in the file data.txt next to the word millionth.\nTips for beginners Learn how to filter file contents. Solution At previous levels, we discovered how to find for files. Now it\u0026rsquo;s time to find for content inside a file. grep command is going to help with that task.\nNB: Of course I don\u0026rsquo;t want to spoil you the password!\nNotice how this can achieved in different ways.\nUsing grep \u0026lt;keyword\u0026gt; \u0026lt;filename\u0026gt;. Using the pipe | to execute grep over the result of cat command. Take you favorite path to solve the level, and continue with bandit9.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit8/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the file \u003cstrong\u003edata.txt\u003c/strong\u003e next to the word \u003cstrong\u003emillionth\u003c/strong\u003e.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to filter file contents.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAt previous levels, we discovered how to find for files. Now it\u0026rsquo;s time to find for content inside a file. \u003ccode\u003egrep\u003c/code\u003e command is going to help with that task.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"bandit8\" loading=\"lazy\" src=\"/images/otw/bandit/bandit8/0.png\"\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e Of course I don\u0026rsquo;t want to spoil you the password!\u003c/p\u003e","title":"Bandit8"},{"content":"Level description The password for the next level is stored in the file data.txt and is the only line of text that occurs only once.\nTips for beginners First, apply sort to file content. Solution This level is a bit tricky. First, examine the file contents. Using head shows the 10 first lines of a file:\nNB: If you want to show more lines: head -20 or the number of your choice.\nThere are tons of different passwords. The correct one is the only line of text that occurs only once. Try to research how to do on your own. You maybe find uniq.\nTake you favorite path to solve the level, and continue with bandit9.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit9/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the file \u003cstrong\u003edata.txt\u003c/strong\u003e and is the only line of text that occurs only once.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst, apply \u003ccode\u003esort\u003c/code\u003e to file content.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis level is a bit tricky. First, examine the file contents. Using \u003ccode\u003ehead\u003c/code\u003e shows the 10 first lines of a file:\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"bandit9\" loading=\"lazy\" src=\"/images/otw/bandit/bandit9/0.png\"\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e If you want to show more lines: \u003ccode\u003ehead -20\u003c/code\u003e or the number of your choice.\u003c/p\u003e","title":"Bandit9"},{"content":"👨‍💻 whoami Hey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\nWhat is this❓​ This blog is basically my thoughts on several hacking topics. Here you’ll see:\nWriteups from CTF challenges, from platforms like HackTheBox or OverTheWire.\nWalkthroughs and notes on pentesting techniques I’m learning or testing.\nSome posts on cryptography — because math can be fun (sometimes).\nRandom topics that freaks like me may (just may) find interesting.\nThe idea is simple: share what I learn, document my journey, and maybe help others who are also diving into the exciting world of ethical hacking.\n📫 Contact Want to say hi, share ideas, or just geek out about hacking? Reach me here:\n📧 Email: mrb0b1073@proton.me 💻​ GitHub: mrb0b173 🟩​ HackTheBox: mrb0b1073 ","permalink":"http://localhost:1313/about/","summary":"\u003ch2 id=\"-whoami\"\u003e👨‍💻 whoami\u003c/h2\u003e\n\u003cp\u003eHey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\u003c/p\u003e\n\u003chr\u003e\n\u003ch2 id=\"what-is-this\"\u003eWhat is this❓​\u003c/h2\u003e\n\u003cp\u003eThis blog is basically my thoughts on several hacking topics. Here you’ll see:\u003c/p\u003e","title":"About"},{"content":"Hey! 👋 I\u0026rsquo;m mrb0b1073 and this is my first post.\nWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\nExcited to start this adventure!\n","permalink":"http://localhost:1313/posts/hello-world/","summary":"\u003cp\u003eHey! 👋 I\u0026rsquo;m \u003cstrong\u003emrb0b1073\u003c/strong\u003e and this is my first post.\u003c/p\u003e\n\u003cp\u003eWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\u003cbr\u003e\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\u003c/p\u003e\n\u003cp\u003eExcited to start this adventure!\u003c/p\u003e","title":"Hello World"},{"content":"Introduction If you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\nIn cybersecurity there are broadly two complementary roles: Blue Team and Red Team. Blue Teams focus on defense, monitoring, incident response, hardening systems and keeping services secure, while Red Teams simulate attackers to find weaknesses and prove what an adversary could do. Ethical hacking aligns closely with Red Team operations, but cybersecurity is highly transversal across IT. There are many specialities or areas, such as cloud security, appsec, pentesting, forensics, governance, risk management, malware analysis, etc. Every topic could deserve its own post, so let\u0026rsquo;s keep it simple and focus on ethical hacking.\nHacker philosophy Let\u0026rsquo;s start with the idea of what is exactly a hacker. A hacker is someone who explores systems to understand how they work, finds creative ways to make or fix things, and solves technical problems. Historically the word describes curiosity, craft, and a drive to improve systems — not criminality. It is important to make the distinction between hacker and cracker, also called cybercriminal. A hacker explores, builds, discloses responsibly and works to improve security. They work in authorized environments or labs. On the other hand, a cracker breaks into systems for theft, vandalism or other illicit gain.\nHere you can find the most popularized ideas often summarized as the hacker ethic:\nCuriosity first: Learn by exploring and tinkering. Freedom of information: All knowledge should be shared to help progress. This fits properly with the idea of open source. Mistrust of needless authority: Centralized control sometimes blocks innovation. It is always good to question anything, specially common assumptions. Meritocracy: Skills, craft and results matter more than titles. Craftsmanship \u0026amp; elegance: Technical beauty matters. Build clean, clever and efficient solutions. Responsability \u0026amp; ethics: Use your skills to build, fix, educate and defend, not to harm. Core fundamentals Assuming you want to init yourself in hacking, you should first build competence across three basic pillars.\nOperating Systems You should learn as much as possible about Linux and Windows. Specially Linux, all the tools you will be using are meant to be used in a Linux environment. Skill with shell is required, learn basic commands and how to interact with the OS using the terminal. Research about processes, file permissions, package management and logs. A large proportion of web servers around the world run on Linux, although Windows is also widely used. Windows knowledge is really valuable too, considering active directory is strongly used in corporate environments.\nNetworking You have to understand how computers communicate each other. Understand basic networking concepts, IP adresses, subnetting, proxies, find out how internet works. Study some protocols such as TCP/IP, HTTP, DNS or SSH. This could sound confusing for beginners, but this step is not optional! Study different client/server models and how services expose attack surfaces.\nProgramming \u0026amp; scripting Is this completely required? Maybe not for complete beginners. Does it help? Absolutely yes. Understanding how web apps or any type of application works makes things much easier. You can imagine different entry points to exploit if you understand how systems are designed. Also writing scripts in bash or python makes you more productive through automation.\nEthical Hacking foundations Once you feel confident with these 3 pillars, you can go to the next step. You can study about different topics and areas. For example, binary exploiting, web pentesting, mobile pentesting, wireless hacking, etc. You should start picking a focus, in this post we focus on web pentesting, as it is beginner friendly. Also web applications are the bread and butter in companies nowadays.\nKey concepts to study:\nCIA Triad: CIA refers to Confidentiality, Integrity and Availability. These three concepts are key in information security, and describe properties we want to ensure in our systems and information. Web Security basics, OWASP: Study the OWASP Top 10, which summarizes most frequent web security risks. Authentication and session control: Understand the concepts of Authentication and Authorization, research about how session is handled in web apps, cookies, JWT tokens, etc. Input validation \u0026amp; injection attacks: Learn about SQL Injection, Cross-Site Scripting (XSS), Code Injection, SSTI, and every injection type. Secure development lifecycle: Find out how to implement security controls in code. This can be more related to Blue Team, but as Red Teamer it is important to understand. Firewall evasion: What a firewall is and some techniques/methods to bypass. Some cryptography: Understand what a chiper and a hash are, how information is encrypted to prevent access from 3rd parties. Focusing on web, read about TLS protocol. There are many more topics you can research and learn, but this could be a nice starting point.\nTools and platforms to learn Now you have an idea of what to study, let\u0026rsquo;s see how to start in practical terms.\nSome platforms I personally recommend:\nOverTheWire: Here you can find some CTFs (Capture The Flag) which are fun to play and also really instructive. Bandit games are a must for complete beginners, as you will explore some linux and bash concepts which are basic to continue. The games are leveled by difficulty, in their web you can get all the information about how to play, only a terminal and SSH is required. This helps building your foundation in Linux OS. HackTheBox: Nº 1 platform in cybersecurity. Has a lot of resources to learn all this core fundamentals, and also red team / blue team security topics. It is focused on labs where you can test your skills hacking different boxes but if you really want to learn it is worth to invest time and money in the academy. I have to say the level here is high, specially if you try to hack machines on your own without using some guide or writeup. TryHackMe: More beginner friendly than hackthebox, it provides a lot of guided learning resources. PortSwigger Labs: Practical labs about specific topics, focused on web hacking. They are great to learn and understand different types of attacks, injections, and security misconfigurations. I would recommend digging into this once you have the theoretical basis about these concepts. I have to mention a few tools I am sure you\u0026rsquo;d end up using:\nNmap: This is probably the most famous tool in hacking, allowing you to gather information about ports and services running in a machine. Burpsuite: A proxy tool widely used in web application security testing. It basically allows you to intercept and modify web requests, which can be used to perform several types of attacks. Metasploit: The most used pentesting framework. Contains a large amount of scripts and exploits ready to run. Another crucial step here is to set up your virtual lab environment to test vulnerable applications. To achieve this goal, there are some Linux distributions like Kali, Parrot or BlackArch, but that\u0026rsquo;s a topic for another post.\nFinal thoughs To sum up, this would be my personal roadmap:\nLearn the fundamentals, specially Linux and networking. Install some Linux in a virtual machine, play with it, get comfortable with the terminal. You can start with bandit wargames in OverTheWire. Complete every level and make sure to understand everything as clear as possible. Move to guided boxes on HackTheBox. I recommend you joining their Discord, ask questions, community is great there! Take notes, repeat, learn, improve your skills. Maybe use your own lab environment, create your own vulnerable apps. Hacking is a mixing of curiosity, study and practice. Being passionate and motivated about it is really helpful and will definitely speed up the process. The path is long and really challenging, so keep it going!\n\u0026ldquo;Yes, I am a criminal. My crime is that of curiosity.\u0026rdquo; — The Mentor (Loyd Blankenship) at The Hacker Manifesto\n","permalink":"http://localhost:1313/posts/starting-point/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIf you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\u003c/p\u003e","title":"Starting Point"},{"content":"Introduction In this post series we are going to solve every level from bandit in OverTheWire This guide pretends to be a writeup containing the solutions of the level, designed for beginners.\nTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing WSL, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\nEvery section will contain the solution as well as some tips for people who is absolutely beginner.\nTips First of all, some tips:\nDo not use this as first resource to solve the levels. Try on your own, make mistakes and learn from them. Only check the solution as last resource or if you are completely new and you have absolutely no idea about what to do next. Take notes from your learning. Write up commands, tips and everything which can be useful in the future. Make sure to understand everything. Is a good idea to note the passwords for every level. If you want to continue letter, you can simply log in in the desired level. It is annoying to repeat everything! Follow the tips and information provided at OverTheWire website. Levels Here is my solution for every level:\nBandit0 Bandit1 Bandit2 Bandit3 Bandit4 Bandit5 Bandit6 Bandit7 ","permalink":"http://localhost:1313/posts/otw/bandit/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIn this post series we are going to solve every level from bandit in \u003ca href=\"https://overthewire.org/wargames/bandit/\"\u003e\u003cem\u003eOverTheWire\u003c/em\u003e\u003c/a\u003e\nThis guide pretends to be a writeup containing the solutions of the level, designed for beginners.\u003c/p\u003e\n\u003cp\u003eTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing \u003ca href=\"https://learn.microsoft.com/en-us/windows/wsl/install\"\u003eWSL\u003c/a\u003e, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\u003c/p\u003e","title":"Bandit"},{"content":"Level description The goal of this level is for you to log into the game using SSH. The host to which you need to connect is bandit.labs.overthewire.org, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\nTips for beginners Read a bit about what SSH is. Research about what a port is. Solution This is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go here.\nAt Linux, we can use ssh client to connect to the server. It should be installed by default on your system. If not, please first research about how to install. Once you have the SSH client installed, you can log in into the first level as follows:\nssh bandit0@bandit.labs.overthewire.org -p 2220 Syntax is simple: ssh \u0026lt;username\u0026gt;@\u0026lt;hostname\u0026gt; -p \u0026lt;port\u0026gt;. Usually SSH runs on port 22 by default, but they changed to port 2220 so we must specify it in the command.\nOnce you try to log in, you will see something like this: NB: If it\u0026rsquo;s the first time you try to log in, you will be asked about the authenticity of the host. Just type yes.\nType the password bandit0 and press enter. Now you are inside bandit server, ready to begin with bandit1!\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit0/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe goal of this level is for you to log into the game using SSH. The host to which you need to connect is \u003cstrong\u003ebandit.labs.overthewire.org\u003c/strong\u003e, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eRead a bit about what SSH is.\u003c/li\u003e\n\u003cli\u003eResearch about what a port is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go \u003ca href=\"https://en.wikipedia.org/wiki/Secure_Shell\"\u003ehere\u003c/a\u003e.\u003c/p\u003e","title":"Bandit0"},{"content":"Level description The password for the next level is stored in a file called readme located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\nTips for beginners Learn about home directory in Linux. Learn to use cat and ls commands. Solution First step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\nls This shows in terminal the files at the current directory. There you will see the readme file.\nNow we can to check the contents, so let\u0026rsquo;s use cat:\ncat readme To read a file, we use cat \u0026lt;filename\u0026gt;.\nNB: Not every file is human readable in Linux. We deep more about this in later levels.\nThe content of the readme file reveals the password for bandit2 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit1/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u003cstrong\u003ereadme\u003c/strong\u003e located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn about home directory in Linux.\u003c/li\u003e\n\u003cli\u003eLearn to use \u003ccode\u003ecat\u003c/code\u003e and \u003ccode\u003els\u003c/code\u003e commands.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eFirst step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\u003c/p\u003e","title":"Bandit1"},{"content":"Level description The password for the next level is stored in a file called - located in the home directory\nTips for beginners Try to understand why previous solution is not working as you expect. Solution You may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our cat command: The terminal is waiting for something else. This happens due to character - is used to pass arguments to our commands, and the linux shell is interpreting that. To prevent that, we could use:\ncat ./- NB: Dot . is used to refer current directory. The slash / is used at the end of directory name.\nWe get the password for bandit3 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit2/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called - located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eTry to understand why previous solution is not working as you expect.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eYou may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our \u003ccode\u003ecat\u003c/code\u003e command:\n\u003cimg alt=\"bandit2\" loading=\"lazy\" src=\"/images/otw/bandit/bandit2/0.png\"\u003e\u003c/p\u003e\n\u003cp\u003eThe terminal is \u003cem\u003ewaiting\u003c/em\u003e for something else. This happens due to character \u003ccode\u003e-\u003c/code\u003e is used to pass arguments to our commands, and the linux shell is interpreting that.\nTo prevent that, we could use:\u003c/p\u003e","title":"Bandit2"},{"content":"Level description The password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\nTips for beginners Think about how to escape the whitespaces. Solution After login in the machine as bandit3, we can see the filename \u0026ndash;spaces in this filename\u0026ndash;.\nNow we have 2 problems:\nSame as previous level, filename starts with --, so it will be interpreted as an argument. Address this problem using ./. Filename contains whitespaces. This is an issue, as bash interpretes whitespaces to separate commands. To solve the second problem, we must escape the whitespace character in some way. Here is the solution:\ncat ./--spaces\\ in\\ this\\ filename-- NB: Little trick, you can start writting filename and press Tab to autocomplete the name. The \\ is going to be inserted automatically.\nJust using the \\ we can escape the whitespace.\nNow we can continue with the bandit4 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit3/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eThink about how to \u003cem\u003eescape\u003c/em\u003e the whitespaces.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAfter login in the machine as bandit3, we can see the filename \u003cem\u003e\u0026ndash;spaces in this filename\u0026ndash;\u003c/em\u003e.\u003c/p\u003e\n\u003cp\u003eNow we have 2 problems:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eSame as previous level, filename starts with \u003ccode\u003e--\u003c/code\u003e, so it will be interpreted as an argument. Address this problem using \u003ccode\u003e./\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003eFilename contains \u003cstrong\u003ewhitespaces\u003c/strong\u003e. This is an issue, as bash interpretes whitespaces to separate commands.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eTo solve the second problem, we must escape the whitespace character in some way. Here is the solution:\u003c/p\u003e","title":"Bandit3"},{"content":"Level description The password for the next level is stored in a hidden file in the inhere directory.\nTips for beginners Learn how to navigate directories in Linux. First understand what a hidden file is. Solution Listing directory files inside bandit4\u0026rsquo;s home directory, show directory inhere.\nNB: How to distinguish files and directories in Linux? Use ls -l and see the difference.\nWe have 2 options now:\nMove to inhere directory and check contens again. Check contents directly. Moving to another directory can be done using cd \u0026lt;dirName\u0026gt;. If you prefer to check directory contents directly, use ls \u0026lt;dirName\u0026gt;.\nAfter checking inhere contents via ls, we see nothing. The reason is the file is a hidden file. A hidden file in Linux is everyfile whose name starts with dot .. Hidden files are not shown by default with ls command, so we must add a special flag -a to list all files: NB: Both flags -l and -a cna be combined into a single flag -al, which is shorter to type.\nAs you can see, filename is \u0026hellip;Hidding-From-You starting with three dots. Reading file contents should be easy at this point!\nNext level is bandit5.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit4/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a hidden file in the inhere directory.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to navigate directories in Linux.\u003c/li\u003e\n\u003cli\u003eFirst understand what a hidden file is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eListing directory files inside bandit4\u0026rsquo;s home directory, show directory \u003cstrong\u003einhere\u003c/strong\u003e.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e How to distinguish files and directories in Linux? Use \u003ccode\u003els -l\u003c/code\u003e and see the difference.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eWe have 2 options now:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eMove to inhere directory and check contens again.\u003c/li\u003e\n\u003cli\u003eCheck contents directly.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eMoving to another directory can be done using \u003ccode\u003ecd \u0026lt;dirName\u0026gt;\u003c/code\u003e. If you prefer to check directory contents directly, use \u003ccode\u003els \u0026lt;dirName\u0026gt;\u003c/code\u003e.\u003c/p\u003e","title":"Bandit4"},{"content":"Level description The password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\nTips for beginners What means human-readable file? Is there any way to check filetype at Linux?. Solution Checking inhere\u0026rsquo;s contents shows some files names \u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII here\nSo now, our goal is checking if file content of every file in the folder is ASCII or not. file \u0026lt;filename\u0026gt; does the job. Note the use of *. That called a wildcard regular expression, we\u0026rsquo;ll deep into it in later levels. An easy approach could be checking every file separately:\nfile ./--file00 file ./--file01 ... file ./--file09 But that\u0026rsquo;s not funny, imagine we have 100 files to check. All the files are in the same directory, so we can use cat ./* where ./* matches every filename in the directory, applying file to every file.\nNB: Another approach is to use find with certaing flags. Try to do in different ways, don\u0026rsquo;t stick to my solution.\nThe file \u0026ndash;file00 content is not readable, so get password from \u0026ndash;file07 and continue with bandit6.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit5/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eWhat means human-readable file?\u003c/li\u003e\n\u003cli\u003eIs there any way to check filetype at Linux?.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eChecking inhere\u0026rsquo;s contents shows some files names \u003cstrong\u003e\u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09\u003c/strong\u003e. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII \u003ca href=\"https://en.wikipedia.org/wiki/ASCII\"\u003ehere\u003c/a\u003e\u003c/p\u003e","title":"Bandit5"},{"content":"Level description The password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\nhuman-readable 1033 bytes in size not executable Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution The purpose of the level is showing us how to find for files. Listing contents of inhere, we can see some folders, containing a lot of files inside: NB: Adding -R to ls shows recursively the content of every folder inside the directory listed.\nSo this time, checking every file is not an option. We need to find a file with some properties, specific size, not excutable and human-readable. Let\u0026rsquo;s explain the command we\u0026rsquo;re using:\nfind inhere/ -size 1033c ! -executable First, we specify the directory, in this case inhere. The option -size 1033c returns files of 1033 bytes. Then, with -executable we would get executable files, but we want not executable files, that\u0026rsquo;s why we are adding ! before.\nNB: By default, the -size option takes as argument the number of blocks. For example, -size 2 means 2 blocks of 512 bytes, so its 1024. The c is used to specify exact bytes. Don\u0026rsquo;t ask me why it\u0026rsquo;s c and not b 😅.\nThe property of human-readability is not implemented in find. This is not an issue, previous command returns a single file and it is human readable (we could confirm using file): Extra tip: try to use the following:\nfind inhere/ -size 1033c ! -executable | file You get the same result! The pipe | is a great tool to execute 2+ commands in one line.\nGet your password and continue with bandit7.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit6/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ehuman-readable\u003c/li\u003e\n\u003cli\u003e1033 bytes in size\u003c/li\u003e\n\u003cli\u003enot executable\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThe purpose of the level is showing us how to find for files. Listing contents of \u003cstrong\u003einhere\u003c/strong\u003e, we can see some folders, containing a lot of files inside:\n\u003cimg alt=\"bandit6_0\" loading=\"lazy\" src=\"/images/otw/bandit/bandit6/0.png\"\u003e\u003c/p\u003e","title":"Bandit6"},{"content":"Level description The password for the next level is stored somewhere on the server and has all of the following properties:\nowned by user bandit7 owned by group bandit6 33 bytes in size Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution This is very straightforward to do after completing previous level. Now we need to identify a file owned by user bandit7 and group bandi6. Furthermore, the file is somewhere on the server, which means we have to find in the root directory /.\nfind / -user bandit7 -group bandit6 -size 33c 2\u0026gt;/dev/null NB: I added that strange 2\u0026gt;/dev/null to filter error output. The reason why it works like that is more technical, for now just save this a fast way to filter errors in terminal. We get some errors because looking for files in the whole server may return some unaccesible files, as we don\u0026rsquo;t have root user permissions. We will study Linux permissions in later levels.\nWe should get a single file, containing password for bandit8.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit7/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored somewhere on the server and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eowned by user bandit7\u003c/li\u003e\n\u003cli\u003eowned by group bandit6\u003c/li\u003e\n\u003cli\u003e33 bytes in size\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is very straightforward to do after completing previous level. Now we need to identify a file owned by user bandit7 and group bandi6. Furthermore, the file is \u003cstrong\u003esomewhere on the server\u003c/strong\u003e, which means we have to find in the root directory \u003ccode\u003e/\u003c/code\u003e.\u003c/p\u003e","title":"Bandit7"},{"content":"Level description The password for the next level is stored in the file data.txt next to the word millionth.\nTips for beginners Learn how to filter file contents. Solution At previous levels, we discovered how to find for files. Now it\u0026rsquo;s time to find for content inside a file. grep command is going to help with that task.\nNB: Of course I don\u0026rsquo;t want to spoil you the password!\nNotice how this can achieved in different ways.\nUsing grep \u0026lt;keyword\u0026gt; \u0026lt;filename\u0026gt;. Using the pipe | to execute grep over the result of cat command. Take you favorite path to solve the level, and continue with bandit9.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit8/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the file \u003cstrong\u003edata.txt\u003c/strong\u003e next to the word \u003cstrong\u003emillionth\u003c/strong\u003e.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to filter file contents.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAt previous levels, we discovered how to find for files. Now it\u0026rsquo;s time to find for content inside a file. \u003ccode\u003egrep\u003c/code\u003e command is going to help with that task.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"bandit8\" loading=\"lazy\" src=\"/images/otw/bandit/bandit8/0.png\"\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e Of course I don\u0026rsquo;t want to spoil you the password!\u003c/p\u003e","title":"Bandit8"},{"content":"Level description The password for the next level is stored in the file data.txt and is the only line of text that occurs only once.\nTips for beginners First, apply sort to file content. Solution This level is a bit tricky. First, examine the file contents. Using head shows the 10 first lines of a file:\nNB: If you want to show more lines: head -20 or the number of your choice.\nThere are tons of different passwords. The correct one is the only line of text that occurs only once. Try to research how to do on your own. You maybe find uniq.\nTake you favorite path to solve the level, and continue with bandit9.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit9/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the file \u003cstrong\u003edata.txt\u003c/strong\u003e and is the only line of text that occurs only once.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst, apply \u003ccode\u003esort\u003c/code\u003e to file content.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis level is a bit tricky. First, examine the file contents. Using \u003ccode\u003ehead\u003c/code\u003e shows the 10 first lines of a file:\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"bandit9\" loading=\"lazy\" src=\"/images/otw/bandit/bandit9/0.png\"\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e If you want to show more lines: \u003ccode\u003ehead -20\u003c/code\u003e or the number of your choice.\u003c/p\u003e","title":"Bandit9"},{"content":"👨‍💻 whoami Hey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\nWhat is this❓​ This blog is basically my thoughts on several hacking topics. Here you’ll see:\nWriteups from CTF challenges, from platforms like HackTheBox or OverTheWire.\nWalkthroughs and notes on pentesting techniques I’m learning or testing.\nSome posts on cryptography — because math can be fun (sometimes).\nRandom topics that freaks like me may (just may) find interesting.\nThe idea is simple: share what I learn, document my journey, and maybe help others who are also diving into the exciting world of ethical hacking.\n📫 Contact Want to say hi, share ideas, or just geek out about hacking? Reach me here:\n📧 Email: mrb0b1073@proton.me 💻​ GitHub: mrb0b173 🟩​ HackTheBox: mrb0b1073 ","permalink":"http://localhost:1313/about/","summary":"\u003ch2 id=\"-whoami\"\u003e👨‍💻 whoami\u003c/h2\u003e\n\u003cp\u003eHey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\u003c/p\u003e\n\u003chr\u003e\n\u003ch2 id=\"what-is-this\"\u003eWhat is this❓​\u003c/h2\u003e\n\u003cp\u003eThis blog is basically my thoughts on several hacking topics. Here you’ll see:\u003c/p\u003e","title":"About"},{"content":"Hey! 👋 I\u0026rsquo;m mrb0b1073 and this is my first post.\nWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\nExcited to start this adventure!\n","permalink":"http://localhost:1313/posts/hello-world/","summary":"\u003cp\u003eHey! 👋 I\u0026rsquo;m \u003cstrong\u003emrb0b1073\u003c/strong\u003e and this is my first post.\u003c/p\u003e\n\u003cp\u003eWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\u003cbr\u003e\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\u003c/p\u003e\n\u003cp\u003eExcited to start this adventure!\u003c/p\u003e","title":"Hello World"},{"content":"Introduction If you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\nIn cybersecurity there are broadly two complementary roles: Blue Team and Red Team. Blue Teams focus on defense, monitoring, incident response, hardening systems and keeping services secure, while Red Teams simulate attackers to find weaknesses and prove what an adversary could do. Ethical hacking aligns closely with Red Team operations, but cybersecurity is highly transversal across IT. There are many specialities or areas, such as cloud security, appsec, pentesting, forensics, governance, risk management, malware analysis, etc. Every topic could deserve its own post, so let\u0026rsquo;s keep it simple and focus on ethical hacking.\nHacker philosophy Let\u0026rsquo;s start with the idea of what is exactly a hacker. A hacker is someone who explores systems to understand how they work, finds creative ways to make or fix things, and solves technical problems. Historically the word describes curiosity, craft, and a drive to improve systems — not criminality. It is important to make the distinction between hacker and cracker, also called cybercriminal. A hacker explores, builds, discloses responsibly and works to improve security. They work in authorized environments or labs. On the other hand, a cracker breaks into systems for theft, vandalism or other illicit gain.\nHere you can find the most popularized ideas often summarized as the hacker ethic:\nCuriosity first: Learn by exploring and tinkering. Freedom of information: All knowledge should be shared to help progress. This fits properly with the idea of open source. Mistrust of needless authority: Centralized control sometimes blocks innovation. It is always good to question anything, specially common assumptions. Meritocracy: Skills, craft and results matter more than titles. Craftsmanship \u0026amp; elegance: Technical beauty matters. Build clean, clever and efficient solutions. Responsability \u0026amp; ethics: Use your skills to build, fix, educate and defend, not to harm. Core fundamentals Assuming you want to init yourself in hacking, you should first build competence across three basic pillars.\nOperating Systems You should learn as much as possible about Linux and Windows. Specially Linux, all the tools you will be using are meant to be used in a Linux environment. Skill with shell is required, learn basic commands and how to interact with the OS using the terminal. Research about processes, file permissions, package management and logs. A large proportion of web servers around the world run on Linux, although Windows is also widely used. Windows knowledge is really valuable too, considering active directory is strongly used in corporate environments.\nNetworking You have to understand how computers communicate each other. Understand basic networking concepts, IP adresses, subnetting, proxies, find out how internet works. Study some protocols such as TCP/IP, HTTP, DNS or SSH. This could sound confusing for beginners, but this step is not optional! Study different client/server models and how services expose attack surfaces.\nProgramming \u0026amp; scripting Is this completely required? Maybe not for complete beginners. Does it help? Absolutely yes. Understanding how web apps or any type of application works makes things much easier. You can imagine different entry points to exploit if you understand how systems are designed. Also writing scripts in bash or python makes you more productive through automation.\nEthical Hacking foundations Once you feel confident with these 3 pillars, you can go to the next step. You can study about different topics and areas. For example, binary exploiting, web pentesting, mobile pentesting, wireless hacking, etc. You should start picking a focus, in this post we focus on web pentesting, as it is beginner friendly. Also web applications are the bread and butter in companies nowadays.\nKey concepts to study:\nCIA Triad: CIA refers to Confidentiality, Integrity and Availability. These three concepts are key in information security, and describe properties we want to ensure in our systems and information. Web Security basics, OWASP: Study the OWASP Top 10, which summarizes most frequent web security risks. Authentication and session control: Understand the concepts of Authentication and Authorization, research about how session is handled in web apps, cookies, JWT tokens, etc. Input validation \u0026amp; injection attacks: Learn about SQL Injection, Cross-Site Scripting (XSS), Code Injection, SSTI, and every injection type. Secure development lifecycle: Find out how to implement security controls in code. This can be more related to Blue Team, but as Red Teamer it is important to understand. Firewall evasion: What a firewall is and some techniques/methods to bypass. Some cryptography: Understand what a chiper and a hash are, how information is encrypted to prevent access from 3rd parties. Focusing on web, read about TLS protocol. There are many more topics you can research and learn, but this could be a nice starting point.\nTools and platforms to learn Now you have an idea of what to study, let\u0026rsquo;s see how to start in practical terms.\nSome platforms I personally recommend:\nOverTheWire: Here you can find some CTFs (Capture The Flag) which are fun to play and also really instructive. Bandit games are a must for complete beginners, as you will explore some linux and bash concepts which are basic to continue. The games are leveled by difficulty, in their web you can get all the information about how to play, only a terminal and SSH is required. This helps building your foundation in Linux OS. HackTheBox: Nº 1 platform in cybersecurity. Has a lot of resources to learn all this core fundamentals, and also red team / blue team security topics. It is focused on labs where you can test your skills hacking different boxes but if you really want to learn it is worth to invest time and money in the academy. I have to say the level here is high, specially if you try to hack machines on your own without using some guide or writeup. TryHackMe: More beginner friendly than hackthebox, it provides a lot of guided learning resources. PortSwigger Labs: Practical labs about specific topics, focused on web hacking. They are great to learn and understand different types of attacks, injections, and security misconfigurations. I would recommend digging into this once you have the theoretical basis about these concepts. I have to mention a few tools I am sure you\u0026rsquo;d end up using:\nNmap: This is probably the most famous tool in hacking, allowing you to gather information about ports and services running in a machine. Burpsuite: A proxy tool widely used in web application security testing. It basically allows you to intercept and modify web requests, which can be used to perform several types of attacks. Metasploit: The most used pentesting framework. Contains a large amount of scripts and exploits ready to run. Another crucial step here is to set up your virtual lab environment to test vulnerable applications. To achieve this goal, there are some Linux distributions like Kali, Parrot or BlackArch, but that\u0026rsquo;s a topic for another post.\nFinal thoughs To sum up, this would be my personal roadmap:\nLearn the fundamentals, specially Linux and networking. Install some Linux in a virtual machine, play with it, get comfortable with the terminal. You can start with bandit wargames in OverTheWire. Complete every level and make sure to understand everything as clear as possible. Move to guided boxes on HackTheBox. I recommend you joining their Discord, ask questions, community is great there! Take notes, repeat, learn, improve your skills. Maybe use your own lab environment, create your own vulnerable apps. Hacking is a mixing of curiosity, study and practice. Being passionate and motivated about it is really helpful and will definitely speed up the process. The path is long and really challenging, so keep it going!\n\u0026ldquo;Yes, I am a criminal. My crime is that of curiosity.\u0026rdquo; — The Mentor (Loyd Blankenship) at The Hacker Manifesto\n","permalink":"http://localhost:1313/posts/starting-point/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIf you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\u003c/p\u003e","title":"Starting Point"},{"content":"Introduction In this post series we are going to solve every level from bandit in OverTheWire This guide pretends to be a writeup containing the solutions of the level, designed for beginners.\nTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing WSL, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\nEvery section will contain the solution as well as some tips for people who is absolutely beginner.\nTips First of all, some tips:\nDo not use this as first resource to solve the levels. Try on your own, make mistakes and learn from them. Only check the solution as last resource or if you are completely new and you have absolutely no idea about what to do next. Take notes from your learning. Write up commands, tips and everything which can be useful in the future. Make sure to understand everything. Is a good idea to note the passwords for every level. If you want to continue letter, you can simply log in in the desired level. It is annoying to repeat everything! Follow the tips and information provided at OverTheWire website. Levels Here is my solution for every level:\nBandit0 Bandit1 Bandit2 Bandit3 Bandit4 Bandit5 Bandit6 Bandit7 ","permalink":"http://localhost:1313/posts/otw/bandit/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIn this post series we are going to solve every level from bandit in \u003ca href=\"https://overthewire.org/wargames/bandit/\"\u003e\u003cem\u003eOverTheWire\u003c/em\u003e\u003c/a\u003e\nThis guide pretends to be a writeup containing the solutions of the level, designed for beginners.\u003c/p\u003e\n\u003cp\u003eTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing \u003ca href=\"https://learn.microsoft.com/en-us/windows/wsl/install\"\u003eWSL\u003c/a\u003e, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\u003c/p\u003e","title":"Bandit"},{"content":"Level description The goal of this level is for you to log into the game using SSH. The host to which you need to connect is bandit.labs.overthewire.org, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\nTips for beginners Read a bit about what SSH is. Research about what a port is. Solution This is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go here.\nAt Linux, we can use ssh client to connect to the server. It should be installed by default on your system. If not, please first research about how to install. Once you have the SSH client installed, you can log in into the first level as follows:\nssh bandit0@bandit.labs.overthewire.org -p 2220 Syntax is simple: ssh \u0026lt;username\u0026gt;@\u0026lt;hostname\u0026gt; -p \u0026lt;port\u0026gt;. Usually SSH runs on port 22 by default, but they changed to port 2220 so we must specify it in the command.\nOnce you try to log in, you will see something like this: NB: If it\u0026rsquo;s the first time you try to log in, you will be asked about the authenticity of the host. Just type yes.\nType the password bandit0 and press enter. Now you are inside bandit server, ready to begin with bandit1!\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit0/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe goal of this level is for you to log into the game using SSH. The host to which you need to connect is \u003cstrong\u003ebandit.labs.overthewire.org\u003c/strong\u003e, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eRead a bit about what SSH is.\u003c/li\u003e\n\u003cli\u003eResearch about what a port is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go \u003ca href=\"https://en.wikipedia.org/wiki/Secure_Shell\"\u003ehere\u003c/a\u003e.\u003c/p\u003e","title":"Bandit0"},{"content":"Level description The password for the next level is stored in a file called readme located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\nTips for beginners Learn about home directory in Linux. Learn to use cat and ls commands. Solution First step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\nls This shows in terminal the files at the current directory. There you will see the readme file.\nNow we can to check the contents, so let\u0026rsquo;s use cat:\ncat readme To read a file, we use cat \u0026lt;filename\u0026gt;.\nNB: Not every file is human readable in Linux. We deep more about this in later levels.\nThe content of the readme file reveals the password for bandit2 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit1/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u003cstrong\u003ereadme\u003c/strong\u003e located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn about home directory in Linux.\u003c/li\u003e\n\u003cli\u003eLearn to use \u003ccode\u003ecat\u003c/code\u003e and \u003ccode\u003els\u003c/code\u003e commands.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eFirst step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\u003c/p\u003e","title":"Bandit1"},{"content":"Level description The password for the next level is stored in a file called - located in the home directory\nTips for beginners Try to understand why previous solution is not working as you expect. Solution You may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our cat command: The terminal is waiting for something else. This happens due to character - is used to pass arguments to our commands, and the linux shell is interpreting that. To prevent that, we could use:\ncat ./- NB: Dot . is used to refer current directory. The slash / is used at the end of directory name.\nWe get the password for bandit3 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit2/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called - located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eTry to understand why previous solution is not working as you expect.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eYou may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our \u003ccode\u003ecat\u003c/code\u003e command:\n\u003cimg alt=\"bandit2\" loading=\"lazy\" src=\"/images/otw/bandit/bandit2/0.png\"\u003e\u003c/p\u003e\n\u003cp\u003eThe terminal is \u003cem\u003ewaiting\u003c/em\u003e for something else. This happens due to character \u003ccode\u003e-\u003c/code\u003e is used to pass arguments to our commands, and the linux shell is interpreting that.\nTo prevent that, we could use:\u003c/p\u003e","title":"Bandit2"},{"content":"Level description The password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\nTips for beginners Think about how to escape the whitespaces. Solution After login in the machine as bandit3, we can see the filename \u0026ndash;spaces in this filename\u0026ndash;.\nNow we have 2 problems:\nSame as previous level, filename starts with --, so it will be interpreted as an argument. Address this problem using ./. Filename contains whitespaces. This is an issue, as bash interpretes whitespaces to separate commands. To solve the second problem, we must escape the whitespace character in some way. Here is the solution:\ncat ./--spaces\\ in\\ this\\ filename-- NB: Little trick, you can start writting filename and press Tab to autocomplete the name. The \\ is going to be inserted automatically.\nJust using the \\ we can escape the whitespace.\nNow we can continue with the bandit4 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit3/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eThink about how to \u003cem\u003eescape\u003c/em\u003e the whitespaces.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAfter login in the machine as bandit3, we can see the filename \u003cem\u003e\u0026ndash;spaces in this filename\u0026ndash;\u003c/em\u003e.\u003c/p\u003e\n\u003cp\u003eNow we have 2 problems:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eSame as previous level, filename starts with \u003ccode\u003e--\u003c/code\u003e, so it will be interpreted as an argument. Address this problem using \u003ccode\u003e./\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003eFilename contains \u003cstrong\u003ewhitespaces\u003c/strong\u003e. This is an issue, as bash interpretes whitespaces to separate commands.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eTo solve the second problem, we must escape the whitespace character in some way. Here is the solution:\u003c/p\u003e","title":"Bandit3"},{"content":"Level description The password for the next level is stored in a hidden file in the inhere directory.\nTips for beginners Learn how to navigate directories in Linux. First understand what a hidden file is. Solution Listing directory files inside bandit4\u0026rsquo;s home directory, show directory inhere.\nNB: How to distinguish files and directories in Linux? Use ls -l and see the difference.\nWe have 2 options now:\nMove to inhere directory and check contens again. Check contents directly. Moving to another directory can be done using cd \u0026lt;dirName\u0026gt;. If you prefer to check directory contents directly, use ls \u0026lt;dirName\u0026gt;.\nAfter checking inhere contents via ls, we see nothing. The reason is the file is a hidden file. A hidden file in Linux is everyfile whose name starts with dot .. Hidden files are not shown by default with ls command, so we must add a special flag -a to list all files: NB: Both flags -l and -a cna be combined into a single flag -al, which is shorter to type.\nAs you can see, filename is \u0026hellip;Hidding-From-You starting with three dots. Reading file contents should be easy at this point!\nNext level is bandit5.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit4/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a hidden file in the inhere directory.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to navigate directories in Linux.\u003c/li\u003e\n\u003cli\u003eFirst understand what a hidden file is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eListing directory files inside bandit4\u0026rsquo;s home directory, show directory \u003cstrong\u003einhere\u003c/strong\u003e.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e How to distinguish files and directories in Linux? Use \u003ccode\u003els -l\u003c/code\u003e and see the difference.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eWe have 2 options now:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eMove to inhere directory and check contens again.\u003c/li\u003e\n\u003cli\u003eCheck contents directly.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eMoving to another directory can be done using \u003ccode\u003ecd \u0026lt;dirName\u0026gt;\u003c/code\u003e. If you prefer to check directory contents directly, use \u003ccode\u003els \u0026lt;dirName\u0026gt;\u003c/code\u003e.\u003c/p\u003e","title":"Bandit4"},{"content":"Level description The password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\nTips for beginners What means human-readable file? Is there any way to check filetype at Linux?. Solution Checking inhere\u0026rsquo;s contents shows some files names \u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII here\nSo now, our goal is checking if file content of every file in the folder is ASCII or not. file \u0026lt;filename\u0026gt; does the job. Note the use of *. That called a wildcard regular expression, we\u0026rsquo;ll deep into it in later levels. An easy approach could be checking every file separately:\nfile ./--file00 file ./--file01 ... file ./--file09 But that\u0026rsquo;s not funny, imagine we have 100 files to check. All the files are in the same directory, so we can use cat ./* where ./* matches every filename in the directory, applying file to every file.\nNB: Another approach is to use find with certaing flags. Try to do in different ways, don\u0026rsquo;t stick to my solution.\nThe file \u0026ndash;file00 content is not readable, so get password from \u0026ndash;file07 and continue with bandit6.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit5/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eWhat means human-readable file?\u003c/li\u003e\n\u003cli\u003eIs there any way to check filetype at Linux?.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eChecking inhere\u0026rsquo;s contents shows some files names \u003cstrong\u003e\u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09\u003c/strong\u003e. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII \u003ca href=\"https://en.wikipedia.org/wiki/ASCII\"\u003ehere\u003c/a\u003e\u003c/p\u003e","title":"Bandit5"},{"content":"Level description The password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\nhuman-readable 1033 bytes in size not executable Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution The purpose of the level is showing us how to find for files. Listing contents of inhere, we can see some folders, containing a lot of files inside: NB: Adding -R to ls shows recursively the content of every folder inside the directory listed.\nSo this time, checking every file is not an option. We need to find a file with some properties, specific size, not excutable and human-readable. Let\u0026rsquo;s explain the command we\u0026rsquo;re using:\nfind inhere/ -size 1033c ! -executable First, we specify the directory, in this case inhere. The option -size 1033c returns files of 1033 bytes. Then, with -executable we would get executable files, but we want not executable files, that\u0026rsquo;s why we are adding ! before.\nNB: By default, the -size option takes as argument the number of blocks. For example, -size 2 means 2 blocks of 512 bytes, so its 1024. The c is used to specify exact bytes. Don\u0026rsquo;t ask me why it\u0026rsquo;s c and not b 😅.\nThe property of human-readability is not implemented in find. This is not an issue, previous command returns a single file and it is human readable (we could confirm using file): Extra tip: try to use the following:\nfind inhere/ -size 1033c ! -executable | file You get the same result! The pipe | is a great tool to execute 2+ commands in one line.\nGet your password and continue with bandit7.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit6/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ehuman-readable\u003c/li\u003e\n\u003cli\u003e1033 bytes in size\u003c/li\u003e\n\u003cli\u003enot executable\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThe purpose of the level is showing us how to find for files. Listing contents of \u003cstrong\u003einhere\u003c/strong\u003e, we can see some folders, containing a lot of files inside:\n\u003cimg alt=\"bandit6_0\" loading=\"lazy\" src=\"/images/otw/bandit/bandit6/0.png\"\u003e\u003c/p\u003e","title":"Bandit6"},{"content":"Level description The password for the next level is stored somewhere on the server and has all of the following properties:\nowned by user bandit7 owned by group bandit6 33 bytes in size Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution This is very straightforward to do after completing previous level. Now we need to identify a file owned by user bandit7 and group bandi6. Furthermore, the file is somewhere on the server, which means we have to find in the root directory /.\nfind / -user bandit7 -group bandit6 -size 33c 2\u0026gt;/dev/null NB: I added that strange 2\u0026gt;/dev/null to filter error output. The reason why it works like that is more technical, for now just save this a fast way to filter errors in terminal. We get some errors because looking for files in the whole server may return some unaccesible files, as we don\u0026rsquo;t have root user permissions. We will study Linux permissions in later levels.\nWe should get a single file, containing password for bandit8.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit7/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored somewhere on the server and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eowned by user bandit7\u003c/li\u003e\n\u003cli\u003eowned by group bandit6\u003c/li\u003e\n\u003cli\u003e33 bytes in size\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is very straightforward to do after completing previous level. Now we need to identify a file owned by user bandit7 and group bandi6. Furthermore, the file is \u003cstrong\u003esomewhere on the server\u003c/strong\u003e, which means we have to find in the root directory \u003ccode\u003e/\u003c/code\u003e.\u003c/p\u003e","title":"Bandit7"},{"content":"Level description The password for the next level is stored in the file data.txt next to the word millionth.\nTips for beginners Learn how to filter file contents. Solution At previous levels, we discovered how to find for files. Now it\u0026rsquo;s time to find for content inside a file. grep command is going to help with that task.\nNB: Of course I don\u0026rsquo;t want to spoil you the password!\nNotice how this can achieved in different ways.\nUsing grep \u0026lt;keyword\u0026gt; \u0026lt;filename\u0026gt;. Using the pipe | to execute grep over the result of cat command. Take you favorite path to solve the level, and continue with bandit9.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit8/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the file \u003cstrong\u003edata.txt\u003c/strong\u003e next to the word \u003cstrong\u003emillionth\u003c/strong\u003e.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to filter file contents.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAt previous levels, we discovered how to find for files. Now it\u0026rsquo;s time to find for content inside a file. \u003ccode\u003egrep\u003c/code\u003e command is going to help with that task.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"bandit8\" loading=\"lazy\" src=\"/images/otw/bandit/bandit8/0.png\"\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e Of course I don\u0026rsquo;t want to spoil you the password!\u003c/p\u003e","title":"Bandit8"},{"content":"Level description The password for the next level is stored in the file data.txt and is the only line of text that occurs only once.\nTips for beginners First, apply sort to file content. Solution This level is a bit tricky. First, examine the file contents. Using head shows the 10 first lines of a file:\nNB: If you want to show more lines: head -20 or the number of your choice.\nThere are tons of different passwords. The correct one is the only line of text that occurs only once. Try to research how to do on your own. You maybe find uniq. This command has a very interesting flag, -u, used to show only the uniq lines. Let\u0026rsquo;s try with that:\nTake you favorite path to solve the level, and continue with bandit9.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit9/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the file \u003cstrong\u003edata.txt\u003c/strong\u003e and is the only line of text that occurs only once.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst, apply \u003ccode\u003esort\u003c/code\u003e to file content.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis level is a bit tricky. First, examine the file contents. Using \u003ccode\u003ehead\u003c/code\u003e shows the 10 first lines of a file:\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"bandit9_0\" loading=\"lazy\" src=\"/images/otw/bandit/bandit9/0.png\"\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e If you want to show more lines: \u003ccode\u003ehead -20\u003c/code\u003e or the number of your choice.\u003c/p\u003e","title":"Bandit9"},{"content":"👨‍💻 whoami Hey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\nWhat is this❓​ This blog is basically my thoughts on several hacking topics. Here you’ll see:\nWriteups from CTF challenges, from platforms like HackTheBox or OverTheWire.\nWalkthroughs and notes on pentesting techniques I’m learning or testing.\nSome posts on cryptography — because math can be fun (sometimes).\nRandom topics that freaks like me may (just may) find interesting.\nThe idea is simple: share what I learn, document my journey, and maybe help others who are also diving into the exciting world of ethical hacking.\n📫 Contact Want to say hi, share ideas, or just geek out about hacking? Reach me here:\n📧 Email: mrb0b1073@proton.me 💻​ GitHub: mrb0b173 🟩​ HackTheBox: mrb0b1073 ","permalink":"http://localhost:1313/about/","summary":"\u003ch2 id=\"-whoami\"\u003e👨‍💻 whoami\u003c/h2\u003e\n\u003cp\u003eHey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\u003c/p\u003e\n\u003chr\u003e\n\u003ch2 id=\"what-is-this\"\u003eWhat is this❓​\u003c/h2\u003e\n\u003cp\u003eThis blog is basically my thoughts on several hacking topics. Here you’ll see:\u003c/p\u003e","title":"About"},{"content":"Hey! 👋 I\u0026rsquo;m mrb0b1073 and this is my first post.\nWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\nExcited to start this adventure!\n","permalink":"http://localhost:1313/posts/hello-world/","summary":"\u003cp\u003eHey! 👋 I\u0026rsquo;m \u003cstrong\u003emrb0b1073\u003c/strong\u003e and this is my first post.\u003c/p\u003e\n\u003cp\u003eWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\u003cbr\u003e\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\u003c/p\u003e\n\u003cp\u003eExcited to start this adventure!\u003c/p\u003e","title":"Hello World"},{"content":"Introduction If you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\nIn cybersecurity there are broadly two complementary roles: Blue Team and Red Team. Blue Teams focus on defense, monitoring, incident response, hardening systems and keeping services secure, while Red Teams simulate attackers to find weaknesses and prove what an adversary could do. Ethical hacking aligns closely with Red Team operations, but cybersecurity is highly transversal across IT. There are many specialities or areas, such as cloud security, appsec, pentesting, forensics, governance, risk management, malware analysis, etc. Every topic could deserve its own post, so let\u0026rsquo;s keep it simple and focus on ethical hacking.\nHacker philosophy Let\u0026rsquo;s start with the idea of what is exactly a hacker. A hacker is someone who explores systems to understand how they work, finds creative ways to make or fix things, and solves technical problems. Historically the word describes curiosity, craft, and a drive to improve systems — not criminality. It is important to make the distinction between hacker and cracker, also called cybercriminal. A hacker explores, builds, discloses responsibly and works to improve security. They work in authorized environments or labs. On the other hand, a cracker breaks into systems for theft, vandalism or other illicit gain.\nHere you can find the most popularized ideas often summarized as the hacker ethic:\nCuriosity first: Learn by exploring and tinkering. Freedom of information: All knowledge should be shared to help progress. This fits properly with the idea of open source. Mistrust of needless authority: Centralized control sometimes blocks innovation. It is always good to question anything, specially common assumptions. Meritocracy: Skills, craft and results matter more than titles. Craftsmanship \u0026amp; elegance: Technical beauty matters. Build clean, clever and efficient solutions. Responsability \u0026amp; ethics: Use your skills to build, fix, educate and defend, not to harm. Core fundamentals Assuming you want to init yourself in hacking, you should first build competence across three basic pillars.\nOperating Systems You should learn as much as possible about Linux and Windows. Specially Linux, all the tools you will be using are meant to be used in a Linux environment. Skill with shell is required, learn basic commands and how to interact with the OS using the terminal. Research about processes, file permissions, package management and logs. A large proportion of web servers around the world run on Linux, although Windows is also widely used. Windows knowledge is really valuable too, considering active directory is strongly used in corporate environments.\nNetworking You have to understand how computers communicate each other. Understand basic networking concepts, IP adresses, subnetting, proxies, find out how internet works. Study some protocols such as TCP/IP, HTTP, DNS or SSH. This could sound confusing for beginners, but this step is not optional! Study different client/server models and how services expose attack surfaces.\nProgramming \u0026amp; scripting Is this completely required? Maybe not for complete beginners. Does it help? Absolutely yes. Understanding how web apps or any type of application works makes things much easier. You can imagine different entry points to exploit if you understand how systems are designed. Also writing scripts in bash or python makes you more productive through automation.\nEthical Hacking foundations Once you feel confident with these 3 pillars, you can go to the next step. You can study about different topics and areas. For example, binary exploiting, web pentesting, mobile pentesting, wireless hacking, etc. You should start picking a focus, in this post we focus on web pentesting, as it is beginner friendly. Also web applications are the bread and butter in companies nowadays.\nKey concepts to study:\nCIA Triad: CIA refers to Confidentiality, Integrity and Availability. These three concepts are key in information security, and describe properties we want to ensure in our systems and information. Web Security basics, OWASP: Study the OWASP Top 10, which summarizes most frequent web security risks. Authentication and session control: Understand the concepts of Authentication and Authorization, research about how session is handled in web apps, cookies, JWT tokens, etc. Input validation \u0026amp; injection attacks: Learn about SQL Injection, Cross-Site Scripting (XSS), Code Injection, SSTI, and every injection type. Secure development lifecycle: Find out how to implement security controls in code. This can be more related to Blue Team, but as Red Teamer it is important to understand. Firewall evasion: What a firewall is and some techniques/methods to bypass. Some cryptography: Understand what a chiper and a hash are, how information is encrypted to prevent access from 3rd parties. Focusing on web, read about TLS protocol. There are many more topics you can research and learn, but this could be a nice starting point.\nTools and platforms to learn Now you have an idea of what to study, let\u0026rsquo;s see how to start in practical terms.\nSome platforms I personally recommend:\nOverTheWire: Here you can find some CTFs (Capture The Flag) which are fun to play and also really instructive. Bandit games are a must for complete beginners, as you will explore some linux and bash concepts which are basic to continue. The games are leveled by difficulty, in their web you can get all the information about how to play, only a terminal and SSH is required. This helps building your foundation in Linux OS. HackTheBox: Nº 1 platform in cybersecurity. Has a lot of resources to learn all this core fundamentals, and also red team / blue team security topics. It is focused on labs where you can test your skills hacking different boxes but if you really want to learn it is worth to invest time and money in the academy. I have to say the level here is high, specially if you try to hack machines on your own without using some guide or writeup. TryHackMe: More beginner friendly than hackthebox, it provides a lot of guided learning resources. PortSwigger Labs: Practical labs about specific topics, focused on web hacking. They are great to learn and understand different types of attacks, injections, and security misconfigurations. I would recommend digging into this once you have the theoretical basis about these concepts. I have to mention a few tools I am sure you\u0026rsquo;d end up using:\nNmap: This is probably the most famous tool in hacking, allowing you to gather information about ports and services running in a machine. Burpsuite: A proxy tool widely used in web application security testing. It basically allows you to intercept and modify web requests, which can be used to perform several types of attacks. Metasploit: The most used pentesting framework. Contains a large amount of scripts and exploits ready to run. Another crucial step here is to set up your virtual lab environment to test vulnerable applications. To achieve this goal, there are some Linux distributions like Kali, Parrot or BlackArch, but that\u0026rsquo;s a topic for another post.\nFinal thoughs To sum up, this would be my personal roadmap:\nLearn the fundamentals, specially Linux and networking. Install some Linux in a virtual machine, play with it, get comfortable with the terminal. You can start with bandit wargames in OverTheWire. Complete every level and make sure to understand everything as clear as possible. Move to guided boxes on HackTheBox. I recommend you joining their Discord, ask questions, community is great there! Take notes, repeat, learn, improve your skills. Maybe use your own lab environment, create your own vulnerable apps. Hacking is a mixing of curiosity, study and practice. Being passionate and motivated about it is really helpful and will definitely speed up the process. The path is long and really challenging, so keep it going!\n\u0026ldquo;Yes, I am a criminal. My crime is that of curiosity.\u0026rdquo; — The Mentor (Loyd Blankenship) at The Hacker Manifesto\n","permalink":"http://localhost:1313/posts/starting-point/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIf you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\u003c/p\u003e","title":"Starting Point"},{"content":"Introduction In this post series we are going to solve every level from bandit in OverTheWire This guide pretends to be a writeup containing the solutions of the level, designed for beginners.\nTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing WSL, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\nEvery section will contain the solution as well as some tips for people who is absolutely beginner.\nTips First of all, some tips:\nDo not use this as first resource to solve the levels. Try on your own, make mistakes and learn from them. Only check the solution as last resource or if you are completely new and you have absolutely no idea about what to do next. Take notes from your learning. Write up commands, tips and everything which can be useful in the future. Make sure to understand everything. Is a good idea to note the passwords for every level. If you want to continue letter, you can simply log in in the desired level. It is annoying to repeat everything! Follow the tips and information provided at OverTheWire website. Levels Here is my solution for every level:\nBandit0 Bandit1 Bandit2 Bandit3 Bandit4 Bandit5 Bandit6 Bandit7 ","permalink":"http://localhost:1313/posts/otw/bandit/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIn this post series we are going to solve every level from bandit in \u003ca href=\"https://overthewire.org/wargames/bandit/\"\u003e\u003cem\u003eOverTheWire\u003c/em\u003e\u003c/a\u003e\nThis guide pretends to be a writeup containing the solutions of the level, designed for beginners.\u003c/p\u003e\n\u003cp\u003eTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing \u003ca href=\"https://learn.microsoft.com/en-us/windows/wsl/install\"\u003eWSL\u003c/a\u003e, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\u003c/p\u003e","title":"Bandit"},{"content":"Level description The goal of this level is for you to log into the game using SSH. The host to which you need to connect is bandit.labs.overthewire.org, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\nTips for beginners Read a bit about what SSH is. Research about what a port is. Solution This is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go here.\nAt Linux, we can use ssh client to connect to the server. It should be installed by default on your system. If not, please first research about how to install. Once you have the SSH client installed, you can log in into the first level as follows:\nssh bandit0@bandit.labs.overthewire.org -p 2220 Syntax is simple: ssh \u0026lt;username\u0026gt;@\u0026lt;hostname\u0026gt; -p \u0026lt;port\u0026gt;. Usually SSH runs on port 22 by default, but they changed to port 2220 so we must specify it in the command.\nOnce you try to log in, you will see something like this: NB: If it\u0026rsquo;s the first time you try to log in, you will be asked about the authenticity of the host. Just type yes.\nType the password bandit0 and press enter. Now you are inside bandit server, ready to begin with bandit1!\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit0/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe goal of this level is for you to log into the game using SSH. The host to which you need to connect is \u003cstrong\u003ebandit.labs.overthewire.org\u003c/strong\u003e, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eRead a bit about what SSH is.\u003c/li\u003e\n\u003cli\u003eResearch about what a port is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go \u003ca href=\"https://en.wikipedia.org/wiki/Secure_Shell\"\u003ehere\u003c/a\u003e.\u003c/p\u003e","title":"Bandit0"},{"content":"Level description The password for the next level is stored in a file called readme located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\nTips for beginners Learn about home directory in Linux. Learn to use cat and ls commands. Solution First step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\nls This shows in terminal the files at the current directory. There you will see the readme file.\nNow we can to check the contents, so let\u0026rsquo;s use cat:\ncat readme To read a file, we use cat \u0026lt;filename\u0026gt;.\nNB: Not every file is human readable in Linux. We deep more about this in later levels.\nThe content of the readme file reveals the password for bandit2 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit1/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u003cstrong\u003ereadme\u003c/strong\u003e located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn about home directory in Linux.\u003c/li\u003e\n\u003cli\u003eLearn to use \u003ccode\u003ecat\u003c/code\u003e and \u003ccode\u003els\u003c/code\u003e commands.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eFirst step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\u003c/p\u003e","title":"Bandit1"},{"content":"Level description The password for the next level is stored in a file called - located in the home directory\nTips for beginners Try to understand why previous solution is not working as you expect. Solution You may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our cat command: The terminal is waiting for something else. This happens due to character - is used to pass arguments to our commands, and the linux shell is interpreting that. To prevent that, we could use:\ncat ./- NB: Dot . is used to refer current directory. The slash / is used at the end of directory name.\nWe get the password for bandit3 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit2/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called - located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eTry to understand why previous solution is not working as you expect.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eYou may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our \u003ccode\u003ecat\u003c/code\u003e command:\n\u003cimg alt=\"bandit2\" loading=\"lazy\" src=\"/images/otw/bandit/bandit2/0.png\"\u003e\u003c/p\u003e\n\u003cp\u003eThe terminal is \u003cem\u003ewaiting\u003c/em\u003e for something else. This happens due to character \u003ccode\u003e-\u003c/code\u003e is used to pass arguments to our commands, and the linux shell is interpreting that.\nTo prevent that, we could use:\u003c/p\u003e","title":"Bandit2"},{"content":"Level description The password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\nTips for beginners Think about how to escape the whitespaces. Solution After login in the machine as bandit3, we can see the filename \u0026ndash;spaces in this filename\u0026ndash;.\nNow we have 2 problems:\nSame as previous level, filename starts with --, so it will be interpreted as an argument. Address this problem using ./. Filename contains whitespaces. This is an issue, as bash interpretes whitespaces to separate commands. To solve the second problem, we must escape the whitespace character in some way. Here is the solution:\ncat ./--spaces\\ in\\ this\\ filename-- NB: Little trick, you can start writting filename and press Tab to autocomplete the name. The \\ is going to be inserted automatically.\nJust using the \\ we can escape the whitespace.\nNow we can continue with the bandit4 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit3/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eThink about how to \u003cem\u003eescape\u003c/em\u003e the whitespaces.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAfter login in the machine as bandit3, we can see the filename \u003cem\u003e\u0026ndash;spaces in this filename\u0026ndash;\u003c/em\u003e.\u003c/p\u003e\n\u003cp\u003eNow we have 2 problems:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eSame as previous level, filename starts with \u003ccode\u003e--\u003c/code\u003e, so it will be interpreted as an argument. Address this problem using \u003ccode\u003e./\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003eFilename contains \u003cstrong\u003ewhitespaces\u003c/strong\u003e. This is an issue, as bash interpretes whitespaces to separate commands.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eTo solve the second problem, we must escape the whitespace character in some way. Here is the solution:\u003c/p\u003e","title":"Bandit3"},{"content":"Level description The password for the next level is stored in a hidden file in the inhere directory.\nTips for beginners Learn how to navigate directories in Linux. First understand what a hidden file is. Solution Listing directory files inside bandit4\u0026rsquo;s home directory, show directory inhere.\nNB: How to distinguish files and directories in Linux? Use ls -l and see the difference.\nWe have 2 options now:\nMove to inhere directory and check contens again. Check contents directly. Moving to another directory can be done using cd \u0026lt;dirName\u0026gt;. If you prefer to check directory contents directly, use ls \u0026lt;dirName\u0026gt;.\nAfter checking inhere contents via ls, we see nothing. The reason is the file is a hidden file. A hidden file in Linux is everyfile whose name starts with dot .. Hidden files are not shown by default with ls command, so we must add a special flag -a to list all files: NB: Both flags -l and -a cna be combined into a single flag -al, which is shorter to type.\nAs you can see, filename is \u0026hellip;Hidding-From-You starting with three dots. Reading file contents should be easy at this point!\nNext level is bandit5.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit4/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a hidden file in the inhere directory.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to navigate directories in Linux.\u003c/li\u003e\n\u003cli\u003eFirst understand what a hidden file is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eListing directory files inside bandit4\u0026rsquo;s home directory, show directory \u003cstrong\u003einhere\u003c/strong\u003e.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e How to distinguish files and directories in Linux? Use \u003ccode\u003els -l\u003c/code\u003e and see the difference.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eWe have 2 options now:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eMove to inhere directory and check contens again.\u003c/li\u003e\n\u003cli\u003eCheck contents directly.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eMoving to another directory can be done using \u003ccode\u003ecd \u0026lt;dirName\u0026gt;\u003c/code\u003e. If you prefer to check directory contents directly, use \u003ccode\u003els \u0026lt;dirName\u0026gt;\u003c/code\u003e.\u003c/p\u003e","title":"Bandit4"},{"content":"Level description The password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\nTips for beginners What means human-readable file? Is there any way to check filetype at Linux?. Solution Checking inhere\u0026rsquo;s contents shows some files names \u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII here\nSo now, our goal is checking if file content of every file in the folder is ASCII or not. file \u0026lt;filename\u0026gt; does the job. Note the use of *. That called a wildcard regular expression, we\u0026rsquo;ll deep into it in later levels. An easy approach could be checking every file separately:\nfile ./--file00 file ./--file01 ... file ./--file09 But that\u0026rsquo;s not funny, imagine we have 100 files to check. All the files are in the same directory, so we can use cat ./* where ./* matches every filename in the directory, applying file to every file.\nNB: Another approach is to use find with certaing flags. Try to do in different ways, don\u0026rsquo;t stick to my solution.\nThe file \u0026ndash;file00 content is not readable, so get password from \u0026ndash;file07 and continue with bandit6.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit5/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eWhat means human-readable file?\u003c/li\u003e\n\u003cli\u003eIs there any way to check filetype at Linux?.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eChecking inhere\u0026rsquo;s contents shows some files names \u003cstrong\u003e\u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09\u003c/strong\u003e. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII \u003ca href=\"https://en.wikipedia.org/wiki/ASCII\"\u003ehere\u003c/a\u003e\u003c/p\u003e","title":"Bandit5"},{"content":"Level description The password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\nhuman-readable 1033 bytes in size not executable Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution The purpose of the level is showing us how to find for files. Listing contents of inhere, we can see some folders, containing a lot of files inside: NB: Adding -R to ls shows recursively the content of every folder inside the directory listed.\nSo this time, checking every file is not an option. We need to find a file with some properties, specific size, not excutable and human-readable. Let\u0026rsquo;s explain the command we\u0026rsquo;re using:\nfind inhere/ -size 1033c ! -executable First, we specify the directory, in this case inhere. The option -size 1033c returns files of 1033 bytes. Then, with -executable we would get executable files, but we want not executable files, that\u0026rsquo;s why we are adding ! before.\nNB: By default, the -size option takes as argument the number of blocks. For example, -size 2 means 2 blocks of 512 bytes, so its 1024. The c is used to specify exact bytes. Don\u0026rsquo;t ask me why it\u0026rsquo;s c and not b 😅.\nThe property of human-readability is not implemented in find. This is not an issue, previous command returns a single file and it is human readable (we could confirm using file): Extra tip: try to use the following:\nfind inhere/ -size 1033c ! -executable | file You get the same result! The pipe | is a great tool to execute 2+ commands in one line.\nGet your password and continue with bandit7.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit6/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ehuman-readable\u003c/li\u003e\n\u003cli\u003e1033 bytes in size\u003c/li\u003e\n\u003cli\u003enot executable\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThe purpose of the level is showing us how to find for files. Listing contents of \u003cstrong\u003einhere\u003c/strong\u003e, we can see some folders, containing a lot of files inside:\n\u003cimg alt=\"bandit6_0\" loading=\"lazy\" src=\"/images/otw/bandit/bandit6/0.png\"\u003e\u003c/p\u003e","title":"Bandit6"},{"content":"Level description The password for the next level is stored somewhere on the server and has all of the following properties:\nowned by user bandit7 owned by group bandit6 33 bytes in size Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution This is very straightforward to do after completing previous level. Now we need to identify a file owned by user bandit7 and group bandi6. Furthermore, the file is somewhere on the server, which means we have to find in the root directory /.\nfind / -user bandit7 -group bandit6 -size 33c 2\u0026gt;/dev/null NB: I added that strange 2\u0026gt;/dev/null to filter error output. The reason why it works like that is more technical, for now just save this a fast way to filter errors in terminal. We get some errors because looking for files in the whole server may return some unaccesible files, as we don\u0026rsquo;t have root user permissions. We will study Linux permissions in later levels.\nWe should get a single file, containing password for bandit8.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit7/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored somewhere on the server and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eowned by user bandit7\u003c/li\u003e\n\u003cli\u003eowned by group bandit6\u003c/li\u003e\n\u003cli\u003e33 bytes in size\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is very straightforward to do after completing previous level. Now we need to identify a file owned by user bandit7 and group bandi6. Furthermore, the file is \u003cstrong\u003esomewhere on the server\u003c/strong\u003e, which means we have to find in the root directory \u003ccode\u003e/\u003c/code\u003e.\u003c/p\u003e","title":"Bandit7"},{"content":"Level description The password for the next level is stored in the file data.txt next to the word millionth.\nTips for beginners Learn how to filter file contents. Solution At previous levels, we discovered how to find for files. Now it\u0026rsquo;s time to find for content inside a file. grep command is going to help with that task.\nNB: Of course I don\u0026rsquo;t want to spoil you the password!\nNotice how this can achieved in different ways.\nUsing grep \u0026lt;keyword\u0026gt; \u0026lt;filename\u0026gt;. Using the pipe | to execute grep over the result of cat command. Take you favorite path to solve the level, and continue with bandit9.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit8/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the file \u003cstrong\u003edata.txt\u003c/strong\u003e next to the word \u003cstrong\u003emillionth\u003c/strong\u003e.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to filter file contents.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAt previous levels, we discovered how to find for files. Now it\u0026rsquo;s time to find for content inside a file. \u003ccode\u003egrep\u003c/code\u003e command is going to help with that task.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"bandit8\" loading=\"lazy\" src=\"/images/otw/bandit/bandit8/0.png\"\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e Of course I don\u0026rsquo;t want to spoil you the password!\u003c/p\u003e","title":"Bandit8"},{"content":"Level description The password for the next level is stored in the file data.txt and is the only line of text that occurs only once.\nTips for beginners First, apply sort to file content. Solution This level is a bit tricky. First, examine the file contents. Using head shows the 10 first lines of a file:\nNB: If you want to show more lines: head -20 or the number of your choice.\nThere are tons of different passwords. The correct one is the only line of text that occurs only once. Try to research how to do on your own. You maybe find uniq. This command has a very interesting flag, -u, used to show only the uniq lines. Let\u0026rsquo;s try with that:\nTake you favorite path to solve the level, and continue with bandit9.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit9/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the file \u003cstrong\u003edata.txt\u003c/strong\u003e and is the only line of text that occurs only once.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst, apply \u003ccode\u003esort\u003c/code\u003e to file content.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis level is a bit tricky. First, examine the file contents. Using \u003ccode\u003ehead\u003c/code\u003e shows the 10 first lines of a file:\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"bandit9_0\" loading=\"lazy\" src=\"/images/otw/bandit/bandit9/0.png\"\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e If you want to show more lines: \u003ccode\u003ehead -20\u003c/code\u003e or the number of your choice.\u003c/p\u003e","title":"Bandit9"},{"content":"👨‍💻 whoami Hey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\nWhat is this❓​ This blog is basically my thoughts on several hacking topics. Here you’ll see:\nWriteups from CTF challenges, from platforms like HackTheBox or OverTheWire.\nWalkthroughs and notes on pentesting techniques I’m learning or testing.\nSome posts on cryptography — because math can be fun (sometimes).\nRandom topics that freaks like me may (just may) find interesting.\nThe idea is simple: share what I learn, document my journey, and maybe help others who are also diving into the exciting world of ethical hacking.\n📫 Contact Want to say hi, share ideas, or just geek out about hacking? Reach me here:\n📧 Email: mrb0b1073@proton.me 💻​ GitHub: mrb0b173 🟩​ HackTheBox: mrb0b1073 ","permalink":"http://localhost:1313/about/","summary":"\u003ch2 id=\"-whoami\"\u003e👨‍💻 whoami\u003c/h2\u003e\n\u003cp\u003eHey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\u003c/p\u003e\n\u003chr\u003e\n\u003ch2 id=\"what-is-this\"\u003eWhat is this❓​\u003c/h2\u003e\n\u003cp\u003eThis blog is basically my thoughts on several hacking topics. Here you’ll see:\u003c/p\u003e","title":"About"},{"content":"Hey! 👋 I\u0026rsquo;m mrb0b1073 and this is my first post.\nWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\nExcited to start this adventure!\n","permalink":"http://localhost:1313/posts/hello-world/","summary":"\u003cp\u003eHey! 👋 I\u0026rsquo;m \u003cstrong\u003emrb0b1073\u003c/strong\u003e and this is my first post.\u003c/p\u003e\n\u003cp\u003eWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\u003cbr\u003e\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\u003c/p\u003e\n\u003cp\u003eExcited to start this adventure!\u003c/p\u003e","title":"Hello World"},{"content":"Introduction If you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\nIn cybersecurity there are broadly two complementary roles: Blue Team and Red Team. Blue Teams focus on defense, monitoring, incident response, hardening systems and keeping services secure, while Red Teams simulate attackers to find weaknesses and prove what an adversary could do. Ethical hacking aligns closely with Red Team operations, but cybersecurity is highly transversal across IT. There are many specialities or areas, such as cloud security, appsec, pentesting, forensics, governance, risk management, malware analysis, etc. Every topic could deserve its own post, so let\u0026rsquo;s keep it simple and focus on ethical hacking.\nHacker philosophy Let\u0026rsquo;s start with the idea of what is exactly a hacker. A hacker is someone who explores systems to understand how they work, finds creative ways to make or fix things, and solves technical problems. Historically the word describes curiosity, craft, and a drive to improve systems — not criminality. It is important to make the distinction between hacker and cracker, also called cybercriminal. A hacker explores, builds, discloses responsibly and works to improve security. They work in authorized environments or labs. On the other hand, a cracker breaks into systems for theft, vandalism or other illicit gain.\nHere you can find the most popularized ideas often summarized as the hacker ethic:\nCuriosity first: Learn by exploring and tinkering. Freedom of information: All knowledge should be shared to help progress. This fits properly with the idea of open source. Mistrust of needless authority: Centralized control sometimes blocks innovation. It is always good to question anything, specially common assumptions. Meritocracy: Skills, craft and results matter more than titles. Craftsmanship \u0026amp; elegance: Technical beauty matters. Build clean, clever and efficient solutions. Responsability \u0026amp; ethics: Use your skills to build, fix, educate and defend, not to harm. Core fundamentals Assuming you want to init yourself in hacking, you should first build competence across three basic pillars.\nOperating Systems You should learn as much as possible about Linux and Windows. Specially Linux, all the tools you will be using are meant to be used in a Linux environment. Skill with shell is required, learn basic commands and how to interact with the OS using the terminal. Research about processes, file permissions, package management and logs. A large proportion of web servers around the world run on Linux, although Windows is also widely used. Windows knowledge is really valuable too, considering active directory is strongly used in corporate environments.\nNetworking You have to understand how computers communicate each other. Understand basic networking concepts, IP adresses, subnetting, proxies, find out how internet works. Study some protocols such as TCP/IP, HTTP, DNS or SSH. This could sound confusing for beginners, but this step is not optional! Study different client/server models and how services expose attack surfaces.\nProgramming \u0026amp; scripting Is this completely required? Maybe not for complete beginners. Does it help? Absolutely yes. Understanding how web apps or any type of application works makes things much easier. You can imagine different entry points to exploit if you understand how systems are designed. Also writing scripts in bash or python makes you more productive through automation.\nEthical Hacking foundations Once you feel confident with these 3 pillars, you can go to the next step. You can study about different topics and areas. For example, binary exploiting, web pentesting, mobile pentesting, wireless hacking, etc. You should start picking a focus, in this post we focus on web pentesting, as it is beginner friendly. Also web applications are the bread and butter in companies nowadays.\nKey concepts to study:\nCIA Triad: CIA refers to Confidentiality, Integrity and Availability. These three concepts are key in information security, and describe properties we want to ensure in our systems and information. Web Security basics, OWASP: Study the OWASP Top 10, which summarizes most frequent web security risks. Authentication and session control: Understand the concepts of Authentication and Authorization, research about how session is handled in web apps, cookies, JWT tokens, etc. Input validation \u0026amp; injection attacks: Learn about SQL Injection, Cross-Site Scripting (XSS), Code Injection, SSTI, and every injection type. Secure development lifecycle: Find out how to implement security controls in code. This can be more related to Blue Team, but as Red Teamer it is important to understand. Firewall evasion: What a firewall is and some techniques/methods to bypass. Some cryptography: Understand what a chiper and a hash are, how information is encrypted to prevent access from 3rd parties. Focusing on web, read about TLS protocol. There are many more topics you can research and learn, but this could be a nice starting point.\nTools and platforms to learn Now you have an idea of what to study, let\u0026rsquo;s see how to start in practical terms.\nSome platforms I personally recommend:\nOverTheWire: Here you can find some CTFs (Capture The Flag) which are fun to play and also really instructive. Bandit games are a must for complete beginners, as you will explore some linux and bash concepts which are basic to continue. The games are leveled by difficulty, in their web you can get all the information about how to play, only a terminal and SSH is required. This helps building your foundation in Linux OS. HackTheBox: Nº 1 platform in cybersecurity. Has a lot of resources to learn all this core fundamentals, and also red team / blue team security topics. It is focused on labs where you can test your skills hacking different boxes but if you really want to learn it is worth to invest time and money in the academy. I have to say the level here is high, specially if you try to hack machines on your own without using some guide or writeup. TryHackMe: More beginner friendly than hackthebox, it provides a lot of guided learning resources. PortSwigger Labs: Practical labs about specific topics, focused on web hacking. They are great to learn and understand different types of attacks, injections, and security misconfigurations. I would recommend digging into this once you have the theoretical basis about these concepts. I have to mention a few tools I am sure you\u0026rsquo;d end up using:\nNmap: This is probably the most famous tool in hacking, allowing you to gather information about ports and services running in a machine. Burpsuite: A proxy tool widely used in web application security testing. It basically allows you to intercept and modify web requests, which can be used to perform several types of attacks. Metasploit: The most used pentesting framework. Contains a large amount of scripts and exploits ready to run. Another crucial step here is to set up your virtual lab environment to test vulnerable applications. To achieve this goal, there are some Linux distributions like Kali, Parrot or BlackArch, but that\u0026rsquo;s a topic for another post.\nFinal thoughs To sum up, this would be my personal roadmap:\nLearn the fundamentals, specially Linux and networking. Install some Linux in a virtual machine, play with it, get comfortable with the terminal. You can start with bandit wargames in OverTheWire. Complete every level and make sure to understand everything as clear as possible. Move to guided boxes on HackTheBox. I recommend you joining their Discord, ask questions, community is great there! Take notes, repeat, learn, improve your skills. Maybe use your own lab environment, create your own vulnerable apps. Hacking is a mixing of curiosity, study and practice. Being passionate and motivated about it is really helpful and will definitely speed up the process. The path is long and really challenging, so keep it going!\n\u0026ldquo;Yes, I am a criminal. My crime is that of curiosity.\u0026rdquo; — The Mentor (Loyd Blankenship) at The Hacker Manifesto\n","permalink":"http://localhost:1313/posts/starting-point/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIf you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\u003c/p\u003e","title":"Starting Point"},{"content":"Introduction In this post series we are going to solve every level from bandit in OverTheWire This guide pretends to be a writeup containing the solutions of the level, designed for beginners.\nTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing WSL, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\nEvery section will contain the solution as well as some tips for people who is absolutely beginner.\nTips First of all, some tips:\nDo not use this as first resource to solve the levels. Try on your own, make mistakes and learn from them. Only check the solution as last resource or if you are completely new and you have absolutely no idea about what to do next. Take notes from your learning. Write up commands, tips and everything which can be useful in the future. Make sure to understand everything. Is a good idea to note the passwords for every level. If you want to continue letter, you can simply log in in the desired level. It is annoying to repeat everything! Follow the tips and information provided at OverTheWire website. Levels Here is my solution for every level:\nBandit0 Bandit1 Bandit2 Bandit3 Bandit4 Bandit5 Bandit6 Bandit7 ","permalink":"http://localhost:1313/posts/otw/bandit/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIn this post series we are going to solve every level from bandit in \u003ca href=\"https://overthewire.org/wargames/bandit/\"\u003e\u003cem\u003eOverTheWire\u003c/em\u003e\u003c/a\u003e\nThis guide pretends to be a writeup containing the solutions of the level, designed for beginners.\u003c/p\u003e\n\u003cp\u003eTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing \u003ca href=\"https://learn.microsoft.com/en-us/windows/wsl/install\"\u003eWSL\u003c/a\u003e, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\u003c/p\u003e","title":"Bandit"},{"content":"Level description The goal of this level is for you to log into the game using SSH. The host to which you need to connect is bandit.labs.overthewire.org, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\nTips for beginners Read a bit about what SSH is. Research about what a port is. Solution This is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go here.\nAt Linux, we can use ssh client to connect to the server. It should be installed by default on your system. If not, please first research about how to install. Once you have the SSH client installed, you can log in into the first level as follows:\nssh bandit0@bandit.labs.overthewire.org -p 2220 Syntax is simple: ssh \u0026lt;username\u0026gt;@\u0026lt;hostname\u0026gt; -p \u0026lt;port\u0026gt;. Usually SSH runs on port 22 by default, but they changed to port 2220 so we must specify it in the command.\nOnce you try to log in, you will see something like this: NB: If it\u0026rsquo;s the first time you try to log in, you will be asked about the authenticity of the host. Just type yes.\nType the password bandit0 and press enter. Now you are inside bandit server, ready to begin with bandit1!\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit0/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe goal of this level is for you to log into the game using SSH. The host to which you need to connect is \u003cstrong\u003ebandit.labs.overthewire.org\u003c/strong\u003e, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eRead a bit about what SSH is.\u003c/li\u003e\n\u003cli\u003eResearch about what a port is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go \u003ca href=\"https://en.wikipedia.org/wiki/Secure_Shell\"\u003ehere\u003c/a\u003e.\u003c/p\u003e","title":"Bandit0"},{"content":"Level description The password for the next level is stored in a file called readme located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\nTips for beginners Learn about home directory in Linux. Learn to use cat and ls commands. Solution First step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\nls This shows in terminal the files at the current directory. There you will see the readme file.\nNow we can to check the contents, so let\u0026rsquo;s use cat:\ncat readme To read a file, we use cat \u0026lt;filename\u0026gt;.\nNB: Not every file is human readable in Linux. We deep more about this in later levels.\nThe content of the readme file reveals the password for bandit2 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit1/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u003cstrong\u003ereadme\u003c/strong\u003e located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn about home directory in Linux.\u003c/li\u003e\n\u003cli\u003eLearn to use \u003ccode\u003ecat\u003c/code\u003e and \u003ccode\u003els\u003c/code\u003e commands.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eFirst step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\u003c/p\u003e","title":"Bandit1"},{"content":"Level description The password for the next level is stored in a file called - located in the home directory\nTips for beginners Try to understand why previous solution is not working as you expect. Solution You may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our cat command: The terminal is waiting for something else. This happens due to character - is used to pass arguments to our commands, and the linux shell is interpreting that. To prevent that, we could use:\ncat ./- NB: Dot . is used to refer current directory. The slash / is used at the end of directory name.\nWe get the password for bandit3 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit2/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called - located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eTry to understand why previous solution is not working as you expect.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eYou may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our \u003ccode\u003ecat\u003c/code\u003e command:\n\u003cimg alt=\"bandit2\" loading=\"lazy\" src=\"/images/otw/bandit/bandit2/0.png\"\u003e\u003c/p\u003e\n\u003cp\u003eThe terminal is \u003cem\u003ewaiting\u003c/em\u003e for something else. This happens due to character \u003ccode\u003e-\u003c/code\u003e is used to pass arguments to our commands, and the linux shell is interpreting that.\nTo prevent that, we could use:\u003c/p\u003e","title":"Bandit2"},{"content":"Level description The password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\nTips for beginners Think about how to escape the whitespaces. Solution After login in the machine as bandit3, we can see the filename \u0026ndash;spaces in this filename\u0026ndash;.\nNow we have 2 problems:\nSame as previous level, filename starts with --, so it will be interpreted as an argument. Address this problem using ./. Filename contains whitespaces. This is an issue, as bash interpretes whitespaces to separate commands. To solve the second problem, we must escape the whitespace character in some way. Here is the solution:\ncat ./--spaces\\ in\\ this\\ filename-- NB: Little trick, you can start writting filename and press Tab to autocomplete the name. The \\ is going to be inserted automatically.\nJust using the \\ we can escape the whitespace.\nNow we can continue with the bandit4 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit3/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eThink about how to \u003cem\u003eescape\u003c/em\u003e the whitespaces.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAfter login in the machine as bandit3, we can see the filename \u003cem\u003e\u0026ndash;spaces in this filename\u0026ndash;\u003c/em\u003e.\u003c/p\u003e\n\u003cp\u003eNow we have 2 problems:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eSame as previous level, filename starts with \u003ccode\u003e--\u003c/code\u003e, so it will be interpreted as an argument. Address this problem using \u003ccode\u003e./\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003eFilename contains \u003cstrong\u003ewhitespaces\u003c/strong\u003e. This is an issue, as bash interpretes whitespaces to separate commands.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eTo solve the second problem, we must escape the whitespace character in some way. Here is the solution:\u003c/p\u003e","title":"Bandit3"},{"content":"Level description The password for the next level is stored in a hidden file in the inhere directory.\nTips for beginners Learn how to navigate directories in Linux. First understand what a hidden file is. Solution Listing directory files inside bandit4\u0026rsquo;s home directory, show directory inhere.\nNB: How to distinguish files and directories in Linux? Use ls -l and see the difference.\nWe have 2 options now:\nMove to inhere directory and check contens again. Check contents directly. Moving to another directory can be done using cd \u0026lt;dirName\u0026gt;. If you prefer to check directory contents directly, use ls \u0026lt;dirName\u0026gt;.\nAfter checking inhere contents via ls, we see nothing. The reason is the file is a hidden file. A hidden file in Linux is everyfile whose name starts with dot .. Hidden files are not shown by default with ls command, so we must add a special flag -a to list all files: NB: Both flags -l and -a cna be combined into a single flag -al, which is shorter to type.\nAs you can see, filename is \u0026hellip;Hidding-From-You starting with three dots. Reading file contents should be easy at this point!\nNext level is bandit5.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit4/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a hidden file in the inhere directory.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to navigate directories in Linux.\u003c/li\u003e\n\u003cli\u003eFirst understand what a hidden file is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eListing directory files inside bandit4\u0026rsquo;s home directory, show directory \u003cstrong\u003einhere\u003c/strong\u003e.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e How to distinguish files and directories in Linux? Use \u003ccode\u003els -l\u003c/code\u003e and see the difference.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eWe have 2 options now:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eMove to inhere directory and check contens again.\u003c/li\u003e\n\u003cli\u003eCheck contents directly.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eMoving to another directory can be done using \u003ccode\u003ecd \u0026lt;dirName\u0026gt;\u003c/code\u003e. If you prefer to check directory contents directly, use \u003ccode\u003els \u0026lt;dirName\u0026gt;\u003c/code\u003e.\u003c/p\u003e","title":"Bandit4"},{"content":"Level description The password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\nTips for beginners What means human-readable file? Is there any way to check filetype at Linux?. Solution Checking inhere\u0026rsquo;s contents shows some files names \u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII here\nSo now, our goal is checking if file content of every file in the folder is ASCII or not. file \u0026lt;filename\u0026gt; does the job. Note the use of *. That called a wildcard regular expression, we\u0026rsquo;ll deep into it in later levels. An easy approach could be checking every file separately:\nfile ./--file00 file ./--file01 ... file ./--file09 But that\u0026rsquo;s not funny, imagine we have 100 files to check. All the files are in the same directory, so we can use cat ./* where ./* matches every filename in the directory, applying file to every file.\nNB: Another approach is to use find with certaing flags. Try to do in different ways, don\u0026rsquo;t stick to my solution.\nThe file \u0026ndash;file00 content is not readable, so get password from \u0026ndash;file07 and continue with bandit6.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit5/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eWhat means human-readable file?\u003c/li\u003e\n\u003cli\u003eIs there any way to check filetype at Linux?.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eChecking inhere\u0026rsquo;s contents shows some files names \u003cstrong\u003e\u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09\u003c/strong\u003e. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII \u003ca href=\"https://en.wikipedia.org/wiki/ASCII\"\u003ehere\u003c/a\u003e\u003c/p\u003e","title":"Bandit5"},{"content":"Level description The password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\nhuman-readable 1033 bytes in size not executable Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution The purpose of the level is showing us how to find for files. Listing contents of inhere, we can see some folders, containing a lot of files inside: NB: Adding -R to ls shows recursively the content of every folder inside the directory listed.\nSo this time, checking every file is not an option. We need to find a file with some properties, specific size, not excutable and human-readable. Let\u0026rsquo;s explain the command we\u0026rsquo;re using:\nfind inhere/ -size 1033c ! -executable First, we specify the directory, in this case inhere. The option -size 1033c returns files of 1033 bytes. Then, with -executable we would get executable files, but we want not executable files, that\u0026rsquo;s why we are adding ! before.\nNB: By default, the -size option takes as argument the number of blocks. For example, -size 2 means 2 blocks of 512 bytes, so its 1024. The c is used to specify exact bytes. Don\u0026rsquo;t ask me why it\u0026rsquo;s c and not b 😅.\nThe property of human-readability is not implemented in find. This is not an issue, previous command returns a single file and it is human readable (we could confirm using file): Extra tip: try to use the following:\nfind inhere/ -size 1033c ! -executable | file You get the same result! The pipe | is a great tool to execute 2+ commands in one line.\nGet your password and continue with bandit7.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit6/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ehuman-readable\u003c/li\u003e\n\u003cli\u003e1033 bytes in size\u003c/li\u003e\n\u003cli\u003enot executable\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThe purpose of the level is showing us how to find for files. Listing contents of \u003cstrong\u003einhere\u003c/strong\u003e, we can see some folders, containing a lot of files inside:\n\u003cimg alt=\"bandit6_0\" loading=\"lazy\" src=\"/images/otw/bandit/bandit6/0.png\"\u003e\u003c/p\u003e","title":"Bandit6"},{"content":"Level description The password for the next level is stored somewhere on the server and has all of the following properties:\nowned by user bandit7 owned by group bandit6 33 bytes in size Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution This is very straightforward to do after completing previous level. Now we need to identify a file owned by user bandit7 and group bandi6. Furthermore, the file is somewhere on the server, which means we have to find in the root directory /.\nfind / -user bandit7 -group bandit6 -size 33c 2\u0026gt;/dev/null NB: I added that strange 2\u0026gt;/dev/null to filter error output. The reason why it works like that is more technical, for now just save this a fast way to filter errors in terminal. We get some errors because looking for files in the whole server may return some unaccesible files, as we don\u0026rsquo;t have root user permissions. We will study Linux permissions in later levels.\nWe should get a single file, containing password for bandit8.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit7/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored somewhere on the server and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eowned by user bandit7\u003c/li\u003e\n\u003cli\u003eowned by group bandit6\u003c/li\u003e\n\u003cli\u003e33 bytes in size\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is very straightforward to do after completing previous level. Now we need to identify a file owned by user bandit7 and group bandi6. Furthermore, the file is \u003cstrong\u003esomewhere on the server\u003c/strong\u003e, which means we have to find in the root directory \u003ccode\u003e/\u003c/code\u003e.\u003c/p\u003e","title":"Bandit7"},{"content":"Level description The password for the next level is stored in the file data.txt next to the word millionth.\nTips for beginners Learn how to filter file contents. Solution At previous levels, we discovered how to find for files. Now it\u0026rsquo;s time to find for content inside a file. grep command is going to help with that task.\nNB: Of course I don\u0026rsquo;t want to spoil you the password!\nNotice how this can achieved in different ways.\nUsing grep \u0026lt;keyword\u0026gt; \u0026lt;filename\u0026gt;. Using the pipe | to execute grep over the result of cat command. Take you favorite path to solve the level, and continue with bandit9.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit8/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the file \u003cstrong\u003edata.txt\u003c/strong\u003e next to the word \u003cstrong\u003emillionth\u003c/strong\u003e.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to filter file contents.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAt previous levels, we discovered how to find for files. Now it\u0026rsquo;s time to find for content inside a file. \u003ccode\u003egrep\u003c/code\u003e command is going to help with that task.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"bandit8\" loading=\"lazy\" src=\"/images/otw/bandit/bandit8/0.png\"\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e Of course I don\u0026rsquo;t want to spoil you the password!\u003c/p\u003e","title":"Bandit8"},{"content":"Level description The password for the next level is stored in the file data.txt and is the only line of text that occurs only once.\nTips for beginners First, apply sort to file content. Solution This level is a bit tricky. First, examine the file contents. Using head shows the 10 first lines of a file:\nNB: If you want to show more lines: head -20 or the number of your choice.\nThere are tons of different passwords. The correct one is the only line of text that occurs only once. Try to research how to do on your own. You maybe find uniq. This command has a very interesting flag, -u, used to show only the uniq lines. Let\u0026rsquo;s try with that:\nFor some reason, is not working. The trick here is to sort the file contents before applying uniq. This can be achieve using sort, so the final command looks like this:\ncat data.txt | sort | uniq -u Take you favorite path to solve the level, and continue with bandit9.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit9/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the file \u003cstrong\u003edata.txt\u003c/strong\u003e and is the only line of text that occurs only once.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst, apply \u003ccode\u003esort\u003c/code\u003e to file content.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis level is a bit tricky. First, examine the file contents. Using \u003ccode\u003ehead\u003c/code\u003e shows the 10 first lines of a file:\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"bandit9_0\" loading=\"lazy\" src=\"/images/otw/bandit/bandit9/0.png\"\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e If you want to show more lines: \u003ccode\u003ehead -20\u003c/code\u003e or the number of your choice.\u003c/p\u003e","title":"Bandit9"},{"content":"👨‍💻 whoami Hey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\nWhat is this❓​ This blog is basically my thoughts on several hacking topics. Here you’ll see:\nWriteups from CTF challenges, from platforms like HackTheBox or OverTheWire.\nWalkthroughs and notes on pentesting techniques I’m learning or testing.\nSome posts on cryptography — because math can be fun (sometimes).\nRandom topics that freaks like me may (just may) find interesting.\nThe idea is simple: share what I learn, document my journey, and maybe help others who are also diving into the exciting world of ethical hacking.\n📫 Contact Want to say hi, share ideas, or just geek out about hacking? Reach me here:\n📧 Email: mrb0b1073@proton.me 💻​ GitHub: mrb0b173 🟩​ HackTheBox: mrb0b1073 ","permalink":"http://localhost:1313/about/","summary":"\u003ch2 id=\"-whoami\"\u003e👨‍💻 whoami\u003c/h2\u003e\n\u003cp\u003eHey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\u003c/p\u003e\n\u003chr\u003e\n\u003ch2 id=\"what-is-this\"\u003eWhat is this❓​\u003c/h2\u003e\n\u003cp\u003eThis blog is basically my thoughts on several hacking topics. Here you’ll see:\u003c/p\u003e","title":"About"},{"content":"Hey! 👋 I\u0026rsquo;m mrb0b1073 and this is my first post.\nWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\nExcited to start this adventure!\n","permalink":"http://localhost:1313/posts/hello-world/","summary":"\u003cp\u003eHey! 👋 I\u0026rsquo;m \u003cstrong\u003emrb0b1073\u003c/strong\u003e and this is my first post.\u003c/p\u003e\n\u003cp\u003eWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\u003cbr\u003e\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\u003c/p\u003e\n\u003cp\u003eExcited to start this adventure!\u003c/p\u003e","title":"Hello World"},{"content":"Introduction If you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\nIn cybersecurity there are broadly two complementary roles: Blue Team and Red Team. Blue Teams focus on defense, monitoring, incident response, hardening systems and keeping services secure, while Red Teams simulate attackers to find weaknesses and prove what an adversary could do. Ethical hacking aligns closely with Red Team operations, but cybersecurity is highly transversal across IT. There are many specialities or areas, such as cloud security, appsec, pentesting, forensics, governance, risk management, malware analysis, etc. Every topic could deserve its own post, so let\u0026rsquo;s keep it simple and focus on ethical hacking.\nHacker philosophy Let\u0026rsquo;s start with the idea of what is exactly a hacker. A hacker is someone who explores systems to understand how they work, finds creative ways to make or fix things, and solves technical problems. Historically the word describes curiosity, craft, and a drive to improve systems — not criminality. It is important to make the distinction between hacker and cracker, also called cybercriminal. A hacker explores, builds, discloses responsibly and works to improve security. They work in authorized environments or labs. On the other hand, a cracker breaks into systems for theft, vandalism or other illicit gain.\nHere you can find the most popularized ideas often summarized as the hacker ethic:\nCuriosity first: Learn by exploring and tinkering. Freedom of information: All knowledge should be shared to help progress. This fits properly with the idea of open source. Mistrust of needless authority: Centralized control sometimes blocks innovation. It is always good to question anything, specially common assumptions. Meritocracy: Skills, craft and results matter more than titles. Craftsmanship \u0026amp; elegance: Technical beauty matters. Build clean, clever and efficient solutions. Responsability \u0026amp; ethics: Use your skills to build, fix, educate and defend, not to harm. Core fundamentals Assuming you want to init yourself in hacking, you should first build competence across three basic pillars.\nOperating Systems You should learn as much as possible about Linux and Windows. Specially Linux, all the tools you will be using are meant to be used in a Linux environment. Skill with shell is required, learn basic commands and how to interact with the OS using the terminal. Research about processes, file permissions, package management and logs. A large proportion of web servers around the world run on Linux, although Windows is also widely used. Windows knowledge is really valuable too, considering active directory is strongly used in corporate environments.\nNetworking You have to understand how computers communicate each other. Understand basic networking concepts, IP adresses, subnetting, proxies, find out how internet works. Study some protocols such as TCP/IP, HTTP, DNS or SSH. This could sound confusing for beginners, but this step is not optional! Study different client/server models and how services expose attack surfaces.\nProgramming \u0026amp; scripting Is this completely required? Maybe not for complete beginners. Does it help? Absolutely yes. Understanding how web apps or any type of application works makes things much easier. You can imagine different entry points to exploit if you understand how systems are designed. Also writing scripts in bash or python makes you more productive through automation.\nEthical Hacking foundations Once you feel confident with these 3 pillars, you can go to the next step. You can study about different topics and areas. For example, binary exploiting, web pentesting, mobile pentesting, wireless hacking, etc. You should start picking a focus, in this post we focus on web pentesting, as it is beginner friendly. Also web applications are the bread and butter in companies nowadays.\nKey concepts to study:\nCIA Triad: CIA refers to Confidentiality, Integrity and Availability. These three concepts are key in information security, and describe properties we want to ensure in our systems and information. Web Security basics, OWASP: Study the OWASP Top 10, which summarizes most frequent web security risks. Authentication and session control: Understand the concepts of Authentication and Authorization, research about how session is handled in web apps, cookies, JWT tokens, etc. Input validation \u0026amp; injection attacks: Learn about SQL Injection, Cross-Site Scripting (XSS), Code Injection, SSTI, and every injection type. Secure development lifecycle: Find out how to implement security controls in code. This can be more related to Blue Team, but as Red Teamer it is important to understand. Firewall evasion: What a firewall is and some techniques/methods to bypass. Some cryptography: Understand what a chiper and a hash are, how information is encrypted to prevent access from 3rd parties. Focusing on web, read about TLS protocol. There are many more topics you can research and learn, but this could be a nice starting point.\nTools and platforms to learn Now you have an idea of what to study, let\u0026rsquo;s see how to start in practical terms.\nSome platforms I personally recommend:\nOverTheWire: Here you can find some CTFs (Capture The Flag) which are fun to play and also really instructive. Bandit games are a must for complete beginners, as you will explore some linux and bash concepts which are basic to continue. The games are leveled by difficulty, in their web you can get all the information about how to play, only a terminal and SSH is required. This helps building your foundation in Linux OS. HackTheBox: Nº 1 platform in cybersecurity. Has a lot of resources to learn all this core fundamentals, and also red team / blue team security topics. It is focused on labs where you can test your skills hacking different boxes but if you really want to learn it is worth to invest time and money in the academy. I have to say the level here is high, specially if you try to hack machines on your own without using some guide or writeup. TryHackMe: More beginner friendly than hackthebox, it provides a lot of guided learning resources. PortSwigger Labs: Practical labs about specific topics, focused on web hacking. They are great to learn and understand different types of attacks, injections, and security misconfigurations. I would recommend digging into this once you have the theoretical basis about these concepts. I have to mention a few tools I am sure you\u0026rsquo;d end up using:\nNmap: This is probably the most famous tool in hacking, allowing you to gather information about ports and services running in a machine. Burpsuite: A proxy tool widely used in web application security testing. It basically allows you to intercept and modify web requests, which can be used to perform several types of attacks. Metasploit: The most used pentesting framework. Contains a large amount of scripts and exploits ready to run. Another crucial step here is to set up your virtual lab environment to test vulnerable applications. To achieve this goal, there are some Linux distributions like Kali, Parrot or BlackArch, but that\u0026rsquo;s a topic for another post.\nFinal thoughs To sum up, this would be my personal roadmap:\nLearn the fundamentals, specially Linux and networking. Install some Linux in a virtual machine, play with it, get comfortable with the terminal. You can start with bandit wargames in OverTheWire. Complete every level and make sure to understand everything as clear as possible. Move to guided boxes on HackTheBox. I recommend you joining their Discord, ask questions, community is great there! Take notes, repeat, learn, improve your skills. Maybe use your own lab environment, create your own vulnerable apps. Hacking is a mixing of curiosity, study and practice. Being passionate and motivated about it is really helpful and will definitely speed up the process. The path is long and really challenging, so keep it going!\n\u0026ldquo;Yes, I am a criminal. My crime is that of curiosity.\u0026rdquo; — The Mentor (Loyd Blankenship) at The Hacker Manifesto\n","permalink":"http://localhost:1313/posts/starting-point/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIf you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\u003c/p\u003e","title":"Starting Point"},{"content":"Introduction In this post series we are going to solve every level from bandit in OverTheWire This guide pretends to be a writeup containing the solutions of the level, designed for beginners.\nTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing WSL, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\nEvery section will contain the solution as well as some tips for people who is absolutely beginner.\nTips First of all, some tips:\nDo not use this as first resource to solve the levels. Try on your own, make mistakes and learn from them. Only check the solution as last resource or if you are completely new and you have absolutely no idea about what to do next. Take notes from your learning. Write up commands, tips and everything which can be useful in the future. Make sure to understand everything. Is a good idea to note the passwords for every level. If you want to continue letter, you can simply log in in the desired level. It is annoying to repeat everything! Follow the tips and information provided at OverTheWire website. Levels Here is my solution for every level:\nBandit0 Bandit1 Bandit2 Bandit3 Bandit4 Bandit5 Bandit6 Bandit7 ","permalink":"http://localhost:1313/posts/otw/bandit/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIn this post series we are going to solve every level from bandit in \u003ca href=\"https://overthewire.org/wargames/bandit/\"\u003e\u003cem\u003eOverTheWire\u003c/em\u003e\u003c/a\u003e\nThis guide pretends to be a writeup containing the solutions of the level, designed for beginners.\u003c/p\u003e\n\u003cp\u003eTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing \u003ca href=\"https://learn.microsoft.com/en-us/windows/wsl/install\"\u003eWSL\u003c/a\u003e, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\u003c/p\u003e","title":"Bandit"},{"content":"Level description The goal of this level is for you to log into the game using SSH. The host to which you need to connect is bandit.labs.overthewire.org, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\nTips for beginners Read a bit about what SSH is. Research about what a port is. Solution This is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go here.\nAt Linux, we can use ssh client to connect to the server. It should be installed by default on your system. If not, please first research about how to install. Once you have the SSH client installed, you can log in into the first level as follows:\nssh bandit0@bandit.labs.overthewire.org -p 2220 Syntax is simple: ssh \u0026lt;username\u0026gt;@\u0026lt;hostname\u0026gt; -p \u0026lt;port\u0026gt;. Usually SSH runs on port 22 by default, but they changed to port 2220 so we must specify it in the command.\nOnce you try to log in, you will see something like this: NB: If it\u0026rsquo;s the first time you try to log in, you will be asked about the authenticity of the host. Just type yes.\nType the password bandit0 and press enter. Now you are inside bandit server, ready to begin with bandit1!\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit0/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe goal of this level is for you to log into the game using SSH. The host to which you need to connect is \u003cstrong\u003ebandit.labs.overthewire.org\u003c/strong\u003e, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eRead a bit about what SSH is.\u003c/li\u003e\n\u003cli\u003eResearch about what a port is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go \u003ca href=\"https://en.wikipedia.org/wiki/Secure_Shell\"\u003ehere\u003c/a\u003e.\u003c/p\u003e","title":"Bandit0"},{"content":"Level description The password for the next level is stored in a file called readme located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\nTips for beginners Learn about home directory in Linux. Learn to use cat and ls commands. Solution First step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\nls This shows in terminal the files at the current directory. There you will see the readme file.\nNow we can to check the contents, so let\u0026rsquo;s use cat:\ncat readme To read a file, we use cat \u0026lt;filename\u0026gt;.\nNB: Not every file is human readable in Linux. We deep more about this in later levels.\nThe content of the readme file reveals the password for bandit2 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit1/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u003cstrong\u003ereadme\u003c/strong\u003e located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn about home directory in Linux.\u003c/li\u003e\n\u003cli\u003eLearn to use \u003ccode\u003ecat\u003c/code\u003e and \u003ccode\u003els\u003c/code\u003e commands.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eFirst step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\u003c/p\u003e","title":"Bandit1"},{"content":"Level description The password for the next level is stored in a file called - located in the home directory\nTips for beginners Try to understand why previous solution is not working as you expect. Solution You may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our cat command: The terminal is waiting for something else. This happens due to character - is used to pass arguments to our commands, and the linux shell is interpreting that. To prevent that, we could use:\ncat ./- NB: Dot . is used to refer current directory. The slash / is used at the end of directory name.\nWe get the password for bandit3 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit2/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called - located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eTry to understand why previous solution is not working as you expect.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eYou may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our \u003ccode\u003ecat\u003c/code\u003e command:\n\u003cimg alt=\"bandit2\" loading=\"lazy\" src=\"/images/otw/bandit/bandit2/0.png\"\u003e\u003c/p\u003e\n\u003cp\u003eThe terminal is \u003cem\u003ewaiting\u003c/em\u003e for something else. This happens due to character \u003ccode\u003e-\u003c/code\u003e is used to pass arguments to our commands, and the linux shell is interpreting that.\nTo prevent that, we could use:\u003c/p\u003e","title":"Bandit2"},{"content":"Level description The password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\nTips for beginners Think about how to escape the whitespaces. Solution After login in the machine as bandit3, we can see the filename \u0026ndash;spaces in this filename\u0026ndash;.\nNow we have 2 problems:\nSame as previous level, filename starts with --, so it will be interpreted as an argument. Address this problem using ./. Filename contains whitespaces. This is an issue, as bash interpretes whitespaces to separate commands. To solve the second problem, we must escape the whitespace character in some way. Here is the solution:\ncat ./--spaces\\ in\\ this\\ filename-- NB: Little trick, you can start writting filename and press Tab to autocomplete the name. The \\ is going to be inserted automatically.\nJust using the \\ we can escape the whitespace.\nNow we can continue with the bandit4 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit3/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eThink about how to \u003cem\u003eescape\u003c/em\u003e the whitespaces.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAfter login in the machine as bandit3, we can see the filename \u003cem\u003e\u0026ndash;spaces in this filename\u0026ndash;\u003c/em\u003e.\u003c/p\u003e\n\u003cp\u003eNow we have 2 problems:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eSame as previous level, filename starts with \u003ccode\u003e--\u003c/code\u003e, so it will be interpreted as an argument. Address this problem using \u003ccode\u003e./\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003eFilename contains \u003cstrong\u003ewhitespaces\u003c/strong\u003e. This is an issue, as bash interpretes whitespaces to separate commands.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eTo solve the second problem, we must escape the whitespace character in some way. Here is the solution:\u003c/p\u003e","title":"Bandit3"},{"content":"Level description The password for the next level is stored in a hidden file in the inhere directory.\nTips for beginners Learn how to navigate directories in Linux. First understand what a hidden file is. Solution Listing directory files inside bandit4\u0026rsquo;s home directory, show directory inhere.\nNB: How to distinguish files and directories in Linux? Use ls -l and see the difference.\nWe have 2 options now:\nMove to inhere directory and check contens again. Check contents directly. Moving to another directory can be done using cd \u0026lt;dirName\u0026gt;. If you prefer to check directory contents directly, use ls \u0026lt;dirName\u0026gt;.\nAfter checking inhere contents via ls, we see nothing. The reason is the file is a hidden file. A hidden file in Linux is everyfile whose name starts with dot .. Hidden files are not shown by default with ls command, so we must add a special flag -a to list all files: NB: Both flags -l and -a cna be combined into a single flag -al, which is shorter to type.\nAs you can see, filename is \u0026hellip;Hidding-From-You starting with three dots. Reading file contents should be easy at this point!\nNext level is bandit5.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit4/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a hidden file in the inhere directory.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to navigate directories in Linux.\u003c/li\u003e\n\u003cli\u003eFirst understand what a hidden file is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eListing directory files inside bandit4\u0026rsquo;s home directory, show directory \u003cstrong\u003einhere\u003c/strong\u003e.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e How to distinguish files and directories in Linux? Use \u003ccode\u003els -l\u003c/code\u003e and see the difference.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eWe have 2 options now:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eMove to inhere directory and check contens again.\u003c/li\u003e\n\u003cli\u003eCheck contents directly.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eMoving to another directory can be done using \u003ccode\u003ecd \u0026lt;dirName\u0026gt;\u003c/code\u003e. If you prefer to check directory contents directly, use \u003ccode\u003els \u0026lt;dirName\u0026gt;\u003c/code\u003e.\u003c/p\u003e","title":"Bandit4"},{"content":"Level description The password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\nTips for beginners What means human-readable file? Is there any way to check filetype at Linux?. Solution Checking inhere\u0026rsquo;s contents shows some files names \u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII here\nSo now, our goal is checking if file content of every file in the folder is ASCII or not. file \u0026lt;filename\u0026gt; does the job. Note the use of *. That called a wildcard regular expression, we\u0026rsquo;ll deep into it in later levels. An easy approach could be checking every file separately:\nfile ./--file00 file ./--file01 ... file ./--file09 But that\u0026rsquo;s not funny, imagine we have 100 files to check. All the files are in the same directory, so we can use cat ./* where ./* matches every filename in the directory, applying file to every file.\nNB: Another approach is to use find with certaing flags. Try to do in different ways, don\u0026rsquo;t stick to my solution.\nThe file \u0026ndash;file00 content is not readable, so get password from \u0026ndash;file07 and continue with bandit6.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit5/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eWhat means human-readable file?\u003c/li\u003e\n\u003cli\u003eIs there any way to check filetype at Linux?.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eChecking inhere\u0026rsquo;s contents shows some files names \u003cstrong\u003e\u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09\u003c/strong\u003e. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII \u003ca href=\"https://en.wikipedia.org/wiki/ASCII\"\u003ehere\u003c/a\u003e\u003c/p\u003e","title":"Bandit5"},{"content":"Level description The password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\nhuman-readable 1033 bytes in size not executable Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution The purpose of the level is showing us how to find for files. Listing contents of inhere, we can see some folders, containing a lot of files inside: NB: Adding -R to ls shows recursively the content of every folder inside the directory listed.\nSo this time, checking every file is not an option. We need to find a file with some properties, specific size, not excutable and human-readable. Let\u0026rsquo;s explain the command we\u0026rsquo;re using:\nfind inhere/ -size 1033c ! -executable First, we specify the directory, in this case inhere. The option -size 1033c returns files of 1033 bytes. Then, with -executable we would get executable files, but we want not executable files, that\u0026rsquo;s why we are adding ! before.\nNB: By default, the -size option takes as argument the number of blocks. For example, -size 2 means 2 blocks of 512 bytes, so its 1024. The c is used to specify exact bytes. Don\u0026rsquo;t ask me why it\u0026rsquo;s c and not b 😅.\nThe property of human-readability is not implemented in find. This is not an issue, previous command returns a single file and it is human readable (we could confirm using file): Extra tip: try to use the following:\nfind inhere/ -size 1033c ! -executable | file You get the same result! The pipe | is a great tool to execute 2+ commands in one line.\nGet your password and continue with bandit7.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit6/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ehuman-readable\u003c/li\u003e\n\u003cli\u003e1033 bytes in size\u003c/li\u003e\n\u003cli\u003enot executable\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThe purpose of the level is showing us how to find for files. Listing contents of \u003cstrong\u003einhere\u003c/strong\u003e, we can see some folders, containing a lot of files inside:\n\u003cimg alt=\"bandit6_0\" loading=\"lazy\" src=\"/images/otw/bandit/bandit6/0.png\"\u003e\u003c/p\u003e","title":"Bandit6"},{"content":"Level description The password for the next level is stored somewhere on the server and has all of the following properties:\nowned by user bandit7 owned by group bandit6 33 bytes in size Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution This is very straightforward to do after completing previous level. Now we need to identify a file owned by user bandit7 and group bandi6. Furthermore, the file is somewhere on the server, which means we have to find in the root directory /.\nfind / -user bandit7 -group bandit6 -size 33c 2\u0026gt;/dev/null NB: I added that strange 2\u0026gt;/dev/null to filter error output. The reason why it works like that is more technical, for now just save this a fast way to filter errors in terminal. We get some errors because looking for files in the whole server may return some unaccesible files, as we don\u0026rsquo;t have root user permissions. We will study Linux permissions in later levels.\nWe should get a single file, containing password for bandit8.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit7/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored somewhere on the server and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eowned by user bandit7\u003c/li\u003e\n\u003cli\u003eowned by group bandit6\u003c/li\u003e\n\u003cli\u003e33 bytes in size\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is very straightforward to do after completing previous level. Now we need to identify a file owned by user bandit7 and group bandi6. Furthermore, the file is \u003cstrong\u003esomewhere on the server\u003c/strong\u003e, which means we have to find in the root directory \u003ccode\u003e/\u003c/code\u003e.\u003c/p\u003e","title":"Bandit7"},{"content":"Level description The password for the next level is stored in the file data.txt next to the word millionth.\nTips for beginners Learn how to filter file contents. Solution At previous levels, we discovered how to find for files. Now it\u0026rsquo;s time to find for content inside a file. grep command is going to help with that task.\nNB: Of course I don\u0026rsquo;t want to spoil you the password!\nNotice how this can achieved in different ways.\nUsing grep \u0026lt;keyword\u0026gt; \u0026lt;filename\u0026gt;. Using the pipe | to execute grep over the result of cat command. Take you favorite path to solve the level, and continue with bandit9.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit8/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the file \u003cstrong\u003edata.txt\u003c/strong\u003e next to the word \u003cstrong\u003emillionth\u003c/strong\u003e.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to filter file contents.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAt previous levels, we discovered how to find for files. Now it\u0026rsquo;s time to find for content inside a file. \u003ccode\u003egrep\u003c/code\u003e command is going to help with that task.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"bandit8\" loading=\"lazy\" src=\"/images/otw/bandit/bandit8/0.png\"\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e Of course I don\u0026rsquo;t want to spoil you the password!\u003c/p\u003e","title":"Bandit8"},{"content":"Level description The password for the next level is stored in the file data.txt and is the only line of text that occurs only once.\nTips for beginners First, apply sort to file content. Solution This level is a bit tricky. First, examine the file contents. Using head shows the 10 first lines of a file:\nNB: If you want to show more lines: head -20 or the number of your choice.\nThere are tons of different passwords. The correct one is the only line of text that occurs only once. Try to research how to do on your own. You maybe find uniq. This command has a very interesting flag, -u, used to show only the uniq lines. Let\u0026rsquo;s try with that:\nFor some reason, is not working. The trick here is to sort the file contents before applying uniq. This can be achieved using sort, so the final command looks like this:\ncat data.txt | sort | uniq -u Take you favorite path to solve the level, and continue with bandit9.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit9/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the file \u003cstrong\u003edata.txt\u003c/strong\u003e and is the only line of text that occurs only once.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst, apply \u003ccode\u003esort\u003c/code\u003e to file content.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis level is a bit tricky. First, examine the file contents. Using \u003ccode\u003ehead\u003c/code\u003e shows the 10 first lines of a file:\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"bandit9_0\" loading=\"lazy\" src=\"/images/otw/bandit/bandit9/0.png\"\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e If you want to show more lines: \u003ccode\u003ehead -20\u003c/code\u003e or the number of your choice.\u003c/p\u003e","title":"Bandit9"},{"content":"👨‍💻 whoami Hey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\nWhat is this❓​ This blog is basically my thoughts on several hacking topics. Here you’ll see:\nWriteups from CTF challenges, from platforms like HackTheBox or OverTheWire.\nWalkthroughs and notes on pentesting techniques I’m learning or testing.\nSome posts on cryptography — because math can be fun (sometimes).\nRandom topics that freaks like me may (just may) find interesting.\nThe idea is simple: share what I learn, document my journey, and maybe help others who are also diving into the exciting world of ethical hacking.\n📫 Contact Want to say hi, share ideas, or just geek out about hacking? Reach me here:\n📧 Email: mrb0b1073@proton.me 💻​ GitHub: mrb0b173 🟩​ HackTheBox: mrb0b1073 ","permalink":"http://localhost:1313/about/","summary":"\u003ch2 id=\"-whoami\"\u003e👨‍💻 whoami\u003c/h2\u003e\n\u003cp\u003eHey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\u003c/p\u003e\n\u003chr\u003e\n\u003ch2 id=\"what-is-this\"\u003eWhat is this❓​\u003c/h2\u003e\n\u003cp\u003eThis blog is basically my thoughts on several hacking topics. Here you’ll see:\u003c/p\u003e","title":"About"},{"content":"Hey! 👋 I\u0026rsquo;m mrb0b1073 and this is my first post.\nWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\nExcited to start this adventure!\n","permalink":"http://localhost:1313/posts/hello-world/","summary":"\u003cp\u003eHey! 👋 I\u0026rsquo;m \u003cstrong\u003emrb0b1073\u003c/strong\u003e and this is my first post.\u003c/p\u003e\n\u003cp\u003eWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\u003cbr\u003e\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\u003c/p\u003e\n\u003cp\u003eExcited to start this adventure!\u003c/p\u003e","title":"Hello World"},{"content":"Introduction If you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\nIn cybersecurity there are broadly two complementary roles: Blue Team and Red Team. Blue Teams focus on defense, monitoring, incident response, hardening systems and keeping services secure, while Red Teams simulate attackers to find weaknesses and prove what an adversary could do. Ethical hacking aligns closely with Red Team operations, but cybersecurity is highly transversal across IT. There are many specialities or areas, such as cloud security, appsec, pentesting, forensics, governance, risk management, malware analysis, etc. Every topic could deserve its own post, so let\u0026rsquo;s keep it simple and focus on ethical hacking.\nHacker philosophy Let\u0026rsquo;s start with the idea of what is exactly a hacker. A hacker is someone who explores systems to understand how they work, finds creative ways to make or fix things, and solves technical problems. Historically the word describes curiosity, craft, and a drive to improve systems — not criminality. It is important to make the distinction between hacker and cracker, also called cybercriminal. A hacker explores, builds, discloses responsibly and works to improve security. They work in authorized environments or labs. On the other hand, a cracker breaks into systems for theft, vandalism or other illicit gain.\nHere you can find the most popularized ideas often summarized as the hacker ethic:\nCuriosity first: Learn by exploring and tinkering. Freedom of information: All knowledge should be shared to help progress. This fits properly with the idea of open source. Mistrust of needless authority: Centralized control sometimes blocks innovation. It is always good to question anything, specially common assumptions. Meritocracy: Skills, craft and results matter more than titles. Craftsmanship \u0026amp; elegance: Technical beauty matters. Build clean, clever and efficient solutions. Responsability \u0026amp; ethics: Use your skills to build, fix, educate and defend, not to harm. Core fundamentals Assuming you want to init yourself in hacking, you should first build competence across three basic pillars.\nOperating Systems You should learn as much as possible about Linux and Windows. Specially Linux, all the tools you will be using are meant to be used in a Linux environment. Skill with shell is required, learn basic commands and how to interact with the OS using the terminal. Research about processes, file permissions, package management and logs. A large proportion of web servers around the world run on Linux, although Windows is also widely used. Windows knowledge is really valuable too, considering active directory is strongly used in corporate environments.\nNetworking You have to understand how computers communicate each other. Understand basic networking concepts, IP adresses, subnetting, proxies, find out how internet works. Study some protocols such as TCP/IP, HTTP, DNS or SSH. This could sound confusing for beginners, but this step is not optional! Study different client/server models and how services expose attack surfaces.\nProgramming \u0026amp; scripting Is this completely required? Maybe not for complete beginners. Does it help? Absolutely yes. Understanding how web apps or any type of application works makes things much easier. You can imagine different entry points to exploit if you understand how systems are designed. Also writing scripts in bash or python makes you more productive through automation.\nEthical Hacking foundations Once you feel confident with these 3 pillars, you can go to the next step. You can study about different topics and areas. For example, binary exploiting, web pentesting, mobile pentesting, wireless hacking, etc. You should start picking a focus, in this post we focus on web pentesting, as it is beginner friendly. Also web applications are the bread and butter in companies nowadays.\nKey concepts to study:\nCIA Triad: CIA refers to Confidentiality, Integrity and Availability. These three concepts are key in information security, and describe properties we want to ensure in our systems and information. Web Security basics, OWASP: Study the OWASP Top 10, which summarizes most frequent web security risks. Authentication and session control: Understand the concepts of Authentication and Authorization, research about how session is handled in web apps, cookies, JWT tokens, etc. Input validation \u0026amp; injection attacks: Learn about SQL Injection, Cross-Site Scripting (XSS), Code Injection, SSTI, and every injection type. Secure development lifecycle: Find out how to implement security controls in code. This can be more related to Blue Team, but as Red Teamer it is important to understand. Firewall evasion: What a firewall is and some techniques/methods to bypass. Some cryptography: Understand what a chiper and a hash are, how information is encrypted to prevent access from 3rd parties. Focusing on web, read about TLS protocol. There are many more topics you can research and learn, but this could be a nice starting point.\nTools and platforms to learn Now you have an idea of what to study, let\u0026rsquo;s see how to start in practical terms.\nSome platforms I personally recommend:\nOverTheWire: Here you can find some CTFs (Capture The Flag) which are fun to play and also really instructive. Bandit games are a must for complete beginners, as you will explore some linux and bash concepts which are basic to continue. The games are leveled by difficulty, in their web you can get all the information about how to play, only a terminal and SSH is required. This helps building your foundation in Linux OS. HackTheBox: Nº 1 platform in cybersecurity. Has a lot of resources to learn all this core fundamentals, and also red team / blue team security topics. It is focused on labs where you can test your skills hacking different boxes but if you really want to learn it is worth to invest time and money in the academy. I have to say the level here is high, specially if you try to hack machines on your own without using some guide or writeup. TryHackMe: More beginner friendly than hackthebox, it provides a lot of guided learning resources. PortSwigger Labs: Practical labs about specific topics, focused on web hacking. They are great to learn and understand different types of attacks, injections, and security misconfigurations. I would recommend digging into this once you have the theoretical basis about these concepts. I have to mention a few tools I am sure you\u0026rsquo;d end up using:\nNmap: This is probably the most famous tool in hacking, allowing you to gather information about ports and services running in a machine. Burpsuite: A proxy tool widely used in web application security testing. It basically allows you to intercept and modify web requests, which can be used to perform several types of attacks. Metasploit: The most used pentesting framework. Contains a large amount of scripts and exploits ready to run. Another crucial step here is to set up your virtual lab environment to test vulnerable applications. To achieve this goal, there are some Linux distributions like Kali, Parrot or BlackArch, but that\u0026rsquo;s a topic for another post.\nFinal thoughs To sum up, this would be my personal roadmap:\nLearn the fundamentals, specially Linux and networking. Install some Linux in a virtual machine, play with it, get comfortable with the terminal. You can start with bandit wargames in OverTheWire. Complete every level and make sure to understand everything as clear as possible. Move to guided boxes on HackTheBox. I recommend you joining their Discord, ask questions, community is great there! Take notes, repeat, learn, improve your skills. Maybe use your own lab environment, create your own vulnerable apps. Hacking is a mixing of curiosity, study and practice. Being passionate and motivated about it is really helpful and will definitely speed up the process. The path is long and really challenging, so keep it going!\n\u0026ldquo;Yes, I am a criminal. My crime is that of curiosity.\u0026rdquo; — The Mentor (Loyd Blankenship) at The Hacker Manifesto\n","permalink":"http://localhost:1313/posts/starting-point/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIf you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\u003c/p\u003e","title":"Starting Point"},{"content":"Introduction In this post series we are going to solve every level from bandit in OverTheWire This guide pretends to be a writeup containing the solutions of the level, designed for beginners.\nTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing WSL, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\nEvery section will contain the solution as well as some tips for people who is absolutely beginner.\nTips First of all, some tips:\nDo not use this as first resource to solve the levels. Try on your own, make mistakes and learn from them. Only check the solution as last resource or if you are completely new and you have absolutely no idea about what to do next. Take notes from your learning. Write up commands, tips and everything which can be useful in the future. Make sure to understand everything. Is a good idea to note the passwords for every level. If you want to continue letter, you can simply log in in the desired level. It is annoying to repeat everything! Follow the tips and information provided at OverTheWire website. Levels Here is my solution for every level:\nBandit0 Bandit1 Bandit2 Bandit3 Bandit4 Bandit5 Bandit6 Bandit7 ","permalink":"http://localhost:1313/posts/otw/bandit/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIn this post series we are going to solve every level from bandit in \u003ca href=\"https://overthewire.org/wargames/bandit/\"\u003e\u003cem\u003eOverTheWire\u003c/em\u003e\u003c/a\u003e\nThis guide pretends to be a writeup containing the solutions of the level, designed for beginners.\u003c/p\u003e\n\u003cp\u003eTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing \u003ca href=\"https://learn.microsoft.com/en-us/windows/wsl/install\"\u003eWSL\u003c/a\u003e, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\u003c/p\u003e","title":"Bandit"},{"content":"Level description The goal of this level is for you to log into the game using SSH. The host to which you need to connect is bandit.labs.overthewire.org, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\nTips for beginners Read a bit about what SSH is. Research about what a port is. Solution This is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go here.\nAt Linux, we can use ssh client to connect to the server. It should be installed by default on your system. If not, please first research about how to install. Once you have the SSH client installed, you can log in into the first level as follows:\nssh bandit0@bandit.labs.overthewire.org -p 2220 Syntax is simple: ssh \u0026lt;username\u0026gt;@\u0026lt;hostname\u0026gt; -p \u0026lt;port\u0026gt;. Usually SSH runs on port 22 by default, but they changed to port 2220 so we must specify it in the command.\nOnce you try to log in, you will see something like this: NB: If it\u0026rsquo;s the first time you try to log in, you will be asked about the authenticity of the host. Just type yes.\nType the password bandit0 and press enter. Now you are inside bandit server, ready to begin with bandit1!\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit0/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe goal of this level is for you to log into the game using SSH. The host to which you need to connect is \u003cstrong\u003ebandit.labs.overthewire.org\u003c/strong\u003e, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eRead a bit about what SSH is.\u003c/li\u003e\n\u003cli\u003eResearch about what a port is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go \u003ca href=\"https://en.wikipedia.org/wiki/Secure_Shell\"\u003ehere\u003c/a\u003e.\u003c/p\u003e","title":"Bandit0"},{"content":"Level description The password for the next level is stored in a file called readme located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\nTips for beginners Learn about home directory in Linux. Learn to use cat and ls commands. Solution First step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\nls This shows in terminal the files at the current directory. There you will see the readme file.\nNow we can to check the contents, so let\u0026rsquo;s use cat:\ncat readme To read a file, we use cat \u0026lt;filename\u0026gt;.\nNB: Not every file is human readable in Linux. We deep more about this in later levels.\nThe content of the readme file reveals the password for bandit2 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit1/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u003cstrong\u003ereadme\u003c/strong\u003e located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn about home directory in Linux.\u003c/li\u003e\n\u003cli\u003eLearn to use \u003ccode\u003ecat\u003c/code\u003e and \u003ccode\u003els\u003c/code\u003e commands.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eFirst step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\u003c/p\u003e","title":"Bandit1"},{"content":"Level description The password for the next level is stored in a file called - located in the home directory\nTips for beginners Try to understand why previous solution is not working as you expect. Solution You may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our cat command: The terminal is waiting for something else. This happens due to character - is used to pass arguments to our commands, and the linux shell is interpreting that. To prevent that, we could use:\ncat ./- NB: Dot . is used to refer current directory. The slash / is used at the end of directory name.\nWe get the password for bandit3 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit2/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called - located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eTry to understand why previous solution is not working as you expect.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eYou may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our \u003ccode\u003ecat\u003c/code\u003e command:\n\u003cimg alt=\"bandit2\" loading=\"lazy\" src=\"/images/otw/bandit/bandit2/0.png\"\u003e\u003c/p\u003e\n\u003cp\u003eThe terminal is \u003cem\u003ewaiting\u003c/em\u003e for something else. This happens due to character \u003ccode\u003e-\u003c/code\u003e is used to pass arguments to our commands, and the linux shell is interpreting that.\nTo prevent that, we could use:\u003c/p\u003e","title":"Bandit2"},{"content":"Level description The password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\nTips for beginners Think about how to escape the whitespaces. Solution After login in the machine as bandit3, we can see the filename \u0026ndash;spaces in this filename\u0026ndash;.\nNow we have 2 problems:\nSame as previous level, filename starts with --, so it will be interpreted as an argument. Address this problem using ./. Filename contains whitespaces. This is an issue, as bash interpretes whitespaces to separate commands. To solve the second problem, we must escape the whitespace character in some way. Here is the solution:\ncat ./--spaces\\ in\\ this\\ filename-- NB: Little trick, you can start writting filename and press Tab to autocomplete the name. The \\ is going to be inserted automatically.\nJust using the \\ we can escape the whitespace.\nNow we can continue with the bandit4 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit3/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eThink about how to \u003cem\u003eescape\u003c/em\u003e the whitespaces.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAfter login in the machine as bandit3, we can see the filename \u003cem\u003e\u0026ndash;spaces in this filename\u0026ndash;\u003c/em\u003e.\u003c/p\u003e\n\u003cp\u003eNow we have 2 problems:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eSame as previous level, filename starts with \u003ccode\u003e--\u003c/code\u003e, so it will be interpreted as an argument. Address this problem using \u003ccode\u003e./\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003eFilename contains \u003cstrong\u003ewhitespaces\u003c/strong\u003e. This is an issue, as bash interpretes whitespaces to separate commands.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eTo solve the second problem, we must escape the whitespace character in some way. Here is the solution:\u003c/p\u003e","title":"Bandit3"},{"content":"Level description The password for the next level is stored in a hidden file in the inhere directory.\nTips for beginners Learn how to navigate directories in Linux. First understand what a hidden file is. Solution Listing directory files inside bandit4\u0026rsquo;s home directory, show directory inhere.\nNB: How to distinguish files and directories in Linux? Use ls -l and see the difference.\nWe have 2 options now:\nMove to inhere directory and check contens again. Check contents directly. Moving to another directory can be done using cd \u0026lt;dirName\u0026gt;. If you prefer to check directory contents directly, use ls \u0026lt;dirName\u0026gt;.\nAfter checking inhere contents via ls, we see nothing. The reason is the file is a hidden file. A hidden file in Linux is everyfile whose name starts with dot .. Hidden files are not shown by default with ls command, so we must add a special flag -a to list all files: NB: Both flags -l and -a cna be combined into a single flag -al, which is shorter to type.\nAs you can see, filename is \u0026hellip;Hidding-From-You starting with three dots. Reading file contents should be easy at this point!\nNext level is bandit5.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit4/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a hidden file in the inhere directory.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to navigate directories in Linux.\u003c/li\u003e\n\u003cli\u003eFirst understand what a hidden file is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eListing directory files inside bandit4\u0026rsquo;s home directory, show directory \u003cstrong\u003einhere\u003c/strong\u003e.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e How to distinguish files and directories in Linux? Use \u003ccode\u003els -l\u003c/code\u003e and see the difference.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eWe have 2 options now:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eMove to inhere directory and check contens again.\u003c/li\u003e\n\u003cli\u003eCheck contents directly.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eMoving to another directory can be done using \u003ccode\u003ecd \u0026lt;dirName\u0026gt;\u003c/code\u003e. If you prefer to check directory contents directly, use \u003ccode\u003els \u0026lt;dirName\u0026gt;\u003c/code\u003e.\u003c/p\u003e","title":"Bandit4"},{"content":"Level description The password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\nTips for beginners What means human-readable file? Is there any way to check filetype at Linux?. Solution Checking inhere\u0026rsquo;s contents shows some files names \u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII here\nSo now, our goal is checking if file content of every file in the folder is ASCII or not. file \u0026lt;filename\u0026gt; does the job. Note the use of *. That called a wildcard regular expression, we\u0026rsquo;ll deep into it in later levels. An easy approach could be checking every file separately:\nfile ./--file00 file ./--file01 ... file ./--file09 But that\u0026rsquo;s not funny, imagine we have 100 files to check. All the files are in the same directory, so we can use cat ./* where ./* matches every filename in the directory, applying file to every file.\nNB: Another approach is to use find with certaing flags. Try to do in different ways, don\u0026rsquo;t stick to my solution.\nThe file \u0026ndash;file00 content is not readable, so get password from \u0026ndash;file07 and continue with bandit6.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit5/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eWhat means human-readable file?\u003c/li\u003e\n\u003cli\u003eIs there any way to check filetype at Linux?.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eChecking inhere\u0026rsquo;s contents shows some files names \u003cstrong\u003e\u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09\u003c/strong\u003e. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII \u003ca href=\"https://en.wikipedia.org/wiki/ASCII\"\u003ehere\u003c/a\u003e\u003c/p\u003e","title":"Bandit5"},{"content":"Level description The password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\nhuman-readable 1033 bytes in size not executable Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution The purpose of the level is showing us how to find for files. Listing contents of inhere, we can see some folders, containing a lot of files inside: NB: Adding -R to ls shows recursively the content of every folder inside the directory listed.\nSo this time, checking every file is not an option. We need to find a file with some properties, specific size, not excutable and human-readable. Let\u0026rsquo;s explain the command we\u0026rsquo;re using:\nfind inhere/ -size 1033c ! -executable First, we specify the directory, in this case inhere. The option -size 1033c returns files of 1033 bytes. Then, with -executable we would get executable files, but we want not executable files, that\u0026rsquo;s why we are adding ! before.\nNB: By default, the -size option takes as argument the number of blocks. For example, -size 2 means 2 blocks of 512 bytes, so its 1024. The c is used to specify exact bytes. Don\u0026rsquo;t ask me why it\u0026rsquo;s c and not b 😅.\nThe property of human-readability is not implemented in find. This is not an issue, previous command returns a single file and it is human readable (we could confirm using file): Extra tip: try to use the following:\nfind inhere/ -size 1033c ! -executable | file You get the same result! The pipe | is a great tool to execute 2+ commands in one line.\nGet your password and continue with bandit7.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit6/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ehuman-readable\u003c/li\u003e\n\u003cli\u003e1033 bytes in size\u003c/li\u003e\n\u003cli\u003enot executable\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThe purpose of the level is showing us how to find for files. Listing contents of \u003cstrong\u003einhere\u003c/strong\u003e, we can see some folders, containing a lot of files inside:\n\u003cimg alt=\"bandit6_0\" loading=\"lazy\" src=\"/images/otw/bandit/bandit6/0.png\"\u003e\u003c/p\u003e","title":"Bandit6"},{"content":"Level description The password for the next level is stored somewhere on the server and has all of the following properties:\nowned by user bandit7 owned by group bandit6 33 bytes in size Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution This is very straightforward to do after completing previous level. Now we need to identify a file owned by user bandit7 and group bandi6. Furthermore, the file is somewhere on the server, which means we have to find in the root directory /.\nfind / -user bandit7 -group bandit6 -size 33c 2\u0026gt;/dev/null NB: I added that strange 2\u0026gt;/dev/null to filter error output. The reason why it works like that is more technical, for now just save this a fast way to filter errors in terminal. We get some errors because looking for files in the whole server may return some unaccesible files, as we don\u0026rsquo;t have root user permissions. We will study Linux permissions in later levels.\nWe should get a single file, containing password for bandit8.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit7/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored somewhere on the server and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eowned by user bandit7\u003c/li\u003e\n\u003cli\u003eowned by group bandit6\u003c/li\u003e\n\u003cli\u003e33 bytes in size\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is very straightforward to do after completing previous level. Now we need to identify a file owned by user bandit7 and group bandi6. Furthermore, the file is \u003cstrong\u003esomewhere on the server\u003c/strong\u003e, which means we have to find in the root directory \u003ccode\u003e/\u003c/code\u003e.\u003c/p\u003e","title":"Bandit7"},{"content":"Level description The password for the next level is stored in the file data.txt next to the word millionth.\nTips for beginners Learn how to filter file contents. Solution At previous levels, we discovered how to find for files. Now it\u0026rsquo;s time to find for content inside a file. grep command is going to help with that task.\nNB: Of course I don\u0026rsquo;t want to spoil you the password!\nNotice how this can achieved in different ways.\nUsing grep \u0026lt;keyword\u0026gt; \u0026lt;filename\u0026gt;. Using the pipe | to execute grep over the result of cat command. Take you favorite path to solve the level, and continue with bandit9.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit8/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the file \u003cstrong\u003edata.txt\u003c/strong\u003e next to the word \u003cstrong\u003emillionth\u003c/strong\u003e.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to filter file contents.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAt previous levels, we discovered how to find for files. Now it\u0026rsquo;s time to find for content inside a file. \u003ccode\u003egrep\u003c/code\u003e command is going to help with that task.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"bandit8\" loading=\"lazy\" src=\"/images/otw/bandit/bandit8/0.png\"\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e Of course I don\u0026rsquo;t want to spoil you the password!\u003c/p\u003e","title":"Bandit8"},{"content":"Level description The password for the next level is stored in the file data.txt and is the only line of text that occurs only once.\nTips for beginners First, apply sort to file content. Solution This level is a bit tricky. First, examine the file contents. Using head shows the 10 first lines of a file:\nNB: If you want to show more lines: head -20 or the number of your choice.\nThere are tons of different passwords. The correct one is the only line of text that occurs only once. Try to research how to do on your own. You maybe find uniq. This command has a very interesting flag, -u, used to show only the uniq lines. Let\u0026rsquo;s try with that:\nFor some reason, is not working. The trick here is to sort the file contents before applying uniq. This can be achieved using sort, so the final command looks like this:\ncat data.txt | sort | uniq -u NB: You need to sort lines first because uniq only detects consecutive repetitions.\nTake you favorite path to solve the level, and continue with bandit9.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit9/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the file \u003cstrong\u003edata.txt\u003c/strong\u003e and is the only line of text that occurs only once.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst, apply \u003ccode\u003esort\u003c/code\u003e to file content.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis level is a bit tricky. First, examine the file contents. Using \u003ccode\u003ehead\u003c/code\u003e shows the 10 first lines of a file:\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"bandit9_0\" loading=\"lazy\" src=\"/images/otw/bandit/bandit9/0.png\"\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e If you want to show more lines: \u003ccode\u003ehead -20\u003c/code\u003e or the number of your choice.\u003c/p\u003e","title":"Bandit9"},{"content":"👨‍💻 whoami Hey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\nWhat is this❓​ This blog is basically my thoughts on several hacking topics. Here you’ll see:\nWriteups from CTF challenges, from platforms like HackTheBox or OverTheWire.\nWalkthroughs and notes on pentesting techniques I’m learning or testing.\nSome posts on cryptography — because math can be fun (sometimes).\nRandom topics that freaks like me may (just may) find interesting.\nThe idea is simple: share what I learn, document my journey, and maybe help others who are also diving into the exciting world of ethical hacking.\n📫 Contact Want to say hi, share ideas, or just geek out about hacking? Reach me here:\n📧 Email: mrb0b1073@proton.me 💻​ GitHub: mrb0b173 🟩​ HackTheBox: mrb0b1073 ","permalink":"http://localhost:1313/about/","summary":"\u003ch2 id=\"-whoami\"\u003e👨‍💻 whoami\u003c/h2\u003e\n\u003cp\u003eHey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\u003c/p\u003e\n\u003chr\u003e\n\u003ch2 id=\"what-is-this\"\u003eWhat is this❓​\u003c/h2\u003e\n\u003cp\u003eThis blog is basically my thoughts on several hacking topics. Here you’ll see:\u003c/p\u003e","title":"About"},{"content":"Hey! 👋 I\u0026rsquo;m mrb0b1073 and this is my first post.\nWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\nExcited to start this adventure!\n","permalink":"http://localhost:1313/posts/hello-world/","summary":"\u003cp\u003eHey! 👋 I\u0026rsquo;m \u003cstrong\u003emrb0b1073\u003c/strong\u003e and this is my first post.\u003c/p\u003e\n\u003cp\u003eWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\u003cbr\u003e\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\u003c/p\u003e\n\u003cp\u003eExcited to start this adventure!\u003c/p\u003e","title":"Hello World"},{"content":"Introduction If you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\nIn cybersecurity there are broadly two complementary roles: Blue Team and Red Team. Blue Teams focus on defense, monitoring, incident response, hardening systems and keeping services secure, while Red Teams simulate attackers to find weaknesses and prove what an adversary could do. Ethical hacking aligns closely with Red Team operations, but cybersecurity is highly transversal across IT. There are many specialities or areas, such as cloud security, appsec, pentesting, forensics, governance, risk management, malware analysis, etc. Every topic could deserve its own post, so let\u0026rsquo;s keep it simple and focus on ethical hacking.\nHacker philosophy Let\u0026rsquo;s start with the idea of what is exactly a hacker. A hacker is someone who explores systems to understand how they work, finds creative ways to make or fix things, and solves technical problems. Historically the word describes curiosity, craft, and a drive to improve systems — not criminality. It is important to make the distinction between hacker and cracker, also called cybercriminal. A hacker explores, builds, discloses responsibly and works to improve security. They work in authorized environments or labs. On the other hand, a cracker breaks into systems for theft, vandalism or other illicit gain.\nHere you can find the most popularized ideas often summarized as the hacker ethic:\nCuriosity first: Learn by exploring and tinkering. Freedom of information: All knowledge should be shared to help progress. This fits properly with the idea of open source. Mistrust of needless authority: Centralized control sometimes blocks innovation. It is always good to question anything, specially common assumptions. Meritocracy: Skills, craft and results matter more than titles. Craftsmanship \u0026amp; elegance: Technical beauty matters. Build clean, clever and efficient solutions. Responsability \u0026amp; ethics: Use your skills to build, fix, educate and defend, not to harm. Core fundamentals Assuming you want to init yourself in hacking, you should first build competence across three basic pillars.\nOperating Systems You should learn as much as possible about Linux and Windows. Specially Linux, all the tools you will be using are meant to be used in a Linux environment. Skill with shell is required, learn basic commands and how to interact with the OS using the terminal. Research about processes, file permissions, package management and logs. A large proportion of web servers around the world run on Linux, although Windows is also widely used. Windows knowledge is really valuable too, considering active directory is strongly used in corporate environments.\nNetworking You have to understand how computers communicate each other. Understand basic networking concepts, IP adresses, subnetting, proxies, find out how internet works. Study some protocols such as TCP/IP, HTTP, DNS or SSH. This could sound confusing for beginners, but this step is not optional! Study different client/server models and how services expose attack surfaces.\nProgramming \u0026amp; scripting Is this completely required? Maybe not for complete beginners. Does it help? Absolutely yes. Understanding how web apps or any type of application works makes things much easier. You can imagine different entry points to exploit if you understand how systems are designed. Also writing scripts in bash or python makes you more productive through automation.\nEthical Hacking foundations Once you feel confident with these 3 pillars, you can go to the next step. You can study about different topics and areas. For example, binary exploiting, web pentesting, mobile pentesting, wireless hacking, etc. You should start picking a focus, in this post we focus on web pentesting, as it is beginner friendly. Also web applications are the bread and butter in companies nowadays.\nKey concepts to study:\nCIA Triad: CIA refers to Confidentiality, Integrity and Availability. These three concepts are key in information security, and describe properties we want to ensure in our systems and information. Web Security basics, OWASP: Study the OWASP Top 10, which summarizes most frequent web security risks. Authentication and session control: Understand the concepts of Authentication and Authorization, research about how session is handled in web apps, cookies, JWT tokens, etc. Input validation \u0026amp; injection attacks: Learn about SQL Injection, Cross-Site Scripting (XSS), Code Injection, SSTI, and every injection type. Secure development lifecycle: Find out how to implement security controls in code. This can be more related to Blue Team, but as Red Teamer it is important to understand. Firewall evasion: What a firewall is and some techniques/methods to bypass. Some cryptography: Understand what a chiper and a hash are, how information is encrypted to prevent access from 3rd parties. Focusing on web, read about TLS protocol. There are many more topics you can research and learn, but this could be a nice starting point.\nTools and platforms to learn Now you have an idea of what to study, let\u0026rsquo;s see how to start in practical terms.\nSome platforms I personally recommend:\nOverTheWire: Here you can find some CTFs (Capture The Flag) which are fun to play and also really instructive. Bandit games are a must for complete beginners, as you will explore some linux and bash concepts which are basic to continue. The games are leveled by difficulty, in their web you can get all the information about how to play, only a terminal and SSH is required. This helps building your foundation in Linux OS. HackTheBox: Nº 1 platform in cybersecurity. Has a lot of resources to learn all this core fundamentals, and also red team / blue team security topics. It is focused on labs where you can test your skills hacking different boxes but if you really want to learn it is worth to invest time and money in the academy. I have to say the level here is high, specially if you try to hack machines on your own without using some guide or writeup. TryHackMe: More beginner friendly than hackthebox, it provides a lot of guided learning resources. PortSwigger Labs: Practical labs about specific topics, focused on web hacking. They are great to learn and understand different types of attacks, injections, and security misconfigurations. I would recommend digging into this once you have the theoretical basis about these concepts. I have to mention a few tools I am sure you\u0026rsquo;d end up using:\nNmap: This is probably the most famous tool in hacking, allowing you to gather information about ports and services running in a machine. Burpsuite: A proxy tool widely used in web application security testing. It basically allows you to intercept and modify web requests, which can be used to perform several types of attacks. Metasploit: The most used pentesting framework. Contains a large amount of scripts and exploits ready to run. Another crucial step here is to set up your virtual lab environment to test vulnerable applications. To achieve this goal, there are some Linux distributions like Kali, Parrot or BlackArch, but that\u0026rsquo;s a topic for another post.\nFinal thoughs To sum up, this would be my personal roadmap:\nLearn the fundamentals, specially Linux and networking. Install some Linux in a virtual machine, play with it, get comfortable with the terminal. You can start with bandit wargames in OverTheWire. Complete every level and make sure to understand everything as clear as possible. Move to guided boxes on HackTheBox. I recommend you joining their Discord, ask questions, community is great there! Take notes, repeat, learn, improve your skills. Maybe use your own lab environment, create your own vulnerable apps. Hacking is a mixing of curiosity, study and practice. Being passionate and motivated about it is really helpful and will definitely speed up the process. The path is long and really challenging, so keep it going!\n\u0026ldquo;Yes, I am a criminal. My crime is that of curiosity.\u0026rdquo; — The Mentor (Loyd Blankenship) at The Hacker Manifesto\n","permalink":"http://localhost:1313/posts/starting-point/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIf you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\u003c/p\u003e","title":"Starting Point"},{"content":"Introduction In this post series we are going to solve every level from bandit in OverTheWire This guide pretends to be a writeup containing the solutions of the level, designed for beginners.\nTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing WSL, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\nEvery section will contain the solution as well as some tips for people who is absolutely beginner.\nTips First of all, some tips:\nDo not use this as first resource to solve the levels. Try on your own, make mistakes and learn from them. Only check the solution as last resource or if you are completely new and you have absolutely no idea about what to do next. Take notes from your learning. Write up commands, tips and everything which can be useful in the future. Make sure to understand everything. Is a good idea to note the passwords for every level. If you want to continue letter, you can simply log in in the desired level. It is annoying to repeat everything! Follow the tips and information provided at OverTheWire website. Levels Here is my solution for every level:\nBandit0 Bandit1 Bandit2 Bandit3 Bandit4 Bandit5 Bandit6 Bandit7 ","permalink":"http://localhost:1313/posts/otw/bandit/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIn this post series we are going to solve every level from bandit in \u003ca href=\"https://overthewire.org/wargames/bandit/\"\u003e\u003cem\u003eOverTheWire\u003c/em\u003e\u003c/a\u003e\nThis guide pretends to be a writeup containing the solutions of the level, designed for beginners.\u003c/p\u003e\n\u003cp\u003eTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing \u003ca href=\"https://learn.microsoft.com/en-us/windows/wsl/install\"\u003eWSL\u003c/a\u003e, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\u003c/p\u003e","title":"Bandit"},{"content":"Level description The goal of this level is for you to log into the game using SSH. The host to which you need to connect is bandit.labs.overthewire.org, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\nTips for beginners Read a bit about what SSH is. Research about what a port is. Solution This is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go here.\nAt Linux, we can use ssh client to connect to the server. It should be installed by default on your system. If not, please first research about how to install. Once you have the SSH client installed, you can log in into the first level as follows:\nssh bandit0@bandit.labs.overthewire.org -p 2220 Syntax is simple: ssh \u0026lt;username\u0026gt;@\u0026lt;hostname\u0026gt; -p \u0026lt;port\u0026gt;. Usually SSH runs on port 22 by default, but they changed to port 2220 so we must specify it in the command.\nOnce you try to log in, you will see something like this: NB: If it\u0026rsquo;s the first time you try to log in, you will be asked about the authenticity of the host. Just type yes.\nType the password bandit0 and press enter. Now you are inside bandit server, ready to begin with bandit1!\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit0/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe goal of this level is for you to log into the game using SSH. The host to which you need to connect is \u003cstrong\u003ebandit.labs.overthewire.org\u003c/strong\u003e, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eRead a bit about what SSH is.\u003c/li\u003e\n\u003cli\u003eResearch about what a port is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go \u003ca href=\"https://en.wikipedia.org/wiki/Secure_Shell\"\u003ehere\u003c/a\u003e.\u003c/p\u003e","title":"Bandit0"},{"content":"Level description The password for the next level is stored in a file called readme located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\nTips for beginners Learn about home directory in Linux. Learn to use cat and ls commands. Solution First step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\nls This shows in terminal the files at the current directory. There you will see the readme file.\nNow we can to check the contents, so let\u0026rsquo;s use cat:\ncat readme To read a file, we use cat \u0026lt;filename\u0026gt;.\nNB: Not every file is human readable in Linux. We deep more about this in later levels.\nThe content of the readme file reveals the password for bandit2 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit1/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u003cstrong\u003ereadme\u003c/strong\u003e located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn about home directory in Linux.\u003c/li\u003e\n\u003cli\u003eLearn to use \u003ccode\u003ecat\u003c/code\u003e and \u003ccode\u003els\u003c/code\u003e commands.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eFirst step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\u003c/p\u003e","title":"Bandit1"},{"content":"Level description The password for the next level is stored in a file called - located in the home directory\nTips for beginners Try to understand why previous solution is not working as you expect. Solution You may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our cat command: The terminal is waiting for something else. This happens due to character - is used to pass arguments to our commands, and the linux shell is interpreting that. To prevent that, we could use:\ncat ./- NB: Dot . is used to refer current directory. The slash / is used at the end of directory name.\nWe get the password for bandit3 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit2/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called - located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eTry to understand why previous solution is not working as you expect.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eYou may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our \u003ccode\u003ecat\u003c/code\u003e command:\n\u003cimg alt=\"bandit2\" loading=\"lazy\" src=\"/images/otw/bandit/bandit2/0.png\"\u003e\u003c/p\u003e\n\u003cp\u003eThe terminal is \u003cem\u003ewaiting\u003c/em\u003e for something else. This happens due to character \u003ccode\u003e-\u003c/code\u003e is used to pass arguments to our commands, and the linux shell is interpreting that.\nTo prevent that, we could use:\u003c/p\u003e","title":"Bandit2"},{"content":"Level description The password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\nTips for beginners Think about how to escape the whitespaces. Solution After login in the machine as bandit3, we can see the filename \u0026ndash;spaces in this filename\u0026ndash;.\nNow we have 2 problems:\nSame as previous level, filename starts with --, so it will be interpreted as an argument. Address this problem using ./. Filename contains whitespaces. This is an issue, as bash interpretes whitespaces to separate commands. To solve the second problem, we must escape the whitespace character in some way. Here is the solution:\ncat ./--spaces\\ in\\ this\\ filename-- NB: Little trick, you can start writting filename and press Tab to autocomplete the name. The \\ is going to be inserted automatically.\nJust using the \\ we can escape the whitespace.\nNow we can continue with the bandit4 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit3/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eThink about how to \u003cem\u003eescape\u003c/em\u003e the whitespaces.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAfter login in the machine as bandit3, we can see the filename \u003cem\u003e\u0026ndash;spaces in this filename\u0026ndash;\u003c/em\u003e.\u003c/p\u003e\n\u003cp\u003eNow we have 2 problems:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eSame as previous level, filename starts with \u003ccode\u003e--\u003c/code\u003e, so it will be interpreted as an argument. Address this problem using \u003ccode\u003e./\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003eFilename contains \u003cstrong\u003ewhitespaces\u003c/strong\u003e. This is an issue, as bash interpretes whitespaces to separate commands.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eTo solve the second problem, we must escape the whitespace character in some way. Here is the solution:\u003c/p\u003e","title":"Bandit3"},{"content":"Level description The password for the next level is stored in a hidden file in the inhere directory.\nTips for beginners Learn how to navigate directories in Linux. First understand what a hidden file is. Solution Listing directory files inside bandit4\u0026rsquo;s home directory, show directory inhere.\nNB: How to distinguish files and directories in Linux? Use ls -l and see the difference.\nWe have 2 options now:\nMove to inhere directory and check contens again. Check contents directly. Moving to another directory can be done using cd \u0026lt;dirName\u0026gt;. If you prefer to check directory contents directly, use ls \u0026lt;dirName\u0026gt;.\nAfter checking inhere contents via ls, we see nothing. The reason is the file is a hidden file. A hidden file in Linux is everyfile whose name starts with dot .. Hidden files are not shown by default with ls command, so we must add a special flag -a to list all files: NB: Both flags -l and -a cna be combined into a single flag -al, which is shorter to type.\nAs you can see, filename is \u0026hellip;Hidding-From-You starting with three dots. Reading file contents should be easy at this point!\nNext level is bandit5.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit4/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a hidden file in the inhere directory.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to navigate directories in Linux.\u003c/li\u003e\n\u003cli\u003eFirst understand what a hidden file is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eListing directory files inside bandit4\u0026rsquo;s home directory, show directory \u003cstrong\u003einhere\u003c/strong\u003e.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e How to distinguish files and directories in Linux? Use \u003ccode\u003els -l\u003c/code\u003e and see the difference.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eWe have 2 options now:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eMove to inhere directory and check contens again.\u003c/li\u003e\n\u003cli\u003eCheck contents directly.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eMoving to another directory can be done using \u003ccode\u003ecd \u0026lt;dirName\u0026gt;\u003c/code\u003e. If you prefer to check directory contents directly, use \u003ccode\u003els \u0026lt;dirName\u0026gt;\u003c/code\u003e.\u003c/p\u003e","title":"Bandit4"},{"content":"Level description The password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\nTips for beginners What means human-readable file? Is there any way to check filetype at Linux?. Solution Checking inhere\u0026rsquo;s contents shows some files names \u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII here\nSo now, our goal is checking if file content of every file in the folder is ASCII or not. file \u0026lt;filename\u0026gt; does the job. Note the use of *. That called a wildcard regular expression, we\u0026rsquo;ll deep into it in later levels. An easy approach could be checking every file separately:\nfile ./--file00 file ./--file01 ... file ./--file09 But that\u0026rsquo;s not funny, imagine we have 100 files to check. All the files are in the same directory, so we can use cat ./* where ./* matches every filename in the directory, applying file to every file.\nNB: Another approach is to use find with certaing flags. Try to do in different ways, don\u0026rsquo;t stick to my solution.\nThe file \u0026ndash;file00 content is not readable, so get password from \u0026ndash;file07 and continue with bandit6.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit5/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eWhat means human-readable file?\u003c/li\u003e\n\u003cli\u003eIs there any way to check filetype at Linux?.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eChecking inhere\u0026rsquo;s contents shows some files names \u003cstrong\u003e\u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09\u003c/strong\u003e. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII \u003ca href=\"https://en.wikipedia.org/wiki/ASCII\"\u003ehere\u003c/a\u003e\u003c/p\u003e","title":"Bandit5"},{"content":"Level description The password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\nhuman-readable 1033 bytes in size not executable Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution The purpose of the level is showing us how to find for files. Listing contents of inhere, we can see some folders, containing a lot of files inside: NB: Adding -R to ls shows recursively the content of every folder inside the directory listed.\nSo this time, checking every file is not an option. We need to find a file with some properties, specific size, not excutable and human-readable. Let\u0026rsquo;s explain the command we\u0026rsquo;re using:\nfind inhere/ -size 1033c ! -executable First, we specify the directory, in this case inhere. The option -size 1033c returns files of 1033 bytes. Then, with -executable we would get executable files, but we want not executable files, that\u0026rsquo;s why we are adding ! before.\nNB: By default, the -size option takes as argument the number of blocks. For example, -size 2 means 2 blocks of 512 bytes, so its 1024. The c is used to specify exact bytes. Don\u0026rsquo;t ask me why it\u0026rsquo;s c and not b 😅.\nThe property of human-readability is not implemented in find. This is not an issue, previous command returns a single file and it is human readable (we could confirm using file): Extra tip: try to use the following:\nfind inhere/ -size 1033c ! -executable | file You get the same result! The pipe | is a great tool to execute 2+ commands in one line.\nGet your password and continue with bandit7.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit6/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ehuman-readable\u003c/li\u003e\n\u003cli\u003e1033 bytes in size\u003c/li\u003e\n\u003cli\u003enot executable\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThe purpose of the level is showing us how to find for files. Listing contents of \u003cstrong\u003einhere\u003c/strong\u003e, we can see some folders, containing a lot of files inside:\n\u003cimg alt=\"bandit6_0\" loading=\"lazy\" src=\"/images/otw/bandit/bandit6/0.png\"\u003e\u003c/p\u003e","title":"Bandit6"},{"content":"Level description The password for the next level is stored somewhere on the server and has all of the following properties:\nowned by user bandit7 owned by group bandit6 33 bytes in size Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution This is very straightforward to do after completing previous level. Now we need to identify a file owned by user bandit7 and group bandi6. Furthermore, the file is somewhere on the server, which means we have to find in the root directory /.\nfind / -user bandit7 -group bandit6 -size 33c 2\u0026gt;/dev/null NB: I added that strange 2\u0026gt;/dev/null to filter error output. The reason why it works like that is more technical, for now just save this a fast way to filter errors in terminal. We get some errors because looking for files in the whole server may return some unaccesible files, as we don\u0026rsquo;t have root user permissions. We will study Linux permissions in later levels.\nWe should get a single file, containing password for bandit8.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit7/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored somewhere on the server and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eowned by user bandit7\u003c/li\u003e\n\u003cli\u003eowned by group bandit6\u003c/li\u003e\n\u003cli\u003e33 bytes in size\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is very straightforward to do after completing previous level. Now we need to identify a file owned by user bandit7 and group bandi6. Furthermore, the file is \u003cstrong\u003esomewhere on the server\u003c/strong\u003e, which means we have to find in the root directory \u003ccode\u003e/\u003c/code\u003e.\u003c/p\u003e","title":"Bandit7"},{"content":"Level description The password for the next level is stored in the file data.txt next to the word millionth.\nTips for beginners Learn how to filter file contents. Solution At previous levels, we discovered how to find for files. Now it\u0026rsquo;s time to find for content inside a file. grep command is going to help with that task.\nNB: Of course I don\u0026rsquo;t want to spoil you the password!\nNotice how this can achieved in different ways.\nUsing grep \u0026lt;keyword\u0026gt; \u0026lt;filename\u0026gt;. Using the pipe | to execute grep over the result of cat command. Take you favorite path to solve the level, and continue with bandit9.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit8/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the file \u003cstrong\u003edata.txt\u003c/strong\u003e next to the word \u003cstrong\u003emillionth\u003c/strong\u003e.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to filter file contents.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAt previous levels, we discovered how to find for files. Now it\u0026rsquo;s time to find for content inside a file. \u003ccode\u003egrep\u003c/code\u003e command is going to help with that task.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"bandit8\" loading=\"lazy\" src=\"/images/otw/bandit/bandit8/0.png\"\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e Of course I don\u0026rsquo;t want to spoil you the password!\u003c/p\u003e","title":"Bandit8"},{"content":"Level description The password for the next level is stored in the file data.txt and is the only line of text that occurs only once.\nTips for beginners First, apply sort to file content. Solution This level is a bit tricky. First, examine the file contents. Using head shows the 10 first lines of a file:\nNB: If you want to show more lines: head -20 or the number of your choice.\nThere are tons of different passwords. The correct one is the only line of text that occurs only once. Try to research how to do on your own. You maybe find uniq. This command has a very interesting flag, -u, used to show only the uniq lines. Let\u0026rsquo;s try with that:\nFor some reason, is not working. The trick here is to sort the file contents before applying uniq. This can be achieved using sort, so the final command looks like this:\ncat data.txt | sort | uniq -u NB: You need to sort lines first because uniq only detects consecutive repetitions. First time I solved this it took a while 😅.\nTake you favorite path to solve the level, and continue with bandit9.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit9/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the file \u003cstrong\u003edata.txt\u003c/strong\u003e and is the only line of text that occurs only once.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst, apply \u003ccode\u003esort\u003c/code\u003e to file content.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis level is a bit tricky. First, examine the file contents. Using \u003ccode\u003ehead\u003c/code\u003e shows the 10 first lines of a file:\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"bandit9_0\" loading=\"lazy\" src=\"/images/otw/bandit/bandit9/0.png\"\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e If you want to show more lines: \u003ccode\u003ehead -20\u003c/code\u003e or the number of your choice.\u003c/p\u003e","title":"Bandit9"},{"content":"👨‍💻 whoami Hey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\nWhat is this❓​ This blog is basically my thoughts on several hacking topics. Here you’ll see:\nWriteups from CTF challenges, from platforms like HackTheBox or OverTheWire.\nWalkthroughs and notes on pentesting techniques I’m learning or testing.\nSome posts on cryptography — because math can be fun (sometimes).\nRandom topics that freaks like me may (just may) find interesting.\nThe idea is simple: share what I learn, document my journey, and maybe help others who are also diving into the exciting world of ethical hacking.\n📫 Contact Want to say hi, share ideas, or just geek out about hacking? Reach me here:\n📧 Email: mrb0b1073@proton.me 💻​ GitHub: mrb0b173 🟩​ HackTheBox: mrb0b1073 ","permalink":"http://localhost:1313/about/","summary":"\u003ch2 id=\"-whoami\"\u003e👨‍💻 whoami\u003c/h2\u003e\n\u003cp\u003eHey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\u003c/p\u003e\n\u003chr\u003e\n\u003ch2 id=\"what-is-this\"\u003eWhat is this❓​\u003c/h2\u003e\n\u003cp\u003eThis blog is basically my thoughts on several hacking topics. Here you’ll see:\u003c/p\u003e","title":"About"},{"content":"Hey! 👋 I\u0026rsquo;m mrb0b1073 and this is my first post.\nWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\nExcited to start this adventure!\n","permalink":"http://localhost:1313/posts/hello-world/","summary":"\u003cp\u003eHey! 👋 I\u0026rsquo;m \u003cstrong\u003emrb0b1073\u003c/strong\u003e and this is my first post.\u003c/p\u003e\n\u003cp\u003eWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\u003cbr\u003e\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\u003c/p\u003e\n\u003cp\u003eExcited to start this adventure!\u003c/p\u003e","title":"Hello World"},{"content":"Introduction If you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\nIn cybersecurity there are broadly two complementary roles: Blue Team and Red Team. Blue Teams focus on defense, monitoring, incident response, hardening systems and keeping services secure, while Red Teams simulate attackers to find weaknesses and prove what an adversary could do. Ethical hacking aligns closely with Red Team operations, but cybersecurity is highly transversal across IT. There are many specialities or areas, such as cloud security, appsec, pentesting, forensics, governance, risk management, malware analysis, etc. Every topic could deserve its own post, so let\u0026rsquo;s keep it simple and focus on ethical hacking.\nHacker philosophy Let\u0026rsquo;s start with the idea of what is exactly a hacker. A hacker is someone who explores systems to understand how they work, finds creative ways to make or fix things, and solves technical problems. Historically the word describes curiosity, craft, and a drive to improve systems — not criminality. It is important to make the distinction between hacker and cracker, also called cybercriminal. A hacker explores, builds, discloses responsibly and works to improve security. They work in authorized environments or labs. On the other hand, a cracker breaks into systems for theft, vandalism or other illicit gain.\nHere you can find the most popularized ideas often summarized as the hacker ethic:\nCuriosity first: Learn by exploring and tinkering. Freedom of information: All knowledge should be shared to help progress. This fits properly with the idea of open source. Mistrust of needless authority: Centralized control sometimes blocks innovation. It is always good to question anything, specially common assumptions. Meritocracy: Skills, craft and results matter more than titles. Craftsmanship \u0026amp; elegance: Technical beauty matters. Build clean, clever and efficient solutions. Responsability \u0026amp; ethics: Use your skills to build, fix, educate and defend, not to harm. Core fundamentals Assuming you want to init yourself in hacking, you should first build competence across three basic pillars.\nOperating Systems You should learn as much as possible about Linux and Windows. Specially Linux, all the tools you will be using are meant to be used in a Linux environment. Skill with shell is required, learn basic commands and how to interact with the OS using the terminal. Research about processes, file permissions, package management and logs. A large proportion of web servers around the world run on Linux, although Windows is also widely used. Windows knowledge is really valuable too, considering active directory is strongly used in corporate environments.\nNetworking You have to understand how computers communicate each other. Understand basic networking concepts, IP adresses, subnetting, proxies, find out how internet works. Study some protocols such as TCP/IP, HTTP, DNS or SSH. This could sound confusing for beginners, but this step is not optional! Study different client/server models and how services expose attack surfaces.\nProgramming \u0026amp; scripting Is this completely required? Maybe not for complete beginners. Does it help? Absolutely yes. Understanding how web apps or any type of application works makes things much easier. You can imagine different entry points to exploit if you understand how systems are designed. Also writing scripts in bash or python makes you more productive through automation.\nEthical Hacking foundations Once you feel confident with these 3 pillars, you can go to the next step. You can study about different topics and areas. For example, binary exploiting, web pentesting, mobile pentesting, wireless hacking, etc. You should start picking a focus, in this post we focus on web pentesting, as it is beginner friendly. Also web applications are the bread and butter in companies nowadays.\nKey concepts to study:\nCIA Triad: CIA refers to Confidentiality, Integrity and Availability. These three concepts are key in information security, and describe properties we want to ensure in our systems and information. Web Security basics, OWASP: Study the OWASP Top 10, which summarizes most frequent web security risks. Authentication and session control: Understand the concepts of Authentication and Authorization, research about how session is handled in web apps, cookies, JWT tokens, etc. Input validation \u0026amp; injection attacks: Learn about SQL Injection, Cross-Site Scripting (XSS), Code Injection, SSTI, and every injection type. Secure development lifecycle: Find out how to implement security controls in code. This can be more related to Blue Team, but as Red Teamer it is important to understand. Firewall evasion: What a firewall is and some techniques/methods to bypass. Some cryptography: Understand what a chiper and a hash are, how information is encrypted to prevent access from 3rd parties. Focusing on web, read about TLS protocol. There are many more topics you can research and learn, but this could be a nice starting point.\nTools and platforms to learn Now you have an idea of what to study, let\u0026rsquo;s see how to start in practical terms.\nSome platforms I personally recommend:\nOverTheWire: Here you can find some CTFs (Capture The Flag) which are fun to play and also really instructive. Bandit games are a must for complete beginners, as you will explore some linux and bash concepts which are basic to continue. The games are leveled by difficulty, in their web you can get all the information about how to play, only a terminal and SSH is required. This helps building your foundation in Linux OS. HackTheBox: Nº 1 platform in cybersecurity. Has a lot of resources to learn all this core fundamentals, and also red team / blue team security topics. It is focused on labs where you can test your skills hacking different boxes but if you really want to learn it is worth to invest time and money in the academy. I have to say the level here is high, specially if you try to hack machines on your own without using some guide or writeup. TryHackMe: More beginner friendly than hackthebox, it provides a lot of guided learning resources. PortSwigger Labs: Practical labs about specific topics, focused on web hacking. They are great to learn and understand different types of attacks, injections, and security misconfigurations. I would recommend digging into this once you have the theoretical basis about these concepts. I have to mention a few tools I am sure you\u0026rsquo;d end up using:\nNmap: This is probably the most famous tool in hacking, allowing you to gather information about ports and services running in a machine. Burpsuite: A proxy tool widely used in web application security testing. It basically allows you to intercept and modify web requests, which can be used to perform several types of attacks. Metasploit: The most used pentesting framework. Contains a large amount of scripts and exploits ready to run. Another crucial step here is to set up your virtual lab environment to test vulnerable applications. To achieve this goal, there are some Linux distributions like Kali, Parrot or BlackArch, but that\u0026rsquo;s a topic for another post.\nFinal thoughs To sum up, this would be my personal roadmap:\nLearn the fundamentals, specially Linux and networking. Install some Linux in a virtual machine, play with it, get comfortable with the terminal. You can start with bandit wargames in OverTheWire. Complete every level and make sure to understand everything as clear as possible. Move to guided boxes on HackTheBox. I recommend you joining their Discord, ask questions, community is great there! Take notes, repeat, learn, improve your skills. Maybe use your own lab environment, create your own vulnerable apps. Hacking is a mixing of curiosity, study and practice. Being passionate and motivated about it is really helpful and will definitely speed up the process. The path is long and really challenging, so keep it going!\n\u0026ldquo;Yes, I am a criminal. My crime is that of curiosity.\u0026rdquo; — The Mentor (Loyd Blankenship) at The Hacker Manifesto\n","permalink":"http://localhost:1313/posts/starting-point/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIf you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\u003c/p\u003e","title":"Starting Point"},{"content":"Introduction In this post series we are going to solve every level from bandit in OverTheWire This guide pretends to be a writeup containing the solutions of the level, designed for beginners.\nTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing WSL, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\nEvery section will contain the solution as well as some tips for people who is absolutely beginner.\nTips First of all, some tips:\nDo not use this as first resource to solve the levels. Try on your own, make mistakes and learn from them. Only check the solution as last resource or if you are completely new and you have absolutely no idea about what to do next. Take notes from your learning. Write up commands, tips and everything which can be useful in the future. Make sure to understand everything. Is a good idea to note the passwords for every level. If you want to continue letter, you can simply log in in the desired level. It is annoying to repeat everything! Follow the tips and information provided at OverTheWire website. Levels Here is my solution for every level:\nBandit0 Bandit1 Bandit2 Bandit3 Bandit4 Bandit5 Bandit6 Bandit7 ","permalink":"http://localhost:1313/posts/otw/bandit/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIn this post series we are going to solve every level from bandit in \u003ca href=\"https://overthewire.org/wargames/bandit/\"\u003e\u003cem\u003eOverTheWire\u003c/em\u003e\u003c/a\u003e\nThis guide pretends to be a writeup containing the solutions of the level, designed for beginners.\u003c/p\u003e\n\u003cp\u003eTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing \u003ca href=\"https://learn.microsoft.com/en-us/windows/wsl/install\"\u003eWSL\u003c/a\u003e, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\u003c/p\u003e","title":"Bandit"},{"content":"Level description The goal of this level is for you to log into the game using SSH. The host to which you need to connect is bandit.labs.overthewire.org, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\nTips for beginners Read a bit about what SSH is. Research about what a port is. Solution This is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go here.\nAt Linux, we can use ssh client to connect to the server. It should be installed by default on your system. If not, please first research about how to install. Once you have the SSH client installed, you can log in into the first level as follows:\nssh bandit0@bandit.labs.overthewire.org -p 2220 Syntax is simple: ssh \u0026lt;username\u0026gt;@\u0026lt;hostname\u0026gt; -p \u0026lt;port\u0026gt;. Usually SSH runs on port 22 by default, but they changed to port 2220 so we must specify it in the command.\nOnce you try to log in, you will see something like this: NB: If it\u0026rsquo;s the first time you try to log in, you will be asked about the authenticity of the host. Just type yes.\nType the password bandit0 and press enter. Now you are inside bandit server, ready to begin with bandit1!\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit0/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe goal of this level is for you to log into the game using SSH. The host to which you need to connect is \u003cstrong\u003ebandit.labs.overthewire.org\u003c/strong\u003e, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eRead a bit about what SSH is.\u003c/li\u003e\n\u003cli\u003eResearch about what a port is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go \u003ca href=\"https://en.wikipedia.org/wiki/Secure_Shell\"\u003ehere\u003c/a\u003e.\u003c/p\u003e","title":"Bandit0"},{"content":"Level description The password for the next level is stored in a file called readme located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\nTips for beginners Learn about home directory in Linux. Learn to use cat and ls commands. Solution First step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\nls This shows in terminal the files at the current directory. There you will see the readme file.\nNow we can to check the contents, so let\u0026rsquo;s use cat:\ncat readme To read a file, we use cat \u0026lt;filename\u0026gt;.\nNB: Not every file is human readable in Linux. We deep more about this in later levels.\nThe content of the readme file reveals the password for bandit2 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit1/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u003cstrong\u003ereadme\u003c/strong\u003e located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn about home directory in Linux.\u003c/li\u003e\n\u003cli\u003eLearn to use \u003ccode\u003ecat\u003c/code\u003e and \u003ccode\u003els\u003c/code\u003e commands.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eFirst step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\u003c/p\u003e","title":"Bandit1"},{"content":"Level description The password for the next level is stored in a file called - located in the home directory\nTips for beginners Try to understand why previous solution is not working as you expect. Solution You may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our cat command: The terminal is waiting for something else. This happens due to character - is used to pass arguments to our commands, and the linux shell is interpreting that. To prevent that, we could use:\ncat ./- NB: Dot . is used to refer current directory. The slash / is used at the end of directory name.\nWe get the password for bandit3 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit2/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called - located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eTry to understand why previous solution is not working as you expect.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eYou may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our \u003ccode\u003ecat\u003c/code\u003e command:\n\u003cimg alt=\"bandit2\" loading=\"lazy\" src=\"/images/otw/bandit/bandit2/0.png\"\u003e\u003c/p\u003e\n\u003cp\u003eThe terminal is \u003cem\u003ewaiting\u003c/em\u003e for something else. This happens due to character \u003ccode\u003e-\u003c/code\u003e is used to pass arguments to our commands, and the linux shell is interpreting that.\nTo prevent that, we could use:\u003c/p\u003e","title":"Bandit2"},{"content":"Level description The password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\nTips for beginners Think about how to escape the whitespaces. Solution After login in the machine as bandit3, we can see the filename \u0026ndash;spaces in this filename\u0026ndash;.\nNow we have 2 problems:\nSame as previous level, filename starts with --, so it will be interpreted as an argument. Address this problem using ./. Filename contains whitespaces. This is an issue, as bash interpretes whitespaces to separate commands. To solve the second problem, we must escape the whitespace character in some way. Here is the solution:\ncat ./--spaces\\ in\\ this\\ filename-- NB: Little trick, you can start writting filename and press Tab to autocomplete the name. The \\ is going to be inserted automatically.\nJust using the \\ we can escape the whitespace.\nNow we can continue with the bandit4 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit3/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eThink about how to \u003cem\u003eescape\u003c/em\u003e the whitespaces.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAfter login in the machine as bandit3, we can see the filename \u003cem\u003e\u0026ndash;spaces in this filename\u0026ndash;\u003c/em\u003e.\u003c/p\u003e\n\u003cp\u003eNow we have 2 problems:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eSame as previous level, filename starts with \u003ccode\u003e--\u003c/code\u003e, so it will be interpreted as an argument. Address this problem using \u003ccode\u003e./\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003eFilename contains \u003cstrong\u003ewhitespaces\u003c/strong\u003e. This is an issue, as bash interpretes whitespaces to separate commands.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eTo solve the second problem, we must escape the whitespace character in some way. Here is the solution:\u003c/p\u003e","title":"Bandit3"},{"content":"Level description The password for the next level is stored in a hidden file in the inhere directory.\nTips for beginners Learn how to navigate directories in Linux. First understand what a hidden file is. Solution Listing directory files inside bandit4\u0026rsquo;s home directory, show directory inhere.\nNB: How to distinguish files and directories in Linux? Use ls -l and see the difference.\nWe have 2 options now:\nMove to inhere directory and check contens again. Check contents directly. Moving to another directory can be done using cd \u0026lt;dirName\u0026gt;. If you prefer to check directory contents directly, use ls \u0026lt;dirName\u0026gt;.\nAfter checking inhere contents via ls, we see nothing. The reason is the file is a hidden file. A hidden file in Linux is everyfile whose name starts with dot .. Hidden files are not shown by default with ls command, so we must add a special flag -a to list all files: NB: Both flags -l and -a cna be combined into a single flag -al, which is shorter to type.\nAs you can see, filename is \u0026hellip;Hidding-From-You starting with three dots. Reading file contents should be easy at this point!\nNext level is bandit5.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit4/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a hidden file in the inhere directory.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to navigate directories in Linux.\u003c/li\u003e\n\u003cli\u003eFirst understand what a hidden file is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eListing directory files inside bandit4\u0026rsquo;s home directory, show directory \u003cstrong\u003einhere\u003c/strong\u003e.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e How to distinguish files and directories in Linux? Use \u003ccode\u003els -l\u003c/code\u003e and see the difference.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eWe have 2 options now:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eMove to inhere directory and check contens again.\u003c/li\u003e\n\u003cli\u003eCheck contents directly.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eMoving to another directory can be done using \u003ccode\u003ecd \u0026lt;dirName\u0026gt;\u003c/code\u003e. If you prefer to check directory contents directly, use \u003ccode\u003els \u0026lt;dirName\u0026gt;\u003c/code\u003e.\u003c/p\u003e","title":"Bandit4"},{"content":"Level description The password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\nTips for beginners What means human-readable file? Is there any way to check filetype at Linux?. Solution Checking inhere\u0026rsquo;s contents shows some files names \u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII here\nSo now, our goal is checking if file content of every file in the folder is ASCII or not. file \u0026lt;filename\u0026gt; does the job. Note the use of *. That called a wildcard regular expression, we\u0026rsquo;ll deep into it in later levels. An easy approach could be checking every file separately:\nfile ./--file00 file ./--file01 ... file ./--file09 But that\u0026rsquo;s not funny, imagine we have 100 files to check. All the files are in the same directory, so we can use cat ./* where ./* matches every filename in the directory, applying file to every file.\nNB: Another approach is to use find with certaing flags. Try to do in different ways, don\u0026rsquo;t stick to my solution.\nThe file \u0026ndash;file00 content is not readable, so get password from \u0026ndash;file07 and continue with bandit6.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit5/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eWhat means human-readable file?\u003c/li\u003e\n\u003cli\u003eIs there any way to check filetype at Linux?.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eChecking inhere\u0026rsquo;s contents shows some files names \u003cstrong\u003e\u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09\u003c/strong\u003e. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII \u003ca href=\"https://en.wikipedia.org/wiki/ASCII\"\u003ehere\u003c/a\u003e\u003c/p\u003e","title":"Bandit5"},{"content":"Level description The password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\nhuman-readable 1033 bytes in size not executable Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution The purpose of the level is showing us how to find for files. Listing contents of inhere, we can see some folders, containing a lot of files inside: NB: Adding -R to ls shows recursively the content of every folder inside the directory listed.\nSo this time, checking every file is not an option. We need to find a file with some properties, specific size, not excutable and human-readable. Let\u0026rsquo;s explain the command we\u0026rsquo;re using:\nfind inhere/ -size 1033c ! -executable First, we specify the directory, in this case inhere. The option -size 1033c returns files of 1033 bytes. Then, with -executable we would get executable files, but we want not executable files, that\u0026rsquo;s why we are adding ! before.\nNB: By default, the -size option takes as argument the number of blocks. For example, -size 2 means 2 blocks of 512 bytes, so its 1024. The c is used to specify exact bytes. Don\u0026rsquo;t ask me why it\u0026rsquo;s c and not b 😅.\nThe property of human-readability is not implemented in find. This is not an issue, previous command returns a single file and it is human readable (we could confirm using file): Extra tip: try to use the following:\nfind inhere/ -size 1033c ! -executable | file You get the same result! The pipe | is a great tool to execute 2+ commands in one line.\nGet your password and continue with bandit7.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit6/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ehuman-readable\u003c/li\u003e\n\u003cli\u003e1033 bytes in size\u003c/li\u003e\n\u003cli\u003enot executable\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThe purpose of the level is showing us how to find for files. Listing contents of \u003cstrong\u003einhere\u003c/strong\u003e, we can see some folders, containing a lot of files inside:\n\u003cimg alt=\"bandit6_0\" loading=\"lazy\" src=\"/images/otw/bandit/bandit6/0.png\"\u003e\u003c/p\u003e","title":"Bandit6"},{"content":"Level description The password for the next level is stored somewhere on the server and has all of the following properties:\nowned by user bandit7 owned by group bandit6 33 bytes in size Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution This is very straightforward to do after completing previous level. Now we need to identify a file owned by user bandit7 and group bandi6. Furthermore, the file is somewhere on the server, which means we have to find in the root directory /.\nfind / -user bandit7 -group bandit6 -size 33c 2\u0026gt;/dev/null NB: I added that strange 2\u0026gt;/dev/null to filter error output. The reason why it works like that is more technical, for now just save this a fast way to filter errors in terminal. We get some errors because looking for files in the whole server may return some unaccesible files, as we don\u0026rsquo;t have root user permissions. We will study Linux permissions in later levels.\nWe should get a single file, containing password for bandit8.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit7/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored somewhere on the server and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eowned by user bandit7\u003c/li\u003e\n\u003cli\u003eowned by group bandit6\u003c/li\u003e\n\u003cli\u003e33 bytes in size\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is very straightforward to do after completing previous level. Now we need to identify a file owned by user bandit7 and group bandi6. Furthermore, the file is \u003cstrong\u003esomewhere on the server\u003c/strong\u003e, which means we have to find in the root directory \u003ccode\u003e/\u003c/code\u003e.\u003c/p\u003e","title":"Bandit7"},{"content":"Level description The password for the next level is stored in the file data.txt next to the word millionth.\nTips for beginners Learn how to filter file contents. Solution At previous levels, we discovered how to find for files. Now it\u0026rsquo;s time to find for content inside a file. grep command is going to help with that task.\nNB: Of course I don\u0026rsquo;t want to spoil you the password!\nNotice how this can achieved in different ways.\nUsing grep \u0026lt;keyword\u0026gt; \u0026lt;filename\u0026gt;. Using the pipe | to execute grep over the result of cat command. Take you favorite path to solve the level, and continue with bandit9.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit8/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the file \u003cstrong\u003edata.txt\u003c/strong\u003e next to the word \u003cstrong\u003emillionth\u003c/strong\u003e.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to filter file contents.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAt previous levels, we discovered how to find for files. Now it\u0026rsquo;s time to find for content inside a file. \u003ccode\u003egrep\u003c/code\u003e command is going to help with that task.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"bandit8\" loading=\"lazy\" src=\"/images/otw/bandit/bandit8/0.png\"\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e Of course I don\u0026rsquo;t want to spoil you the password!\u003c/p\u003e","title":"Bandit8"},{"content":"Level description The password for the next level is stored in the file data.txt and is the only line of text that occurs only once.\nTips for beginners First, apply sort to file content. Solution This level is a bit tricky. First, examine the file contents. Using head shows the 10 first lines of a file:\nNB: If you want to show more lines: head -20 or the number of your choice.\nThere are tons of different passwords. The correct one is the only line of text that occurs only once. Try to research how to do on your own. You maybe find uniq. This command has a very interesting flag, -u, used to show only the uniq lines. Let\u0026rsquo;s try with that:\nFor some reason, is not working. The trick here is to sort the file contents before applying uniq. This can be achieved using sort, so the final command looks like this:\ncat data.txt | sort | uniq -u NB: You need to sort lines first because uniq only detects consecutive repetitions. First time I solved this it took a while 😅.\nTake you favorite path to solve the level, and continue with bandit9.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit9/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the file \u003cstrong\u003edata.txt\u003c/strong\u003e and is the only line of text that occurs only once.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst, apply \u003ccode\u003esort\u003c/code\u003e to file content.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis level is a bit tricky. First, examine the file contents. Using \u003ccode\u003ehead\u003c/code\u003e shows the 10 first lines of a file:\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"bandit9_0\" loading=\"lazy\" src=\"/images/otw/bandit/bandit9/0.png\"\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e If you want to show more lines: \u003ccode\u003ehead -20\u003c/code\u003e or the number of your choice.\u003c/p\u003e","title":"Bandit9"},{"content":"👨‍💻 whoami Hey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\nWhat is this❓​ This blog is basically my thoughts on several hacking topics. Here you’ll see:\nWriteups from CTF challenges, from platforms like HackTheBox or OverTheWire.\nWalkthroughs and notes on pentesting techniques I’m learning or testing.\nSome posts on cryptography — because math can be fun (sometimes).\nRandom topics that freaks like me may (just may) find interesting.\nThe idea is simple: share what I learn, document my journey, and maybe help others who are also diving into the exciting world of ethical hacking.\n📫 Contact Want to say hi, share ideas, or just geek out about hacking? Reach me here:\n📧 Email: mrb0b1073@proton.me 💻​ GitHub: mrb0b173 🟩​ HackTheBox: mrb0b1073 ","permalink":"http://localhost:1313/about/","summary":"\u003ch2 id=\"-whoami\"\u003e👨‍💻 whoami\u003c/h2\u003e\n\u003cp\u003eHey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\u003c/p\u003e\n\u003chr\u003e\n\u003ch2 id=\"what-is-this\"\u003eWhat is this❓​\u003c/h2\u003e\n\u003cp\u003eThis blog is basically my thoughts on several hacking topics. Here you’ll see:\u003c/p\u003e","title":"About"},{"content":"Hey! 👋 I\u0026rsquo;m mrb0b1073 and this is my first post.\nWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\nExcited to start this adventure!\n","permalink":"http://localhost:1313/posts/hello-world/","summary":"\u003cp\u003eHey! 👋 I\u0026rsquo;m \u003cstrong\u003emrb0b1073\u003c/strong\u003e and this is my first post.\u003c/p\u003e\n\u003cp\u003eWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\u003cbr\u003e\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\u003c/p\u003e\n\u003cp\u003eExcited to start this adventure!\u003c/p\u003e","title":"Hello World"},{"content":"Introduction If you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\nIn cybersecurity there are broadly two complementary roles: Blue Team and Red Team. Blue Teams focus on defense, monitoring, incident response, hardening systems and keeping services secure, while Red Teams simulate attackers to find weaknesses and prove what an adversary could do. Ethical hacking aligns closely with Red Team operations, but cybersecurity is highly transversal across IT. There are many specialities or areas, such as cloud security, appsec, pentesting, forensics, governance, risk management, malware analysis, etc. Every topic could deserve its own post, so let\u0026rsquo;s keep it simple and focus on ethical hacking.\nHacker philosophy Let\u0026rsquo;s start with the idea of what is exactly a hacker. A hacker is someone who explores systems to understand how they work, finds creative ways to make or fix things, and solves technical problems. Historically the word describes curiosity, craft, and a drive to improve systems — not criminality. It is important to make the distinction between hacker and cracker, also called cybercriminal. A hacker explores, builds, discloses responsibly and works to improve security. They work in authorized environments or labs. On the other hand, a cracker breaks into systems for theft, vandalism or other illicit gain.\nHere you can find the most popularized ideas often summarized as the hacker ethic:\nCuriosity first: Learn by exploring and tinkering. Freedom of information: All knowledge should be shared to help progress. This fits properly with the idea of open source. Mistrust of needless authority: Centralized control sometimes blocks innovation. It is always good to question anything, specially common assumptions. Meritocracy: Skills, craft and results matter more than titles. Craftsmanship \u0026amp; elegance: Technical beauty matters. Build clean, clever and efficient solutions. Responsability \u0026amp; ethics: Use your skills to build, fix, educate and defend, not to harm. Core fundamentals Assuming you want to init yourself in hacking, you should first build competence across three basic pillars.\nOperating Systems You should learn as much as possible about Linux and Windows. Specially Linux, all the tools you will be using are meant to be used in a Linux environment. Skill with shell is required, learn basic commands and how to interact with the OS using the terminal. Research about processes, file permissions, package management and logs. A large proportion of web servers around the world run on Linux, although Windows is also widely used. Windows knowledge is really valuable too, considering active directory is strongly used in corporate environments.\nNetworking You have to understand how computers communicate each other. Understand basic networking concepts, IP adresses, subnetting, proxies, find out how internet works. Study some protocols such as TCP/IP, HTTP, DNS or SSH. This could sound confusing for beginners, but this step is not optional! Study different client/server models and how services expose attack surfaces.\nProgramming \u0026amp; scripting Is this completely required? Maybe not for complete beginners. Does it help? Absolutely yes. Understanding how web apps or any type of application works makes things much easier. You can imagine different entry points to exploit if you understand how systems are designed. Also writing scripts in bash or python makes you more productive through automation.\nEthical Hacking foundations Once you feel confident with these 3 pillars, you can go to the next step. You can study about different topics and areas. For example, binary exploiting, web pentesting, mobile pentesting, wireless hacking, etc. You should start picking a focus, in this post we focus on web pentesting, as it is beginner friendly. Also web applications are the bread and butter in companies nowadays.\nKey concepts to study:\nCIA Triad: CIA refers to Confidentiality, Integrity and Availability. These three concepts are key in information security, and describe properties we want to ensure in our systems and information. Web Security basics, OWASP: Study the OWASP Top 10, which summarizes most frequent web security risks. Authentication and session control: Understand the concepts of Authentication and Authorization, research about how session is handled in web apps, cookies, JWT tokens, etc. Input validation \u0026amp; injection attacks: Learn about SQL Injection, Cross-Site Scripting (XSS), Code Injection, SSTI, and every injection type. Secure development lifecycle: Find out how to implement security controls in code. This can be more related to Blue Team, but as Red Teamer it is important to understand. Firewall evasion: What a firewall is and some techniques/methods to bypass. Some cryptography: Understand what a chiper and a hash are, how information is encrypted to prevent access from 3rd parties. Focusing on web, read about TLS protocol. There are many more topics you can research and learn, but this could be a nice starting point.\nTools and platforms to learn Now you have an idea of what to study, let\u0026rsquo;s see how to start in practical terms.\nSome platforms I personally recommend:\nOverTheWire: Here you can find some CTFs (Capture The Flag) which are fun to play and also really instructive. Bandit games are a must for complete beginners, as you will explore some linux and bash concepts which are basic to continue. The games are leveled by difficulty, in their web you can get all the information about how to play, only a terminal and SSH is required. This helps building your foundation in Linux OS. HackTheBox: Nº 1 platform in cybersecurity. Has a lot of resources to learn all this core fundamentals, and also red team / blue team security topics. It is focused on labs where you can test your skills hacking different boxes but if you really want to learn it is worth to invest time and money in the academy. I have to say the level here is high, specially if you try to hack machines on your own without using some guide or writeup. TryHackMe: More beginner friendly than hackthebox, it provides a lot of guided learning resources. PortSwigger Labs: Practical labs about specific topics, focused on web hacking. They are great to learn and understand different types of attacks, injections, and security misconfigurations. I would recommend digging into this once you have the theoretical basis about these concepts. I have to mention a few tools I am sure you\u0026rsquo;d end up using:\nNmap: This is probably the most famous tool in hacking, allowing you to gather information about ports and services running in a machine. Burpsuite: A proxy tool widely used in web application security testing. It basically allows you to intercept and modify web requests, which can be used to perform several types of attacks. Metasploit: The most used pentesting framework. Contains a large amount of scripts and exploits ready to run. Another crucial step here is to set up your virtual lab environment to test vulnerable applications. To achieve this goal, there are some Linux distributions like Kali, Parrot or BlackArch, but that\u0026rsquo;s a topic for another post.\nFinal thoughs To sum up, this would be my personal roadmap:\nLearn the fundamentals, specially Linux and networking. Install some Linux in a virtual machine, play with it, get comfortable with the terminal. You can start with bandit wargames in OverTheWire. Complete every level and make sure to understand everything as clear as possible. Move to guided boxes on HackTheBox. I recommend you joining their Discord, ask questions, community is great there! Take notes, repeat, learn, improve your skills. Maybe use your own lab environment, create your own vulnerable apps. Hacking is a mixing of curiosity, study and practice. Being passionate and motivated about it is really helpful and will definitely speed up the process. The path is long and really challenging, so keep it going!\n\u0026ldquo;Yes, I am a criminal. My crime is that of curiosity.\u0026rdquo; — The Mentor (Loyd Blankenship) at The Hacker Manifesto\n","permalink":"http://localhost:1313/posts/starting-point/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIf you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\u003c/p\u003e","title":"Starting Point"},{"content":"Introduction In this post series we are going to solve every level from bandit in OverTheWire This guide pretends to be a writeup containing the solutions of the level, designed for beginners.\nTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing WSL, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\nEvery section will contain the solution as well as some tips for people who is absolutely beginner.\nTips First of all, some tips:\nDo not use this as first resource to solve the levels. Try on your own, make mistakes and learn from them. Only check the solution as last resource or if you are completely new and you have absolutely no idea about what to do next. Take notes from your learning. Write up commands, tips and everything which can be useful in the future. Make sure to understand everything. Is a good idea to note the passwords for every level. If you want to continue letter, you can simply log in in the desired level. It is annoying to repeat everything! Follow the tips and information provided at OverTheWire website. Levels Here is my solution for every level:\nBandit0 Bandit1 Bandit2 Bandit3 Bandit4 Bandit5 Bandit6 Bandit7 ","permalink":"http://localhost:1313/posts/otw/bandit/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIn this post series we are going to solve every level from bandit in \u003ca href=\"https://overthewire.org/wargames/bandit/\"\u003e\u003cem\u003eOverTheWire\u003c/em\u003e\u003c/a\u003e\nThis guide pretends to be a writeup containing the solutions of the level, designed for beginners.\u003c/p\u003e\n\u003cp\u003eTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing \u003ca href=\"https://learn.microsoft.com/en-us/windows/wsl/install\"\u003eWSL\u003c/a\u003e, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\u003c/p\u003e","title":"Bandit"},{"content":"Level description The goal of this level is for you to log into the game using SSH. The host to which you need to connect is bandit.labs.overthewire.org, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\nTips for beginners Read a bit about what SSH is. Research about what a port is. Solution This is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go here.\nAt Linux, we can use ssh client to connect to the server. It should be installed by default on your system. If not, please first research about how to install. Once you have the SSH client installed, you can log in into the first level as follows:\nssh bandit0@bandit.labs.overthewire.org -p 2220 Syntax is simple: ssh \u0026lt;username\u0026gt;@\u0026lt;hostname\u0026gt; -p \u0026lt;port\u0026gt;. Usually SSH runs on port 22 by default, but they changed to port 2220 so we must specify it in the command.\nOnce you try to log in, you will see something like this: NB: If it\u0026rsquo;s the first time you try to log in, you will be asked about the authenticity of the host. Just type yes.\nType the password bandit0 and press enter. Now you are inside bandit server, ready to begin with bandit1!\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit0/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe goal of this level is for you to log into the game using SSH. The host to which you need to connect is \u003cstrong\u003ebandit.labs.overthewire.org\u003c/strong\u003e, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eRead a bit about what SSH is.\u003c/li\u003e\n\u003cli\u003eResearch about what a port is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go \u003ca href=\"https://en.wikipedia.org/wiki/Secure_Shell\"\u003ehere\u003c/a\u003e.\u003c/p\u003e","title":"Bandit0"},{"content":"Level description The password for the next level is stored in a file called readme located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\nTips for beginners Learn about home directory in Linux. Learn to use cat and ls commands. Solution First step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\nls This shows in terminal the files at the current directory. There you will see the readme file.\nNow we can to check the contents, so let\u0026rsquo;s use cat:\ncat readme To read a file, we use cat \u0026lt;filename\u0026gt;.\nNB: Not every file is human readable in Linux. We deep more about this in later levels.\nThe content of the readme file reveals the password for bandit2 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit1/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u003cstrong\u003ereadme\u003c/strong\u003e located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn about home directory in Linux.\u003c/li\u003e\n\u003cli\u003eLearn to use \u003ccode\u003ecat\u003c/code\u003e and \u003ccode\u003els\u003c/code\u003e commands.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eFirst step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\u003c/p\u003e","title":"Bandit1"},{"content":"Level description The password for the next level is stored in a file called - located in the home directory\nTips for beginners Try to understand why previous solution is not working as you expect. Solution You may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our cat command: The terminal is waiting for something else. This happens due to character - is used to pass arguments to our commands, and the linux shell is interpreting that. To prevent that, we could use:\ncat ./- NB: Dot . is used to refer current directory. The slash / is used at the end of directory name.\nWe get the password for bandit3 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit2/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called - located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eTry to understand why previous solution is not working as you expect.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eYou may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our \u003ccode\u003ecat\u003c/code\u003e command:\n\u003cimg alt=\"bandit2\" loading=\"lazy\" src=\"/images/otw/bandit/bandit2/0.png\"\u003e\u003c/p\u003e\n\u003cp\u003eThe terminal is \u003cem\u003ewaiting\u003c/em\u003e for something else. This happens due to character \u003ccode\u003e-\u003c/code\u003e is used to pass arguments to our commands, and the linux shell is interpreting that.\nTo prevent that, we could use:\u003c/p\u003e","title":"Bandit2"},{"content":"Level description The password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\nTips for beginners Think about how to escape the whitespaces. Solution After login in the machine as bandit3, we can see the filename \u0026ndash;spaces in this filename\u0026ndash;.\nNow we have 2 problems:\nSame as previous level, filename starts with --, so it will be interpreted as an argument. Address this problem using ./. Filename contains whitespaces. This is an issue, as bash interpretes whitespaces to separate commands. To solve the second problem, we must escape the whitespace character in some way. Here is the solution:\ncat ./--spaces\\ in\\ this\\ filename-- NB: Little trick, you can start writting filename and press Tab to autocomplete the name. The \\ is going to be inserted automatically.\nJust using the \\ we can escape the whitespace.\nNow we can continue with the bandit4 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit3/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eThink about how to \u003cem\u003eescape\u003c/em\u003e the whitespaces.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAfter login in the machine as bandit3, we can see the filename \u003cem\u003e\u0026ndash;spaces in this filename\u0026ndash;\u003c/em\u003e.\u003c/p\u003e\n\u003cp\u003eNow we have 2 problems:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eSame as previous level, filename starts with \u003ccode\u003e--\u003c/code\u003e, so it will be interpreted as an argument. Address this problem using \u003ccode\u003e./\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003eFilename contains \u003cstrong\u003ewhitespaces\u003c/strong\u003e. This is an issue, as bash interpretes whitespaces to separate commands.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eTo solve the second problem, we must escape the whitespace character in some way. Here is the solution:\u003c/p\u003e","title":"Bandit3"},{"content":"Level description The password for the next level is stored in a hidden file in the inhere directory.\nTips for beginners Learn how to navigate directories in Linux. First understand what a hidden file is. Solution Listing directory files inside bandit4\u0026rsquo;s home directory, show directory inhere.\nNB: How to distinguish files and directories in Linux? Use ls -l and see the difference.\nWe have 2 options now:\nMove to inhere directory and check contens again. Check contents directly. Moving to another directory can be done using cd \u0026lt;dirName\u0026gt;. If you prefer to check directory contents directly, use ls \u0026lt;dirName\u0026gt;.\nAfter checking inhere contents via ls, we see nothing. The reason is the file is a hidden file. A hidden file in Linux is everyfile whose name starts with dot .. Hidden files are not shown by default with ls command, so we must add a special flag -a to list all files: NB: Both flags -l and -a cna be combined into a single flag -al, which is shorter to type.\nAs you can see, filename is \u0026hellip;Hidding-From-You starting with three dots. Reading file contents should be easy at this point!\nNext level is bandit5.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit4/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a hidden file in the inhere directory.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to navigate directories in Linux.\u003c/li\u003e\n\u003cli\u003eFirst understand what a hidden file is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eListing directory files inside bandit4\u0026rsquo;s home directory, show directory \u003cstrong\u003einhere\u003c/strong\u003e.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e How to distinguish files and directories in Linux? Use \u003ccode\u003els -l\u003c/code\u003e and see the difference.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eWe have 2 options now:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eMove to inhere directory and check contens again.\u003c/li\u003e\n\u003cli\u003eCheck contents directly.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eMoving to another directory can be done using \u003ccode\u003ecd \u0026lt;dirName\u0026gt;\u003c/code\u003e. If you prefer to check directory contents directly, use \u003ccode\u003els \u0026lt;dirName\u0026gt;\u003c/code\u003e.\u003c/p\u003e","title":"Bandit4"},{"content":"Level description The password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\nTips for beginners What means human-readable file? Is there any way to check filetype at Linux?. Solution Checking inhere\u0026rsquo;s contents shows some files names \u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII here\nSo now, our goal is checking if file content of every file in the folder is ASCII or not. file \u0026lt;filename\u0026gt; does the job. Note the use of *. That called a wildcard regular expression, we\u0026rsquo;ll deep into it in later levels. An easy approach could be checking every file separately:\nfile ./--file00 file ./--file01 ... file ./--file09 But that\u0026rsquo;s not funny, imagine we have 100 files to check. All the files are in the same directory, so we can use cat ./* where ./* matches every filename in the directory, applying file to every file.\nNB: Another approach is to use find with certaing flags. Try to do in different ways, don\u0026rsquo;t stick to my solution.\nThe file \u0026ndash;file00 content is not readable, so get password from \u0026ndash;file07 and continue with bandit6.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit5/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eWhat means human-readable file?\u003c/li\u003e\n\u003cli\u003eIs there any way to check filetype at Linux?.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eChecking inhere\u0026rsquo;s contents shows some files names \u003cstrong\u003e\u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09\u003c/strong\u003e. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII \u003ca href=\"https://en.wikipedia.org/wiki/ASCII\"\u003ehere\u003c/a\u003e\u003c/p\u003e","title":"Bandit5"},{"content":"Level description The password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\nhuman-readable 1033 bytes in size not executable Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution The purpose of the level is showing us how to find for files. Listing contents of inhere, we can see some folders, containing a lot of files inside: NB: Adding -R to ls shows recursively the content of every folder inside the directory listed.\nSo this time, checking every file is not an option. We need to find a file with some properties, specific size, not excutable and human-readable. Let\u0026rsquo;s explain the command we\u0026rsquo;re using:\nfind inhere/ -size 1033c ! -executable First, we specify the directory, in this case inhere. The option -size 1033c returns files of 1033 bytes. Then, with -executable we would get executable files, but we want not executable files, that\u0026rsquo;s why we are adding ! before.\nNB: By default, the -size option takes as argument the number of blocks. For example, -size 2 means 2 blocks of 512 bytes, so its 1024. The c is used to specify exact bytes. Don\u0026rsquo;t ask me why it\u0026rsquo;s c and not b 😅.\nThe property of human-readability is not implemented in find. This is not an issue, previous command returns a single file and it is human readable (we could confirm using file): Extra tip: try to use the following:\nfind inhere/ -size 1033c ! -executable | file You get the same result! The pipe | is a great tool to execute 2+ commands in one line.\nGet your password and continue with bandit7.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit6/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ehuman-readable\u003c/li\u003e\n\u003cli\u003e1033 bytes in size\u003c/li\u003e\n\u003cli\u003enot executable\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThe purpose of the level is showing us how to find for files. Listing contents of \u003cstrong\u003einhere\u003c/strong\u003e, we can see some folders, containing a lot of files inside:\n\u003cimg alt=\"bandit6_0\" loading=\"lazy\" src=\"/images/otw/bandit/bandit6/0.png\"\u003e\u003c/p\u003e","title":"Bandit6"},{"content":"Level description The password for the next level is stored somewhere on the server and has all of the following properties:\nowned by user bandit7 owned by group bandit6 33 bytes in size Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution This is very straightforward to do after completing previous level. Now we need to identify a file owned by user bandit7 and group bandi6. Furthermore, the file is somewhere on the server, which means we have to find in the root directory /.\nfind / -user bandit7 -group bandit6 -size 33c 2\u0026gt;/dev/null NB: I added that strange 2\u0026gt;/dev/null to filter error output. The reason why it works like that is more technical, for now just save this a fast way to filter errors in terminal. We get some errors because looking for files in the whole server may return some unaccesible files, as we don\u0026rsquo;t have root user permissions. We will study Linux permissions in later levels.\nWe should get a single file, containing password for bandit8.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit7/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored somewhere on the server and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eowned by user bandit7\u003c/li\u003e\n\u003cli\u003eowned by group bandit6\u003c/li\u003e\n\u003cli\u003e33 bytes in size\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is very straightforward to do after completing previous level. Now we need to identify a file owned by user bandit7 and group bandi6. Furthermore, the file is \u003cstrong\u003esomewhere on the server\u003c/strong\u003e, which means we have to find in the root directory \u003ccode\u003e/\u003c/code\u003e.\u003c/p\u003e","title":"Bandit7"},{"content":"Level description The password for the next level is stored in the file data.txt next to the word millionth.\nTips for beginners Learn how to filter file contents. Solution At previous levels, we discovered how to find for files. Now it\u0026rsquo;s time to find for content inside a file. grep command is going to help with that task.\nNB: Of course I don\u0026rsquo;t want to spoil you the password!\nNotice how this can achieved in different ways.\nUsing grep \u0026lt;keyword\u0026gt; \u0026lt;filename\u0026gt;. Using the pipe | to execute grep over the result of cat command. Take you favorite path to solve the level, and continue with bandit9.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit8/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the file \u003cstrong\u003edata.txt\u003c/strong\u003e next to the word \u003cstrong\u003emillionth\u003c/strong\u003e.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to filter file contents.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAt previous levels, we discovered how to find for files. Now it\u0026rsquo;s time to find for content inside a file. \u003ccode\u003egrep\u003c/code\u003e command is going to help with that task.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"bandit8\" loading=\"lazy\" src=\"/images/otw/bandit/bandit8/0.png\"\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e Of course I don\u0026rsquo;t want to spoil you the password!\u003c/p\u003e","title":"Bandit8"},{"content":"Level description The password for the next level is stored in the file data.txt and is the only line of text that occurs only once.\nTips for beginners First, apply sort to file content. Solution This level is a bit tricky. First, examine the file contents. Using head shows the 10 first lines of a file:\nNB: If you want to show more lines: head -20 or the number of your choice.\nThere are tons of different passwords. The correct one is the only line of text that occurs only once. Try to research how to do on your own. You maybe find uniq. This command has a very interesting flag, -u, used to show only the uniq lines. Let\u0026rsquo;s try with that:\nFor some reason, is not working. The trick here is to sort the file contents before applying uniq. This can be achieved using sort, so the final command looks like this:\ncat data.txt | sort | uniq -u NB: You need to sort lines first because uniq only detects consecutive repetitions. First time I solved this it took a while 😅.\nAfter getting the password, we can continue with bandit10.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit9/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the file \u003cstrong\u003edata.txt\u003c/strong\u003e and is the only line of text that occurs only once.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst, apply \u003ccode\u003esort\u003c/code\u003e to file content.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis level is a bit tricky. First, examine the file contents. Using \u003ccode\u003ehead\u003c/code\u003e shows the 10 first lines of a file:\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"bandit9_0\" loading=\"lazy\" src=\"/images/otw/bandit/bandit9/0.png\"\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e If you want to show more lines: \u003ccode\u003ehead -20\u003c/code\u003e or the number of your choice.\u003c/p\u003e","title":"Bandit9"},{"content":"👨‍💻 whoami Hey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\nWhat is this❓​ This blog is basically my thoughts on several hacking topics. Here you’ll see:\nWriteups from CTF challenges, from platforms like HackTheBox or OverTheWire.\nWalkthroughs and notes on pentesting techniques I’m learning or testing.\nSome posts on cryptography — because math can be fun (sometimes).\nRandom topics that freaks like me may (just may) find interesting.\nThe idea is simple: share what I learn, document my journey, and maybe help others who are also diving into the exciting world of ethical hacking.\n📫 Contact Want to say hi, share ideas, or just geek out about hacking? Reach me here:\n📧 Email: mrb0b1073@proton.me 💻​ GitHub: mrb0b173 🟩​ HackTheBox: mrb0b1073 ","permalink":"http://localhost:1313/about/","summary":"\u003ch2 id=\"-whoami\"\u003e👨‍💻 whoami\u003c/h2\u003e\n\u003cp\u003eHey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\u003c/p\u003e\n\u003chr\u003e\n\u003ch2 id=\"what-is-this\"\u003eWhat is this❓​\u003c/h2\u003e\n\u003cp\u003eThis blog is basically my thoughts on several hacking topics. Here you’ll see:\u003c/p\u003e","title":"About"},{"content":"Hey! 👋 I\u0026rsquo;m mrb0b1073 and this is my first post.\nWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\nExcited to start this adventure!\n","permalink":"http://localhost:1313/posts/hello-world/","summary":"\u003cp\u003eHey! 👋 I\u0026rsquo;m \u003cstrong\u003emrb0b1073\u003c/strong\u003e and this is my first post.\u003c/p\u003e\n\u003cp\u003eWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\u003cbr\u003e\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\u003c/p\u003e\n\u003cp\u003eExcited to start this adventure!\u003c/p\u003e","title":"Hello World"},{"content":"Introduction If you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\nIn cybersecurity there are broadly two complementary roles: Blue Team and Red Team. Blue Teams focus on defense, monitoring, incident response, hardening systems and keeping services secure, while Red Teams simulate attackers to find weaknesses and prove what an adversary could do. Ethical hacking aligns closely with Red Team operations, but cybersecurity is highly transversal across IT. There are many specialities or areas, such as cloud security, appsec, pentesting, forensics, governance, risk management, malware analysis, etc. Every topic could deserve its own post, so let\u0026rsquo;s keep it simple and focus on ethical hacking.\nHacker philosophy Let\u0026rsquo;s start with the idea of what is exactly a hacker. A hacker is someone who explores systems to understand how they work, finds creative ways to make or fix things, and solves technical problems. Historically the word describes curiosity, craft, and a drive to improve systems — not criminality. It is important to make the distinction between hacker and cracker, also called cybercriminal. A hacker explores, builds, discloses responsibly and works to improve security. They work in authorized environments or labs. On the other hand, a cracker breaks into systems for theft, vandalism or other illicit gain.\nHere you can find the most popularized ideas often summarized as the hacker ethic:\nCuriosity first: Learn by exploring and tinkering. Freedom of information: All knowledge should be shared to help progress. This fits properly with the idea of open source. Mistrust of needless authority: Centralized control sometimes blocks innovation. It is always good to question anything, specially common assumptions. Meritocracy: Skills, craft and results matter more than titles. Craftsmanship \u0026amp; elegance: Technical beauty matters. Build clean, clever and efficient solutions. Responsability \u0026amp; ethics: Use your skills to build, fix, educate and defend, not to harm. Core fundamentals Assuming you want to init yourself in hacking, you should first build competence across three basic pillars.\nOperating Systems You should learn as much as possible about Linux and Windows. Specially Linux, all the tools you will be using are meant to be used in a Linux environment. Skill with shell is required, learn basic commands and how to interact with the OS using the terminal. Research about processes, file permissions, package management and logs. A large proportion of web servers around the world run on Linux, although Windows is also widely used. Windows knowledge is really valuable too, considering active directory is strongly used in corporate environments.\nNetworking You have to understand how computers communicate each other. Understand basic networking concepts, IP adresses, subnetting, proxies, find out how internet works. Study some protocols such as TCP/IP, HTTP, DNS or SSH. This could sound confusing for beginners, but this step is not optional! Study different client/server models and how services expose attack surfaces.\nProgramming \u0026amp; scripting Is this completely required? Maybe not for complete beginners. Does it help? Absolutely yes. Understanding how web apps or any type of application works makes things much easier. You can imagine different entry points to exploit if you understand how systems are designed. Also writing scripts in bash or python makes you more productive through automation.\nEthical Hacking foundations Once you feel confident with these 3 pillars, you can go to the next step. You can study about different topics and areas. For example, binary exploiting, web pentesting, mobile pentesting, wireless hacking, etc. You should start picking a focus, in this post we focus on web pentesting, as it is beginner friendly. Also web applications are the bread and butter in companies nowadays.\nKey concepts to study:\nCIA Triad: CIA refers to Confidentiality, Integrity and Availability. These three concepts are key in information security, and describe properties we want to ensure in our systems and information. Web Security basics, OWASP: Study the OWASP Top 10, which summarizes most frequent web security risks. Authentication and session control: Understand the concepts of Authentication and Authorization, research about how session is handled in web apps, cookies, JWT tokens, etc. Input validation \u0026amp; injection attacks: Learn about SQL Injection, Cross-Site Scripting (XSS), Code Injection, SSTI, and every injection type. Secure development lifecycle: Find out how to implement security controls in code. This can be more related to Blue Team, but as Red Teamer it is important to understand. Firewall evasion: What a firewall is and some techniques/methods to bypass. Some cryptography: Understand what a chiper and a hash are, how information is encrypted to prevent access from 3rd parties. Focusing on web, read about TLS protocol. There are many more topics you can research and learn, but this could be a nice starting point.\nTools and platforms to learn Now you have an idea of what to study, let\u0026rsquo;s see how to start in practical terms.\nSome platforms I personally recommend:\nOverTheWire: Here you can find some CTFs (Capture The Flag) which are fun to play and also really instructive. Bandit games are a must for complete beginners, as you will explore some linux and bash concepts which are basic to continue. The games are leveled by difficulty, in their web you can get all the information about how to play, only a terminal and SSH is required. This helps building your foundation in Linux OS. HackTheBox: Nº 1 platform in cybersecurity. Has a lot of resources to learn all this core fundamentals, and also red team / blue team security topics. It is focused on labs where you can test your skills hacking different boxes but if you really want to learn it is worth to invest time and money in the academy. I have to say the level here is high, specially if you try to hack machines on your own without using some guide or writeup. TryHackMe: More beginner friendly than hackthebox, it provides a lot of guided learning resources. PortSwigger Labs: Practical labs about specific topics, focused on web hacking. They are great to learn and understand different types of attacks, injections, and security misconfigurations. I would recommend digging into this once you have the theoretical basis about these concepts. I have to mention a few tools I am sure you\u0026rsquo;d end up using:\nNmap: This is probably the most famous tool in hacking, allowing you to gather information about ports and services running in a machine. Burpsuite: A proxy tool widely used in web application security testing. It basically allows you to intercept and modify web requests, which can be used to perform several types of attacks. Metasploit: The most used pentesting framework. Contains a large amount of scripts and exploits ready to run. Another crucial step here is to set up your virtual lab environment to test vulnerable applications. To achieve this goal, there are some Linux distributions like Kali, Parrot or BlackArch, but that\u0026rsquo;s a topic for another post.\nFinal thoughs To sum up, this would be my personal roadmap:\nLearn the fundamentals, specially Linux and networking. Install some Linux in a virtual machine, play with it, get comfortable with the terminal. You can start with bandit wargames in OverTheWire. Complete every level and make sure to understand everything as clear as possible. Move to guided boxes on HackTheBox. I recommend you joining their Discord, ask questions, community is great there! Take notes, repeat, learn, improve your skills. Maybe use your own lab environment, create your own vulnerable apps. Hacking is a mixing of curiosity, study and practice. Being passionate and motivated about it is really helpful and will definitely speed up the process. The path is long and really challenging, so keep it going!\n\u0026ldquo;Yes, I am a criminal. My crime is that of curiosity.\u0026rdquo; — The Mentor (Loyd Blankenship) at The Hacker Manifesto\n","permalink":"http://localhost:1313/posts/starting-point/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIf you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\u003c/p\u003e","title":"Starting Point"},{"content":"Introduction In this post series we are going to solve every level from bandit in OverTheWire This guide pretends to be a writeup containing the solutions of the level, designed for beginners.\nTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing WSL, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\nEvery section will contain the solution as well as some tips for people who is absolutely beginner.\nTips First of all, some tips:\nDo not use this as first resource to solve the levels. Try on your own, make mistakes and learn from them. Only check the solution as last resource or if you are completely new and you have absolutely no idea about what to do next. Take notes from your learning. Write up commands, tips and everything which can be useful in the future. Make sure to understand everything. Is a good idea to note the passwords for every level. If you want to continue letter, you can simply log in in the desired level. It is annoying to repeat everything! Follow the tips and information provided at OverTheWire website. Levels Here is my solution for every level:\nBandit0 Bandit1 Bandit2 Bandit3 Bandit4 Bandit5 Bandit6 Bandit7 ","permalink":"http://localhost:1313/posts/otw/bandit/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIn this post series we are going to solve every level from bandit in \u003ca href=\"https://overthewire.org/wargames/bandit/\"\u003e\u003cem\u003eOverTheWire\u003c/em\u003e\u003c/a\u003e\nThis guide pretends to be a writeup containing the solutions of the level, designed for beginners.\u003c/p\u003e\n\u003cp\u003eTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing \u003ca href=\"https://learn.microsoft.com/en-us/windows/wsl/install\"\u003eWSL\u003c/a\u003e, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\u003c/p\u003e","title":"Bandit"},{"content":"Level description The goal of this level is for you to log into the game using SSH. The host to which you need to connect is bandit.labs.overthewire.org, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\nTips for beginners Read a bit about what SSH is. Research about what a port is. Solution This is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go here.\nAt Linux, we can use ssh client to connect to the server. It should be installed by default on your system. If not, please first research about how to install. Once you have the SSH client installed, you can log in into the first level as follows:\nssh bandit0@bandit.labs.overthewire.org -p 2220 Syntax is simple: ssh \u0026lt;username\u0026gt;@\u0026lt;hostname\u0026gt; -p \u0026lt;port\u0026gt;. Usually SSH runs on port 22 by default, but they changed to port 2220 so we must specify it in the command.\nOnce you try to log in, you will see something like this: NB: If it\u0026rsquo;s the first time you try to log in, you will be asked about the authenticity of the host. Just type yes.\nType the password bandit0 and press enter. Now you are inside bandit server, ready to begin with bandit1!\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit0/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe goal of this level is for you to log into the game using SSH. The host to which you need to connect is \u003cstrong\u003ebandit.labs.overthewire.org\u003c/strong\u003e, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eRead a bit about what SSH is.\u003c/li\u003e\n\u003cli\u003eResearch about what a port is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go \u003ca href=\"https://en.wikipedia.org/wiki/Secure_Shell\"\u003ehere\u003c/a\u003e.\u003c/p\u003e","title":"Bandit0"},{"content":"Level description The password for the next level is stored in a file called readme located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\nTips for beginners Learn about home directory in Linux. Learn to use cat and ls commands. Solution First step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\nls This shows in terminal the files at the current directory. There you will see the readme file.\nNow we can to check the contents, so let\u0026rsquo;s use cat:\ncat readme To read a file, we use cat \u0026lt;filename\u0026gt;.\nNB: Not every file is human readable in Linux. We deep more about this in later levels.\nThe content of the readme file reveals the password for bandit2 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit1/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u003cstrong\u003ereadme\u003c/strong\u003e located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn about home directory in Linux.\u003c/li\u003e\n\u003cli\u003eLearn to use \u003ccode\u003ecat\u003c/code\u003e and \u003ccode\u003els\u003c/code\u003e commands.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eFirst step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\u003c/p\u003e","title":"Bandit1"},{"content":"Level description The password for the next level is stored in a file called - located in the home directory\nTips for beginners Try to understand why previous solution is not working as you expect. Solution You may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our cat command: The terminal is waiting for something else. This happens due to character - is used to pass arguments to our commands, and the linux shell is interpreting that. To prevent that, we could use:\ncat ./- NB: Dot . is used to refer current directory. The slash / is used at the end of directory name.\nWe get the password for bandit3 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit2/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called - located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eTry to understand why previous solution is not working as you expect.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eYou may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our \u003ccode\u003ecat\u003c/code\u003e command:\n\u003cimg alt=\"bandit2\" loading=\"lazy\" src=\"/images/otw/bandit/bandit2/0.png\"\u003e\u003c/p\u003e\n\u003cp\u003eThe terminal is \u003cem\u003ewaiting\u003c/em\u003e for something else. This happens due to character \u003ccode\u003e-\u003c/code\u003e is used to pass arguments to our commands, and the linux shell is interpreting that.\nTo prevent that, we could use:\u003c/p\u003e","title":"Bandit2"},{"content":"Level description The password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\nTips for beginners Think about how to escape the whitespaces. Solution After login in the machine as bandit3, we can see the filename \u0026ndash;spaces in this filename\u0026ndash;.\nNow we have 2 problems:\nSame as previous level, filename starts with --, so it will be interpreted as an argument. Address this problem using ./. Filename contains whitespaces. This is an issue, as bash interpretes whitespaces to separate commands. To solve the second problem, we must escape the whitespace character in some way. Here is the solution:\ncat ./--spaces\\ in\\ this\\ filename-- NB: Little trick, you can start writting filename and press Tab to autocomplete the name. The \\ is going to be inserted automatically.\nJust using the \\ we can escape the whitespace.\nNow we can continue with the bandit4 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit3/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eThink about how to \u003cem\u003eescape\u003c/em\u003e the whitespaces.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAfter login in the machine as bandit3, we can see the filename \u003cem\u003e\u0026ndash;spaces in this filename\u0026ndash;\u003c/em\u003e.\u003c/p\u003e\n\u003cp\u003eNow we have 2 problems:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eSame as previous level, filename starts with \u003ccode\u003e--\u003c/code\u003e, so it will be interpreted as an argument. Address this problem using \u003ccode\u003e./\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003eFilename contains \u003cstrong\u003ewhitespaces\u003c/strong\u003e. This is an issue, as bash interpretes whitespaces to separate commands.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eTo solve the second problem, we must escape the whitespace character in some way. Here is the solution:\u003c/p\u003e","title":"Bandit3"},{"content":"Level description The password for the next level is stored in a hidden file in the inhere directory.\nTips for beginners Learn how to navigate directories in Linux. First understand what a hidden file is. Solution Listing directory files inside bandit4\u0026rsquo;s home directory, show directory inhere.\nNB: How to distinguish files and directories in Linux? Use ls -l and see the difference.\nWe have 2 options now:\nMove to inhere directory and check contens again. Check contents directly. Moving to another directory can be done using cd \u0026lt;dirName\u0026gt;. If you prefer to check directory contents directly, use ls \u0026lt;dirName\u0026gt;.\nAfter checking inhere contents via ls, we see nothing. The reason is the file is a hidden file. A hidden file in Linux is everyfile whose name starts with dot .. Hidden files are not shown by default with ls command, so we must add a special flag -a to list all files: NB: Both flags -l and -a cna be combined into a single flag -al, which is shorter to type.\nAs you can see, filename is \u0026hellip;Hidding-From-You starting with three dots. Reading file contents should be easy at this point!\nNext level is bandit5.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit4/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a hidden file in the inhere directory.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to navigate directories in Linux.\u003c/li\u003e\n\u003cli\u003eFirst understand what a hidden file is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eListing directory files inside bandit4\u0026rsquo;s home directory, show directory \u003cstrong\u003einhere\u003c/strong\u003e.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e How to distinguish files and directories in Linux? Use \u003ccode\u003els -l\u003c/code\u003e and see the difference.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eWe have 2 options now:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eMove to inhere directory and check contens again.\u003c/li\u003e\n\u003cli\u003eCheck contents directly.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eMoving to another directory can be done using \u003ccode\u003ecd \u0026lt;dirName\u0026gt;\u003c/code\u003e. If you prefer to check directory contents directly, use \u003ccode\u003els \u0026lt;dirName\u0026gt;\u003c/code\u003e.\u003c/p\u003e","title":"Bandit4"},{"content":"Level description The password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\nTips for beginners What means human-readable file? Is there any way to check filetype at Linux?. Solution Checking inhere\u0026rsquo;s contents shows some files names \u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII here\nSo now, our goal is checking if file content of every file in the folder is ASCII or not. file \u0026lt;filename\u0026gt; does the job. Note the use of *. That called a wildcard regular expression, we\u0026rsquo;ll deep into it in later levels. An easy approach could be checking every file separately:\nfile ./--file00 file ./--file01 ... file ./--file09 But that\u0026rsquo;s not funny, imagine we have 100 files to check. All the files are in the same directory, so we can use cat ./* where ./* matches every filename in the directory, applying file to every file.\nNB: Another approach is to use find with certaing flags. Try to do in different ways, don\u0026rsquo;t stick to my solution.\nThe file \u0026ndash;file00 content is not readable, so get password from \u0026ndash;file07 and continue with bandit6.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit5/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eWhat means human-readable file?\u003c/li\u003e\n\u003cli\u003eIs there any way to check filetype at Linux?.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eChecking inhere\u0026rsquo;s contents shows some files names \u003cstrong\u003e\u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09\u003c/strong\u003e. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII \u003ca href=\"https://en.wikipedia.org/wiki/ASCII\"\u003ehere\u003c/a\u003e\u003c/p\u003e","title":"Bandit5"},{"content":"Level description The password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\nhuman-readable 1033 bytes in size not executable Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution The purpose of the level is showing us how to find for files. Listing contents of inhere, we can see some folders, containing a lot of files inside: NB: Adding -R to ls shows recursively the content of every folder inside the directory listed.\nSo this time, checking every file is not an option. We need to find a file with some properties, specific size, not excutable and human-readable. Let\u0026rsquo;s explain the command we\u0026rsquo;re using:\nfind inhere/ -size 1033c ! -executable First, we specify the directory, in this case inhere. The option -size 1033c returns files of 1033 bytes. Then, with -executable we would get executable files, but we want not executable files, that\u0026rsquo;s why we are adding ! before.\nNB: By default, the -size option takes as argument the number of blocks. For example, -size 2 means 2 blocks of 512 bytes, so its 1024. The c is used to specify exact bytes. Don\u0026rsquo;t ask me why it\u0026rsquo;s c and not b 😅.\nThe property of human-readability is not implemented in find. This is not an issue, previous command returns a single file and it is human readable (we could confirm using file): Extra tip: try to use the following:\nfind inhere/ -size 1033c ! -executable | file You get the same result! The pipe | is a great tool to execute 2+ commands in one line.\nGet your password and continue with bandit7.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit6/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ehuman-readable\u003c/li\u003e\n\u003cli\u003e1033 bytes in size\u003c/li\u003e\n\u003cli\u003enot executable\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThe purpose of the level is showing us how to find for files. Listing contents of \u003cstrong\u003einhere\u003c/strong\u003e, we can see some folders, containing a lot of files inside:\n\u003cimg alt=\"bandit6_0\" loading=\"lazy\" src=\"/images/otw/bandit/bandit6/0.png\"\u003e\u003c/p\u003e","title":"Bandit6"},{"content":"Level description The password for the next level is stored somewhere on the server and has all of the following properties:\nowned by user bandit7 owned by group bandit6 33 bytes in size Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution This is very straightforward to do after completing previous level. Now we need to identify a file owned by user bandit7 and group bandi6. Furthermore, the file is somewhere on the server, which means we have to find in the root directory /.\nfind / -user bandit7 -group bandit6 -size 33c 2\u0026gt;/dev/null NB: I added that strange 2\u0026gt;/dev/null to filter error output. The reason why it works like that is more technical, for now just save this a fast way to filter errors in terminal. We get some errors because looking for files in the whole server may return some unaccesible files, as we don\u0026rsquo;t have root user permissions. We will study Linux permissions in later levels.\nWe should get a single file, containing password for bandit8.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit7/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored somewhere on the server and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eowned by user bandit7\u003c/li\u003e\n\u003cli\u003eowned by group bandit6\u003c/li\u003e\n\u003cli\u003e33 bytes in size\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is very straightforward to do after completing previous level. Now we need to identify a file owned by user bandit7 and group bandi6. Furthermore, the file is \u003cstrong\u003esomewhere on the server\u003c/strong\u003e, which means we have to find in the root directory \u003ccode\u003e/\u003c/code\u003e.\u003c/p\u003e","title":"Bandit7"},{"content":"Level description The password for the next level is stored in the file data.txt next to the word millionth.\nTips for beginners Learn how to filter file contents. Solution At previous levels, we discovered how to find for files. Now it\u0026rsquo;s time to find for content inside a file. grep command is going to help with that task.\nNB: Of course I don\u0026rsquo;t want to spoil you the password!\nNotice how this can achieved in different ways.\nUsing grep \u0026lt;keyword\u0026gt; \u0026lt;filename\u0026gt;. Using the pipe | to execute grep over the result of cat command. Take you favorite path to solve the level, and continue with bandit9.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit8/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the file \u003cstrong\u003edata.txt\u003c/strong\u003e next to the word \u003cstrong\u003emillionth\u003c/strong\u003e.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to filter file contents.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAt previous levels, we discovered how to find for files. Now it\u0026rsquo;s time to find for content inside a file. \u003ccode\u003egrep\u003c/code\u003e command is going to help with that task.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"bandit8\" loading=\"lazy\" src=\"/images/otw/bandit/bandit8/0.png\"\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e Of course I don\u0026rsquo;t want to spoil you the password!\u003c/p\u003e","title":"Bandit8"},{"content":"Level description The password for the next level is stored in the file data.txt and is the only line of text that occurs only once.\nTips for beginners First, apply sort to file content. Solution This level is a bit tricky. First, examine the file contents. Using head shows the 10 first lines of a file:\nNB: If you want to show more lines: head -20 or the number of your choice.\nThere are tons of different passwords. The correct one is the only line of text that occurs only once. Try to research how to do on your own. You maybe find uniq. This command has a very interesting flag, -u, used to show only the uniq lines. Let\u0026rsquo;s try with that:\nFor some reason, is not working. The trick here is to sort the file contents before applying uniq. This can be achieved using sort, so the final command looks like this:\ncat data.txt | sort | uniq -u NB: You need to sort lines first because uniq only detects consecutive repetitions. First time I solved this it took a while 😅.\nAfter getting the password, we can continue with bandit10.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit9/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the file \u003cstrong\u003edata.txt\u003c/strong\u003e and is the only line of text that occurs only once.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst, apply \u003ccode\u003esort\u003c/code\u003e to file content.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis level is a bit tricky. First, examine the file contents. Using \u003ccode\u003ehead\u003c/code\u003e shows the 10 first lines of a file:\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"bandit9_0\" loading=\"lazy\" src=\"/images/otw/bandit/bandit9/0.png\"\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e If you want to show more lines: \u003ccode\u003ehead -20\u003c/code\u003e or the number of your choice.\u003c/p\u003e","title":"Bandit9"},{"content":"👨‍💻 whoami Hey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\nWhat is this❓​ This blog is basically my thoughts on several hacking topics. Here you’ll see:\nWriteups from CTF challenges, from platforms like HackTheBox or OverTheWire.\nWalkthroughs and notes on pentesting techniques I’m learning or testing.\nSome posts on cryptography — because math can be fun (sometimes).\nRandom topics that freaks like me may (just may) find interesting.\nThe idea is simple: share what I learn, document my journey, and maybe help others who are also diving into the exciting world of ethical hacking.\n📫 Contact Want to say hi, share ideas, or just geek out about hacking? Reach me here:\n📧 Email: mrb0b1073@proton.me 💻​ GitHub: mrb0b173 🟩​ HackTheBox: mrb0b1073 ","permalink":"http://localhost:1313/about/","summary":"\u003ch2 id=\"-whoami\"\u003e👨‍💻 whoami\u003c/h2\u003e\n\u003cp\u003eHey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\u003c/p\u003e\n\u003chr\u003e\n\u003ch2 id=\"what-is-this\"\u003eWhat is this❓​\u003c/h2\u003e\n\u003cp\u003eThis blog is basically my thoughts on several hacking topics. Here you’ll see:\u003c/p\u003e","title":"About"},{"content":"Hey! 👋 I\u0026rsquo;m mrb0b1073 and this is my first post.\nWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\nExcited to start this adventure!\n","permalink":"http://localhost:1313/posts/hello-world/","summary":"\u003cp\u003eHey! 👋 I\u0026rsquo;m \u003cstrong\u003emrb0b1073\u003c/strong\u003e and this is my first post.\u003c/p\u003e\n\u003cp\u003eWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\u003cbr\u003e\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\u003c/p\u003e\n\u003cp\u003eExcited to start this adventure!\u003c/p\u003e","title":"Hello World"},{"content":"Introduction If you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\nIn cybersecurity there are broadly two complementary roles: Blue Team and Red Team. Blue Teams focus on defense, monitoring, incident response, hardening systems and keeping services secure, while Red Teams simulate attackers to find weaknesses and prove what an adversary could do. Ethical hacking aligns closely with Red Team operations, but cybersecurity is highly transversal across IT. There are many specialities or areas, such as cloud security, appsec, pentesting, forensics, governance, risk management, malware analysis, etc. Every topic could deserve its own post, so let\u0026rsquo;s keep it simple and focus on ethical hacking.\nHacker philosophy Let\u0026rsquo;s start with the idea of what is exactly a hacker. A hacker is someone who explores systems to understand how they work, finds creative ways to make or fix things, and solves technical problems. Historically the word describes curiosity, craft, and a drive to improve systems — not criminality. It is important to make the distinction between hacker and cracker, also called cybercriminal. A hacker explores, builds, discloses responsibly and works to improve security. They work in authorized environments or labs. On the other hand, a cracker breaks into systems for theft, vandalism or other illicit gain.\nHere you can find the most popularized ideas often summarized as the hacker ethic:\nCuriosity first: Learn by exploring and tinkering. Freedom of information: All knowledge should be shared to help progress. This fits properly with the idea of open source. Mistrust of needless authority: Centralized control sometimes blocks innovation. It is always good to question anything, specially common assumptions. Meritocracy: Skills, craft and results matter more than titles. Craftsmanship \u0026amp; elegance: Technical beauty matters. Build clean, clever and efficient solutions. Responsability \u0026amp; ethics: Use your skills to build, fix, educate and defend, not to harm. Core fundamentals Assuming you want to init yourself in hacking, you should first build competence across three basic pillars.\nOperating Systems You should learn as much as possible about Linux and Windows. Specially Linux, all the tools you will be using are meant to be used in a Linux environment. Skill with shell is required, learn basic commands and how to interact with the OS using the terminal. Research about processes, file permissions, package management and logs. A large proportion of web servers around the world run on Linux, although Windows is also widely used. Windows knowledge is really valuable too, considering active directory is strongly used in corporate environments.\nNetworking You have to understand how computers communicate each other. Understand basic networking concepts, IP adresses, subnetting, proxies, find out how internet works. Study some protocols such as TCP/IP, HTTP, DNS or SSH. This could sound confusing for beginners, but this step is not optional! Study different client/server models and how services expose attack surfaces.\nProgramming \u0026amp; scripting Is this completely required? Maybe not for complete beginners. Does it help? Absolutely yes. Understanding how web apps or any type of application works makes things much easier. You can imagine different entry points to exploit if you understand how systems are designed. Also writing scripts in bash or python makes you more productive through automation.\nEthical Hacking foundations Once you feel confident with these 3 pillars, you can go to the next step. You can study about different topics and areas. For example, binary exploiting, web pentesting, mobile pentesting, wireless hacking, etc. You should start picking a focus, in this post we focus on web pentesting, as it is beginner friendly. Also web applications are the bread and butter in companies nowadays.\nKey concepts to study:\nCIA Triad: CIA refers to Confidentiality, Integrity and Availability. These three concepts are key in information security, and describe properties we want to ensure in our systems and information. Web Security basics, OWASP: Study the OWASP Top 10, which summarizes most frequent web security risks. Authentication and session control: Understand the concepts of Authentication and Authorization, research about how session is handled in web apps, cookies, JWT tokens, etc. Input validation \u0026amp; injection attacks: Learn about SQL Injection, Cross-Site Scripting (XSS), Code Injection, SSTI, and every injection type. Secure development lifecycle: Find out how to implement security controls in code. This can be more related to Blue Team, but as Red Teamer it is important to understand. Firewall evasion: What a firewall is and some techniques/methods to bypass. Some cryptography: Understand what a chiper and a hash are, how information is encrypted to prevent access from 3rd parties. Focusing on web, read about TLS protocol. There are many more topics you can research and learn, but this could be a nice starting point.\nTools and platforms to learn Now you have an idea of what to study, let\u0026rsquo;s see how to start in practical terms.\nSome platforms I personally recommend:\nOverTheWire: Here you can find some CTFs (Capture The Flag) which are fun to play and also really instructive. Bandit games are a must for complete beginners, as you will explore some linux and bash concepts which are basic to continue. The games are leveled by difficulty, in their web you can get all the information about how to play, only a terminal and SSH is required. This helps building your foundation in Linux OS. HackTheBox: Nº 1 platform in cybersecurity. Has a lot of resources to learn all this core fundamentals, and also red team / blue team security topics. It is focused on labs where you can test your skills hacking different boxes but if you really want to learn it is worth to invest time and money in the academy. I have to say the level here is high, specially if you try to hack machines on your own without using some guide or writeup. TryHackMe: More beginner friendly than hackthebox, it provides a lot of guided learning resources. PortSwigger Labs: Practical labs about specific topics, focused on web hacking. They are great to learn and understand different types of attacks, injections, and security misconfigurations. I would recommend digging into this once you have the theoretical basis about these concepts. I have to mention a few tools I am sure you\u0026rsquo;d end up using:\nNmap: This is probably the most famous tool in hacking, allowing you to gather information about ports and services running in a machine. Burpsuite: A proxy tool widely used in web application security testing. It basically allows you to intercept and modify web requests, which can be used to perform several types of attacks. Metasploit: The most used pentesting framework. Contains a large amount of scripts and exploits ready to run. Another crucial step here is to set up your virtual lab environment to test vulnerable applications. To achieve this goal, there are some Linux distributions like Kali, Parrot or BlackArch, but that\u0026rsquo;s a topic for another post.\nFinal thoughs To sum up, this would be my personal roadmap:\nLearn the fundamentals, specially Linux and networking. Install some Linux in a virtual machine, play with it, get comfortable with the terminal. You can start with bandit wargames in OverTheWire. Complete every level and make sure to understand everything as clear as possible. Move to guided boxes on HackTheBox. I recommend you joining their Discord, ask questions, community is great there! Take notes, repeat, learn, improve your skills. Maybe use your own lab environment, create your own vulnerable apps. Hacking is a mixing of curiosity, study and practice. Being passionate and motivated about it is really helpful and will definitely speed up the process. The path is long and really challenging, so keep it going!\n\u0026ldquo;Yes, I am a criminal. My crime is that of curiosity.\u0026rdquo; — The Mentor (Loyd Blankenship) at The Hacker Manifesto\n","permalink":"http://localhost:1313/posts/starting-point/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIf you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\u003c/p\u003e","title":"Starting Point"},{"content":"Introduction In this post series we are going to solve every level from bandit in OverTheWire This guide pretends to be a writeup containing the solutions of the level, designed for beginners.\nTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing WSL, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\nEvery section will contain the solution as well as some tips for people who is absolutely beginner.\nTips First of all, some tips:\nDo not use this as first resource to solve the levels. Try on your own, make mistakes and learn from them. Only check the solution as last resource or if you are completely new and you have absolutely no idea about what to do next. Take notes from your learning. Write up commands, tips and everything which can be useful in the future. Make sure to understand everything. Is a good idea to note the passwords for every level. If you want to continue letter, you can simply log in in the desired level. It is annoying to repeat everything! Follow the tips and information provided at OverTheWire website. Levels Here is my solution for every level:\nBandit0 Bandit1 Bandit2 Bandit3 Bandit4 Bandit5 Bandit6 Bandit7 ","permalink":"http://localhost:1313/posts/otw/bandit/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIn this post series we are going to solve every level from bandit in \u003ca href=\"https://overthewire.org/wargames/bandit/\"\u003e\u003cem\u003eOverTheWire\u003c/em\u003e\u003c/a\u003e\nThis guide pretends to be a writeup containing the solutions of the level, designed for beginners.\u003c/p\u003e\n\u003cp\u003eTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing \u003ca href=\"https://learn.microsoft.com/en-us/windows/wsl/install\"\u003eWSL\u003c/a\u003e, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\u003c/p\u003e","title":"Bandit"},{"content":"Level description The goal of this level is for you to log into the game using SSH. The host to which you need to connect is bandit.labs.overthewire.org, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\nTips for beginners Read a bit about what SSH is. Research about what a port is. Solution This is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go here.\nAt Linux, we can use ssh client to connect to the server. It should be installed by default on your system. If not, please first research about how to install. Once you have the SSH client installed, you can log in into the first level as follows:\nssh bandit0@bandit.labs.overthewire.org -p 2220 Syntax is simple: ssh \u0026lt;username\u0026gt;@\u0026lt;hostname\u0026gt; -p \u0026lt;port\u0026gt;. Usually SSH runs on port 22 by default, but they changed to port 2220 so we must specify it in the command.\nOnce you try to log in, you will see something like this: NB: If it\u0026rsquo;s the first time you try to log in, you will be asked about the authenticity of the host. Just type yes.\nType the password bandit0 and press enter. Now you are inside bandit server, ready to begin with bandit1!\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit0/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe goal of this level is for you to log into the game using SSH. The host to which you need to connect is \u003cstrong\u003ebandit.labs.overthewire.org\u003c/strong\u003e, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eRead a bit about what SSH is.\u003c/li\u003e\n\u003cli\u003eResearch about what a port is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go \u003ca href=\"https://en.wikipedia.org/wiki/Secure_Shell\"\u003ehere\u003c/a\u003e.\u003c/p\u003e","title":"Bandit0"},{"content":"Level description The password for the next level is stored in a file called readme located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\nTips for beginners Learn about home directory in Linux. Learn to use cat and ls commands. Solution First step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\nls This shows in terminal the files at the current directory. There you will see the readme file.\nNow we can to check the contents, so let\u0026rsquo;s use cat:\ncat readme To read a file, we use cat \u0026lt;filename\u0026gt;.\nNB: Not every file is human readable in Linux. We deep more about this in later levels.\nThe content of the readme file reveals the password for bandit2 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit1/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u003cstrong\u003ereadme\u003c/strong\u003e located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn about home directory in Linux.\u003c/li\u003e\n\u003cli\u003eLearn to use \u003ccode\u003ecat\u003c/code\u003e and \u003ccode\u003els\u003c/code\u003e commands.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eFirst step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\u003c/p\u003e","title":"Bandit1"},{"content":"Level description The password for the next level is stored in a file called - located in the home directory\nTips for beginners Try to understand why previous solution is not working as you expect. Solution You may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our cat command: The terminal is waiting for something else. This happens due to character - is used to pass arguments to our commands, and the linux shell is interpreting that. To prevent that, we could use:\ncat ./- NB: Dot . is used to refer current directory. The slash / is used at the end of directory name.\nWe get the password for bandit3 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit2/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called - located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eTry to understand why previous solution is not working as you expect.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eYou may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our \u003ccode\u003ecat\u003c/code\u003e command:\n\u003cimg alt=\"bandit2\" loading=\"lazy\" src=\"/images/otw/bandit/bandit2/0.png\"\u003e\u003c/p\u003e\n\u003cp\u003eThe terminal is \u003cem\u003ewaiting\u003c/em\u003e for something else. This happens due to character \u003ccode\u003e-\u003c/code\u003e is used to pass arguments to our commands, and the linux shell is interpreting that.\nTo prevent that, we could use:\u003c/p\u003e","title":"Bandit2"},{"content":"Level description The password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\nTips for beginners Think about how to escape the whitespaces. Solution After login in the machine as bandit3, we can see the filename \u0026ndash;spaces in this filename\u0026ndash;.\nNow we have 2 problems:\nSame as previous level, filename starts with --, so it will be interpreted as an argument. Address this problem using ./. Filename contains whitespaces. This is an issue, as bash interpretes whitespaces to separate commands. To solve the second problem, we must escape the whitespace character in some way. Here is the solution:\ncat ./--spaces\\ in\\ this\\ filename-- NB: Little trick, you can start writting filename and press Tab to autocomplete the name. The \\ is going to be inserted automatically.\nJust using the \\ we can escape the whitespace.\nNow we can continue with the bandit4 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit3/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eThink about how to \u003cem\u003eescape\u003c/em\u003e the whitespaces.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAfter login in the machine as bandit3, we can see the filename \u003cem\u003e\u0026ndash;spaces in this filename\u0026ndash;\u003c/em\u003e.\u003c/p\u003e\n\u003cp\u003eNow we have 2 problems:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eSame as previous level, filename starts with \u003ccode\u003e--\u003c/code\u003e, so it will be interpreted as an argument. Address this problem using \u003ccode\u003e./\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003eFilename contains \u003cstrong\u003ewhitespaces\u003c/strong\u003e. This is an issue, as bash interpretes whitespaces to separate commands.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eTo solve the second problem, we must escape the whitespace character in some way. Here is the solution:\u003c/p\u003e","title":"Bandit3"},{"content":"Level description The password for the next level is stored in a hidden file in the inhere directory.\nTips for beginners Learn how to navigate directories in Linux. First understand what a hidden file is. Solution Listing directory files inside bandit4\u0026rsquo;s home directory, show directory inhere.\nNB: How to distinguish files and directories in Linux? Use ls -l and see the difference.\nWe have 2 options now:\nMove to inhere directory and check contens again. Check contents directly. Moving to another directory can be done using cd \u0026lt;dirName\u0026gt;. If you prefer to check directory contents directly, use ls \u0026lt;dirName\u0026gt;.\nAfter checking inhere contents via ls, we see nothing. The reason is the file is a hidden file. A hidden file in Linux is everyfile whose name starts with dot .. Hidden files are not shown by default with ls command, so we must add a special flag -a to list all files: NB: Both flags -l and -a cna be combined into a single flag -al, which is shorter to type.\nAs you can see, filename is \u0026hellip;Hidding-From-You starting with three dots. Reading file contents should be easy at this point!\nNext level is bandit5.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit4/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a hidden file in the inhere directory.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to navigate directories in Linux.\u003c/li\u003e\n\u003cli\u003eFirst understand what a hidden file is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eListing directory files inside bandit4\u0026rsquo;s home directory, show directory \u003cstrong\u003einhere\u003c/strong\u003e.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e How to distinguish files and directories in Linux? Use \u003ccode\u003els -l\u003c/code\u003e and see the difference.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eWe have 2 options now:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eMove to inhere directory and check contens again.\u003c/li\u003e\n\u003cli\u003eCheck contents directly.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eMoving to another directory can be done using \u003ccode\u003ecd \u0026lt;dirName\u0026gt;\u003c/code\u003e. If you prefer to check directory contents directly, use \u003ccode\u003els \u0026lt;dirName\u0026gt;\u003c/code\u003e.\u003c/p\u003e","title":"Bandit4"},{"content":"Level description The password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\nTips for beginners What means human-readable file? Is there any way to check filetype at Linux?. Solution Checking inhere\u0026rsquo;s contents shows some files names \u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII here\nSo now, our goal is checking if file content of every file in the folder is ASCII or not. file \u0026lt;filename\u0026gt; does the job. Note the use of *. That called a wildcard regular expression, we\u0026rsquo;ll deep into it in later levels. An easy approach could be checking every file separately:\nfile ./--file00 file ./--file01 ... file ./--file09 But that\u0026rsquo;s not funny, imagine we have 100 files to check. All the files are in the same directory, so we can use cat ./* where ./* matches every filename in the directory, applying file to every file.\nNB: Another approach is to use find with certaing flags. Try to do in different ways, don\u0026rsquo;t stick to my solution.\nThe file \u0026ndash;file00 content is not readable, so get password from \u0026ndash;file07 and continue with bandit6.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit5/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eWhat means human-readable file?\u003c/li\u003e\n\u003cli\u003eIs there any way to check filetype at Linux?.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eChecking inhere\u0026rsquo;s contents shows some files names \u003cstrong\u003e\u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09\u003c/strong\u003e. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII \u003ca href=\"https://en.wikipedia.org/wiki/ASCII\"\u003ehere\u003c/a\u003e\u003c/p\u003e","title":"Bandit5"},{"content":"Level description The password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\nhuman-readable 1033 bytes in size not executable Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution The purpose of the level is showing us how to find for files. Listing contents of inhere, we can see some folders, containing a lot of files inside: NB: Adding -R to ls shows recursively the content of every folder inside the directory listed.\nSo this time, checking every file is not an option. We need to find a file with some properties, specific size, not excutable and human-readable. Let\u0026rsquo;s explain the command we\u0026rsquo;re using:\nfind inhere/ -size 1033c ! -executable First, we specify the directory, in this case inhere. The option -size 1033c returns files of 1033 bytes. Then, with -executable we would get executable files, but we want not executable files, that\u0026rsquo;s why we are adding ! before.\nNB: By default, the -size option takes as argument the number of blocks. For example, -size 2 means 2 blocks of 512 bytes, so its 1024. The c is used to specify exact bytes. Don\u0026rsquo;t ask me why it\u0026rsquo;s c and not b 😅.\nThe property of human-readability is not implemented in find. This is not an issue, previous command returns a single file and it is human readable (we could confirm using file): Extra tip: try to use the following:\nfind inhere/ -size 1033c ! -executable | file You get the same result! The pipe | is a great tool to execute 2+ commands in one line.\nGet your password and continue with bandit7.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit6/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ehuman-readable\u003c/li\u003e\n\u003cli\u003e1033 bytes in size\u003c/li\u003e\n\u003cli\u003enot executable\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThe purpose of the level is showing us how to find for files. Listing contents of \u003cstrong\u003einhere\u003c/strong\u003e, we can see some folders, containing a lot of files inside:\n\u003cimg alt=\"bandit6_0\" loading=\"lazy\" src=\"/images/otw/bandit/bandit6/0.png\"\u003e\u003c/p\u003e","title":"Bandit6"},{"content":"Level description The password for the next level is stored somewhere on the server and has all of the following properties:\nowned by user bandit7 owned by group bandit6 33 bytes in size Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution This is very straightforward to do after completing previous level. Now we need to identify a file owned by user bandit7 and group bandi6. Furthermore, the file is somewhere on the server, which means we have to find in the root directory /.\nfind / -user bandit7 -group bandit6 -size 33c 2\u0026gt;/dev/null NB: I added that strange 2\u0026gt;/dev/null to filter error output. The reason why it works like that is more technical, for now just save this a fast way to filter errors in terminal. We get some errors because looking for files in the whole server may return some unaccesible files, as we don\u0026rsquo;t have root user permissions. We will study Linux permissions in later levels.\nWe should get a single file, containing password for bandit8.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit7/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored somewhere on the server and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eowned by user bandit7\u003c/li\u003e\n\u003cli\u003eowned by group bandit6\u003c/li\u003e\n\u003cli\u003e33 bytes in size\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is very straightforward to do after completing previous level. Now we need to identify a file owned by user bandit7 and group bandi6. Furthermore, the file is \u003cstrong\u003esomewhere on the server\u003c/strong\u003e, which means we have to find in the root directory \u003ccode\u003e/\u003c/code\u003e.\u003c/p\u003e","title":"Bandit7"},{"content":"Level description The password for the next level is stored in the file data.txt next to the word millionth.\nTips for beginners Learn how to filter file contents. Solution At previous levels, we discovered how to find for files. Now it\u0026rsquo;s time to find for content inside a file. grep command is going to help with that task.\nNB: Of course I don\u0026rsquo;t want to spoil you the password!\nNotice how this can achieved in different ways.\nUsing grep \u0026lt;keyword\u0026gt; \u0026lt;filename\u0026gt;. Using the pipe | to execute grep over the result of cat command. Take you favorite path to solve the level, and continue with bandit9.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit8/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the file \u003cstrong\u003edata.txt\u003c/strong\u003e next to the word \u003cstrong\u003emillionth\u003c/strong\u003e.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to filter file contents.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAt previous levels, we discovered how to find for files. Now it\u0026rsquo;s time to find for content inside a file. \u003ccode\u003egrep\u003c/code\u003e command is going to help with that task.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"bandit8\" loading=\"lazy\" src=\"/images/otw/bandit/bandit8/0.png\"\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e Of course I don\u0026rsquo;t want to spoil you the password!\u003c/p\u003e","title":"Bandit8"},{"content":"Level description The password for the next level is stored in the file data.txt and is the only line of text that occurs only once.\nTips for beginners First, apply sort to file content. Solution This level is a bit tricky. First, examine the file contents. Using head shows the 10 first lines of a file:\nNB: If you want to show more lines: head -20 or the number of your choice.\nThere are tons of different passwords. The correct one is the only line of text that occurs only once. Try to research how to do on your own. You maybe find uniq. This command has a very interesting flag, -u, used to show only the uniq lines. Let\u0026rsquo;s try with that:\nFor some reason, is not working. The trick here is to sort the file contents before applying uniq. This can be achieved using sort, so the final command looks like this:\ncat data.txt | sort | uniq -u NB: You need to sort lines first because uniq only detects consecutive repetitions. First time I solved this it took a while 😅.\nAfter getting the password, we can continue with bandit10.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit9-copy/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the file \u003cstrong\u003edata.txt\u003c/strong\u003e and is the only line of text that occurs only once.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst, apply \u003ccode\u003esort\u003c/code\u003e to file content.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis level is a bit tricky. First, examine the file contents. Using \u003ccode\u003ehead\u003c/code\u003e shows the 10 first lines of a file:\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"bandit9_0\" loading=\"lazy\" src=\"/images/otw/bandit/bandit9/0.png\"\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e If you want to show more lines: \u003ccode\u003ehead -20\u003c/code\u003e or the number of your choice.\u003c/p\u003e","title":"Bandit9"},{"content":"Level description The password for the next level is stored in the file data.txt and is the only line of text that occurs only once.\nTips for beginners First, apply sort to file content. Solution This level is a bit tricky. First, examine the file contents. Using head shows the 10 first lines of a file:\nNB: If you want to show more lines: head -20 or the number of your choice.\nThere are tons of different passwords. The correct one is the only line of text that occurs only once. Try to research how to do on your own. You maybe find uniq. This command has a very interesting flag, -u, used to show only the uniq lines. Let\u0026rsquo;s try with that:\nFor some reason, is not working. The trick here is to sort the file contents before applying uniq. This can be achieved using sort, so the final command looks like this:\ncat data.txt | sort | uniq -u NB: You need to sort lines first because uniq only detects consecutive repetitions. First time I solved this it took a while 😅.\nAfter getting the password, we can continue with bandit10.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit9/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the file \u003cstrong\u003edata.txt\u003c/strong\u003e and is the only line of text that occurs only once.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst, apply \u003ccode\u003esort\u003c/code\u003e to file content.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis level is a bit tricky. First, examine the file contents. Using \u003ccode\u003ehead\u003c/code\u003e shows the 10 first lines of a file:\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"bandit9_0\" loading=\"lazy\" src=\"/images/otw/bandit/bandit9/0.png\"\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e If you want to show more lines: \u003ccode\u003ehead -20\u003c/code\u003e or the number of your choice.\u003c/p\u003e","title":"Bandit9"},{"content":"👨‍💻 whoami Hey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\nWhat is this❓​ This blog is basically my thoughts on several hacking topics. Here you’ll see:\nWriteups from CTF challenges, from platforms like HackTheBox or OverTheWire.\nWalkthroughs and notes on pentesting techniques I’m learning or testing.\nSome posts on cryptography — because math can be fun (sometimes).\nRandom topics that freaks like me may (just may) find interesting.\nThe idea is simple: share what I learn, document my journey, and maybe help others who are also diving into the exciting world of ethical hacking.\n📫 Contact Want to say hi, share ideas, or just geek out about hacking? Reach me here:\n📧 Email: mrb0b1073@proton.me 💻​ GitHub: mrb0b173 🟩​ HackTheBox: mrb0b1073 ","permalink":"http://localhost:1313/about/","summary":"\u003ch2 id=\"-whoami\"\u003e👨‍💻 whoami\u003c/h2\u003e\n\u003cp\u003eHey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\u003c/p\u003e\n\u003chr\u003e\n\u003ch2 id=\"what-is-this\"\u003eWhat is this❓​\u003c/h2\u003e\n\u003cp\u003eThis blog is basically my thoughts on several hacking topics. Here you’ll see:\u003c/p\u003e","title":"About"},{"content":"Hey! 👋 I\u0026rsquo;m mrb0b1073 and this is my first post.\nWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\nExcited to start this adventure!\n","permalink":"http://localhost:1313/posts/hello-world/","summary":"\u003cp\u003eHey! 👋 I\u0026rsquo;m \u003cstrong\u003emrb0b1073\u003c/strong\u003e and this is my first post.\u003c/p\u003e\n\u003cp\u003eWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\u003cbr\u003e\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\u003c/p\u003e\n\u003cp\u003eExcited to start this adventure!\u003c/p\u003e","title":"Hello World"},{"content":"Introduction If you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\nIn cybersecurity there are broadly two complementary roles: Blue Team and Red Team. Blue Teams focus on defense, monitoring, incident response, hardening systems and keeping services secure, while Red Teams simulate attackers to find weaknesses and prove what an adversary could do. Ethical hacking aligns closely with Red Team operations, but cybersecurity is highly transversal across IT. There are many specialities or areas, such as cloud security, appsec, pentesting, forensics, governance, risk management, malware analysis, etc. Every topic could deserve its own post, so let\u0026rsquo;s keep it simple and focus on ethical hacking.\nHacker philosophy Let\u0026rsquo;s start with the idea of what is exactly a hacker. A hacker is someone who explores systems to understand how they work, finds creative ways to make or fix things, and solves technical problems. Historically the word describes curiosity, craft, and a drive to improve systems — not criminality. It is important to make the distinction between hacker and cracker, also called cybercriminal. A hacker explores, builds, discloses responsibly and works to improve security. They work in authorized environments or labs. On the other hand, a cracker breaks into systems for theft, vandalism or other illicit gain.\nHere you can find the most popularized ideas often summarized as the hacker ethic:\nCuriosity first: Learn by exploring and tinkering. Freedom of information: All knowledge should be shared to help progress. This fits properly with the idea of open source. Mistrust of needless authority: Centralized control sometimes blocks innovation. It is always good to question anything, specially common assumptions. Meritocracy: Skills, craft and results matter more than titles. Craftsmanship \u0026amp; elegance: Technical beauty matters. Build clean, clever and efficient solutions. Responsability \u0026amp; ethics: Use your skills to build, fix, educate and defend, not to harm. Core fundamentals Assuming you want to init yourself in hacking, you should first build competence across three basic pillars.\nOperating Systems You should learn as much as possible about Linux and Windows. Specially Linux, all the tools you will be using are meant to be used in a Linux environment. Skill with shell is required, learn basic commands and how to interact with the OS using the terminal. Research about processes, file permissions, package management and logs. A large proportion of web servers around the world run on Linux, although Windows is also widely used. Windows knowledge is really valuable too, considering active directory is strongly used in corporate environments.\nNetworking You have to understand how computers communicate each other. Understand basic networking concepts, IP adresses, subnetting, proxies, find out how internet works. Study some protocols such as TCP/IP, HTTP, DNS or SSH. This could sound confusing for beginners, but this step is not optional! Study different client/server models and how services expose attack surfaces.\nProgramming \u0026amp; scripting Is this completely required? Maybe not for complete beginners. Does it help? Absolutely yes. Understanding how web apps or any type of application works makes things much easier. You can imagine different entry points to exploit if you understand how systems are designed. Also writing scripts in bash or python makes you more productive through automation.\nEthical Hacking foundations Once you feel confident with these 3 pillars, you can go to the next step. You can study about different topics and areas. For example, binary exploiting, web pentesting, mobile pentesting, wireless hacking, etc. You should start picking a focus, in this post we focus on web pentesting, as it is beginner friendly. Also web applications are the bread and butter in companies nowadays.\nKey concepts to study:\nCIA Triad: CIA refers to Confidentiality, Integrity and Availability. These three concepts are key in information security, and describe properties we want to ensure in our systems and information. Web Security basics, OWASP: Study the OWASP Top 10, which summarizes most frequent web security risks. Authentication and session control: Understand the concepts of Authentication and Authorization, research about how session is handled in web apps, cookies, JWT tokens, etc. Input validation \u0026amp; injection attacks: Learn about SQL Injection, Cross-Site Scripting (XSS), Code Injection, SSTI, and every injection type. Secure development lifecycle: Find out how to implement security controls in code. This can be more related to Blue Team, but as Red Teamer it is important to understand. Firewall evasion: What a firewall is and some techniques/methods to bypass. Some cryptography: Understand what a chiper and a hash are, how information is encrypted to prevent access from 3rd parties. Focusing on web, read about TLS protocol. There are many more topics you can research and learn, but this could be a nice starting point.\nTools and platforms to learn Now you have an idea of what to study, let\u0026rsquo;s see how to start in practical terms.\nSome platforms I personally recommend:\nOverTheWire: Here you can find some CTFs (Capture The Flag) which are fun to play and also really instructive. Bandit games are a must for complete beginners, as you will explore some linux and bash concepts which are basic to continue. The games are leveled by difficulty, in their web you can get all the information about how to play, only a terminal and SSH is required. This helps building your foundation in Linux OS. HackTheBox: Nº 1 platform in cybersecurity. Has a lot of resources to learn all this core fundamentals, and also red team / blue team security topics. It is focused on labs where you can test your skills hacking different boxes but if you really want to learn it is worth to invest time and money in the academy. I have to say the level here is high, specially if you try to hack machines on your own without using some guide or writeup. TryHackMe: More beginner friendly than hackthebox, it provides a lot of guided learning resources. PortSwigger Labs: Practical labs about specific topics, focused on web hacking. They are great to learn and understand different types of attacks, injections, and security misconfigurations. I would recommend digging into this once you have the theoretical basis about these concepts. I have to mention a few tools I am sure you\u0026rsquo;d end up using:\nNmap: This is probably the most famous tool in hacking, allowing you to gather information about ports and services running in a machine. Burpsuite: A proxy tool widely used in web application security testing. It basically allows you to intercept and modify web requests, which can be used to perform several types of attacks. Metasploit: The most used pentesting framework. Contains a large amount of scripts and exploits ready to run. Another crucial step here is to set up your virtual lab environment to test vulnerable applications. To achieve this goal, there are some Linux distributions like Kali, Parrot or BlackArch, but that\u0026rsquo;s a topic for another post.\nFinal thoughs To sum up, this would be my personal roadmap:\nLearn the fundamentals, specially Linux and networking. Install some Linux in a virtual machine, play with it, get comfortable with the terminal. You can start with bandit wargames in OverTheWire. Complete every level and make sure to understand everything as clear as possible. Move to guided boxes on HackTheBox. I recommend you joining their Discord, ask questions, community is great there! Take notes, repeat, learn, improve your skills. Maybe use your own lab environment, create your own vulnerable apps. Hacking is a mixing of curiosity, study and practice. Being passionate and motivated about it is really helpful and will definitely speed up the process. The path is long and really challenging, so keep it going!\n\u0026ldquo;Yes, I am a criminal. My crime is that of curiosity.\u0026rdquo; — The Mentor (Loyd Blankenship) at The Hacker Manifesto\n","permalink":"http://localhost:1313/posts/starting-point/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIf you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\u003c/p\u003e","title":"Starting Point"},{"content":"Introduction In this post series we are going to solve every level from bandit in OverTheWire This guide pretends to be a writeup containing the solutions of the level, designed for beginners.\nTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing WSL, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\nEvery section will contain the solution as well as some tips for people who is absolutely beginner.\nTips First of all, some tips:\nDo not use this as first resource to solve the levels. Try on your own, make mistakes and learn from them. Only check the solution as last resource or if you are completely new and you have absolutely no idea about what to do next. Take notes from your learning. Write up commands, tips and everything which can be useful in the future. Make sure to understand everything. Is a good idea to note the passwords for every level. If you want to continue letter, you can simply log in in the desired level. It is annoying to repeat everything! Follow the tips and information provided at OverTheWire website. Levels Here is my solution for every level:\nBandit0 Bandit1 Bandit2 Bandit3 Bandit4 Bandit5 Bandit6 Bandit7 ","permalink":"http://localhost:1313/posts/otw/bandit/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIn this post series we are going to solve every level from bandit in \u003ca href=\"https://overthewire.org/wargames/bandit/\"\u003e\u003cem\u003eOverTheWire\u003c/em\u003e\u003c/a\u003e\nThis guide pretends to be a writeup containing the solutions of the level, designed for beginners.\u003c/p\u003e\n\u003cp\u003eTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing \u003ca href=\"https://learn.microsoft.com/en-us/windows/wsl/install\"\u003eWSL\u003c/a\u003e, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\u003c/p\u003e","title":"Bandit"},{"content":"Level description The goal of this level is for you to log into the game using SSH. The host to which you need to connect is bandit.labs.overthewire.org, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\nTips for beginners Read a bit about what SSH is. Research about what a port is. Solution This is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go here.\nAt Linux, we can use ssh client to connect to the server. It should be installed by default on your system. If not, please first research about how to install. Once you have the SSH client installed, you can log in into the first level as follows:\nssh bandit0@bandit.labs.overthewire.org -p 2220 Syntax is simple: ssh \u0026lt;username\u0026gt;@\u0026lt;hostname\u0026gt; -p \u0026lt;port\u0026gt;. Usually SSH runs on port 22 by default, but they changed to port 2220 so we must specify it in the command.\nOnce you try to log in, you will see something like this: NB: If it\u0026rsquo;s the first time you try to log in, you will be asked about the authenticity of the host. Just type yes.\nType the password bandit0 and press enter. Now you are inside bandit server, ready to begin with bandit1!\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit0/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe goal of this level is for you to log into the game using SSH. The host to which you need to connect is \u003cstrong\u003ebandit.labs.overthewire.org\u003c/strong\u003e, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eRead a bit about what SSH is.\u003c/li\u003e\n\u003cli\u003eResearch about what a port is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go \u003ca href=\"https://en.wikipedia.org/wiki/Secure_Shell\"\u003ehere\u003c/a\u003e.\u003c/p\u003e","title":"Bandit0"},{"content":"Level description The password for the next level is stored in a file called readme located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\nTips for beginners Learn about home directory in Linux. Learn to use cat and ls commands. Solution First step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\nls This shows in terminal the files at the current directory. There you will see the readme file.\nNow we can to check the contents, so let\u0026rsquo;s use cat:\ncat readme To read a file, we use cat \u0026lt;filename\u0026gt;.\nNB: Not every file is human readable in Linux. We deep more about this in later levels.\nThe content of the readme file reveals the password for bandit2 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit1/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u003cstrong\u003ereadme\u003c/strong\u003e located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn about home directory in Linux.\u003c/li\u003e\n\u003cli\u003eLearn to use \u003ccode\u003ecat\u003c/code\u003e and \u003ccode\u003els\u003c/code\u003e commands.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eFirst step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\u003c/p\u003e","title":"Bandit1"},{"content":"Level description The password for the next level is stored in a file called - located in the home directory\nTips for beginners Try to understand why previous solution is not working as you expect. Solution You may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our cat command: The terminal is waiting for something else. This happens due to character - is used to pass arguments to our commands, and the linux shell is interpreting that. To prevent that, we could use:\ncat ./- NB: Dot . is used to refer current directory. The slash / is used at the end of directory name.\nWe get the password for bandit3 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit2/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called - located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eTry to understand why previous solution is not working as you expect.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eYou may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our \u003ccode\u003ecat\u003c/code\u003e command:\n\u003cimg alt=\"bandit2\" loading=\"lazy\" src=\"/images/otw/bandit/bandit2/0.png\"\u003e\u003c/p\u003e\n\u003cp\u003eThe terminal is \u003cem\u003ewaiting\u003c/em\u003e for something else. This happens due to character \u003ccode\u003e-\u003c/code\u003e is used to pass arguments to our commands, and the linux shell is interpreting that.\nTo prevent that, we could use:\u003c/p\u003e","title":"Bandit2"},{"content":"Level description The password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\nTips for beginners Think about how to escape the whitespaces. Solution After login in the machine as bandit3, we can see the filename \u0026ndash;spaces in this filename\u0026ndash;.\nNow we have 2 problems:\nSame as previous level, filename starts with --, so it will be interpreted as an argument. Address this problem using ./. Filename contains whitespaces. This is an issue, as bash interpretes whitespaces to separate commands. To solve the second problem, we must escape the whitespace character in some way. Here is the solution:\ncat ./--spaces\\ in\\ this\\ filename-- NB: Little trick, you can start writting filename and press Tab to autocomplete the name. The \\ is going to be inserted automatically.\nJust using the \\ we can escape the whitespace.\nNow we can continue with the bandit4 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit3/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eThink about how to \u003cem\u003eescape\u003c/em\u003e the whitespaces.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAfter login in the machine as bandit3, we can see the filename \u003cem\u003e\u0026ndash;spaces in this filename\u0026ndash;\u003c/em\u003e.\u003c/p\u003e\n\u003cp\u003eNow we have 2 problems:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eSame as previous level, filename starts with \u003ccode\u003e--\u003c/code\u003e, so it will be interpreted as an argument. Address this problem using \u003ccode\u003e./\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003eFilename contains \u003cstrong\u003ewhitespaces\u003c/strong\u003e. This is an issue, as bash interpretes whitespaces to separate commands.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eTo solve the second problem, we must escape the whitespace character in some way. Here is the solution:\u003c/p\u003e","title":"Bandit3"},{"content":"Level description The password for the next level is stored in a hidden file in the inhere directory.\nTips for beginners Learn how to navigate directories in Linux. First understand what a hidden file is. Solution Listing directory files inside bandit4\u0026rsquo;s home directory, show directory inhere.\nNB: How to distinguish files and directories in Linux? Use ls -l and see the difference.\nWe have 2 options now:\nMove to inhere directory and check contens again. Check contents directly. Moving to another directory can be done using cd \u0026lt;dirName\u0026gt;. If you prefer to check directory contents directly, use ls \u0026lt;dirName\u0026gt;.\nAfter checking inhere contents via ls, we see nothing. The reason is the file is a hidden file. A hidden file in Linux is everyfile whose name starts with dot .. Hidden files are not shown by default with ls command, so we must add a special flag -a to list all files: NB: Both flags -l and -a cna be combined into a single flag -al, which is shorter to type.\nAs you can see, filename is \u0026hellip;Hidding-From-You starting with three dots. Reading file contents should be easy at this point!\nNext level is bandit5.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit4/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a hidden file in the inhere directory.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to navigate directories in Linux.\u003c/li\u003e\n\u003cli\u003eFirst understand what a hidden file is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eListing directory files inside bandit4\u0026rsquo;s home directory, show directory \u003cstrong\u003einhere\u003c/strong\u003e.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e How to distinguish files and directories in Linux? Use \u003ccode\u003els -l\u003c/code\u003e and see the difference.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eWe have 2 options now:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eMove to inhere directory and check contens again.\u003c/li\u003e\n\u003cli\u003eCheck contents directly.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eMoving to another directory can be done using \u003ccode\u003ecd \u0026lt;dirName\u0026gt;\u003c/code\u003e. If you prefer to check directory contents directly, use \u003ccode\u003els \u0026lt;dirName\u0026gt;\u003c/code\u003e.\u003c/p\u003e","title":"Bandit4"},{"content":"Level description The password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\nTips for beginners What means human-readable file? Is there any way to check filetype at Linux?. Solution Checking inhere\u0026rsquo;s contents shows some files names \u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII here\nSo now, our goal is checking if file content of every file in the folder is ASCII or not. file \u0026lt;filename\u0026gt; does the job. Note the use of *. That called a wildcard regular expression, we\u0026rsquo;ll deep into it in later levels. An easy approach could be checking every file separately:\nfile ./--file00 file ./--file01 ... file ./--file09 But that\u0026rsquo;s not funny, imagine we have 100 files to check. All the files are in the same directory, so we can use cat ./* where ./* matches every filename in the directory, applying file to every file.\nNB: Another approach is to use find with certaing flags. Try to do in different ways, don\u0026rsquo;t stick to my solution.\nThe file \u0026ndash;file00 content is not readable, so get password from \u0026ndash;file07 and continue with bandit6.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit5/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eWhat means human-readable file?\u003c/li\u003e\n\u003cli\u003eIs there any way to check filetype at Linux?.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eChecking inhere\u0026rsquo;s contents shows some files names \u003cstrong\u003e\u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09\u003c/strong\u003e. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII \u003ca href=\"https://en.wikipedia.org/wiki/ASCII\"\u003ehere\u003c/a\u003e\u003c/p\u003e","title":"Bandit5"},{"content":"Level description The password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\nhuman-readable 1033 bytes in size not executable Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution The purpose of the level is showing us how to find for files. Listing contents of inhere, we can see some folders, containing a lot of files inside: NB: Adding -R to ls shows recursively the content of every folder inside the directory listed.\nSo this time, checking every file is not an option. We need to find a file with some properties, specific size, not excutable and human-readable. Let\u0026rsquo;s explain the command we\u0026rsquo;re using:\nfind inhere/ -size 1033c ! -executable First, we specify the directory, in this case inhere. The option -size 1033c returns files of 1033 bytes. Then, with -executable we would get executable files, but we want not executable files, that\u0026rsquo;s why we are adding ! before.\nNB: By default, the -size option takes as argument the number of blocks. For example, -size 2 means 2 blocks of 512 bytes, so its 1024. The c is used to specify exact bytes. Don\u0026rsquo;t ask me why it\u0026rsquo;s c and not b 😅.\nThe property of human-readability is not implemented in find. This is not an issue, previous command returns a single file and it is human readable (we could confirm using file): Extra tip: try to use the following:\nfind inhere/ -size 1033c ! -executable | file You get the same result! The pipe | is a great tool to execute 2+ commands in one line.\nGet your password and continue with bandit7.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit6/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ehuman-readable\u003c/li\u003e\n\u003cli\u003e1033 bytes in size\u003c/li\u003e\n\u003cli\u003enot executable\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThe purpose of the level is showing us how to find for files. Listing contents of \u003cstrong\u003einhere\u003c/strong\u003e, we can see some folders, containing a lot of files inside:\n\u003cimg alt=\"bandit6_0\" loading=\"lazy\" src=\"/images/otw/bandit/bandit6/0.png\"\u003e\u003c/p\u003e","title":"Bandit6"},{"content":"Level description The password for the next level is stored somewhere on the server and has all of the following properties:\nowned by user bandit7 owned by group bandit6 33 bytes in size Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution This is very straightforward to do after completing previous level. Now we need to identify a file owned by user bandit7 and group bandi6. Furthermore, the file is somewhere on the server, which means we have to find in the root directory /.\nfind / -user bandit7 -group bandit6 -size 33c 2\u0026gt;/dev/null NB: I added that strange 2\u0026gt;/dev/null to filter error output. The reason why it works like that is more technical, for now just save this a fast way to filter errors in terminal. We get some errors because looking for files in the whole server may return some unaccesible files, as we don\u0026rsquo;t have root user permissions. We will study Linux permissions in later levels.\nWe should get a single file, containing password for bandit8.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit7/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored somewhere on the server and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eowned by user bandit7\u003c/li\u003e\n\u003cli\u003eowned by group bandit6\u003c/li\u003e\n\u003cli\u003e33 bytes in size\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is very straightforward to do after completing previous level. Now we need to identify a file owned by user bandit7 and group bandi6. Furthermore, the file is \u003cstrong\u003esomewhere on the server\u003c/strong\u003e, which means we have to find in the root directory \u003ccode\u003e/\u003c/code\u003e.\u003c/p\u003e","title":"Bandit7"},{"content":"Level description The password for the next level is stored in the file data.txt next to the word millionth.\nTips for beginners Learn how to filter file contents. Solution At previous levels, we discovered how to find for files. Now it\u0026rsquo;s time to find for content inside a file. grep command is going to help with that task.\nNB: Of course I don\u0026rsquo;t want to spoil you the password!\nNotice how this can achieved in different ways.\nUsing grep \u0026lt;keyword\u0026gt; \u0026lt;filename\u0026gt;. Using the pipe | to execute grep over the result of cat command. Take you favorite path to solve the level, and continue with bandit9.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit8/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the file \u003cstrong\u003edata.txt\u003c/strong\u003e next to the word \u003cstrong\u003emillionth\u003c/strong\u003e.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to filter file contents.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAt previous levels, we discovered how to find for files. Now it\u0026rsquo;s time to find for content inside a file. \u003ccode\u003egrep\u003c/code\u003e command is going to help with that task.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"bandit8\" loading=\"lazy\" src=\"/images/otw/bandit/bandit8/0.png\"\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e Of course I don\u0026rsquo;t want to spoil you the password!\u003c/p\u003e","title":"Bandit8"},{"content":"Level description The password for the next level is stored in the file data.txt and is the only line of text that occurs only once.\nTips for beginners First, apply sort to file content. Solution This level is a bit tricky. First, examine the file contents. Using head shows the 10 first lines of a file:\nNB: If you want to show more lines: head -20 or the number of your choice.\nThere are tons of different passwords. The correct one is the only line of text that occurs only once. Try to research how to do on your own. You maybe find uniq. This command has a very interesting flag, -u, used to show only the uniq lines. Let\u0026rsquo;s try with that:\nFor some reason, is not working. The trick here is to sort the file contents before applying uniq. This can be achieved using sort, so the final command looks like this:\ncat data.txt | sort | uniq -u NB: You need to sort lines first because uniq only detects consecutive repetitions. First time I solved this it took a while 😅.\nAfter getting the password, we can continue with bandit10.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit10/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the file \u003cstrong\u003edata.txt\u003c/strong\u003e and is the only line of text that occurs only once.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst, apply \u003ccode\u003esort\u003c/code\u003e to file content.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis level is a bit tricky. First, examine the file contents. Using \u003ccode\u003ehead\u003c/code\u003e shows the 10 first lines of a file:\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"bandit9_0\" loading=\"lazy\" src=\"/images/otw/bandit/bandit9/0.png\"\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e If you want to show more lines: \u003ccode\u003ehead -20\u003c/code\u003e or the number of your choice.\u003c/p\u003e","title":"Bandit9"},{"content":"Level description The password for the next level is stored in the file data.txt and is the only line of text that occurs only once.\nTips for beginners First, apply sort to file content. Solution This level is a bit tricky. First, examine the file contents. Using head shows the 10 first lines of a file:\nNB: If you want to show more lines: head -20 or the number of your choice.\nThere are tons of different passwords. The correct one is the only line of text that occurs only once. Try to research how to do on your own. You maybe find uniq. This command has a very interesting flag, -u, used to show only the uniq lines. Let\u0026rsquo;s try with that:\nFor some reason, is not working. The trick here is to sort the file contents before applying uniq. This can be achieved using sort, so the final command looks like this:\ncat data.txt | sort | uniq -u NB: You need to sort lines first because uniq only detects consecutive repetitions. First time I solved this it took a while 😅.\nAfter getting the password, we can continue with bandit10.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit9/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the file \u003cstrong\u003edata.txt\u003c/strong\u003e and is the only line of text that occurs only once.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst, apply \u003ccode\u003esort\u003c/code\u003e to file content.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis level is a bit tricky. First, examine the file contents. Using \u003ccode\u003ehead\u003c/code\u003e shows the 10 first lines of a file:\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"bandit9_0\" loading=\"lazy\" src=\"/images/otw/bandit/bandit9/0.png\"\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e If you want to show more lines: \u003ccode\u003ehead -20\u003c/code\u003e or the number of your choice.\u003c/p\u003e","title":"Bandit9"},{"content":"👨‍💻 whoami Hey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\nWhat is this❓​ This blog is basically my thoughts on several hacking topics. Here you’ll see:\nWriteups from CTF challenges, from platforms like HackTheBox or OverTheWire.\nWalkthroughs and notes on pentesting techniques I’m learning or testing.\nSome posts on cryptography — because math can be fun (sometimes).\nRandom topics that freaks like me may (just may) find interesting.\nThe idea is simple: share what I learn, document my journey, and maybe help others who are also diving into the exciting world of ethical hacking.\n📫 Contact Want to say hi, share ideas, or just geek out about hacking? Reach me here:\n📧 Email: mrb0b1073@proton.me 💻​ GitHub: mrb0b173 🟩​ HackTheBox: mrb0b1073 ","permalink":"http://localhost:1313/about/","summary":"\u003ch2 id=\"-whoami\"\u003e👨‍💻 whoami\u003c/h2\u003e\n\u003cp\u003eHey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\u003c/p\u003e\n\u003chr\u003e\n\u003ch2 id=\"what-is-this\"\u003eWhat is this❓​\u003c/h2\u003e\n\u003cp\u003eThis blog is basically my thoughts on several hacking topics. Here you’ll see:\u003c/p\u003e","title":"About"},{"content":"Hey! 👋 I\u0026rsquo;m mrb0b1073 and this is my first post.\nWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\nExcited to start this adventure!\n","permalink":"http://localhost:1313/posts/hello-world/","summary":"\u003cp\u003eHey! 👋 I\u0026rsquo;m \u003cstrong\u003emrb0b1073\u003c/strong\u003e and this is my first post.\u003c/p\u003e\n\u003cp\u003eWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\u003cbr\u003e\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\u003c/p\u003e\n\u003cp\u003eExcited to start this adventure!\u003c/p\u003e","title":"Hello World"},{"content":"Introduction If you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\nIn cybersecurity there are broadly two complementary roles: Blue Team and Red Team. Blue Teams focus on defense, monitoring, incident response, hardening systems and keeping services secure, while Red Teams simulate attackers to find weaknesses and prove what an adversary could do. Ethical hacking aligns closely with Red Team operations, but cybersecurity is highly transversal across IT. There are many specialities or areas, such as cloud security, appsec, pentesting, forensics, governance, risk management, malware analysis, etc. Every topic could deserve its own post, so let\u0026rsquo;s keep it simple and focus on ethical hacking.\nHacker philosophy Let\u0026rsquo;s start with the idea of what is exactly a hacker. A hacker is someone who explores systems to understand how they work, finds creative ways to make or fix things, and solves technical problems. Historically the word describes curiosity, craft, and a drive to improve systems — not criminality. It is important to make the distinction between hacker and cracker, also called cybercriminal. A hacker explores, builds, discloses responsibly and works to improve security. They work in authorized environments or labs. On the other hand, a cracker breaks into systems for theft, vandalism or other illicit gain.\nHere you can find the most popularized ideas often summarized as the hacker ethic:\nCuriosity first: Learn by exploring and tinkering. Freedom of information: All knowledge should be shared to help progress. This fits properly with the idea of open source. Mistrust of needless authority: Centralized control sometimes blocks innovation. It is always good to question anything, specially common assumptions. Meritocracy: Skills, craft and results matter more than titles. Craftsmanship \u0026amp; elegance: Technical beauty matters. Build clean, clever and efficient solutions. Responsability \u0026amp; ethics: Use your skills to build, fix, educate and defend, not to harm. Core fundamentals Assuming you want to init yourself in hacking, you should first build competence across three basic pillars.\nOperating Systems You should learn as much as possible about Linux and Windows. Specially Linux, all the tools you will be using are meant to be used in a Linux environment. Skill with shell is required, learn basic commands and how to interact with the OS using the terminal. Research about processes, file permissions, package management and logs. A large proportion of web servers around the world run on Linux, although Windows is also widely used. Windows knowledge is really valuable too, considering active directory is strongly used in corporate environments.\nNetworking You have to understand how computers communicate each other. Understand basic networking concepts, IP adresses, subnetting, proxies, find out how internet works. Study some protocols such as TCP/IP, HTTP, DNS or SSH. This could sound confusing for beginners, but this step is not optional! Study different client/server models and how services expose attack surfaces.\nProgramming \u0026amp; scripting Is this completely required? Maybe not for complete beginners. Does it help? Absolutely yes. Understanding how web apps or any type of application works makes things much easier. You can imagine different entry points to exploit if you understand how systems are designed. Also writing scripts in bash or python makes you more productive through automation.\nEthical Hacking foundations Once you feel confident with these 3 pillars, you can go to the next step. You can study about different topics and areas. For example, binary exploiting, web pentesting, mobile pentesting, wireless hacking, etc. You should start picking a focus, in this post we focus on web pentesting, as it is beginner friendly. Also web applications are the bread and butter in companies nowadays.\nKey concepts to study:\nCIA Triad: CIA refers to Confidentiality, Integrity and Availability. These three concepts are key in information security, and describe properties we want to ensure in our systems and information. Web Security basics, OWASP: Study the OWASP Top 10, which summarizes most frequent web security risks. Authentication and session control: Understand the concepts of Authentication and Authorization, research about how session is handled in web apps, cookies, JWT tokens, etc. Input validation \u0026amp; injection attacks: Learn about SQL Injection, Cross-Site Scripting (XSS), Code Injection, SSTI, and every injection type. Secure development lifecycle: Find out how to implement security controls in code. This can be more related to Blue Team, but as Red Teamer it is important to understand. Firewall evasion: What a firewall is and some techniques/methods to bypass. Some cryptography: Understand what a chiper and a hash are, how information is encrypted to prevent access from 3rd parties. Focusing on web, read about TLS protocol. There are many more topics you can research and learn, but this could be a nice starting point.\nTools and platforms to learn Now you have an idea of what to study, let\u0026rsquo;s see how to start in practical terms.\nSome platforms I personally recommend:\nOverTheWire: Here you can find some CTFs (Capture The Flag) which are fun to play and also really instructive. Bandit games are a must for complete beginners, as you will explore some linux and bash concepts which are basic to continue. The games are leveled by difficulty, in their web you can get all the information about how to play, only a terminal and SSH is required. This helps building your foundation in Linux OS. HackTheBox: Nº 1 platform in cybersecurity. Has a lot of resources to learn all this core fundamentals, and also red team / blue team security topics. It is focused on labs where you can test your skills hacking different boxes but if you really want to learn it is worth to invest time and money in the academy. I have to say the level here is high, specially if you try to hack machines on your own without using some guide or writeup. TryHackMe: More beginner friendly than hackthebox, it provides a lot of guided learning resources. PortSwigger Labs: Practical labs about specific topics, focused on web hacking. They are great to learn and understand different types of attacks, injections, and security misconfigurations. I would recommend digging into this once you have the theoretical basis about these concepts. I have to mention a few tools I am sure you\u0026rsquo;d end up using:\nNmap: This is probably the most famous tool in hacking, allowing you to gather information about ports and services running in a machine. Burpsuite: A proxy tool widely used in web application security testing. It basically allows you to intercept and modify web requests, which can be used to perform several types of attacks. Metasploit: The most used pentesting framework. Contains a large amount of scripts and exploits ready to run. Another crucial step here is to set up your virtual lab environment to test vulnerable applications. To achieve this goal, there are some Linux distributions like Kali, Parrot or BlackArch, but that\u0026rsquo;s a topic for another post.\nFinal thoughs To sum up, this would be my personal roadmap:\nLearn the fundamentals, specially Linux and networking. Install some Linux in a virtual machine, play with it, get comfortable with the terminal. You can start with bandit wargames in OverTheWire. Complete every level and make sure to understand everything as clear as possible. Move to guided boxes on HackTheBox. I recommend you joining their Discord, ask questions, community is great there! Take notes, repeat, learn, improve your skills. Maybe use your own lab environment, create your own vulnerable apps. Hacking is a mixing of curiosity, study and practice. Being passionate and motivated about it is really helpful and will definitely speed up the process. The path is long and really challenging, so keep it going!\n\u0026ldquo;Yes, I am a criminal. My crime is that of curiosity.\u0026rdquo; — The Mentor (Loyd Blankenship) at The Hacker Manifesto\n","permalink":"http://localhost:1313/posts/starting-point/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIf you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\u003c/p\u003e","title":"Starting Point"},{"content":"Introduction In this post series we are going to solve every level from bandit in OverTheWire This guide pretends to be a writeup containing the solutions of the level, designed for beginners.\nTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing WSL, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\nEvery section will contain the solution as well as some tips for people who is absolutely beginner.\nTips First of all, some tips:\nDo not use this as first resource to solve the levels. Try on your own, make mistakes and learn from them. Only check the solution as last resource or if you are completely new and you have absolutely no idea about what to do next. Take notes from your learning. Write up commands, tips and everything which can be useful in the future. Make sure to understand everything. Is a good idea to note the passwords for every level. If you want to continue letter, you can simply log in in the desired level. It is annoying to repeat everything! Follow the tips and information provided at OverTheWire website. Levels Here is my solution for every level:\nBandit0 Bandit1 Bandit2 Bandit3 Bandit4 Bandit5 Bandit6 Bandit7 ","permalink":"http://localhost:1313/posts/otw/bandit/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIn this post series we are going to solve every level from bandit in \u003ca href=\"https://overthewire.org/wargames/bandit/\"\u003e\u003cem\u003eOverTheWire\u003c/em\u003e\u003c/a\u003e\nThis guide pretends to be a writeup containing the solutions of the level, designed for beginners.\u003c/p\u003e\n\u003cp\u003eTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing \u003ca href=\"https://learn.microsoft.com/en-us/windows/wsl/install\"\u003eWSL\u003c/a\u003e, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\u003c/p\u003e","title":"Bandit"},{"content":"Level description The goal of this level is for you to log into the game using SSH. The host to which you need to connect is bandit.labs.overthewire.org, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\nTips for beginners Read a bit about what SSH is. Research about what a port is. Solution This is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go here.\nAt Linux, we can use ssh client to connect to the server. It should be installed by default on your system. If not, please first research about how to install. Once you have the SSH client installed, you can log in into the first level as follows:\nssh bandit0@bandit.labs.overthewire.org -p 2220 Syntax is simple: ssh \u0026lt;username\u0026gt;@\u0026lt;hostname\u0026gt; -p \u0026lt;port\u0026gt;. Usually SSH runs on port 22 by default, but they changed to port 2220 so we must specify it in the command.\nOnce you try to log in, you will see something like this: NB: If it\u0026rsquo;s the first time you try to log in, you will be asked about the authenticity of the host. Just type yes.\nType the password bandit0 and press enter. Now you are inside bandit server, ready to begin with bandit1!\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit0/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe goal of this level is for you to log into the game using SSH. The host to which you need to connect is \u003cstrong\u003ebandit.labs.overthewire.org\u003c/strong\u003e, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eRead a bit about what SSH is.\u003c/li\u003e\n\u003cli\u003eResearch about what a port is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go \u003ca href=\"https://en.wikipedia.org/wiki/Secure_Shell\"\u003ehere\u003c/a\u003e.\u003c/p\u003e","title":"Bandit0"},{"content":"Level description The password for the next level is stored in a file called readme located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\nTips for beginners Learn about home directory in Linux. Learn to use cat and ls commands. Solution First step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\nls This shows in terminal the files at the current directory. There you will see the readme file.\nNow we can to check the contents, so let\u0026rsquo;s use cat:\ncat readme To read a file, we use cat \u0026lt;filename\u0026gt;.\nNB: Not every file is human readable in Linux. We deep more about this in later levels.\nThe content of the readme file reveals the password for bandit2 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit1/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u003cstrong\u003ereadme\u003c/strong\u003e located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn about home directory in Linux.\u003c/li\u003e\n\u003cli\u003eLearn to use \u003ccode\u003ecat\u003c/code\u003e and \u003ccode\u003els\u003c/code\u003e commands.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eFirst step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\u003c/p\u003e","title":"Bandit1"},{"content":"Level description The password for the next level is stored in a file called - located in the home directory\nTips for beginners Try to understand why previous solution is not working as you expect. Solution You may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our cat command: The terminal is waiting for something else. This happens due to character - is used to pass arguments to our commands, and the linux shell is interpreting that. To prevent that, we could use:\ncat ./- NB: Dot . is used to refer current directory. The slash / is used at the end of directory name.\nWe get the password for bandit3 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit2/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called - located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eTry to understand why previous solution is not working as you expect.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eYou may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our \u003ccode\u003ecat\u003c/code\u003e command:\n\u003cimg alt=\"bandit2\" loading=\"lazy\" src=\"/images/otw/bandit/bandit2/0.png\"\u003e\u003c/p\u003e\n\u003cp\u003eThe terminal is \u003cem\u003ewaiting\u003c/em\u003e for something else. This happens due to character \u003ccode\u003e-\u003c/code\u003e is used to pass arguments to our commands, and the linux shell is interpreting that.\nTo prevent that, we could use:\u003c/p\u003e","title":"Bandit2"},{"content":"Level description The password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\nTips for beginners Think about how to escape the whitespaces. Solution After login in the machine as bandit3, we can see the filename \u0026ndash;spaces in this filename\u0026ndash;.\nNow we have 2 problems:\nSame as previous level, filename starts with --, so it will be interpreted as an argument. Address this problem using ./. Filename contains whitespaces. This is an issue, as bash interpretes whitespaces to separate commands. To solve the second problem, we must escape the whitespace character in some way. Here is the solution:\ncat ./--spaces\\ in\\ this\\ filename-- NB: Little trick, you can start writting filename and press Tab to autocomplete the name. The \\ is going to be inserted automatically.\nJust using the \\ we can escape the whitespace.\nNow we can continue with the bandit4 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit3/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eThink about how to \u003cem\u003eescape\u003c/em\u003e the whitespaces.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAfter login in the machine as bandit3, we can see the filename \u003cem\u003e\u0026ndash;spaces in this filename\u0026ndash;\u003c/em\u003e.\u003c/p\u003e\n\u003cp\u003eNow we have 2 problems:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eSame as previous level, filename starts with \u003ccode\u003e--\u003c/code\u003e, so it will be interpreted as an argument. Address this problem using \u003ccode\u003e./\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003eFilename contains \u003cstrong\u003ewhitespaces\u003c/strong\u003e. This is an issue, as bash interpretes whitespaces to separate commands.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eTo solve the second problem, we must escape the whitespace character in some way. Here is the solution:\u003c/p\u003e","title":"Bandit3"},{"content":"Level description The password for the next level is stored in a hidden file in the inhere directory.\nTips for beginners Learn how to navigate directories in Linux. First understand what a hidden file is. Solution Listing directory files inside bandit4\u0026rsquo;s home directory, show directory inhere.\nNB: How to distinguish files and directories in Linux? Use ls -l and see the difference.\nWe have 2 options now:\nMove to inhere directory and check contens again. Check contents directly. Moving to another directory can be done using cd \u0026lt;dirName\u0026gt;. If you prefer to check directory contents directly, use ls \u0026lt;dirName\u0026gt;.\nAfter checking inhere contents via ls, we see nothing. The reason is the file is a hidden file. A hidden file in Linux is everyfile whose name starts with dot .. Hidden files are not shown by default with ls command, so we must add a special flag -a to list all files: NB: Both flags -l and -a cna be combined into a single flag -al, which is shorter to type.\nAs you can see, filename is \u0026hellip;Hidding-From-You starting with three dots. Reading file contents should be easy at this point!\nNext level is bandit5.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit4/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a hidden file in the inhere directory.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to navigate directories in Linux.\u003c/li\u003e\n\u003cli\u003eFirst understand what a hidden file is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eListing directory files inside bandit4\u0026rsquo;s home directory, show directory \u003cstrong\u003einhere\u003c/strong\u003e.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e How to distinguish files and directories in Linux? Use \u003ccode\u003els -l\u003c/code\u003e and see the difference.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eWe have 2 options now:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eMove to inhere directory and check contens again.\u003c/li\u003e\n\u003cli\u003eCheck contents directly.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eMoving to another directory can be done using \u003ccode\u003ecd \u0026lt;dirName\u0026gt;\u003c/code\u003e. If you prefer to check directory contents directly, use \u003ccode\u003els \u0026lt;dirName\u0026gt;\u003c/code\u003e.\u003c/p\u003e","title":"Bandit4"},{"content":"Level description The password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\nTips for beginners What means human-readable file? Is there any way to check filetype at Linux?. Solution Checking inhere\u0026rsquo;s contents shows some files names \u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII here\nSo now, our goal is checking if file content of every file in the folder is ASCII or not. file \u0026lt;filename\u0026gt; does the job. Note the use of *. That called a wildcard regular expression, we\u0026rsquo;ll deep into it in later levels. An easy approach could be checking every file separately:\nfile ./--file00 file ./--file01 ... file ./--file09 But that\u0026rsquo;s not funny, imagine we have 100 files to check. All the files are in the same directory, so we can use cat ./* where ./* matches every filename in the directory, applying file to every file.\nNB: Another approach is to use find with certaing flags. Try to do in different ways, don\u0026rsquo;t stick to my solution.\nThe file \u0026ndash;file00 content is not readable, so get password from \u0026ndash;file07 and continue with bandit6.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit5/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eWhat means human-readable file?\u003c/li\u003e\n\u003cli\u003eIs there any way to check filetype at Linux?.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eChecking inhere\u0026rsquo;s contents shows some files names \u003cstrong\u003e\u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09\u003c/strong\u003e. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII \u003ca href=\"https://en.wikipedia.org/wiki/ASCII\"\u003ehere\u003c/a\u003e\u003c/p\u003e","title":"Bandit5"},{"content":"Level description The password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\nhuman-readable 1033 bytes in size not executable Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution The purpose of the level is showing us how to find for files. Listing contents of inhere, we can see some folders, containing a lot of files inside: NB: Adding -R to ls shows recursively the content of every folder inside the directory listed.\nSo this time, checking every file is not an option. We need to find a file with some properties, specific size, not excutable and human-readable. Let\u0026rsquo;s explain the command we\u0026rsquo;re using:\nfind inhere/ -size 1033c ! -executable First, we specify the directory, in this case inhere. The option -size 1033c returns files of 1033 bytes. Then, with -executable we would get executable files, but we want not executable files, that\u0026rsquo;s why we are adding ! before.\nNB: By default, the -size option takes as argument the number of blocks. For example, -size 2 means 2 blocks of 512 bytes, so its 1024. The c is used to specify exact bytes. Don\u0026rsquo;t ask me why it\u0026rsquo;s c and not b 😅.\nThe property of human-readability is not implemented in find. This is not an issue, previous command returns a single file and it is human readable (we could confirm using file): Extra tip: try to use the following:\nfind inhere/ -size 1033c ! -executable | file You get the same result! The pipe | is a great tool to execute 2+ commands in one line.\nGet your password and continue with bandit7.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit6/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ehuman-readable\u003c/li\u003e\n\u003cli\u003e1033 bytes in size\u003c/li\u003e\n\u003cli\u003enot executable\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThe purpose of the level is showing us how to find for files. Listing contents of \u003cstrong\u003einhere\u003c/strong\u003e, we can see some folders, containing a lot of files inside:\n\u003cimg alt=\"bandit6_0\" loading=\"lazy\" src=\"/images/otw/bandit/bandit6/0.png\"\u003e\u003c/p\u003e","title":"Bandit6"},{"content":"Level description The password for the next level is stored somewhere on the server and has all of the following properties:\nowned by user bandit7 owned by group bandit6 33 bytes in size Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution This is very straightforward to do after completing previous level. Now we need to identify a file owned by user bandit7 and group bandi6. Furthermore, the file is somewhere on the server, which means we have to find in the root directory /.\nfind / -user bandit7 -group bandit6 -size 33c 2\u0026gt;/dev/null NB: I added that strange 2\u0026gt;/dev/null to filter error output. The reason why it works like that is more technical, for now just save this a fast way to filter errors in terminal. We get some errors because looking for files in the whole server may return some unaccesible files, as we don\u0026rsquo;t have root user permissions. We will study Linux permissions in later levels.\nWe should get a single file, containing password for bandit8.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit7/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored somewhere on the server and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eowned by user bandit7\u003c/li\u003e\n\u003cli\u003eowned by group bandit6\u003c/li\u003e\n\u003cli\u003e33 bytes in size\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is very straightforward to do after completing previous level. Now we need to identify a file owned by user bandit7 and group bandi6. Furthermore, the file is \u003cstrong\u003esomewhere on the server\u003c/strong\u003e, which means we have to find in the root directory \u003ccode\u003e/\u003c/code\u003e.\u003c/p\u003e","title":"Bandit7"},{"content":"Level description The password for the next level is stored in the file data.txt next to the word millionth.\nTips for beginners Learn how to filter file contents. Solution At previous levels, we discovered how to find for files. Now it\u0026rsquo;s time to find for content inside a file. grep command is going to help with that task.\nNB: Of course I don\u0026rsquo;t want to spoil you the password!\nNotice how this can achieved in different ways.\nUsing grep \u0026lt;keyword\u0026gt; \u0026lt;filename\u0026gt;. Using the pipe | to execute grep over the result of cat command. Take you favorite path to solve the level, and continue with bandit9.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit8/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the file \u003cstrong\u003edata.txt\u003c/strong\u003e next to the word \u003cstrong\u003emillionth\u003c/strong\u003e.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to filter file contents.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAt previous levels, we discovered how to find for files. Now it\u0026rsquo;s time to find for content inside a file. \u003ccode\u003egrep\u003c/code\u003e command is going to help with that task.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"bandit8\" loading=\"lazy\" src=\"/images/otw/bandit/bandit8/0.png\"\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e Of course I don\u0026rsquo;t want to spoil you the password!\u003c/p\u003e","title":"Bandit8"},{"content":"Level description The password for the next level is stored in the file data.txt and is the only line of text that occurs only once.\nTips for beginners First, apply sort to file content. Solution This level is a bit tricky. First, examine the file contents. Using head shows the 10 first lines of a file:\nNB: If you want to show more lines: head -20 or the number of your choice.\nThere are tons of different passwords. The correct one is the only line of text that occurs only once. Try to research how to do on your own. You maybe find uniq. This command has a very interesting flag, -u, used to show only the uniq lines. Let\u0026rsquo;s try with that:\nFor some reason, is not working. The trick here is to sort the file contents before applying uniq. This can be achieved using sort, so the final command looks like this:\ncat data.txt | sort | uniq -u NB: You need to sort lines first because uniq only detects consecutive repetitions. First time I solved this it took a while 😅.\nAfter getting the password, we can continue with bandit10.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit9/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the file \u003cstrong\u003edata.txt\u003c/strong\u003e and is the only line of text that occurs only once.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst, apply \u003ccode\u003esort\u003c/code\u003e to file content.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis level is a bit tricky. First, examine the file contents. Using \u003ccode\u003ehead\u003c/code\u003e shows the 10 first lines of a file:\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"bandit9_0\" loading=\"lazy\" src=\"/images/otw/bandit/bandit9/0.png\"\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e If you want to show more lines: \u003ccode\u003ehead -20\u003c/code\u003e or the number of your choice.\u003c/p\u003e","title":"Bandit9"},{"content":"Level description The password for the next level is stored in the file data.txt and is the only line of text that occurs only once.\nTips for beginners First, apply sort to file content. Solution This level is a bit tricky. First, examine the file contents. Using head shows the 10 first lines of a file:\nNB: If you want to show more lines: head -20 or the number of your choice.\nThere are tons of different passwords. The correct one is the only line of text that occurs only once. Try to research how to do on your own. You maybe find uniq. This command has a very interesting flag, -u, used to show only the uniq lines. Let\u0026rsquo;s try with that:\nFor some reason, is not working. The trick here is to sort the file contents before applying uniq. This can be achieved using sort, so the final command looks like this:\ncat data.txt | sort | uniq -u NB: You need to sort lines first because uniq only detects consecutive repetitions. First time I solved this it took a while 😅.\nAfter getting the password, we can continue with bandit10.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit10/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the file \u003cstrong\u003edata.txt\u003c/strong\u003e and is the only line of text that occurs only once.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst, apply \u003ccode\u003esort\u003c/code\u003e to file content.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis level is a bit tricky. First, examine the file contents. Using \u003ccode\u003ehead\u003c/code\u003e shows the 10 first lines of a file:\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"bandit9_0\" loading=\"lazy\" src=\"/images/otw/bandit/bandit9/0.png\"\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e If you want to show more lines: \u003ccode\u003ehead -20\u003c/code\u003e or the number of your choice.\u003c/p\u003e","title":"Bandit10"},{"content":"👨‍💻 whoami Hey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\nWhat is this❓​ This blog is basically my thoughts on several hacking topics. Here you’ll see:\nWriteups from CTF challenges, from platforms like HackTheBox or OverTheWire.\nWalkthroughs and notes on pentesting techniques I’m learning or testing.\nSome posts on cryptography — because math can be fun (sometimes).\nRandom topics that freaks like me may (just may) find interesting.\nThe idea is simple: share what I learn, document my journey, and maybe help others who are also diving into the exciting world of ethical hacking.\n📫 Contact Want to say hi, share ideas, or just geek out about hacking? Reach me here:\n📧 Email: mrb0b1073@proton.me 💻​ GitHub: mrb0b173 🟩​ HackTheBox: mrb0b1073 ","permalink":"http://localhost:1313/about/","summary":"\u003ch2 id=\"-whoami\"\u003e👨‍💻 whoami\u003c/h2\u003e\n\u003cp\u003eHey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\u003c/p\u003e\n\u003chr\u003e\n\u003ch2 id=\"what-is-this\"\u003eWhat is this❓​\u003c/h2\u003e\n\u003cp\u003eThis blog is basically my thoughts on several hacking topics. Here you’ll see:\u003c/p\u003e","title":"About"},{"content":"Hey! 👋 I\u0026rsquo;m mrb0b1073 and this is my first post.\nWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\nExcited to start this adventure!\n","permalink":"http://localhost:1313/posts/hello-world/","summary":"\u003cp\u003eHey! 👋 I\u0026rsquo;m \u003cstrong\u003emrb0b1073\u003c/strong\u003e and this is my first post.\u003c/p\u003e\n\u003cp\u003eWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\u003cbr\u003e\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\u003c/p\u003e\n\u003cp\u003eExcited to start this adventure!\u003c/p\u003e","title":"Hello World"},{"content":"Introduction If you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\nIn cybersecurity there are broadly two complementary roles: Blue Team and Red Team. Blue Teams focus on defense, monitoring, incident response, hardening systems and keeping services secure, while Red Teams simulate attackers to find weaknesses and prove what an adversary could do. Ethical hacking aligns closely with Red Team operations, but cybersecurity is highly transversal across IT. There are many specialities or areas, such as cloud security, appsec, pentesting, forensics, governance, risk management, malware analysis, etc. Every topic could deserve its own post, so let\u0026rsquo;s keep it simple and focus on ethical hacking.\nHacker philosophy Let\u0026rsquo;s start with the idea of what is exactly a hacker. A hacker is someone who explores systems to understand how they work, finds creative ways to make or fix things, and solves technical problems. Historically the word describes curiosity, craft, and a drive to improve systems — not criminality. It is important to make the distinction between hacker and cracker, also called cybercriminal. A hacker explores, builds, discloses responsibly and works to improve security. They work in authorized environments or labs. On the other hand, a cracker breaks into systems for theft, vandalism or other illicit gain.\nHere you can find the most popularized ideas often summarized as the hacker ethic:\nCuriosity first: Learn by exploring and tinkering. Freedom of information: All knowledge should be shared to help progress. This fits properly with the idea of open source. Mistrust of needless authority: Centralized control sometimes blocks innovation. It is always good to question anything, specially common assumptions. Meritocracy: Skills, craft and results matter more than titles. Craftsmanship \u0026amp; elegance: Technical beauty matters. Build clean, clever and efficient solutions. Responsability \u0026amp; ethics: Use your skills to build, fix, educate and defend, not to harm. Core fundamentals Assuming you want to init yourself in hacking, you should first build competence across three basic pillars.\nOperating Systems You should learn as much as possible about Linux and Windows. Specially Linux, all the tools you will be using are meant to be used in a Linux environment. Skill with shell is required, learn basic commands and how to interact with the OS using the terminal. Research about processes, file permissions, package management and logs. A large proportion of web servers around the world run on Linux, although Windows is also widely used. Windows knowledge is really valuable too, considering active directory is strongly used in corporate environments.\nNetworking You have to understand how computers communicate each other. Understand basic networking concepts, IP adresses, subnetting, proxies, find out how internet works. Study some protocols such as TCP/IP, HTTP, DNS or SSH. This could sound confusing for beginners, but this step is not optional! Study different client/server models and how services expose attack surfaces.\nProgramming \u0026amp; scripting Is this completely required? Maybe not for complete beginners. Does it help? Absolutely yes. Understanding how web apps or any type of application works makes things much easier. You can imagine different entry points to exploit if you understand how systems are designed. Also writing scripts in bash or python makes you more productive through automation.\nEthical Hacking foundations Once you feel confident with these 3 pillars, you can go to the next step. You can study about different topics and areas. For example, binary exploiting, web pentesting, mobile pentesting, wireless hacking, etc. You should start picking a focus, in this post we focus on web pentesting, as it is beginner friendly. Also web applications are the bread and butter in companies nowadays.\nKey concepts to study:\nCIA Triad: CIA refers to Confidentiality, Integrity and Availability. These three concepts are key in information security, and describe properties we want to ensure in our systems and information. Web Security basics, OWASP: Study the OWASP Top 10, which summarizes most frequent web security risks. Authentication and session control: Understand the concepts of Authentication and Authorization, research about how session is handled in web apps, cookies, JWT tokens, etc. Input validation \u0026amp; injection attacks: Learn about SQL Injection, Cross-Site Scripting (XSS), Code Injection, SSTI, and every injection type. Secure development lifecycle: Find out how to implement security controls in code. This can be more related to Blue Team, but as Red Teamer it is important to understand. Firewall evasion: What a firewall is and some techniques/methods to bypass. Some cryptography: Understand what a chiper and a hash are, how information is encrypted to prevent access from 3rd parties. Focusing on web, read about TLS protocol. There are many more topics you can research and learn, but this could be a nice starting point.\nTools and platforms to learn Now you have an idea of what to study, let\u0026rsquo;s see how to start in practical terms.\nSome platforms I personally recommend:\nOverTheWire: Here you can find some CTFs (Capture The Flag) which are fun to play and also really instructive. Bandit games are a must for complete beginners, as you will explore some linux and bash concepts which are basic to continue. The games are leveled by difficulty, in their web you can get all the information about how to play, only a terminal and SSH is required. This helps building your foundation in Linux OS. HackTheBox: Nº 1 platform in cybersecurity. Has a lot of resources to learn all this core fundamentals, and also red team / blue team security topics. It is focused on labs where you can test your skills hacking different boxes but if you really want to learn it is worth to invest time and money in the academy. I have to say the level here is high, specially if you try to hack machines on your own without using some guide or writeup. TryHackMe: More beginner friendly than hackthebox, it provides a lot of guided learning resources. PortSwigger Labs: Practical labs about specific topics, focused on web hacking. They are great to learn and understand different types of attacks, injections, and security misconfigurations. I would recommend digging into this once you have the theoretical basis about these concepts. I have to mention a few tools I am sure you\u0026rsquo;d end up using:\nNmap: This is probably the most famous tool in hacking, allowing you to gather information about ports and services running in a machine. Burpsuite: A proxy tool widely used in web application security testing. It basically allows you to intercept and modify web requests, which can be used to perform several types of attacks. Metasploit: The most used pentesting framework. Contains a large amount of scripts and exploits ready to run. Another crucial step here is to set up your virtual lab environment to test vulnerable applications. To achieve this goal, there are some Linux distributions like Kali, Parrot or BlackArch, but that\u0026rsquo;s a topic for another post.\nFinal thoughs To sum up, this would be my personal roadmap:\nLearn the fundamentals, specially Linux and networking. Install some Linux in a virtual machine, play with it, get comfortable with the terminal. You can start with bandit wargames in OverTheWire. Complete every level and make sure to understand everything as clear as possible. Move to guided boxes on HackTheBox. I recommend you joining their Discord, ask questions, community is great there! Take notes, repeat, learn, improve your skills. Maybe use your own lab environment, create your own vulnerable apps. Hacking is a mixing of curiosity, study and practice. Being passionate and motivated about it is really helpful and will definitely speed up the process. The path is long and really challenging, so keep it going!\n\u0026ldquo;Yes, I am a criminal. My crime is that of curiosity.\u0026rdquo; — The Mentor (Loyd Blankenship) at The Hacker Manifesto\n","permalink":"http://localhost:1313/posts/starting-point/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIf you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\u003c/p\u003e","title":"Starting Point"},{"content":"Introduction In this post series we are going to solve every level from bandit in OverTheWire This guide pretends to be a writeup containing the solutions of the level, designed for beginners.\nTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing WSL, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\nEvery section will contain the solution as well as some tips for people who is absolutely beginner.\nTips First of all, some tips:\nDo not use this as first resource to solve the levels. Try on your own, make mistakes and learn from them. Only check the solution as last resource or if you are completely new and you have absolutely no idea about what to do next. Take notes from your learning. Write up commands, tips and everything which can be useful in the future. Make sure to understand everything. Is a good idea to note the passwords for every level. If you want to continue letter, you can simply log in in the desired level. It is annoying to repeat everything! Follow the tips and information provided at OverTheWire website. Levels Here is my solution for every level:\nBandit0 Bandit1 Bandit2 Bandit3 Bandit4 Bandit5 Bandit6 Bandit7 ","permalink":"http://localhost:1313/posts/otw/bandit/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIn this post series we are going to solve every level from bandit in \u003ca href=\"https://overthewire.org/wargames/bandit/\"\u003e\u003cem\u003eOverTheWire\u003c/em\u003e\u003c/a\u003e\nThis guide pretends to be a writeup containing the solutions of the level, designed for beginners.\u003c/p\u003e\n\u003cp\u003eTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing \u003ca href=\"https://learn.microsoft.com/en-us/windows/wsl/install\"\u003eWSL\u003c/a\u003e, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\u003c/p\u003e","title":"Bandit"},{"content":"Level description The goal of this level is for you to log into the game using SSH. The host to which you need to connect is bandit.labs.overthewire.org, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\nTips for beginners Read a bit about what SSH is. Research about what a port is. Solution This is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go here.\nAt Linux, we can use ssh client to connect to the server. It should be installed by default on your system. If not, please first research about how to install. Once you have the SSH client installed, you can log in into the first level as follows:\nssh bandit0@bandit.labs.overthewire.org -p 2220 Syntax is simple: ssh \u0026lt;username\u0026gt;@\u0026lt;hostname\u0026gt; -p \u0026lt;port\u0026gt;. Usually SSH runs on port 22 by default, but they changed to port 2220 so we must specify it in the command.\nOnce you try to log in, you will see something like this: NB: If it\u0026rsquo;s the first time you try to log in, you will be asked about the authenticity of the host. Just type yes.\nType the password bandit0 and press enter. Now you are inside bandit server, ready to begin with bandit1!\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit0/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe goal of this level is for you to log into the game using SSH. The host to which you need to connect is \u003cstrong\u003ebandit.labs.overthewire.org\u003c/strong\u003e, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eRead a bit about what SSH is.\u003c/li\u003e\n\u003cli\u003eResearch about what a port is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go \u003ca href=\"https://en.wikipedia.org/wiki/Secure_Shell\"\u003ehere\u003c/a\u003e.\u003c/p\u003e","title":"Bandit0"},{"content":"Level description The password for the next level is stored in a file called readme located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\nTips for beginners Learn about home directory in Linux. Learn to use cat and ls commands. Solution First step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\nls This shows in terminal the files at the current directory. There you will see the readme file.\nNow we can to check the contents, so let\u0026rsquo;s use cat:\ncat readme To read a file, we use cat \u0026lt;filename\u0026gt;.\nNB: Not every file is human readable in Linux. We deep more about this in later levels.\nThe content of the readme file reveals the password for bandit2 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit1/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u003cstrong\u003ereadme\u003c/strong\u003e located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn about home directory in Linux.\u003c/li\u003e\n\u003cli\u003eLearn to use \u003ccode\u003ecat\u003c/code\u003e and \u003ccode\u003els\u003c/code\u003e commands.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eFirst step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\u003c/p\u003e","title":"Bandit1"},{"content":"Level description The password for the next level is stored in a file called - located in the home directory\nTips for beginners Try to understand why previous solution is not working as you expect. Solution You may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our cat command: The terminal is waiting for something else. This happens due to character - is used to pass arguments to our commands, and the linux shell is interpreting that. To prevent that, we could use:\ncat ./- NB: Dot . is used to refer current directory. The slash / is used at the end of directory name.\nWe get the password for bandit3 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit2/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called - located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eTry to understand why previous solution is not working as you expect.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eYou may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our \u003ccode\u003ecat\u003c/code\u003e command:\n\u003cimg alt=\"bandit2\" loading=\"lazy\" src=\"/images/otw/bandit/bandit2/0.png\"\u003e\u003c/p\u003e\n\u003cp\u003eThe terminal is \u003cem\u003ewaiting\u003c/em\u003e for something else. This happens due to character \u003ccode\u003e-\u003c/code\u003e is used to pass arguments to our commands, and the linux shell is interpreting that.\nTo prevent that, we could use:\u003c/p\u003e","title":"Bandit2"},{"content":"Level description The password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\nTips for beginners Think about how to escape the whitespaces. Solution After login in the machine as bandit3, we can see the filename \u0026ndash;spaces in this filename\u0026ndash;.\nNow we have 2 problems:\nSame as previous level, filename starts with --, so it will be interpreted as an argument. Address this problem using ./. Filename contains whitespaces. This is an issue, as bash interpretes whitespaces to separate commands. To solve the second problem, we must escape the whitespace character in some way. Here is the solution:\ncat ./--spaces\\ in\\ this\\ filename-- NB: Little trick, you can start writting filename and press Tab to autocomplete the name. The \\ is going to be inserted automatically.\nJust using the \\ we can escape the whitespace.\nNow we can continue with the bandit4 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit3/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eThink about how to \u003cem\u003eescape\u003c/em\u003e the whitespaces.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAfter login in the machine as bandit3, we can see the filename \u003cem\u003e\u0026ndash;spaces in this filename\u0026ndash;\u003c/em\u003e.\u003c/p\u003e\n\u003cp\u003eNow we have 2 problems:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eSame as previous level, filename starts with \u003ccode\u003e--\u003c/code\u003e, so it will be interpreted as an argument. Address this problem using \u003ccode\u003e./\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003eFilename contains \u003cstrong\u003ewhitespaces\u003c/strong\u003e. This is an issue, as bash interpretes whitespaces to separate commands.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eTo solve the second problem, we must escape the whitespace character in some way. Here is the solution:\u003c/p\u003e","title":"Bandit3"},{"content":"Level description The password for the next level is stored in a hidden file in the inhere directory.\nTips for beginners Learn how to navigate directories in Linux. First understand what a hidden file is. Solution Listing directory files inside bandit4\u0026rsquo;s home directory, show directory inhere.\nNB: How to distinguish files and directories in Linux? Use ls -l and see the difference.\nWe have 2 options now:\nMove to inhere directory and check contens again. Check contents directly. Moving to another directory can be done using cd \u0026lt;dirName\u0026gt;. If you prefer to check directory contents directly, use ls \u0026lt;dirName\u0026gt;.\nAfter checking inhere contents via ls, we see nothing. The reason is the file is a hidden file. A hidden file in Linux is everyfile whose name starts with dot .. Hidden files are not shown by default with ls command, so we must add a special flag -a to list all files: NB: Both flags -l and -a cna be combined into a single flag -al, which is shorter to type.\nAs you can see, filename is \u0026hellip;Hidding-From-You starting with three dots. Reading file contents should be easy at this point!\nNext level is bandit5.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit4/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a hidden file in the inhere directory.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to navigate directories in Linux.\u003c/li\u003e\n\u003cli\u003eFirst understand what a hidden file is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eListing directory files inside bandit4\u0026rsquo;s home directory, show directory \u003cstrong\u003einhere\u003c/strong\u003e.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e How to distinguish files and directories in Linux? Use \u003ccode\u003els -l\u003c/code\u003e and see the difference.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eWe have 2 options now:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eMove to inhere directory and check contens again.\u003c/li\u003e\n\u003cli\u003eCheck contents directly.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eMoving to another directory can be done using \u003ccode\u003ecd \u0026lt;dirName\u0026gt;\u003c/code\u003e. If you prefer to check directory contents directly, use \u003ccode\u003els \u0026lt;dirName\u0026gt;\u003c/code\u003e.\u003c/p\u003e","title":"Bandit4"},{"content":"Level description The password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\nTips for beginners What means human-readable file? Is there any way to check filetype at Linux?. Solution Checking inhere\u0026rsquo;s contents shows some files names \u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII here\nSo now, our goal is checking if file content of every file in the folder is ASCII or not. file \u0026lt;filename\u0026gt; does the job. Note the use of *. That called a wildcard regular expression, we\u0026rsquo;ll deep into it in later levels. An easy approach could be checking every file separately:\nfile ./--file00 file ./--file01 ... file ./--file09 But that\u0026rsquo;s not funny, imagine we have 100 files to check. All the files are in the same directory, so we can use cat ./* where ./* matches every filename in the directory, applying file to every file.\nNB: Another approach is to use find with certaing flags. Try to do in different ways, don\u0026rsquo;t stick to my solution.\nThe file \u0026ndash;file00 content is not readable, so get password from \u0026ndash;file07 and continue with bandit6.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit5/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eWhat means human-readable file?\u003c/li\u003e\n\u003cli\u003eIs there any way to check filetype at Linux?.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eChecking inhere\u0026rsquo;s contents shows some files names \u003cstrong\u003e\u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09\u003c/strong\u003e. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII \u003ca href=\"https://en.wikipedia.org/wiki/ASCII\"\u003ehere\u003c/a\u003e\u003c/p\u003e","title":"Bandit5"},{"content":"Level description The password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\nhuman-readable 1033 bytes in size not executable Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution The purpose of the level is showing us how to find for files. Listing contents of inhere, we can see some folders, containing a lot of files inside: NB: Adding -R to ls shows recursively the content of every folder inside the directory listed.\nSo this time, checking every file is not an option. We need to find a file with some properties, specific size, not excutable and human-readable. Let\u0026rsquo;s explain the command we\u0026rsquo;re using:\nfind inhere/ -size 1033c ! -executable First, we specify the directory, in this case inhere. The option -size 1033c returns files of 1033 bytes. Then, with -executable we would get executable files, but we want not executable files, that\u0026rsquo;s why we are adding ! before.\nNB: By default, the -size option takes as argument the number of blocks. For example, -size 2 means 2 blocks of 512 bytes, so its 1024. The c is used to specify exact bytes. Don\u0026rsquo;t ask me why it\u0026rsquo;s c and not b 😅.\nThe property of human-readability is not implemented in find. This is not an issue, previous command returns a single file and it is human readable (we could confirm using file): Extra tip: try to use the following:\nfind inhere/ -size 1033c ! -executable | file You get the same result! The pipe | is a great tool to execute 2+ commands in one line.\nGet your password and continue with bandit7.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit6/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ehuman-readable\u003c/li\u003e\n\u003cli\u003e1033 bytes in size\u003c/li\u003e\n\u003cli\u003enot executable\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThe purpose of the level is showing us how to find for files. Listing contents of \u003cstrong\u003einhere\u003c/strong\u003e, we can see some folders, containing a lot of files inside:\n\u003cimg alt=\"bandit6_0\" loading=\"lazy\" src=\"/images/otw/bandit/bandit6/0.png\"\u003e\u003c/p\u003e","title":"Bandit6"},{"content":"Level description The password for the next level is stored somewhere on the server and has all of the following properties:\nowned by user bandit7 owned by group bandit6 33 bytes in size Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution This is very straightforward to do after completing previous level. Now we need to identify a file owned by user bandit7 and group bandi6. Furthermore, the file is somewhere on the server, which means we have to find in the root directory /.\nfind / -user bandit7 -group bandit6 -size 33c 2\u0026gt;/dev/null NB: I added that strange 2\u0026gt;/dev/null to filter error output. The reason why it works like that is more technical, for now just save this a fast way to filter errors in terminal. We get some errors because looking for files in the whole server may return some unaccesible files, as we don\u0026rsquo;t have root user permissions. We will study Linux permissions in later levels.\nWe should get a single file, containing password for bandit8.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit7/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored somewhere on the server and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eowned by user bandit7\u003c/li\u003e\n\u003cli\u003eowned by group bandit6\u003c/li\u003e\n\u003cli\u003e33 bytes in size\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is very straightforward to do after completing previous level. Now we need to identify a file owned by user bandit7 and group bandi6. Furthermore, the file is \u003cstrong\u003esomewhere on the server\u003c/strong\u003e, which means we have to find in the root directory \u003ccode\u003e/\u003c/code\u003e.\u003c/p\u003e","title":"Bandit7"},{"content":"Level description The password for the next level is stored in the file data.txt next to the word millionth.\nTips for beginners Learn how to filter file contents. Solution At previous levels, we discovered how to find for files. Now it\u0026rsquo;s time to find for content inside a file. grep command is going to help with that task.\nNB: Of course I don\u0026rsquo;t want to spoil you the password!\nNotice how this can achieved in different ways.\nUsing grep \u0026lt;keyword\u0026gt; \u0026lt;filename\u0026gt;. Using the pipe | to execute grep over the result of cat command. Take you favorite path to solve the level, and continue with bandit9.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit8/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the file \u003cstrong\u003edata.txt\u003c/strong\u003e next to the word \u003cstrong\u003emillionth\u003c/strong\u003e.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to filter file contents.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAt previous levels, we discovered how to find for files. Now it\u0026rsquo;s time to find for content inside a file. \u003ccode\u003egrep\u003c/code\u003e command is going to help with that task.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"bandit8\" loading=\"lazy\" src=\"/images/otw/bandit/bandit8/0.png\"\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e Of course I don\u0026rsquo;t want to spoil you the password!\u003c/p\u003e","title":"Bandit8"},{"content":"Level description The password for the next level is stored in the file data.txt and is the only line of text that occurs only once.\nTips for beginners First, apply sort to file content. Solution This level is a bit tricky. First, examine the file contents. Using head shows the 10 first lines of a file:\nNB: If you want to show more lines: head -20 or the number of your choice.\nThere are tons of different passwords. The correct one is the only line of text that occurs only once. Try to research how to do on your own. You maybe find uniq. This command has a very interesting flag, -u, used to show only the uniq lines. Let\u0026rsquo;s try with that:\nFor some reason, is not working. The trick here is to sort the file contents before applying uniq. This can be achieved using sort, so the final command looks like this:\ncat data.txt | sort | uniq -u NB: You need to sort lines first because uniq only detects consecutive repetitions. First time I solved this it took a while 😅.\nAfter getting the password, we can continue with bandit10.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit9/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the file \u003cstrong\u003edata.txt\u003c/strong\u003e and is the only line of text that occurs only once.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst, apply \u003ccode\u003esort\u003c/code\u003e to file content.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis level is a bit tricky. First, examine the file contents. Using \u003ccode\u003ehead\u003c/code\u003e shows the 10 first lines of a file:\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"bandit9_0\" loading=\"lazy\" src=\"/images/otw/bandit/bandit9/0.png\"\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e If you want to show more lines: \u003ccode\u003ehead -20\u003c/code\u003e or the number of your choice.\u003c/p\u003e","title":"Bandit9"},{"content":"Level description The password for the next level is stored in the file data.txt in one of the few human-readable strings, preceded by several \u0026lsquo;=\u0026rsquo; characters.\nTips for beginners First, apply sort to file content. Solution This level is a bit tricky. First, examine the file contents. Using head shows the 10 first lines of a file:\nNB: If you want to show more lines: head -20 or the number of your choice.\nThere are tons of different passwords. The correct one is the only line of text that occurs only once. Try to research how to do on your own. You maybe find uniq. This command has a very interesting flag, -u, used to show only the uniq lines. Let\u0026rsquo;s try with that:\nFor some reason, is not working. The trick here is to sort the file contents before applying uniq. This can be achieved using sort, so the final command looks like this:\ncat data.txt | sort | uniq -u NB: You need to sort lines first because uniq only detects consecutive repetitions. First time I solved this it took a while 😅.\nAfter getting the password, we can continue with bandit10.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit10/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the file \u003cstrong\u003edata.txt\u003c/strong\u003e in one of the few human-readable strings, preceded by several \u0026lsquo;=\u0026rsquo; characters.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst, apply \u003ccode\u003esort\u003c/code\u003e to file content.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis level is a bit tricky. First, examine the file contents. Using \u003ccode\u003ehead\u003c/code\u003e shows the 10 first lines of a file:\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"bandit9_0\" loading=\"lazy\" src=\"/images/otw/bandit/bandit9/0.png\"\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e If you want to show more lines: \u003ccode\u003ehead -20\u003c/code\u003e or the number of your choice.\u003c/p\u003e","title":"Bandit10"},{"content":"👨‍💻 whoami Hey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\nWhat is this❓​ This blog is basically my thoughts on several hacking topics. Here you’ll see:\nWriteups from CTF challenges, from platforms like HackTheBox or OverTheWire.\nWalkthroughs and notes on pentesting techniques I’m learning or testing.\nSome posts on cryptography — because math can be fun (sometimes).\nRandom topics that freaks like me may (just may) find interesting.\nThe idea is simple: share what I learn, document my journey, and maybe help others who are also diving into the exciting world of ethical hacking.\n📫 Contact Want to say hi, share ideas, or just geek out about hacking? Reach me here:\n📧 Email: mrb0b1073@proton.me 💻​ GitHub: mrb0b173 🟩​ HackTheBox: mrb0b1073 ","permalink":"http://localhost:1313/about/","summary":"\u003ch2 id=\"-whoami\"\u003e👨‍💻 whoami\u003c/h2\u003e\n\u003cp\u003eHey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\u003c/p\u003e\n\u003chr\u003e\n\u003ch2 id=\"what-is-this\"\u003eWhat is this❓​\u003c/h2\u003e\n\u003cp\u003eThis blog is basically my thoughts on several hacking topics. Here you’ll see:\u003c/p\u003e","title":"About"},{"content":"Hey! 👋 I\u0026rsquo;m mrb0b1073 and this is my first post.\nWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\nExcited to start this adventure!\n","permalink":"http://localhost:1313/posts/hello-world/","summary":"\u003cp\u003eHey! 👋 I\u0026rsquo;m \u003cstrong\u003emrb0b1073\u003c/strong\u003e and this is my first post.\u003c/p\u003e\n\u003cp\u003eWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\u003cbr\u003e\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\u003c/p\u003e\n\u003cp\u003eExcited to start this adventure!\u003c/p\u003e","title":"Hello World"},{"content":"Introduction If you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\nIn cybersecurity there are broadly two complementary roles: Blue Team and Red Team. Blue Teams focus on defense, monitoring, incident response, hardening systems and keeping services secure, while Red Teams simulate attackers to find weaknesses and prove what an adversary could do. Ethical hacking aligns closely with Red Team operations, but cybersecurity is highly transversal across IT. There are many specialities or areas, such as cloud security, appsec, pentesting, forensics, governance, risk management, malware analysis, etc. Every topic could deserve its own post, so let\u0026rsquo;s keep it simple and focus on ethical hacking.\nHacker philosophy Let\u0026rsquo;s start with the idea of what is exactly a hacker. A hacker is someone who explores systems to understand how they work, finds creative ways to make or fix things, and solves technical problems. Historically the word describes curiosity, craft, and a drive to improve systems — not criminality. It is important to make the distinction between hacker and cracker, also called cybercriminal. A hacker explores, builds, discloses responsibly and works to improve security. They work in authorized environments or labs. On the other hand, a cracker breaks into systems for theft, vandalism or other illicit gain.\nHere you can find the most popularized ideas often summarized as the hacker ethic:\nCuriosity first: Learn by exploring and tinkering. Freedom of information: All knowledge should be shared to help progress. This fits properly with the idea of open source. Mistrust of needless authority: Centralized control sometimes blocks innovation. It is always good to question anything, specially common assumptions. Meritocracy: Skills, craft and results matter more than titles. Craftsmanship \u0026amp; elegance: Technical beauty matters. Build clean, clever and efficient solutions. Responsability \u0026amp; ethics: Use your skills to build, fix, educate and defend, not to harm. Core fundamentals Assuming you want to init yourself in hacking, you should first build competence across three basic pillars.\nOperating Systems You should learn as much as possible about Linux and Windows. Specially Linux, all the tools you will be using are meant to be used in a Linux environment. Skill with shell is required, learn basic commands and how to interact with the OS using the terminal. Research about processes, file permissions, package management and logs. A large proportion of web servers around the world run on Linux, although Windows is also widely used. Windows knowledge is really valuable too, considering active directory is strongly used in corporate environments.\nNetworking You have to understand how computers communicate each other. Understand basic networking concepts, IP adresses, subnetting, proxies, find out how internet works. Study some protocols such as TCP/IP, HTTP, DNS or SSH. This could sound confusing for beginners, but this step is not optional! Study different client/server models and how services expose attack surfaces.\nProgramming \u0026amp; scripting Is this completely required? Maybe not for complete beginners. Does it help? Absolutely yes. Understanding how web apps or any type of application works makes things much easier. You can imagine different entry points to exploit if you understand how systems are designed. Also writing scripts in bash or python makes you more productive through automation.\nEthical Hacking foundations Once you feel confident with these 3 pillars, you can go to the next step. You can study about different topics and areas. For example, binary exploiting, web pentesting, mobile pentesting, wireless hacking, etc. You should start picking a focus, in this post we focus on web pentesting, as it is beginner friendly. Also web applications are the bread and butter in companies nowadays.\nKey concepts to study:\nCIA Triad: CIA refers to Confidentiality, Integrity and Availability. These three concepts are key in information security, and describe properties we want to ensure in our systems and information. Web Security basics, OWASP: Study the OWASP Top 10, which summarizes most frequent web security risks. Authentication and session control: Understand the concepts of Authentication and Authorization, research about how session is handled in web apps, cookies, JWT tokens, etc. Input validation \u0026amp; injection attacks: Learn about SQL Injection, Cross-Site Scripting (XSS), Code Injection, SSTI, and every injection type. Secure development lifecycle: Find out how to implement security controls in code. This can be more related to Blue Team, but as Red Teamer it is important to understand. Firewall evasion: What a firewall is and some techniques/methods to bypass. Some cryptography: Understand what a chiper and a hash are, how information is encrypted to prevent access from 3rd parties. Focusing on web, read about TLS protocol. There are many more topics you can research and learn, but this could be a nice starting point.\nTools and platforms to learn Now you have an idea of what to study, let\u0026rsquo;s see how to start in practical terms.\nSome platforms I personally recommend:\nOverTheWire: Here you can find some CTFs (Capture The Flag) which are fun to play and also really instructive. Bandit games are a must for complete beginners, as you will explore some linux and bash concepts which are basic to continue. The games are leveled by difficulty, in their web you can get all the information about how to play, only a terminal and SSH is required. This helps building your foundation in Linux OS. HackTheBox: Nº 1 platform in cybersecurity. Has a lot of resources to learn all this core fundamentals, and also red team / blue team security topics. It is focused on labs where you can test your skills hacking different boxes but if you really want to learn it is worth to invest time and money in the academy. I have to say the level here is high, specially if you try to hack machines on your own without using some guide or writeup. TryHackMe: More beginner friendly than hackthebox, it provides a lot of guided learning resources. PortSwigger Labs: Practical labs about specific topics, focused on web hacking. They are great to learn and understand different types of attacks, injections, and security misconfigurations. I would recommend digging into this once you have the theoretical basis about these concepts. I have to mention a few tools I am sure you\u0026rsquo;d end up using:\nNmap: This is probably the most famous tool in hacking, allowing you to gather information about ports and services running in a machine. Burpsuite: A proxy tool widely used in web application security testing. It basically allows you to intercept and modify web requests, which can be used to perform several types of attacks. Metasploit: The most used pentesting framework. Contains a large amount of scripts and exploits ready to run. Another crucial step here is to set up your virtual lab environment to test vulnerable applications. To achieve this goal, there are some Linux distributions like Kali, Parrot or BlackArch, but that\u0026rsquo;s a topic for another post.\nFinal thoughs To sum up, this would be my personal roadmap:\nLearn the fundamentals, specially Linux and networking. Install some Linux in a virtual machine, play with it, get comfortable with the terminal. You can start with bandit wargames in OverTheWire. Complete every level and make sure to understand everything as clear as possible. Move to guided boxes on HackTheBox. I recommend you joining their Discord, ask questions, community is great there! Take notes, repeat, learn, improve your skills. Maybe use your own lab environment, create your own vulnerable apps. Hacking is a mixing of curiosity, study and practice. Being passionate and motivated about it is really helpful and will definitely speed up the process. The path is long and really challenging, so keep it going!\n\u0026ldquo;Yes, I am a criminal. My crime is that of curiosity.\u0026rdquo; — The Mentor (Loyd Blankenship) at The Hacker Manifesto\n","permalink":"http://localhost:1313/posts/starting-point/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIf you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\u003c/p\u003e","title":"Starting Point"},{"content":"Introduction In this post series we are going to solve every level from bandit in OverTheWire This guide pretends to be a writeup containing the solutions of the level, designed for beginners.\nTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing WSL, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\nEvery section will contain the solution as well as some tips for people who is absolutely beginner.\nTips First of all, some tips:\nDo not use this as first resource to solve the levels. Try on your own, make mistakes and learn from them. Only check the solution as last resource or if you are completely new and you have absolutely no idea about what to do next. Take notes from your learning. Write up commands, tips and everything which can be useful in the future. Make sure to understand everything. Is a good idea to note the passwords for every level. If you want to continue letter, you can simply log in in the desired level. It is annoying to repeat everything! Follow the tips and information provided at OverTheWire website. Levels Here is my solution for every level:\nBandit0 Bandit1 Bandit2 Bandit3 Bandit4 Bandit5 Bandit6 Bandit7 ","permalink":"http://localhost:1313/posts/otw/bandit/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIn this post series we are going to solve every level from bandit in \u003ca href=\"https://overthewire.org/wargames/bandit/\"\u003e\u003cem\u003eOverTheWire\u003c/em\u003e\u003c/a\u003e\nThis guide pretends to be a writeup containing the solutions of the level, designed for beginners.\u003c/p\u003e\n\u003cp\u003eTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing \u003ca href=\"https://learn.microsoft.com/en-us/windows/wsl/install\"\u003eWSL\u003c/a\u003e, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\u003c/p\u003e","title":"Bandit"},{"content":"Level description The goal of this level is for you to log into the game using SSH. The host to which you need to connect is bandit.labs.overthewire.org, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\nTips for beginners Read a bit about what SSH is. Research about what a port is. Solution This is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go here.\nAt Linux, we can use ssh client to connect to the server. It should be installed by default on your system. If not, please first research about how to install. Once you have the SSH client installed, you can log in into the first level as follows:\nssh bandit0@bandit.labs.overthewire.org -p 2220 Syntax is simple: ssh \u0026lt;username\u0026gt;@\u0026lt;hostname\u0026gt; -p \u0026lt;port\u0026gt;. Usually SSH runs on port 22 by default, but they changed to port 2220 so we must specify it in the command.\nOnce you try to log in, you will see something like this: NB: If it\u0026rsquo;s the first time you try to log in, you will be asked about the authenticity of the host. Just type yes.\nType the password bandit0 and press enter. Now you are inside bandit server, ready to begin with bandit1!\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit0/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe goal of this level is for you to log into the game using SSH. The host to which you need to connect is \u003cstrong\u003ebandit.labs.overthewire.org\u003c/strong\u003e, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eRead a bit about what SSH is.\u003c/li\u003e\n\u003cli\u003eResearch about what a port is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go \u003ca href=\"https://en.wikipedia.org/wiki/Secure_Shell\"\u003ehere\u003c/a\u003e.\u003c/p\u003e","title":"Bandit0"},{"content":"Level description The password for the next level is stored in a file called readme located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\nTips for beginners Learn about home directory in Linux. Learn to use cat and ls commands. Solution First step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\nls This shows in terminal the files at the current directory. There you will see the readme file.\nNow we can to check the contents, so let\u0026rsquo;s use cat:\ncat readme To read a file, we use cat \u0026lt;filename\u0026gt;.\nNB: Not every file is human readable in Linux. We deep more about this in later levels.\nThe content of the readme file reveals the password for bandit2 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit1/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u003cstrong\u003ereadme\u003c/strong\u003e located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn about home directory in Linux.\u003c/li\u003e\n\u003cli\u003eLearn to use \u003ccode\u003ecat\u003c/code\u003e and \u003ccode\u003els\u003c/code\u003e commands.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eFirst step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\u003c/p\u003e","title":"Bandit1"},{"content":"Level description The password for the next level is stored in a file called - located in the home directory\nTips for beginners Try to understand why previous solution is not working as you expect. Solution You may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our cat command: The terminal is waiting for something else. This happens due to character - is used to pass arguments to our commands, and the linux shell is interpreting that. To prevent that, we could use:\ncat ./- NB: Dot . is used to refer current directory. The slash / is used at the end of directory name.\nWe get the password for bandit3 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit2/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called - located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eTry to understand why previous solution is not working as you expect.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eYou may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our \u003ccode\u003ecat\u003c/code\u003e command:\n\u003cimg alt=\"bandit2\" loading=\"lazy\" src=\"/images/otw/bandit/bandit2/0.png\"\u003e\u003c/p\u003e\n\u003cp\u003eThe terminal is \u003cem\u003ewaiting\u003c/em\u003e for something else. This happens due to character \u003ccode\u003e-\u003c/code\u003e is used to pass arguments to our commands, and the linux shell is interpreting that.\nTo prevent that, we could use:\u003c/p\u003e","title":"Bandit2"},{"content":"Level description The password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\nTips for beginners Think about how to escape the whitespaces. Solution After login in the machine as bandit3, we can see the filename \u0026ndash;spaces in this filename\u0026ndash;.\nNow we have 2 problems:\nSame as previous level, filename starts with --, so it will be interpreted as an argument. Address this problem using ./. Filename contains whitespaces. This is an issue, as bash interpretes whitespaces to separate commands. To solve the second problem, we must escape the whitespace character in some way. Here is the solution:\ncat ./--spaces\\ in\\ this\\ filename-- NB: Little trick, you can start writting filename and press Tab to autocomplete the name. The \\ is going to be inserted automatically.\nJust using the \\ we can escape the whitespace.\nNow we can continue with the bandit4 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit3/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eThink about how to \u003cem\u003eescape\u003c/em\u003e the whitespaces.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAfter login in the machine as bandit3, we can see the filename \u003cem\u003e\u0026ndash;spaces in this filename\u0026ndash;\u003c/em\u003e.\u003c/p\u003e\n\u003cp\u003eNow we have 2 problems:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eSame as previous level, filename starts with \u003ccode\u003e--\u003c/code\u003e, so it will be interpreted as an argument. Address this problem using \u003ccode\u003e./\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003eFilename contains \u003cstrong\u003ewhitespaces\u003c/strong\u003e. This is an issue, as bash interpretes whitespaces to separate commands.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eTo solve the second problem, we must escape the whitespace character in some way. Here is the solution:\u003c/p\u003e","title":"Bandit3"},{"content":"Level description The password for the next level is stored in a hidden file in the inhere directory.\nTips for beginners Learn how to navigate directories in Linux. First understand what a hidden file is. Solution Listing directory files inside bandit4\u0026rsquo;s home directory, show directory inhere.\nNB: How to distinguish files and directories in Linux? Use ls -l and see the difference.\nWe have 2 options now:\nMove to inhere directory and check contens again. Check contents directly. Moving to another directory can be done using cd \u0026lt;dirName\u0026gt;. If you prefer to check directory contents directly, use ls \u0026lt;dirName\u0026gt;.\nAfter checking inhere contents via ls, we see nothing. The reason is the file is a hidden file. A hidden file in Linux is everyfile whose name starts with dot .. Hidden files are not shown by default with ls command, so we must add a special flag -a to list all files: NB: Both flags -l and -a cna be combined into a single flag -al, which is shorter to type.\nAs you can see, filename is \u0026hellip;Hidding-From-You starting with three dots. Reading file contents should be easy at this point!\nNext level is bandit5.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit4/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a hidden file in the inhere directory.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to navigate directories in Linux.\u003c/li\u003e\n\u003cli\u003eFirst understand what a hidden file is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eListing directory files inside bandit4\u0026rsquo;s home directory, show directory \u003cstrong\u003einhere\u003c/strong\u003e.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e How to distinguish files and directories in Linux? Use \u003ccode\u003els -l\u003c/code\u003e and see the difference.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eWe have 2 options now:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eMove to inhere directory and check contens again.\u003c/li\u003e\n\u003cli\u003eCheck contents directly.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eMoving to another directory can be done using \u003ccode\u003ecd \u0026lt;dirName\u0026gt;\u003c/code\u003e. If you prefer to check directory contents directly, use \u003ccode\u003els \u0026lt;dirName\u0026gt;\u003c/code\u003e.\u003c/p\u003e","title":"Bandit4"},{"content":"Level description The password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\nTips for beginners What means human-readable file? Is there any way to check filetype at Linux?. Solution Checking inhere\u0026rsquo;s contents shows some files names \u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII here\nSo now, our goal is checking if file content of every file in the folder is ASCII or not. file \u0026lt;filename\u0026gt; does the job. Note the use of *. That called a wildcard regular expression, we\u0026rsquo;ll deep into it in later levels. An easy approach could be checking every file separately:\nfile ./--file00 file ./--file01 ... file ./--file09 But that\u0026rsquo;s not funny, imagine we have 100 files to check. All the files are in the same directory, so we can use cat ./* where ./* matches every filename in the directory, applying file to every file.\nNB: Another approach is to use find with certaing flags. Try to do in different ways, don\u0026rsquo;t stick to my solution.\nThe file \u0026ndash;file00 content is not readable, so get password from \u0026ndash;file07 and continue with bandit6.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit5/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eWhat means human-readable file?\u003c/li\u003e\n\u003cli\u003eIs there any way to check filetype at Linux?.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eChecking inhere\u0026rsquo;s contents shows some files names \u003cstrong\u003e\u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09\u003c/strong\u003e. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII \u003ca href=\"https://en.wikipedia.org/wiki/ASCII\"\u003ehere\u003c/a\u003e\u003c/p\u003e","title":"Bandit5"},{"content":"Level description The password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\nhuman-readable 1033 bytes in size not executable Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution The purpose of the level is showing us how to find for files. Listing contents of inhere, we can see some folders, containing a lot of files inside: NB: Adding -R to ls shows recursively the content of every folder inside the directory listed.\nSo this time, checking every file is not an option. We need to find a file with some properties, specific size, not excutable and human-readable. Let\u0026rsquo;s explain the command we\u0026rsquo;re using:\nfind inhere/ -size 1033c ! -executable First, we specify the directory, in this case inhere. The option -size 1033c returns files of 1033 bytes. Then, with -executable we would get executable files, but we want not executable files, that\u0026rsquo;s why we are adding ! before.\nNB: By default, the -size option takes as argument the number of blocks. For example, -size 2 means 2 blocks of 512 bytes, so its 1024. The c is used to specify exact bytes. Don\u0026rsquo;t ask me why it\u0026rsquo;s c and not b 😅.\nThe property of human-readability is not implemented in find. This is not an issue, previous command returns a single file and it is human readable (we could confirm using file): Extra tip: try to use the following:\nfind inhere/ -size 1033c ! -executable | file You get the same result! The pipe | is a great tool to execute 2+ commands in one line.\nGet your password and continue with bandit7.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit6/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ehuman-readable\u003c/li\u003e\n\u003cli\u003e1033 bytes in size\u003c/li\u003e\n\u003cli\u003enot executable\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThe purpose of the level is showing us how to find for files. Listing contents of \u003cstrong\u003einhere\u003c/strong\u003e, we can see some folders, containing a lot of files inside:\n\u003cimg alt=\"bandit6_0\" loading=\"lazy\" src=\"/images/otw/bandit/bandit6/0.png\"\u003e\u003c/p\u003e","title":"Bandit6"},{"content":"Level description The password for the next level is stored somewhere on the server and has all of the following properties:\nowned by user bandit7 owned by group bandit6 33 bytes in size Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution This is very straightforward to do after completing previous level. Now we need to identify a file owned by user bandit7 and group bandi6. Furthermore, the file is somewhere on the server, which means we have to find in the root directory /.\nfind / -user bandit7 -group bandit6 -size 33c 2\u0026gt;/dev/null NB: I added that strange 2\u0026gt;/dev/null to filter error output. The reason why it works like that is more technical, for now just save this a fast way to filter errors in terminal. We get some errors because looking for files in the whole server may return some unaccesible files, as we don\u0026rsquo;t have root user permissions. We will study Linux permissions in later levels.\nWe should get a single file, containing password for bandit8.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit7/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored somewhere on the server and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eowned by user bandit7\u003c/li\u003e\n\u003cli\u003eowned by group bandit6\u003c/li\u003e\n\u003cli\u003e33 bytes in size\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is very straightforward to do after completing previous level. Now we need to identify a file owned by user bandit7 and group bandi6. Furthermore, the file is \u003cstrong\u003esomewhere on the server\u003c/strong\u003e, which means we have to find in the root directory \u003ccode\u003e/\u003c/code\u003e.\u003c/p\u003e","title":"Bandit7"},{"content":"Level description The password for the next level is stored in the file data.txt next to the word millionth.\nTips for beginners Learn how to filter file contents. Solution At previous levels, we discovered how to find for files. Now it\u0026rsquo;s time to find for content inside a file. grep command is going to help with that task.\nNB: Of course I don\u0026rsquo;t want to spoil you the password!\nNotice how this can achieved in different ways.\nUsing grep \u0026lt;keyword\u0026gt; \u0026lt;filename\u0026gt;. Using the pipe | to execute grep over the result of cat command. Take you favorite path to solve the level, and continue with bandit9.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit8/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the file \u003cstrong\u003edata.txt\u003c/strong\u003e next to the word \u003cstrong\u003emillionth\u003c/strong\u003e.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to filter file contents.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAt previous levels, we discovered how to find for files. Now it\u0026rsquo;s time to find for content inside a file. \u003ccode\u003egrep\u003c/code\u003e command is going to help with that task.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"bandit8\" loading=\"lazy\" src=\"/images/otw/bandit/bandit8/0.png\"\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e Of course I don\u0026rsquo;t want to spoil you the password!\u003c/p\u003e","title":"Bandit8"},{"content":"Level description The password for the next level is stored in the file data.txt and is the only line of text that occurs only once.\nTips for beginners First, apply sort to file content. Solution This level is a bit tricky. First, examine the file contents. Using head shows the 10 first lines of a file:\nNB: If you want to show more lines: head -20 or the number of your choice.\nThere are tons of different passwords. The correct one is the only line of text that occurs only once. Try to research how to do on your own. You maybe find uniq. This command has a very interesting flag, -u, used to show only the uniq lines. Let\u0026rsquo;s try with that:\nFor some reason, is not working. The trick here is to sort the file contents before applying uniq. This can be achieved using sort, so the final command looks like this:\ncat data.txt | sort | uniq -u NB: You need to sort lines first because uniq only detects consecutive repetitions. First time I solved this it took a while 😅.\nAfter getting the password, we can continue with bandit10.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit9/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the file \u003cstrong\u003edata.txt\u003c/strong\u003e and is the only line of text that occurs only once.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst, apply \u003ccode\u003esort\u003c/code\u003e to file content.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis level is a bit tricky. First, examine the file contents. Using \u003ccode\u003ehead\u003c/code\u003e shows the 10 first lines of a file:\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"bandit9_0\" loading=\"lazy\" src=\"/images/otw/bandit/bandit9/0.png\"\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e If you want to show more lines: \u003ccode\u003ehead -20\u003c/code\u003e or the number of your choice.\u003c/p\u003e","title":"Bandit9"},{"content":"Level description The password for the next level is stored in the file data.txt in one of the few human-readable strings, preceded by several \u0026lsquo;=\u0026rsquo; characters.\nTips for beginners You can apply things from previous levels. Solution This level is a bit tricky. First, examine the file contents. Using head shows the 10 first lines of a file:\nNB: If you want to show more lines: head -20 or the number of your choice.\nThere are tons of different passwords. The correct one is the only line of text that occurs only once. Try to research how to do on your own. You maybe find uniq. This command has a very interesting flag, -u, used to show only the uniq lines. Let\u0026rsquo;s try with that:\nFor some reason, is not working. The trick here is to sort the file contents before applying uniq. This can be achieved using sort, so the final command looks like this:\ncat data.txt | sort | uniq -u NB: You need to sort lines first because uniq only detects consecutive repetitions. First time I solved this it took a while 😅.\nAfter getting the password, we can continue with bandit10.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit10/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the file \u003cstrong\u003edata.txt\u003c/strong\u003e in one of the few human-readable strings, preceded by several \u0026lsquo;=\u0026rsquo; characters.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eYou can apply things from previous levels.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis level is a bit tricky. First, examine the file contents. Using \u003ccode\u003ehead\u003c/code\u003e shows the 10 first lines of a file:\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"bandit9_0\" loading=\"lazy\" src=\"/images/otw/bandit/bandit9/0.png\"\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e If you want to show more lines: \u003ccode\u003ehead -20\u003c/code\u003e or the number of your choice.\u003c/p\u003e","title":"Bandit10"},{"content":"👨‍💻 whoami Hey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\nWhat is this❓​ This blog is basically my thoughts on several hacking topics. Here you’ll see:\nWriteups from CTF challenges, from platforms like HackTheBox or OverTheWire.\nWalkthroughs and notes on pentesting techniques I’m learning or testing.\nSome posts on cryptography — because math can be fun (sometimes).\nRandom topics that freaks like me may (just may) find interesting.\nThe idea is simple: share what I learn, document my journey, and maybe help others who are also diving into the exciting world of ethical hacking.\n📫 Contact Want to say hi, share ideas, or just geek out about hacking? Reach me here:\n📧 Email: mrb0b1073@proton.me 💻​ GitHub: mrb0b173 🟩​ HackTheBox: mrb0b1073 ","permalink":"http://localhost:1313/about/","summary":"\u003ch2 id=\"-whoami\"\u003e👨‍💻 whoami\u003c/h2\u003e\n\u003cp\u003eHey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\u003c/p\u003e\n\u003chr\u003e\n\u003ch2 id=\"what-is-this\"\u003eWhat is this❓​\u003c/h2\u003e\n\u003cp\u003eThis blog is basically my thoughts on several hacking topics. Here you’ll see:\u003c/p\u003e","title":"About"},{"content":"Hey! 👋 I\u0026rsquo;m mrb0b1073 and this is my first post.\nWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\nExcited to start this adventure!\n","permalink":"http://localhost:1313/posts/hello-world/","summary":"\u003cp\u003eHey! 👋 I\u0026rsquo;m \u003cstrong\u003emrb0b1073\u003c/strong\u003e and this is my first post.\u003c/p\u003e\n\u003cp\u003eWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\u003cbr\u003e\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\u003c/p\u003e\n\u003cp\u003eExcited to start this adventure!\u003c/p\u003e","title":"Hello World"},{"content":"Introduction If you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\nIn cybersecurity there are broadly two complementary roles: Blue Team and Red Team. Blue Teams focus on defense, monitoring, incident response, hardening systems and keeping services secure, while Red Teams simulate attackers to find weaknesses and prove what an adversary could do. Ethical hacking aligns closely with Red Team operations, but cybersecurity is highly transversal across IT. There are many specialities or areas, such as cloud security, appsec, pentesting, forensics, governance, risk management, malware analysis, etc. Every topic could deserve its own post, so let\u0026rsquo;s keep it simple and focus on ethical hacking.\nHacker philosophy Let\u0026rsquo;s start with the idea of what is exactly a hacker. A hacker is someone who explores systems to understand how they work, finds creative ways to make or fix things, and solves technical problems. Historically the word describes curiosity, craft, and a drive to improve systems — not criminality. It is important to make the distinction between hacker and cracker, also called cybercriminal. A hacker explores, builds, discloses responsibly and works to improve security. They work in authorized environments or labs. On the other hand, a cracker breaks into systems for theft, vandalism or other illicit gain.\nHere you can find the most popularized ideas often summarized as the hacker ethic:\nCuriosity first: Learn by exploring and tinkering. Freedom of information: All knowledge should be shared to help progress. This fits properly with the idea of open source. Mistrust of needless authority: Centralized control sometimes blocks innovation. It is always good to question anything, specially common assumptions. Meritocracy: Skills, craft and results matter more than titles. Craftsmanship \u0026amp; elegance: Technical beauty matters. Build clean, clever and efficient solutions. Responsability \u0026amp; ethics: Use your skills to build, fix, educate and defend, not to harm. Core fundamentals Assuming you want to init yourself in hacking, you should first build competence across three basic pillars.\nOperating Systems You should learn as much as possible about Linux and Windows. Specially Linux, all the tools you will be using are meant to be used in a Linux environment. Skill with shell is required, learn basic commands and how to interact with the OS using the terminal. Research about processes, file permissions, package management and logs. A large proportion of web servers around the world run on Linux, although Windows is also widely used. Windows knowledge is really valuable too, considering active directory is strongly used in corporate environments.\nNetworking You have to understand how computers communicate each other. Understand basic networking concepts, IP adresses, subnetting, proxies, find out how internet works. Study some protocols such as TCP/IP, HTTP, DNS or SSH. This could sound confusing for beginners, but this step is not optional! Study different client/server models and how services expose attack surfaces.\nProgramming \u0026amp; scripting Is this completely required? Maybe not for complete beginners. Does it help? Absolutely yes. Understanding how web apps or any type of application works makes things much easier. You can imagine different entry points to exploit if you understand how systems are designed. Also writing scripts in bash or python makes you more productive through automation.\nEthical Hacking foundations Once you feel confident with these 3 pillars, you can go to the next step. You can study about different topics and areas. For example, binary exploiting, web pentesting, mobile pentesting, wireless hacking, etc. You should start picking a focus, in this post we focus on web pentesting, as it is beginner friendly. Also web applications are the bread and butter in companies nowadays.\nKey concepts to study:\nCIA Triad: CIA refers to Confidentiality, Integrity and Availability. These three concepts are key in information security, and describe properties we want to ensure in our systems and information. Web Security basics, OWASP: Study the OWASP Top 10, which summarizes most frequent web security risks. Authentication and session control: Understand the concepts of Authentication and Authorization, research about how session is handled in web apps, cookies, JWT tokens, etc. Input validation \u0026amp; injection attacks: Learn about SQL Injection, Cross-Site Scripting (XSS), Code Injection, SSTI, and every injection type. Secure development lifecycle: Find out how to implement security controls in code. This can be more related to Blue Team, but as Red Teamer it is important to understand. Firewall evasion: What a firewall is and some techniques/methods to bypass. Some cryptography: Understand what a chiper and a hash are, how information is encrypted to prevent access from 3rd parties. Focusing on web, read about TLS protocol. There are many more topics you can research and learn, but this could be a nice starting point.\nTools and platforms to learn Now you have an idea of what to study, let\u0026rsquo;s see how to start in practical terms.\nSome platforms I personally recommend:\nOverTheWire: Here you can find some CTFs (Capture The Flag) which are fun to play and also really instructive. Bandit games are a must for complete beginners, as you will explore some linux and bash concepts which are basic to continue. The games are leveled by difficulty, in their web you can get all the information about how to play, only a terminal and SSH is required. This helps building your foundation in Linux OS. HackTheBox: Nº 1 platform in cybersecurity. Has a lot of resources to learn all this core fundamentals, and also red team / blue team security topics. It is focused on labs where you can test your skills hacking different boxes but if you really want to learn it is worth to invest time and money in the academy. I have to say the level here is high, specially if you try to hack machines on your own without using some guide or writeup. TryHackMe: More beginner friendly than hackthebox, it provides a lot of guided learning resources. PortSwigger Labs: Practical labs about specific topics, focused on web hacking. They are great to learn and understand different types of attacks, injections, and security misconfigurations. I would recommend digging into this once you have the theoretical basis about these concepts. I have to mention a few tools I am sure you\u0026rsquo;d end up using:\nNmap: This is probably the most famous tool in hacking, allowing you to gather information about ports and services running in a machine. Burpsuite: A proxy tool widely used in web application security testing. It basically allows you to intercept and modify web requests, which can be used to perform several types of attacks. Metasploit: The most used pentesting framework. Contains a large amount of scripts and exploits ready to run. Another crucial step here is to set up your virtual lab environment to test vulnerable applications. To achieve this goal, there are some Linux distributions like Kali, Parrot or BlackArch, but that\u0026rsquo;s a topic for another post.\nFinal thoughs To sum up, this would be my personal roadmap:\nLearn the fundamentals, specially Linux and networking. Install some Linux in a virtual machine, play with it, get comfortable with the terminal. You can start with bandit wargames in OverTheWire. Complete every level and make sure to understand everything as clear as possible. Move to guided boxes on HackTheBox. I recommend you joining their Discord, ask questions, community is great there! Take notes, repeat, learn, improve your skills. Maybe use your own lab environment, create your own vulnerable apps. Hacking is a mixing of curiosity, study and practice. Being passionate and motivated about it is really helpful and will definitely speed up the process. The path is long and really challenging, so keep it going!\n\u0026ldquo;Yes, I am a criminal. My crime is that of curiosity.\u0026rdquo; — The Mentor (Loyd Blankenship) at The Hacker Manifesto\n","permalink":"http://localhost:1313/posts/starting-point/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIf you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\u003c/p\u003e","title":"Starting Point"},{"content":"Introduction In this post series we are going to solve every level from bandit in OverTheWire This guide pretends to be a writeup containing the solutions of the level, designed for beginners.\nTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing WSL, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\nEvery section will contain the solution as well as some tips for people who is absolutely beginner.\nTips First of all, some tips:\nDo not use this as first resource to solve the levels. Try on your own, make mistakes and learn from them. Only check the solution as last resource or if you are completely new and you have absolutely no idea about what to do next. Take notes from your learning. Write up commands, tips and everything which can be useful in the future. Make sure to understand everything. Is a good idea to note the passwords for every level. If you want to continue letter, you can simply log in in the desired level. It is annoying to repeat everything! Follow the tips and information provided at OverTheWire website. Levels Here is my solution for every level:\nBandit0 Bandit1 Bandit2 Bandit3 Bandit4 Bandit5 Bandit6 Bandit7 ","permalink":"http://localhost:1313/posts/otw/bandit/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIn this post series we are going to solve every level from bandit in \u003ca href=\"https://overthewire.org/wargames/bandit/\"\u003e\u003cem\u003eOverTheWire\u003c/em\u003e\u003c/a\u003e\nThis guide pretends to be a writeup containing the solutions of the level, designed for beginners.\u003c/p\u003e\n\u003cp\u003eTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing \u003ca href=\"https://learn.microsoft.com/en-us/windows/wsl/install\"\u003eWSL\u003c/a\u003e, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\u003c/p\u003e","title":"Bandit"},{"content":"Level description The goal of this level is for you to log into the game using SSH. The host to which you need to connect is bandit.labs.overthewire.org, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\nTips for beginners Read a bit about what SSH is. Research about what a port is. Solution This is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go here.\nAt Linux, we can use ssh client to connect to the server. It should be installed by default on your system. If not, please first research about how to install. Once you have the SSH client installed, you can log in into the first level as follows:\nssh bandit0@bandit.labs.overthewire.org -p 2220 Syntax is simple: ssh \u0026lt;username\u0026gt;@\u0026lt;hostname\u0026gt; -p \u0026lt;port\u0026gt;. Usually SSH runs on port 22 by default, but they changed to port 2220 so we must specify it in the command.\nOnce you try to log in, you will see something like this: NB: If it\u0026rsquo;s the first time you try to log in, you will be asked about the authenticity of the host. Just type yes.\nType the password bandit0 and press enter. Now you are inside bandit server, ready to begin with bandit1!\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit0/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe goal of this level is for you to log into the game using SSH. The host to which you need to connect is \u003cstrong\u003ebandit.labs.overthewire.org\u003c/strong\u003e, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eRead a bit about what SSH is.\u003c/li\u003e\n\u003cli\u003eResearch about what a port is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go \u003ca href=\"https://en.wikipedia.org/wiki/Secure_Shell\"\u003ehere\u003c/a\u003e.\u003c/p\u003e","title":"Bandit0"},{"content":"Level description The password for the next level is stored in a file called readme located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\nTips for beginners Learn about home directory in Linux. Learn to use cat and ls commands. Solution First step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\nls This shows in terminal the files at the current directory. There you will see the readme file.\nNow we can to check the contents, so let\u0026rsquo;s use cat:\ncat readme To read a file, we use cat \u0026lt;filename\u0026gt;.\nNB: Not every file is human readable in Linux. We deep more about this in later levels.\nThe content of the readme file reveals the password for bandit2 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit1/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u003cstrong\u003ereadme\u003c/strong\u003e located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn about home directory in Linux.\u003c/li\u003e\n\u003cli\u003eLearn to use \u003ccode\u003ecat\u003c/code\u003e and \u003ccode\u003els\u003c/code\u003e commands.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eFirst step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\u003c/p\u003e","title":"Bandit1"},{"content":"Level description The password for the next level is stored in a file called - located in the home directory\nTips for beginners Try to understand why previous solution is not working as you expect. Solution You may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our cat command: The terminal is waiting for something else. This happens due to character - is used to pass arguments to our commands, and the linux shell is interpreting that. To prevent that, we could use:\ncat ./- NB: Dot . is used to refer current directory. The slash / is used at the end of directory name.\nWe get the password for bandit3 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit2/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called - located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eTry to understand why previous solution is not working as you expect.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eYou may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our \u003ccode\u003ecat\u003c/code\u003e command:\n\u003cimg alt=\"bandit2\" loading=\"lazy\" src=\"/images/otw/bandit/bandit2/0.png\"\u003e\u003c/p\u003e\n\u003cp\u003eThe terminal is \u003cem\u003ewaiting\u003c/em\u003e for something else. This happens due to character \u003ccode\u003e-\u003c/code\u003e is used to pass arguments to our commands, and the linux shell is interpreting that.\nTo prevent that, we could use:\u003c/p\u003e","title":"Bandit2"},{"content":"Level description The password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\nTips for beginners Think about how to escape the whitespaces. Solution After login in the machine as bandit3, we can see the filename \u0026ndash;spaces in this filename\u0026ndash;.\nNow we have 2 problems:\nSame as previous level, filename starts with --, so it will be interpreted as an argument. Address this problem using ./. Filename contains whitespaces. This is an issue, as bash interpretes whitespaces to separate commands. To solve the second problem, we must escape the whitespace character in some way. Here is the solution:\ncat ./--spaces\\ in\\ this\\ filename-- NB: Little trick, you can start writting filename and press Tab to autocomplete the name. The \\ is going to be inserted automatically.\nJust using the \\ we can escape the whitespace.\nNow we can continue with the bandit4 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit3/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eThink about how to \u003cem\u003eescape\u003c/em\u003e the whitespaces.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAfter login in the machine as bandit3, we can see the filename \u003cem\u003e\u0026ndash;spaces in this filename\u0026ndash;\u003c/em\u003e.\u003c/p\u003e\n\u003cp\u003eNow we have 2 problems:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eSame as previous level, filename starts with \u003ccode\u003e--\u003c/code\u003e, so it will be interpreted as an argument. Address this problem using \u003ccode\u003e./\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003eFilename contains \u003cstrong\u003ewhitespaces\u003c/strong\u003e. This is an issue, as bash interpretes whitespaces to separate commands.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eTo solve the second problem, we must escape the whitespace character in some way. Here is the solution:\u003c/p\u003e","title":"Bandit3"},{"content":"Level description The password for the next level is stored in a hidden file in the inhere directory.\nTips for beginners Learn how to navigate directories in Linux. First understand what a hidden file is. Solution Listing directory files inside bandit4\u0026rsquo;s home directory, show directory inhere.\nNB: How to distinguish files and directories in Linux? Use ls -l and see the difference.\nWe have 2 options now:\nMove to inhere directory and check contens again. Check contents directly. Moving to another directory can be done using cd \u0026lt;dirName\u0026gt;. If you prefer to check directory contents directly, use ls \u0026lt;dirName\u0026gt;.\nAfter checking inhere contents via ls, we see nothing. The reason is the file is a hidden file. A hidden file in Linux is everyfile whose name starts with dot .. Hidden files are not shown by default with ls command, so we must add a special flag -a to list all files: NB: Both flags -l and -a cna be combined into a single flag -al, which is shorter to type.\nAs you can see, filename is \u0026hellip;Hidding-From-You starting with three dots. Reading file contents should be easy at this point!\nNext level is bandit5.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit4/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a hidden file in the inhere directory.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to navigate directories in Linux.\u003c/li\u003e\n\u003cli\u003eFirst understand what a hidden file is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eListing directory files inside bandit4\u0026rsquo;s home directory, show directory \u003cstrong\u003einhere\u003c/strong\u003e.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e How to distinguish files and directories in Linux? Use \u003ccode\u003els -l\u003c/code\u003e and see the difference.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eWe have 2 options now:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eMove to inhere directory and check contens again.\u003c/li\u003e\n\u003cli\u003eCheck contents directly.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eMoving to another directory can be done using \u003ccode\u003ecd \u0026lt;dirName\u0026gt;\u003c/code\u003e. If you prefer to check directory contents directly, use \u003ccode\u003els \u0026lt;dirName\u0026gt;\u003c/code\u003e.\u003c/p\u003e","title":"Bandit4"},{"content":"Level description The password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\nTips for beginners What means human-readable file? Is there any way to check filetype at Linux?. Solution Checking inhere\u0026rsquo;s contents shows some files names \u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII here\nSo now, our goal is checking if file content of every file in the folder is ASCII or not. file \u0026lt;filename\u0026gt; does the job. Note the use of *. That called a wildcard regular expression, we\u0026rsquo;ll deep into it in later levels. An easy approach could be checking every file separately:\nfile ./--file00 file ./--file01 ... file ./--file09 But that\u0026rsquo;s not funny, imagine we have 100 files to check. All the files are in the same directory, so we can use cat ./* where ./* matches every filename in the directory, applying file to every file.\nNB: Another approach is to use find with certaing flags. Try to do in different ways, don\u0026rsquo;t stick to my solution.\nThe file \u0026ndash;file00 content is not readable, so get password from \u0026ndash;file07 and continue with bandit6.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit5/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eWhat means human-readable file?\u003c/li\u003e\n\u003cli\u003eIs there any way to check filetype at Linux?.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eChecking inhere\u0026rsquo;s contents shows some files names \u003cstrong\u003e\u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09\u003c/strong\u003e. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII \u003ca href=\"https://en.wikipedia.org/wiki/ASCII\"\u003ehere\u003c/a\u003e\u003c/p\u003e","title":"Bandit5"},{"content":"Level description The password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\nhuman-readable 1033 bytes in size not executable Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution The purpose of the level is showing us how to find for files. Listing contents of inhere, we can see some folders, containing a lot of files inside: NB: Adding -R to ls shows recursively the content of every folder inside the directory listed.\nSo this time, checking every file is not an option. We need to find a file with some properties, specific size, not excutable and human-readable. Let\u0026rsquo;s explain the command we\u0026rsquo;re using:\nfind inhere/ -size 1033c ! -executable First, we specify the directory, in this case inhere. The option -size 1033c returns files of 1033 bytes. Then, with -executable we would get executable files, but we want not executable files, that\u0026rsquo;s why we are adding ! before.\nNB: By default, the -size option takes as argument the number of blocks. For example, -size 2 means 2 blocks of 512 bytes, so its 1024. The c is used to specify exact bytes. Don\u0026rsquo;t ask me why it\u0026rsquo;s c and not b 😅.\nThe property of human-readability is not implemented in find. This is not an issue, previous command returns a single file and it is human readable (we could confirm using file): Extra tip: try to use the following:\nfind inhere/ -size 1033c ! -executable | file You get the same result! The pipe | is a great tool to execute 2+ commands in one line.\nGet your password and continue with bandit7.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit6/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ehuman-readable\u003c/li\u003e\n\u003cli\u003e1033 bytes in size\u003c/li\u003e\n\u003cli\u003enot executable\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThe purpose of the level is showing us how to find for files. Listing contents of \u003cstrong\u003einhere\u003c/strong\u003e, we can see some folders, containing a lot of files inside:\n\u003cimg alt=\"bandit6_0\" loading=\"lazy\" src=\"/images/otw/bandit/bandit6/0.png\"\u003e\u003c/p\u003e","title":"Bandit6"},{"content":"Level description The password for the next level is stored somewhere on the server and has all of the following properties:\nowned by user bandit7 owned by group bandit6 33 bytes in size Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution This is very straightforward to do after completing previous level. Now we need to identify a file owned by user bandit7 and group bandi6. Furthermore, the file is somewhere on the server, which means we have to find in the root directory /.\nfind / -user bandit7 -group bandit6 -size 33c 2\u0026gt;/dev/null NB: I added that strange 2\u0026gt;/dev/null to filter error output. The reason why it works like that is more technical, for now just save this a fast way to filter errors in terminal. We get some errors because looking for files in the whole server may return some unaccesible files, as we don\u0026rsquo;t have root user permissions. We will study Linux permissions in later levels.\nWe should get a single file, containing password for bandit8.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit7/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored somewhere on the server and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eowned by user bandit7\u003c/li\u003e\n\u003cli\u003eowned by group bandit6\u003c/li\u003e\n\u003cli\u003e33 bytes in size\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is very straightforward to do after completing previous level. Now we need to identify a file owned by user bandit7 and group bandi6. Furthermore, the file is \u003cstrong\u003esomewhere on the server\u003c/strong\u003e, which means we have to find in the root directory \u003ccode\u003e/\u003c/code\u003e.\u003c/p\u003e","title":"Bandit7"},{"content":"Level description The password for the next level is stored in the file data.txt next to the word millionth.\nTips for beginners Learn how to filter file contents. Solution At previous levels, we discovered how to find for files. Now it\u0026rsquo;s time to find for content inside a file. grep command is going to help with that task.\nNB: Of course I don\u0026rsquo;t want to spoil you the password!\nNotice how this can achieved in different ways.\nUsing grep \u0026lt;keyword\u0026gt; \u0026lt;filename\u0026gt;. Using the pipe | to execute grep over the result of cat command. Take you favorite path to solve the level, and continue with bandit9.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit8/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the file \u003cstrong\u003edata.txt\u003c/strong\u003e next to the word \u003cstrong\u003emillionth\u003c/strong\u003e.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to filter file contents.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAt previous levels, we discovered how to find for files. Now it\u0026rsquo;s time to find for content inside a file. \u003ccode\u003egrep\u003c/code\u003e command is going to help with that task.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"bandit8\" loading=\"lazy\" src=\"/images/otw/bandit/bandit8/0.png\"\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e Of course I don\u0026rsquo;t want to spoil you the password!\u003c/p\u003e","title":"Bandit8"},{"content":"Level description The password for the next level is stored in the file data.txt and is the only line of text that occurs only once.\nTips for beginners First, apply sort to file content. Solution This level is a bit tricky. First, examine the file contents. Using head shows the 10 first lines of a file:\nNB: If you want to show more lines: head -20 or the number of your choice.\nThere are tons of different passwords. The correct one is the only line of text that occurs only once. Try to research how to do on your own. You maybe find uniq. This command has a very interesting flag, -u, used to show only the uniq lines. Let\u0026rsquo;s try with that:\nFor some reason, is not working. The trick here is to sort the file contents before applying uniq. This can be achieved using sort, so the final command looks like this:\ncat data.txt | sort | uniq -u NB: You need to sort lines first because uniq only detects consecutive repetitions. First time I solved this it took a while 😅.\nAfter getting the password, we can continue with bandit10.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit9/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the file \u003cstrong\u003edata.txt\u003c/strong\u003e and is the only line of text that occurs only once.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst, apply \u003ccode\u003esort\u003c/code\u003e to file content.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis level is a bit tricky. First, examine the file contents. Using \u003ccode\u003ehead\u003c/code\u003e shows the 10 first lines of a file:\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"bandit9_0\" loading=\"lazy\" src=\"/images/otw/bandit/bandit9/0.png\"\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e If you want to show more lines: \u003ccode\u003ehead -20\u003c/code\u003e or the number of your choice.\u003c/p\u003e","title":"Bandit9"},{"content":"Level description The password for the next level is stored in the file data.txt in one of the few human-readable strings, preceded by several \u0026lsquo;=\u0026rsquo; characters.\nTips for beginners strings can be used to retrieve human readable-content from a file. You can apply things from previous levels. Solution The file data.txt has mixed content, binary and ASCII. If the password is preceded by several \u0026lsquo;=\u0026rsquo; characters, we can simply filter by some of them. But there is a little problem, content is not fully ASCII, so grep won\u0026rsquo;t work. First\nNB: If you want to show more lines: head -20 or the number of your choice.\nThere are tons of different passwords. The correct one is the only line of text that occurs only once. Try to research how to do on your own. You maybe find uniq. This command has a very interesting flag, -u, used to show only the uniq lines. Let\u0026rsquo;s try with that:\nFor some reason, is not working. The trick here is to sort the file contents before applying uniq. This can be achieved using sort, so the final command looks like this:\ncat data.txt | sort | uniq -u NB: You need to sort lines first because uniq only detects consecutive repetitions. First time I solved this it took a while 😅.\nAfter getting the password, we can continue with bandit10.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit10/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the file \u003cstrong\u003edata.txt\u003c/strong\u003e in one of the few human-readable strings, preceded by several \u0026lsquo;=\u0026rsquo; characters.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003estrings\u003c/code\u003e can be used to retrieve human readable-content from a file.\u003c/li\u003e\n\u003cli\u003eYou can apply things from previous levels.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThe file \u003cstrong\u003edata.txt\u003c/strong\u003e has mixed content, binary and ASCII. If the password is preceded by several \u0026lsquo;=\u0026rsquo; characters, we can simply filter by some of them. But there is a little problem, content is not fully ASCII, so \u003ccode\u003egrep\u003c/code\u003e won\u0026rsquo;t work. First\u003c/p\u003e","title":"Bandit10"},{"content":"👨‍💻 whoami Hey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\nWhat is this❓​ This blog is basically my thoughts on several hacking topics. Here you’ll see:\nWriteups from CTF challenges, from platforms like HackTheBox or OverTheWire.\nWalkthroughs and notes on pentesting techniques I’m learning or testing.\nSome posts on cryptography — because math can be fun (sometimes).\nRandom topics that freaks like me may (just may) find interesting.\nThe idea is simple: share what I learn, document my journey, and maybe help others who are also diving into the exciting world of ethical hacking.\n📫 Contact Want to say hi, share ideas, or just geek out about hacking? Reach me here:\n📧 Email: mrb0b1073@proton.me 💻​ GitHub: mrb0b173 🟩​ HackTheBox: mrb0b1073 ","permalink":"http://localhost:1313/about/","summary":"\u003ch2 id=\"-whoami\"\u003e👨‍💻 whoami\u003c/h2\u003e\n\u003cp\u003eHey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\u003c/p\u003e\n\u003chr\u003e\n\u003ch2 id=\"what-is-this\"\u003eWhat is this❓​\u003c/h2\u003e\n\u003cp\u003eThis blog is basically my thoughts on several hacking topics. Here you’ll see:\u003c/p\u003e","title":"About"},{"content":"Hey! 👋 I\u0026rsquo;m mrb0b1073 and this is my first post.\nWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\nExcited to start this adventure!\n","permalink":"http://localhost:1313/posts/hello-world/","summary":"\u003cp\u003eHey! 👋 I\u0026rsquo;m \u003cstrong\u003emrb0b1073\u003c/strong\u003e and this is my first post.\u003c/p\u003e\n\u003cp\u003eWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\u003cbr\u003e\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\u003c/p\u003e\n\u003cp\u003eExcited to start this adventure!\u003c/p\u003e","title":"Hello World"},{"content":"Introduction If you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\nIn cybersecurity there are broadly two complementary roles: Blue Team and Red Team. Blue Teams focus on defense, monitoring, incident response, hardening systems and keeping services secure, while Red Teams simulate attackers to find weaknesses and prove what an adversary could do. Ethical hacking aligns closely with Red Team operations, but cybersecurity is highly transversal across IT. There are many specialities or areas, such as cloud security, appsec, pentesting, forensics, governance, risk management, malware analysis, etc. Every topic could deserve its own post, so let\u0026rsquo;s keep it simple and focus on ethical hacking.\nHacker philosophy Let\u0026rsquo;s start with the idea of what is exactly a hacker. A hacker is someone who explores systems to understand how they work, finds creative ways to make or fix things, and solves technical problems. Historically the word describes curiosity, craft, and a drive to improve systems — not criminality. It is important to make the distinction between hacker and cracker, also called cybercriminal. A hacker explores, builds, discloses responsibly and works to improve security. They work in authorized environments or labs. On the other hand, a cracker breaks into systems for theft, vandalism or other illicit gain.\nHere you can find the most popularized ideas often summarized as the hacker ethic:\nCuriosity first: Learn by exploring and tinkering. Freedom of information: All knowledge should be shared to help progress. This fits properly with the idea of open source. Mistrust of needless authority: Centralized control sometimes blocks innovation. It is always good to question anything, specially common assumptions. Meritocracy: Skills, craft and results matter more than titles. Craftsmanship \u0026amp; elegance: Technical beauty matters. Build clean, clever and efficient solutions. Responsability \u0026amp; ethics: Use your skills to build, fix, educate and defend, not to harm. Core fundamentals Assuming you want to init yourself in hacking, you should first build competence across three basic pillars.\nOperating Systems You should learn as much as possible about Linux and Windows. Specially Linux, all the tools you will be using are meant to be used in a Linux environment. Skill with shell is required, learn basic commands and how to interact with the OS using the terminal. Research about processes, file permissions, package management and logs. A large proportion of web servers around the world run on Linux, although Windows is also widely used. Windows knowledge is really valuable too, considering active directory is strongly used in corporate environments.\nNetworking You have to understand how computers communicate each other. Understand basic networking concepts, IP adresses, subnetting, proxies, find out how internet works. Study some protocols such as TCP/IP, HTTP, DNS or SSH. This could sound confusing for beginners, but this step is not optional! Study different client/server models and how services expose attack surfaces.\nProgramming \u0026amp; scripting Is this completely required? Maybe not for complete beginners. Does it help? Absolutely yes. Understanding how web apps or any type of application works makes things much easier. You can imagine different entry points to exploit if you understand how systems are designed. Also writing scripts in bash or python makes you more productive through automation.\nEthical Hacking foundations Once you feel confident with these 3 pillars, you can go to the next step. You can study about different topics and areas. For example, binary exploiting, web pentesting, mobile pentesting, wireless hacking, etc. You should start picking a focus, in this post we focus on web pentesting, as it is beginner friendly. Also web applications are the bread and butter in companies nowadays.\nKey concepts to study:\nCIA Triad: CIA refers to Confidentiality, Integrity and Availability. These three concepts are key in information security, and describe properties we want to ensure in our systems and information. Web Security basics, OWASP: Study the OWASP Top 10, which summarizes most frequent web security risks. Authentication and session control: Understand the concepts of Authentication and Authorization, research about how session is handled in web apps, cookies, JWT tokens, etc. Input validation \u0026amp; injection attacks: Learn about SQL Injection, Cross-Site Scripting (XSS), Code Injection, SSTI, and every injection type. Secure development lifecycle: Find out how to implement security controls in code. This can be more related to Blue Team, but as Red Teamer it is important to understand. Firewall evasion: What a firewall is and some techniques/methods to bypass. Some cryptography: Understand what a chiper and a hash are, how information is encrypted to prevent access from 3rd parties. Focusing on web, read about TLS protocol. There are many more topics you can research and learn, but this could be a nice starting point.\nTools and platforms to learn Now you have an idea of what to study, let\u0026rsquo;s see how to start in practical terms.\nSome platforms I personally recommend:\nOverTheWire: Here you can find some CTFs (Capture The Flag) which are fun to play and also really instructive. Bandit games are a must for complete beginners, as you will explore some linux and bash concepts which are basic to continue. The games are leveled by difficulty, in their web you can get all the information about how to play, only a terminal and SSH is required. This helps building your foundation in Linux OS. HackTheBox: Nº 1 platform in cybersecurity. Has a lot of resources to learn all this core fundamentals, and also red team / blue team security topics. It is focused on labs where you can test your skills hacking different boxes but if you really want to learn it is worth to invest time and money in the academy. I have to say the level here is high, specially if you try to hack machines on your own without using some guide or writeup. TryHackMe: More beginner friendly than hackthebox, it provides a lot of guided learning resources. PortSwigger Labs: Practical labs about specific topics, focused on web hacking. They are great to learn and understand different types of attacks, injections, and security misconfigurations. I would recommend digging into this once you have the theoretical basis about these concepts. I have to mention a few tools I am sure you\u0026rsquo;d end up using:\nNmap: This is probably the most famous tool in hacking, allowing you to gather information about ports and services running in a machine. Burpsuite: A proxy tool widely used in web application security testing. It basically allows you to intercept and modify web requests, which can be used to perform several types of attacks. Metasploit: The most used pentesting framework. Contains a large amount of scripts and exploits ready to run. Another crucial step here is to set up your virtual lab environment to test vulnerable applications. To achieve this goal, there are some Linux distributions like Kali, Parrot or BlackArch, but that\u0026rsquo;s a topic for another post.\nFinal thoughs To sum up, this would be my personal roadmap:\nLearn the fundamentals, specially Linux and networking. Install some Linux in a virtual machine, play with it, get comfortable with the terminal. You can start with bandit wargames in OverTheWire. Complete every level and make sure to understand everything as clear as possible. Move to guided boxes on HackTheBox. I recommend you joining their Discord, ask questions, community is great there! Take notes, repeat, learn, improve your skills. Maybe use your own lab environment, create your own vulnerable apps. Hacking is a mixing of curiosity, study and practice. Being passionate and motivated about it is really helpful and will definitely speed up the process. The path is long and really challenging, so keep it going!\n\u0026ldquo;Yes, I am a criminal. My crime is that of curiosity.\u0026rdquo; — The Mentor (Loyd Blankenship) at The Hacker Manifesto\n","permalink":"http://localhost:1313/posts/starting-point/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIf you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\u003c/p\u003e","title":"Starting Point"},{"content":"Introduction In this post series we are going to solve every level from bandit in OverTheWire This guide pretends to be a writeup containing the solutions of the level, designed for beginners.\nTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing WSL, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\nEvery section will contain the solution as well as some tips for people who is absolutely beginner.\nTips First of all, some tips:\nDo not use this as first resource to solve the levels. Try on your own, make mistakes and learn from them. Only check the solution as last resource or if you are completely new and you have absolutely no idea about what to do next. Take notes from your learning. Write up commands, tips and everything which can be useful in the future. Make sure to understand everything. Is a good idea to note the passwords for every level. If you want to continue letter, you can simply log in in the desired level. It is annoying to repeat everything! Follow the tips and information provided at OverTheWire website. Levels Here is my solution for every level:\nBandit0 Bandit1 Bandit2 Bandit3 Bandit4 Bandit5 Bandit6 Bandit7 ","permalink":"http://localhost:1313/posts/otw/bandit/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIn this post series we are going to solve every level from bandit in \u003ca href=\"https://overthewire.org/wargames/bandit/\"\u003e\u003cem\u003eOverTheWire\u003c/em\u003e\u003c/a\u003e\nThis guide pretends to be a writeup containing the solutions of the level, designed for beginners.\u003c/p\u003e\n\u003cp\u003eTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing \u003ca href=\"https://learn.microsoft.com/en-us/windows/wsl/install\"\u003eWSL\u003c/a\u003e, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\u003c/p\u003e","title":"Bandit"},{"content":"Level description The goal of this level is for you to log into the game using SSH. The host to which you need to connect is bandit.labs.overthewire.org, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\nTips for beginners Read a bit about what SSH is. Research about what a port is. Solution This is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go here.\nAt Linux, we can use ssh client to connect to the server. It should be installed by default on your system. If not, please first research about how to install. Once you have the SSH client installed, you can log in into the first level as follows:\nssh bandit0@bandit.labs.overthewire.org -p 2220 Syntax is simple: ssh \u0026lt;username\u0026gt;@\u0026lt;hostname\u0026gt; -p \u0026lt;port\u0026gt;. Usually SSH runs on port 22 by default, but they changed to port 2220 so we must specify it in the command.\nOnce you try to log in, you will see something like this: NB: If it\u0026rsquo;s the first time you try to log in, you will be asked about the authenticity of the host. Just type yes.\nType the password bandit0 and press enter. Now you are inside bandit server, ready to begin with bandit1!\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit0/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe goal of this level is for you to log into the game using SSH. The host to which you need to connect is \u003cstrong\u003ebandit.labs.overthewire.org\u003c/strong\u003e, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eRead a bit about what SSH is.\u003c/li\u003e\n\u003cli\u003eResearch about what a port is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go \u003ca href=\"https://en.wikipedia.org/wiki/Secure_Shell\"\u003ehere\u003c/a\u003e.\u003c/p\u003e","title":"Bandit0"},{"content":"Level description The password for the next level is stored in a file called readme located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\nTips for beginners Learn about home directory in Linux. Learn to use cat and ls commands. Solution First step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\nls This shows in terminal the files at the current directory. There you will see the readme file.\nNow we can to check the contents, so let\u0026rsquo;s use cat:\ncat readme To read a file, we use cat \u0026lt;filename\u0026gt;.\nNB: Not every file is human readable in Linux. We deep more about this in later levels.\nThe content of the readme file reveals the password for bandit2 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit1/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u003cstrong\u003ereadme\u003c/strong\u003e located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn about home directory in Linux.\u003c/li\u003e\n\u003cli\u003eLearn to use \u003ccode\u003ecat\u003c/code\u003e and \u003ccode\u003els\u003c/code\u003e commands.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eFirst step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\u003c/p\u003e","title":"Bandit1"},{"content":"Level description The password for the next level is stored in a file called - located in the home directory\nTips for beginners Try to understand why previous solution is not working as you expect. Solution You may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our cat command: The terminal is waiting for something else. This happens due to character - is used to pass arguments to our commands, and the linux shell is interpreting that. To prevent that, we could use:\ncat ./- NB: Dot . is used to refer current directory. The slash / is used at the end of directory name.\nWe get the password for bandit3 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit2/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called - located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eTry to understand why previous solution is not working as you expect.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eYou may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our \u003ccode\u003ecat\u003c/code\u003e command:\n\u003cimg alt=\"bandit2\" loading=\"lazy\" src=\"/images/otw/bandit/bandit2/0.png\"\u003e\u003c/p\u003e\n\u003cp\u003eThe terminal is \u003cem\u003ewaiting\u003c/em\u003e for something else. This happens due to character \u003ccode\u003e-\u003c/code\u003e is used to pass arguments to our commands, and the linux shell is interpreting that.\nTo prevent that, we could use:\u003c/p\u003e","title":"Bandit2"},{"content":"Level description The password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\nTips for beginners Think about how to escape the whitespaces. Solution After login in the machine as bandit3, we can see the filename \u0026ndash;spaces in this filename\u0026ndash;.\nNow we have 2 problems:\nSame as previous level, filename starts with --, so it will be interpreted as an argument. Address this problem using ./. Filename contains whitespaces. This is an issue, as bash interpretes whitespaces to separate commands. To solve the second problem, we must escape the whitespace character in some way. Here is the solution:\ncat ./--spaces\\ in\\ this\\ filename-- NB: Little trick, you can start writting filename and press Tab to autocomplete the name. The \\ is going to be inserted automatically.\nJust using the \\ we can escape the whitespace.\nNow we can continue with the bandit4 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit3/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eThink about how to \u003cem\u003eescape\u003c/em\u003e the whitespaces.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAfter login in the machine as bandit3, we can see the filename \u003cem\u003e\u0026ndash;spaces in this filename\u0026ndash;\u003c/em\u003e.\u003c/p\u003e\n\u003cp\u003eNow we have 2 problems:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eSame as previous level, filename starts with \u003ccode\u003e--\u003c/code\u003e, so it will be interpreted as an argument. Address this problem using \u003ccode\u003e./\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003eFilename contains \u003cstrong\u003ewhitespaces\u003c/strong\u003e. This is an issue, as bash interpretes whitespaces to separate commands.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eTo solve the second problem, we must escape the whitespace character in some way. Here is the solution:\u003c/p\u003e","title":"Bandit3"},{"content":"Level description The password for the next level is stored in a hidden file in the inhere directory.\nTips for beginners Learn how to navigate directories in Linux. First understand what a hidden file is. Solution Listing directory files inside bandit4\u0026rsquo;s home directory, show directory inhere.\nNB: How to distinguish files and directories in Linux? Use ls -l and see the difference.\nWe have 2 options now:\nMove to inhere directory and check contens again. Check contents directly. Moving to another directory can be done using cd \u0026lt;dirName\u0026gt;. If you prefer to check directory contents directly, use ls \u0026lt;dirName\u0026gt;.\nAfter checking inhere contents via ls, we see nothing. The reason is the file is a hidden file. A hidden file in Linux is everyfile whose name starts with dot .. Hidden files are not shown by default with ls command, so we must add a special flag -a to list all files: NB: Both flags -l and -a cna be combined into a single flag -al, which is shorter to type.\nAs you can see, filename is \u0026hellip;Hidding-From-You starting with three dots. Reading file contents should be easy at this point!\nNext level is bandit5.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit4/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a hidden file in the inhere directory.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to navigate directories in Linux.\u003c/li\u003e\n\u003cli\u003eFirst understand what a hidden file is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eListing directory files inside bandit4\u0026rsquo;s home directory, show directory \u003cstrong\u003einhere\u003c/strong\u003e.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e How to distinguish files and directories in Linux? Use \u003ccode\u003els -l\u003c/code\u003e and see the difference.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eWe have 2 options now:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eMove to inhere directory and check contens again.\u003c/li\u003e\n\u003cli\u003eCheck contents directly.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eMoving to another directory can be done using \u003ccode\u003ecd \u0026lt;dirName\u0026gt;\u003c/code\u003e. If you prefer to check directory contents directly, use \u003ccode\u003els \u0026lt;dirName\u0026gt;\u003c/code\u003e.\u003c/p\u003e","title":"Bandit4"},{"content":"Level description The password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\nTips for beginners What means human-readable file? Is there any way to check filetype at Linux?. Solution Checking inhere\u0026rsquo;s contents shows some files names \u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII here\nSo now, our goal is checking if file content of every file in the folder is ASCII or not. file \u0026lt;filename\u0026gt; does the job. Note the use of *. That called a wildcard regular expression, we\u0026rsquo;ll deep into it in later levels. An easy approach could be checking every file separately:\nfile ./--file00 file ./--file01 ... file ./--file09 But that\u0026rsquo;s not funny, imagine we have 100 files to check. All the files are in the same directory, so we can use cat ./* where ./* matches every filename in the directory, applying file to every file.\nNB: Another approach is to use find with certaing flags. Try to do in different ways, don\u0026rsquo;t stick to my solution.\nThe file \u0026ndash;file00 content is not readable, so get password from \u0026ndash;file07 and continue with bandit6.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit5/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eWhat means human-readable file?\u003c/li\u003e\n\u003cli\u003eIs there any way to check filetype at Linux?.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eChecking inhere\u0026rsquo;s contents shows some files names \u003cstrong\u003e\u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09\u003c/strong\u003e. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII \u003ca href=\"https://en.wikipedia.org/wiki/ASCII\"\u003ehere\u003c/a\u003e\u003c/p\u003e","title":"Bandit5"},{"content":"Level description The password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\nhuman-readable 1033 bytes in size not executable Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution The purpose of the level is showing us how to find for files. Listing contents of inhere, we can see some folders, containing a lot of files inside: NB: Adding -R to ls shows recursively the content of every folder inside the directory listed.\nSo this time, checking every file is not an option. We need to find a file with some properties, specific size, not excutable and human-readable. Let\u0026rsquo;s explain the command we\u0026rsquo;re using:\nfind inhere/ -size 1033c ! -executable First, we specify the directory, in this case inhere. The option -size 1033c returns files of 1033 bytes. Then, with -executable we would get executable files, but we want not executable files, that\u0026rsquo;s why we are adding ! before.\nNB: By default, the -size option takes as argument the number of blocks. For example, -size 2 means 2 blocks of 512 bytes, so its 1024. The c is used to specify exact bytes. Don\u0026rsquo;t ask me why it\u0026rsquo;s c and not b 😅.\nThe property of human-readability is not implemented in find. This is not an issue, previous command returns a single file and it is human readable (we could confirm using file): Extra tip: try to use the following:\nfind inhere/ -size 1033c ! -executable | file You get the same result! The pipe | is a great tool to execute 2+ commands in one line.\nGet your password and continue with bandit7.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit6/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ehuman-readable\u003c/li\u003e\n\u003cli\u003e1033 bytes in size\u003c/li\u003e\n\u003cli\u003enot executable\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThe purpose of the level is showing us how to find for files. Listing contents of \u003cstrong\u003einhere\u003c/strong\u003e, we can see some folders, containing a lot of files inside:\n\u003cimg alt=\"bandit6_0\" loading=\"lazy\" src=\"/images/otw/bandit/bandit6/0.png\"\u003e\u003c/p\u003e","title":"Bandit6"},{"content":"Level description The password for the next level is stored somewhere on the server and has all of the following properties:\nowned by user bandit7 owned by group bandit6 33 bytes in size Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution This is very straightforward to do after completing previous level. Now we need to identify a file owned by user bandit7 and group bandi6. Furthermore, the file is somewhere on the server, which means we have to find in the root directory /.\nfind / -user bandit7 -group bandit6 -size 33c 2\u0026gt;/dev/null NB: I added that strange 2\u0026gt;/dev/null to filter error output. The reason why it works like that is more technical, for now just save this a fast way to filter errors in terminal. We get some errors because looking for files in the whole server may return some unaccesible files, as we don\u0026rsquo;t have root user permissions. We will study Linux permissions in later levels.\nWe should get a single file, containing password for bandit8.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit7/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored somewhere on the server and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eowned by user bandit7\u003c/li\u003e\n\u003cli\u003eowned by group bandit6\u003c/li\u003e\n\u003cli\u003e33 bytes in size\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is very straightforward to do after completing previous level. Now we need to identify a file owned by user bandit7 and group bandi6. Furthermore, the file is \u003cstrong\u003esomewhere on the server\u003c/strong\u003e, which means we have to find in the root directory \u003ccode\u003e/\u003c/code\u003e.\u003c/p\u003e","title":"Bandit7"},{"content":"Level description The password for the next level is stored in the file data.txt next to the word millionth.\nTips for beginners Learn how to filter file contents. Solution At previous levels, we discovered how to find for files. Now it\u0026rsquo;s time to find for content inside a file. grep command is going to help with that task.\nNB: Of course I don\u0026rsquo;t want to spoil you the password!\nNotice how this can achieved in different ways.\nUsing grep \u0026lt;keyword\u0026gt; \u0026lt;filename\u0026gt;. Using the pipe | to execute grep over the result of cat command. Take you favorite path to solve the level, and continue with bandit9.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit8/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the file \u003cstrong\u003edata.txt\u003c/strong\u003e next to the word \u003cstrong\u003emillionth\u003c/strong\u003e.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to filter file contents.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAt previous levels, we discovered how to find for files. Now it\u0026rsquo;s time to find for content inside a file. \u003ccode\u003egrep\u003c/code\u003e command is going to help with that task.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"bandit8\" loading=\"lazy\" src=\"/images/otw/bandit/bandit8/0.png\"\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e Of course I don\u0026rsquo;t want to spoil you the password!\u003c/p\u003e","title":"Bandit8"},{"content":"Level description The password for the next level is stored in the file data.txt and is the only line of text that occurs only once.\nTips for beginners First, apply sort to file content. Solution This level is a bit tricky. First, examine the file contents. Using head shows the 10 first lines of a file:\nNB: If you want to show more lines: head -20 or the number of your choice.\nThere are tons of different passwords. The correct one is the only line of text that occurs only once. Try to research how to do on your own. You maybe find uniq. This command has a very interesting flag, -u, used to show only the uniq lines. Let\u0026rsquo;s try with that:\nFor some reason, is not working. The trick here is to sort the file contents before applying uniq. This can be achieved using sort, so the final command looks like this:\ncat data.txt | sort | uniq -u NB: You need to sort lines first because uniq only detects consecutive repetitions. First time I solved this it took a while 😅.\nAfter getting the password, we can continue with bandit10.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit9/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the file \u003cstrong\u003edata.txt\u003c/strong\u003e and is the only line of text that occurs only once.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst, apply \u003ccode\u003esort\u003c/code\u003e to file content.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis level is a bit tricky. First, examine the file contents. Using \u003ccode\u003ehead\u003c/code\u003e shows the 10 first lines of a file:\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"bandit9_0\" loading=\"lazy\" src=\"/images/otw/bandit/bandit9/0.png\"\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e If you want to show more lines: \u003ccode\u003ehead -20\u003c/code\u003e or the number of your choice.\u003c/p\u003e","title":"Bandit9"},{"content":"Level description The password for the next level is stored in the file data.txt in one of the few human-readable strings, preceded by several \u0026lsquo;=\u0026rsquo; characters.\nTips for beginners strings can be used to retrieve human readable-content from a file. You can apply things from previous levels. Solution The file data.txt has mixed content, binary and ASCII. If the password is preceded by several \u0026lsquo;=\u0026rsquo; characters, we can simply filter by some of them. But there is a little problem, content is not fully ASCII, so grep won\u0026rsquo;t work. First you need to get content with strings to get only the human readable content.\nNB: Try to run both cat and strings separately. Observe the differences.\nThere are tons of different passwords. The correct one is the only line of text that occurs only once. Try to research how to do on your own. You maybe find uniq. This command has a very interesting flag, -u, used to show only the uniq lines. Let\u0026rsquo;s try with that:\nFor some reason, is not working. The trick here is to sort the file contents before applying uniq. This can be achieved using sort, so the final command looks like this:\ncat data.txt | sort | uniq -u NB: You need to sort lines first because uniq only detects consecutive repetitions. First time I solved this it took a while 😅.\nAfter getting the password, we can continue with bandit10.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit10/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the file \u003cstrong\u003edata.txt\u003c/strong\u003e in one of the few human-readable strings, preceded by several \u0026lsquo;=\u0026rsquo; characters.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003estrings\u003c/code\u003e can be used to retrieve human readable-content from a file.\u003c/li\u003e\n\u003cli\u003eYou can apply things from previous levels.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThe file \u003cstrong\u003edata.txt\u003c/strong\u003e has mixed content, binary and ASCII. If the password is preceded by several \u0026lsquo;=\u0026rsquo; characters, we can simply filter by some of them. But there is a little problem, content is not fully ASCII, so \u003ccode\u003egrep\u003c/code\u003e won\u0026rsquo;t work. First you need to get content with \u003ccode\u003estrings\u003c/code\u003e to get only the human readable content.\u003c/p\u003e","title":"Bandit10"},{"content":"👨‍💻 whoami Hey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\nWhat is this❓​ This blog is basically my thoughts on several hacking topics. Here you’ll see:\nWriteups from CTF challenges, from platforms like HackTheBox or OverTheWire.\nWalkthroughs and notes on pentesting techniques I’m learning or testing.\nSome posts on cryptography — because math can be fun (sometimes).\nRandom topics that freaks like me may (just may) find interesting.\nThe idea is simple: share what I learn, document my journey, and maybe help others who are also diving into the exciting world of ethical hacking.\n📫 Contact Want to say hi, share ideas, or just geek out about hacking? Reach me here:\n📧 Email: mrb0b1073@proton.me 💻​ GitHub: mrb0b173 🟩​ HackTheBox: mrb0b1073 ","permalink":"http://localhost:1313/about/","summary":"\u003ch2 id=\"-whoami\"\u003e👨‍💻 whoami\u003c/h2\u003e\n\u003cp\u003eHey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\u003c/p\u003e\n\u003chr\u003e\n\u003ch2 id=\"what-is-this\"\u003eWhat is this❓​\u003c/h2\u003e\n\u003cp\u003eThis blog is basically my thoughts on several hacking topics. Here you’ll see:\u003c/p\u003e","title":"About"},{"content":"Hey! 👋 I\u0026rsquo;m mrb0b1073 and this is my first post.\nWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\nExcited to start this adventure!\n","permalink":"http://localhost:1313/posts/hello-world/","summary":"\u003cp\u003eHey! 👋 I\u0026rsquo;m \u003cstrong\u003emrb0b1073\u003c/strong\u003e and this is my first post.\u003c/p\u003e\n\u003cp\u003eWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\u003cbr\u003e\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\u003c/p\u003e\n\u003cp\u003eExcited to start this adventure!\u003c/p\u003e","title":"Hello World"},{"content":"Introduction If you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\nIn cybersecurity there are broadly two complementary roles: Blue Team and Red Team. Blue Teams focus on defense, monitoring, incident response, hardening systems and keeping services secure, while Red Teams simulate attackers to find weaknesses and prove what an adversary could do. Ethical hacking aligns closely with Red Team operations, but cybersecurity is highly transversal across IT. There are many specialities or areas, such as cloud security, appsec, pentesting, forensics, governance, risk management, malware analysis, etc. Every topic could deserve its own post, so let\u0026rsquo;s keep it simple and focus on ethical hacking.\nHacker philosophy Let\u0026rsquo;s start with the idea of what is exactly a hacker. A hacker is someone who explores systems to understand how they work, finds creative ways to make or fix things, and solves technical problems. Historically the word describes curiosity, craft, and a drive to improve systems — not criminality. It is important to make the distinction between hacker and cracker, also called cybercriminal. A hacker explores, builds, discloses responsibly and works to improve security. They work in authorized environments or labs. On the other hand, a cracker breaks into systems for theft, vandalism or other illicit gain.\nHere you can find the most popularized ideas often summarized as the hacker ethic:\nCuriosity first: Learn by exploring and tinkering. Freedom of information: All knowledge should be shared to help progress. This fits properly with the idea of open source. Mistrust of needless authority: Centralized control sometimes blocks innovation. It is always good to question anything, specially common assumptions. Meritocracy: Skills, craft and results matter more than titles. Craftsmanship \u0026amp; elegance: Technical beauty matters. Build clean, clever and efficient solutions. Responsability \u0026amp; ethics: Use your skills to build, fix, educate and defend, not to harm. Core fundamentals Assuming you want to init yourself in hacking, you should first build competence across three basic pillars.\nOperating Systems You should learn as much as possible about Linux and Windows. Specially Linux, all the tools you will be using are meant to be used in a Linux environment. Skill with shell is required, learn basic commands and how to interact with the OS using the terminal. Research about processes, file permissions, package management and logs. A large proportion of web servers around the world run on Linux, although Windows is also widely used. Windows knowledge is really valuable too, considering active directory is strongly used in corporate environments.\nNetworking You have to understand how computers communicate each other. Understand basic networking concepts, IP adresses, subnetting, proxies, find out how internet works. Study some protocols such as TCP/IP, HTTP, DNS or SSH. This could sound confusing for beginners, but this step is not optional! Study different client/server models and how services expose attack surfaces.\nProgramming \u0026amp; scripting Is this completely required? Maybe not for complete beginners. Does it help? Absolutely yes. Understanding how web apps or any type of application works makes things much easier. You can imagine different entry points to exploit if you understand how systems are designed. Also writing scripts in bash or python makes you more productive through automation.\nEthical Hacking foundations Once you feel confident with these 3 pillars, you can go to the next step. You can study about different topics and areas. For example, binary exploiting, web pentesting, mobile pentesting, wireless hacking, etc. You should start picking a focus, in this post we focus on web pentesting, as it is beginner friendly. Also web applications are the bread and butter in companies nowadays.\nKey concepts to study:\nCIA Triad: CIA refers to Confidentiality, Integrity and Availability. These three concepts are key in information security, and describe properties we want to ensure in our systems and information. Web Security basics, OWASP: Study the OWASP Top 10, which summarizes most frequent web security risks. Authentication and session control: Understand the concepts of Authentication and Authorization, research about how session is handled in web apps, cookies, JWT tokens, etc. Input validation \u0026amp; injection attacks: Learn about SQL Injection, Cross-Site Scripting (XSS), Code Injection, SSTI, and every injection type. Secure development lifecycle: Find out how to implement security controls in code. This can be more related to Blue Team, but as Red Teamer it is important to understand. Firewall evasion: What a firewall is and some techniques/methods to bypass. Some cryptography: Understand what a chiper and a hash are, how information is encrypted to prevent access from 3rd parties. Focusing on web, read about TLS protocol. There are many more topics you can research and learn, but this could be a nice starting point.\nTools and platforms to learn Now you have an idea of what to study, let\u0026rsquo;s see how to start in practical terms.\nSome platforms I personally recommend:\nOverTheWire: Here you can find some CTFs (Capture The Flag) which are fun to play and also really instructive. Bandit games are a must for complete beginners, as you will explore some linux and bash concepts which are basic to continue. The games are leveled by difficulty, in their web you can get all the information about how to play, only a terminal and SSH is required. This helps building your foundation in Linux OS. HackTheBox: Nº 1 platform in cybersecurity. Has a lot of resources to learn all this core fundamentals, and also red team / blue team security topics. It is focused on labs where you can test your skills hacking different boxes but if you really want to learn it is worth to invest time and money in the academy. I have to say the level here is high, specially if you try to hack machines on your own without using some guide or writeup. TryHackMe: More beginner friendly than hackthebox, it provides a lot of guided learning resources. PortSwigger Labs: Practical labs about specific topics, focused on web hacking. They are great to learn and understand different types of attacks, injections, and security misconfigurations. I would recommend digging into this once you have the theoretical basis about these concepts. I have to mention a few tools I am sure you\u0026rsquo;d end up using:\nNmap: This is probably the most famous tool in hacking, allowing you to gather information about ports and services running in a machine. Burpsuite: A proxy tool widely used in web application security testing. It basically allows you to intercept and modify web requests, which can be used to perform several types of attacks. Metasploit: The most used pentesting framework. Contains a large amount of scripts and exploits ready to run. Another crucial step here is to set up your virtual lab environment to test vulnerable applications. To achieve this goal, there are some Linux distributions like Kali, Parrot or BlackArch, but that\u0026rsquo;s a topic for another post.\nFinal thoughs To sum up, this would be my personal roadmap:\nLearn the fundamentals, specially Linux and networking. Install some Linux in a virtual machine, play with it, get comfortable with the terminal. You can start with bandit wargames in OverTheWire. Complete every level and make sure to understand everything as clear as possible. Move to guided boxes on HackTheBox. I recommend you joining their Discord, ask questions, community is great there! Take notes, repeat, learn, improve your skills. Maybe use your own lab environment, create your own vulnerable apps. Hacking is a mixing of curiosity, study and practice. Being passionate and motivated about it is really helpful and will definitely speed up the process. The path is long and really challenging, so keep it going!\n\u0026ldquo;Yes, I am a criminal. My crime is that of curiosity.\u0026rdquo; — The Mentor (Loyd Blankenship) at The Hacker Manifesto\n","permalink":"http://localhost:1313/posts/starting-point/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIf you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\u003c/p\u003e","title":"Starting Point"},{"content":"Introduction In this post series we are going to solve every level from bandit in OverTheWire This guide pretends to be a writeup containing the solutions of the level, designed for beginners.\nTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing WSL, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\nEvery section will contain the solution as well as some tips for people who is absolutely beginner.\nTips First of all, some tips:\nDo not use this as first resource to solve the levels. Try on your own, make mistakes and learn from them. Only check the solution as last resource or if you are completely new and you have absolutely no idea about what to do next. Take notes from your learning. Write up commands, tips and everything which can be useful in the future. Make sure to understand everything. Is a good idea to note the passwords for every level. If you want to continue letter, you can simply log in in the desired level. It is annoying to repeat everything! Follow the tips and information provided at OverTheWire website. Levels Here is my solution for every level:\nBandit0 Bandit1 Bandit2 Bandit3 Bandit4 Bandit5 Bandit6 Bandit7 ","permalink":"http://localhost:1313/posts/otw/bandit/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIn this post series we are going to solve every level from bandit in \u003ca href=\"https://overthewire.org/wargames/bandit/\"\u003e\u003cem\u003eOverTheWire\u003c/em\u003e\u003c/a\u003e\nThis guide pretends to be a writeup containing the solutions of the level, designed for beginners.\u003c/p\u003e\n\u003cp\u003eTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing \u003ca href=\"https://learn.microsoft.com/en-us/windows/wsl/install\"\u003eWSL\u003c/a\u003e, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\u003c/p\u003e","title":"Bandit"},{"content":"Level description The goal of this level is for you to log into the game using SSH. The host to which you need to connect is bandit.labs.overthewire.org, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\nTips for beginners Read a bit about what SSH is. Research about what a port is. Solution This is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go here.\nAt Linux, we can use ssh client to connect to the server. It should be installed by default on your system. If not, please first research about how to install. Once you have the SSH client installed, you can log in into the first level as follows:\nssh bandit0@bandit.labs.overthewire.org -p 2220 Syntax is simple: ssh \u0026lt;username\u0026gt;@\u0026lt;hostname\u0026gt; -p \u0026lt;port\u0026gt;. Usually SSH runs on port 22 by default, but they changed to port 2220 so we must specify it in the command.\nOnce you try to log in, you will see something like this: NB: If it\u0026rsquo;s the first time you try to log in, you will be asked about the authenticity of the host. Just type yes.\nType the password bandit0 and press enter. Now you are inside bandit server, ready to begin with bandit1!\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit0/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe goal of this level is for you to log into the game using SSH. The host to which you need to connect is \u003cstrong\u003ebandit.labs.overthewire.org\u003c/strong\u003e, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eRead a bit about what SSH is.\u003c/li\u003e\n\u003cli\u003eResearch about what a port is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go \u003ca href=\"https://en.wikipedia.org/wiki/Secure_Shell\"\u003ehere\u003c/a\u003e.\u003c/p\u003e","title":"Bandit0"},{"content":"Level description The password for the next level is stored in a file called readme located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\nTips for beginners Learn about home directory in Linux. Learn to use cat and ls commands. Solution First step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\nls This shows in terminal the files at the current directory. There you will see the readme file.\nNow we can to check the contents, so let\u0026rsquo;s use cat:\ncat readme To read a file, we use cat \u0026lt;filename\u0026gt;.\nNB: Not every file is human readable in Linux. We deep more about this in later levels.\nThe content of the readme file reveals the password for bandit2 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit1/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u003cstrong\u003ereadme\u003c/strong\u003e located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn about home directory in Linux.\u003c/li\u003e\n\u003cli\u003eLearn to use \u003ccode\u003ecat\u003c/code\u003e and \u003ccode\u003els\u003c/code\u003e commands.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eFirst step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\u003c/p\u003e","title":"Bandit1"},{"content":"Level description The password for the next level is stored in a file called - located in the home directory\nTips for beginners Try to understand why previous solution is not working as you expect. Solution You may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our cat command: The terminal is waiting for something else. This happens due to character - is used to pass arguments to our commands, and the linux shell is interpreting that. To prevent that, we could use:\ncat ./- NB: Dot . is used to refer current directory. The slash / is used at the end of directory name.\nWe get the password for bandit3 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit2/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called - located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eTry to understand why previous solution is not working as you expect.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eYou may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our \u003ccode\u003ecat\u003c/code\u003e command:\n\u003cimg alt=\"bandit2\" loading=\"lazy\" src=\"/images/otw/bandit/bandit2/0.png\"\u003e\u003c/p\u003e\n\u003cp\u003eThe terminal is \u003cem\u003ewaiting\u003c/em\u003e for something else. This happens due to character \u003ccode\u003e-\u003c/code\u003e is used to pass arguments to our commands, and the linux shell is interpreting that.\nTo prevent that, we could use:\u003c/p\u003e","title":"Bandit2"},{"content":"Level description The password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\nTips for beginners Think about how to escape the whitespaces. Solution After login in the machine as bandit3, we can see the filename \u0026ndash;spaces in this filename\u0026ndash;.\nNow we have 2 problems:\nSame as previous level, filename starts with --, so it will be interpreted as an argument. Address this problem using ./. Filename contains whitespaces. This is an issue, as bash interpretes whitespaces to separate commands. To solve the second problem, we must escape the whitespace character in some way. Here is the solution:\ncat ./--spaces\\ in\\ this\\ filename-- NB: Little trick, you can start writting filename and press Tab to autocomplete the name. The \\ is going to be inserted automatically.\nJust using the \\ we can escape the whitespace.\nNow we can continue with the bandit4 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit3/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eThink about how to \u003cem\u003eescape\u003c/em\u003e the whitespaces.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAfter login in the machine as bandit3, we can see the filename \u003cem\u003e\u0026ndash;spaces in this filename\u0026ndash;\u003c/em\u003e.\u003c/p\u003e\n\u003cp\u003eNow we have 2 problems:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eSame as previous level, filename starts with \u003ccode\u003e--\u003c/code\u003e, so it will be interpreted as an argument. Address this problem using \u003ccode\u003e./\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003eFilename contains \u003cstrong\u003ewhitespaces\u003c/strong\u003e. This is an issue, as bash interpretes whitespaces to separate commands.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eTo solve the second problem, we must escape the whitespace character in some way. Here is the solution:\u003c/p\u003e","title":"Bandit3"},{"content":"Level description The password for the next level is stored in a hidden file in the inhere directory.\nTips for beginners Learn how to navigate directories in Linux. First understand what a hidden file is. Solution Listing directory files inside bandit4\u0026rsquo;s home directory, show directory inhere.\nNB: How to distinguish files and directories in Linux? Use ls -l and see the difference.\nWe have 2 options now:\nMove to inhere directory and check contens again. Check contents directly. Moving to another directory can be done using cd \u0026lt;dirName\u0026gt;. If you prefer to check directory contents directly, use ls \u0026lt;dirName\u0026gt;.\nAfter checking inhere contents via ls, we see nothing. The reason is the file is a hidden file. A hidden file in Linux is everyfile whose name starts with dot .. Hidden files are not shown by default with ls command, so we must add a special flag -a to list all files: NB: Both flags -l and -a cna be combined into a single flag -al, which is shorter to type.\nAs you can see, filename is \u0026hellip;Hidding-From-You starting with three dots. Reading file contents should be easy at this point!\nNext level is bandit5.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit4/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a hidden file in the inhere directory.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to navigate directories in Linux.\u003c/li\u003e\n\u003cli\u003eFirst understand what a hidden file is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eListing directory files inside bandit4\u0026rsquo;s home directory, show directory \u003cstrong\u003einhere\u003c/strong\u003e.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e How to distinguish files and directories in Linux? Use \u003ccode\u003els -l\u003c/code\u003e and see the difference.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eWe have 2 options now:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eMove to inhere directory and check contens again.\u003c/li\u003e\n\u003cli\u003eCheck contents directly.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eMoving to another directory can be done using \u003ccode\u003ecd \u0026lt;dirName\u0026gt;\u003c/code\u003e. If you prefer to check directory contents directly, use \u003ccode\u003els \u0026lt;dirName\u0026gt;\u003c/code\u003e.\u003c/p\u003e","title":"Bandit4"},{"content":"Level description The password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\nTips for beginners What means human-readable file? Is there any way to check filetype at Linux?. Solution Checking inhere\u0026rsquo;s contents shows some files names \u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII here\nSo now, our goal is checking if file content of every file in the folder is ASCII or not. file \u0026lt;filename\u0026gt; does the job. Note the use of *. That called a wildcard regular expression, we\u0026rsquo;ll deep into it in later levels. An easy approach could be checking every file separately:\nfile ./--file00 file ./--file01 ... file ./--file09 But that\u0026rsquo;s not funny, imagine we have 100 files to check. All the files are in the same directory, so we can use cat ./* where ./* matches every filename in the directory, applying file to every file.\nNB: Another approach is to use find with certaing flags. Try to do in different ways, don\u0026rsquo;t stick to my solution.\nThe file \u0026ndash;file00 content is not readable, so get password from \u0026ndash;file07 and continue with bandit6.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit5/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eWhat means human-readable file?\u003c/li\u003e\n\u003cli\u003eIs there any way to check filetype at Linux?.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eChecking inhere\u0026rsquo;s contents shows some files names \u003cstrong\u003e\u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09\u003c/strong\u003e. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII \u003ca href=\"https://en.wikipedia.org/wiki/ASCII\"\u003ehere\u003c/a\u003e\u003c/p\u003e","title":"Bandit5"},{"content":"Level description The password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\nhuman-readable 1033 bytes in size not executable Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution The purpose of the level is showing us how to find for files. Listing contents of inhere, we can see some folders, containing a lot of files inside: NB: Adding -R to ls shows recursively the content of every folder inside the directory listed.\nSo this time, checking every file is not an option. We need to find a file with some properties, specific size, not excutable and human-readable. Let\u0026rsquo;s explain the command we\u0026rsquo;re using:\nfind inhere/ -size 1033c ! -executable First, we specify the directory, in this case inhere. The option -size 1033c returns files of 1033 bytes. Then, with -executable we would get executable files, but we want not executable files, that\u0026rsquo;s why we are adding ! before.\nNB: By default, the -size option takes as argument the number of blocks. For example, -size 2 means 2 blocks of 512 bytes, so its 1024. The c is used to specify exact bytes. Don\u0026rsquo;t ask me why it\u0026rsquo;s c and not b 😅.\nThe property of human-readability is not implemented in find. This is not an issue, previous command returns a single file and it is human readable (we could confirm using file): Extra tip: try to use the following:\nfind inhere/ -size 1033c ! -executable | file You get the same result! The pipe | is a great tool to execute 2+ commands in one line.\nGet your password and continue with bandit7.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit6/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ehuman-readable\u003c/li\u003e\n\u003cli\u003e1033 bytes in size\u003c/li\u003e\n\u003cli\u003enot executable\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThe purpose of the level is showing us how to find for files. Listing contents of \u003cstrong\u003einhere\u003c/strong\u003e, we can see some folders, containing a lot of files inside:\n\u003cimg alt=\"bandit6_0\" loading=\"lazy\" src=\"/images/otw/bandit/bandit6/0.png\"\u003e\u003c/p\u003e","title":"Bandit6"},{"content":"Level description The password for the next level is stored somewhere on the server and has all of the following properties:\nowned by user bandit7 owned by group bandit6 33 bytes in size Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution This is very straightforward to do after completing previous level. Now we need to identify a file owned by user bandit7 and group bandi6. Furthermore, the file is somewhere on the server, which means we have to find in the root directory /.\nfind / -user bandit7 -group bandit6 -size 33c 2\u0026gt;/dev/null NB: I added that strange 2\u0026gt;/dev/null to filter error output. The reason why it works like that is more technical, for now just save this a fast way to filter errors in terminal. We get some errors because looking for files in the whole server may return some unaccesible files, as we don\u0026rsquo;t have root user permissions. We will study Linux permissions in later levels.\nWe should get a single file, containing password for bandit8.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit7/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored somewhere on the server and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eowned by user bandit7\u003c/li\u003e\n\u003cli\u003eowned by group bandit6\u003c/li\u003e\n\u003cli\u003e33 bytes in size\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is very straightforward to do after completing previous level. Now we need to identify a file owned by user bandit7 and group bandi6. Furthermore, the file is \u003cstrong\u003esomewhere on the server\u003c/strong\u003e, which means we have to find in the root directory \u003ccode\u003e/\u003c/code\u003e.\u003c/p\u003e","title":"Bandit7"},{"content":"Level description The password for the next level is stored in the file data.txt next to the word millionth.\nTips for beginners Learn how to filter file contents. Solution At previous levels, we discovered how to find for files. Now it\u0026rsquo;s time to find for content inside a file. grep command is going to help with that task.\nNB: Of course I don\u0026rsquo;t want to spoil you the password!\nNotice how this can achieved in different ways.\nUsing grep \u0026lt;keyword\u0026gt; \u0026lt;filename\u0026gt;. Using the pipe | to execute grep over the result of cat command. Take you favorite path to solve the level, and continue with bandit9.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit8/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the file \u003cstrong\u003edata.txt\u003c/strong\u003e next to the word \u003cstrong\u003emillionth\u003c/strong\u003e.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to filter file contents.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAt previous levels, we discovered how to find for files. Now it\u0026rsquo;s time to find for content inside a file. \u003ccode\u003egrep\u003c/code\u003e command is going to help with that task.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"bandit8\" loading=\"lazy\" src=\"/images/otw/bandit/bandit8/0.png\"\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e Of course I don\u0026rsquo;t want to spoil you the password!\u003c/p\u003e","title":"Bandit8"},{"content":"Level description The password for the next level is stored in the file data.txt and is the only line of text that occurs only once.\nTips for beginners First, apply sort to file content. Solution This level is a bit tricky. First, examine the file contents. Using head shows the 10 first lines of a file:\nNB: If you want to show more lines: head -20 or the number of your choice.\nThere are tons of different passwords. The correct one is the only line of text that occurs only once. Try to research how to do on your own. You maybe find uniq. This command has a very interesting flag, -u, used to show only the uniq lines. Let\u0026rsquo;s try with that:\nFor some reason, is not working. The trick here is to sort the file contents before applying uniq. This can be achieved using sort, so the final command looks like this:\ncat data.txt | sort | uniq -u NB: You need to sort lines first because uniq only detects consecutive repetitions. First time I solved this it took a while 😅.\nAfter getting the password, we can continue with bandit10.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit9/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the file \u003cstrong\u003edata.txt\u003c/strong\u003e and is the only line of text that occurs only once.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst, apply \u003ccode\u003esort\u003c/code\u003e to file content.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis level is a bit tricky. First, examine the file contents. Using \u003ccode\u003ehead\u003c/code\u003e shows the 10 first lines of a file:\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"bandit9_0\" loading=\"lazy\" src=\"/images/otw/bandit/bandit9/0.png\"\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e If you want to show more lines: \u003ccode\u003ehead -20\u003c/code\u003e or the number of your choice.\u003c/p\u003e","title":"Bandit9"},{"content":"Level description The password for the next level is stored in the file data.txt in one of the few human-readable strings, preceded by several \u0026lsquo;=\u0026rsquo; characters.\nTips for beginners strings can be used to retrieve human readable-content from a file. You can apply things from previous levels. Solution The file data.txt has mixed content, binary and ASCII. If the password is preceded by several \u0026lsquo;=\u0026rsquo; characters, we can simply filter by some of them. But there is a little problem, content is not fully ASCII, so grep won\u0026rsquo;t work. First you need to get content with strings to get only the human readable content.\nNB: Try to run both cat and strings separately. Observe the differences.\nThere are tons of different passwords. The correct one is the only line of text that occurs only once. Try to research how to do on your own. You maybe find uniq. This command has a very interesting flag, -u, used to show only the uniq lines. Let\u0026rsquo;s try with that:\nFor some reason, is not working. The trick here is to sort the file contents before applying uniq. This can be achieved using sort, so the final command looks like this:\ncat data.txt | sort | uniq -u NB: You need to sort lines first because uniq only detects consecutive repetitions. First time I solved this it took a while 😅.\nAfter getting the password, we can continue with bandit10.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit10/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the file \u003cstrong\u003edata.txt\u003c/strong\u003e in one of the few human-readable strings, preceded by several \u0026lsquo;=\u0026rsquo; characters.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003estrings\u003c/code\u003e can be used to retrieve human readable-content from a file.\u003c/li\u003e\n\u003cli\u003eYou can apply things from previous levels.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThe file \u003cstrong\u003edata.txt\u003c/strong\u003e has mixed content, binary and ASCII. If the password is preceded by several \u0026lsquo;=\u0026rsquo; characters, we can simply filter by some of them. But there is a little problem, content is not fully ASCII, so \u003ccode\u003egrep\u003c/code\u003e won\u0026rsquo;t work. First you need to get content with \u003ccode\u003estrings\u003c/code\u003e to get only the human readable content.\u003c/p\u003e","title":"Bandit10"},{"content":"👨‍💻 whoami Hey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\nWhat is this❓​ This blog is basically my thoughts on several hacking topics. Here you’ll see:\nWriteups from CTF challenges, from platforms like HackTheBox or OverTheWire.\nWalkthroughs and notes on pentesting techniques I’m learning or testing.\nSome posts on cryptography — because math can be fun (sometimes).\nRandom topics that freaks like me may (just may) find interesting.\nThe idea is simple: share what I learn, document my journey, and maybe help others who are also diving into the exciting world of ethical hacking.\n📫 Contact Want to say hi, share ideas, or just geek out about hacking? Reach me here:\n📧 Email: mrb0b1073@proton.me 💻​ GitHub: mrb0b173 🟩​ HackTheBox: mrb0b1073 ","permalink":"http://localhost:1313/about/","summary":"\u003ch2 id=\"-whoami\"\u003e👨‍💻 whoami\u003c/h2\u003e\n\u003cp\u003eHey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\u003c/p\u003e\n\u003chr\u003e\n\u003ch2 id=\"what-is-this\"\u003eWhat is this❓​\u003c/h2\u003e\n\u003cp\u003eThis blog is basically my thoughts on several hacking topics. Here you’ll see:\u003c/p\u003e","title":"About"},{"content":"Hey! 👋 I\u0026rsquo;m mrb0b1073 and this is my first post.\nWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\nExcited to start this adventure!\n","permalink":"http://localhost:1313/posts/hello-world/","summary":"\u003cp\u003eHey! 👋 I\u0026rsquo;m \u003cstrong\u003emrb0b1073\u003c/strong\u003e and this is my first post.\u003c/p\u003e\n\u003cp\u003eWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\u003cbr\u003e\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\u003c/p\u003e\n\u003cp\u003eExcited to start this adventure!\u003c/p\u003e","title":"Hello World"},{"content":"Introduction If you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\nIn cybersecurity there are broadly two complementary roles: Blue Team and Red Team. Blue Teams focus on defense, monitoring, incident response, hardening systems and keeping services secure, while Red Teams simulate attackers to find weaknesses and prove what an adversary could do. Ethical hacking aligns closely with Red Team operations, but cybersecurity is highly transversal across IT. There are many specialities or areas, such as cloud security, appsec, pentesting, forensics, governance, risk management, malware analysis, etc. Every topic could deserve its own post, so let\u0026rsquo;s keep it simple and focus on ethical hacking.\nHacker philosophy Let\u0026rsquo;s start with the idea of what is exactly a hacker. A hacker is someone who explores systems to understand how they work, finds creative ways to make or fix things, and solves technical problems. Historically the word describes curiosity, craft, and a drive to improve systems — not criminality. It is important to make the distinction between hacker and cracker, also called cybercriminal. A hacker explores, builds, discloses responsibly and works to improve security. They work in authorized environments or labs. On the other hand, a cracker breaks into systems for theft, vandalism or other illicit gain.\nHere you can find the most popularized ideas often summarized as the hacker ethic:\nCuriosity first: Learn by exploring and tinkering. Freedom of information: All knowledge should be shared to help progress. This fits properly with the idea of open source. Mistrust of needless authority: Centralized control sometimes blocks innovation. It is always good to question anything, specially common assumptions. Meritocracy: Skills, craft and results matter more than titles. Craftsmanship \u0026amp; elegance: Technical beauty matters. Build clean, clever and efficient solutions. Responsability \u0026amp; ethics: Use your skills to build, fix, educate and defend, not to harm. Core fundamentals Assuming you want to init yourself in hacking, you should first build competence across three basic pillars.\nOperating Systems You should learn as much as possible about Linux and Windows. Specially Linux, all the tools you will be using are meant to be used in a Linux environment. Skill with shell is required, learn basic commands and how to interact with the OS using the terminal. Research about processes, file permissions, package management and logs. A large proportion of web servers around the world run on Linux, although Windows is also widely used. Windows knowledge is really valuable too, considering active directory is strongly used in corporate environments.\nNetworking You have to understand how computers communicate each other. Understand basic networking concepts, IP adresses, subnetting, proxies, find out how internet works. Study some protocols such as TCP/IP, HTTP, DNS or SSH. This could sound confusing for beginners, but this step is not optional! Study different client/server models and how services expose attack surfaces.\nProgramming \u0026amp; scripting Is this completely required? Maybe not for complete beginners. Does it help? Absolutely yes. Understanding how web apps or any type of application works makes things much easier. You can imagine different entry points to exploit if you understand how systems are designed. Also writing scripts in bash or python makes you more productive through automation.\nEthical Hacking foundations Once you feel confident with these 3 pillars, you can go to the next step. You can study about different topics and areas. For example, binary exploiting, web pentesting, mobile pentesting, wireless hacking, etc. You should start picking a focus, in this post we focus on web pentesting, as it is beginner friendly. Also web applications are the bread and butter in companies nowadays.\nKey concepts to study:\nCIA Triad: CIA refers to Confidentiality, Integrity and Availability. These three concepts are key in information security, and describe properties we want to ensure in our systems and information. Web Security basics, OWASP: Study the OWASP Top 10, which summarizes most frequent web security risks. Authentication and session control: Understand the concepts of Authentication and Authorization, research about how session is handled in web apps, cookies, JWT tokens, etc. Input validation \u0026amp; injection attacks: Learn about SQL Injection, Cross-Site Scripting (XSS), Code Injection, SSTI, and every injection type. Secure development lifecycle: Find out how to implement security controls in code. This can be more related to Blue Team, but as Red Teamer it is important to understand. Firewall evasion: What a firewall is and some techniques/methods to bypass. Some cryptography: Understand what a chiper and a hash are, how information is encrypted to prevent access from 3rd parties. Focusing on web, read about TLS protocol. There are many more topics you can research and learn, but this could be a nice starting point.\nTools and platforms to learn Now you have an idea of what to study, let\u0026rsquo;s see how to start in practical terms.\nSome platforms I personally recommend:\nOverTheWire: Here you can find some CTFs (Capture The Flag) which are fun to play and also really instructive. Bandit games are a must for complete beginners, as you will explore some linux and bash concepts which are basic to continue. The games are leveled by difficulty, in their web you can get all the information about how to play, only a terminal and SSH is required. This helps building your foundation in Linux OS. HackTheBox: Nº 1 platform in cybersecurity. Has a lot of resources to learn all this core fundamentals, and also red team / blue team security topics. It is focused on labs where you can test your skills hacking different boxes but if you really want to learn it is worth to invest time and money in the academy. I have to say the level here is high, specially if you try to hack machines on your own without using some guide or writeup. TryHackMe: More beginner friendly than hackthebox, it provides a lot of guided learning resources. PortSwigger Labs: Practical labs about specific topics, focused on web hacking. They are great to learn and understand different types of attacks, injections, and security misconfigurations. I would recommend digging into this once you have the theoretical basis about these concepts. I have to mention a few tools I am sure you\u0026rsquo;d end up using:\nNmap: This is probably the most famous tool in hacking, allowing you to gather information about ports and services running in a machine. Burpsuite: A proxy tool widely used in web application security testing. It basically allows you to intercept and modify web requests, which can be used to perform several types of attacks. Metasploit: The most used pentesting framework. Contains a large amount of scripts and exploits ready to run. Another crucial step here is to set up your virtual lab environment to test vulnerable applications. To achieve this goal, there are some Linux distributions like Kali, Parrot or BlackArch, but that\u0026rsquo;s a topic for another post.\nFinal thoughs To sum up, this would be my personal roadmap:\nLearn the fundamentals, specially Linux and networking. Install some Linux in a virtual machine, play with it, get comfortable with the terminal. You can start with bandit wargames in OverTheWire. Complete every level and make sure to understand everything as clear as possible. Move to guided boxes on HackTheBox. I recommend you joining their Discord, ask questions, community is great there! Take notes, repeat, learn, improve your skills. Maybe use your own lab environment, create your own vulnerable apps. Hacking is a mixing of curiosity, study and practice. Being passionate and motivated about it is really helpful and will definitely speed up the process. The path is long and really challenging, so keep it going!\n\u0026ldquo;Yes, I am a criminal. My crime is that of curiosity.\u0026rdquo; — The Mentor (Loyd Blankenship) at The Hacker Manifesto\n","permalink":"http://localhost:1313/posts/starting-point/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIf you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\u003c/p\u003e","title":"Starting Point"},{"content":"Introduction In this post series we are going to solve every level from bandit in OverTheWire This guide pretends to be a writeup containing the solutions of the level, designed for beginners.\nTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing WSL, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\nEvery section will contain the solution as well as some tips for people who is absolutely beginner.\nTips First of all, some tips:\nDo not use this as first resource to solve the levels. Try on your own, make mistakes and learn from them. Only check the solution as last resource or if you are completely new and you have absolutely no idea about what to do next. Take notes from your learning. Write up commands, tips and everything which can be useful in the future. Make sure to understand everything. Is a good idea to note the passwords for every level. If you want to continue letter, you can simply log in in the desired level. It is annoying to repeat everything! Follow the tips and information provided at OverTheWire website. Levels Here is my solution for every level:\nBandit0 Bandit1 Bandit2 Bandit3 Bandit4 Bandit5 Bandit6 Bandit7 ","permalink":"http://localhost:1313/posts/otw/bandit/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIn this post series we are going to solve every level from bandit in \u003ca href=\"https://overthewire.org/wargames/bandit/\"\u003e\u003cem\u003eOverTheWire\u003c/em\u003e\u003c/a\u003e\nThis guide pretends to be a writeup containing the solutions of the level, designed for beginners.\u003c/p\u003e\n\u003cp\u003eTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing \u003ca href=\"https://learn.microsoft.com/en-us/windows/wsl/install\"\u003eWSL\u003c/a\u003e, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\u003c/p\u003e","title":"Bandit"},{"content":"Level description The goal of this level is for you to log into the game using SSH. The host to which you need to connect is bandit.labs.overthewire.org, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\nTips for beginners Read a bit about what SSH is. Research about what a port is. Solution This is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go here.\nAt Linux, we can use ssh client to connect to the server. It should be installed by default on your system. If not, please first research about how to install. Once you have the SSH client installed, you can log in into the first level as follows:\nssh bandit0@bandit.labs.overthewire.org -p 2220 Syntax is simple: ssh \u0026lt;username\u0026gt;@\u0026lt;hostname\u0026gt; -p \u0026lt;port\u0026gt;. Usually SSH runs on port 22 by default, but they changed to port 2220 so we must specify it in the command.\nOnce you try to log in, you will see something like this: NB: If it\u0026rsquo;s the first time you try to log in, you will be asked about the authenticity of the host. Just type yes.\nType the password bandit0 and press enter. Now you are inside bandit server, ready to begin with bandit1!\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit0/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe goal of this level is for you to log into the game using SSH. The host to which you need to connect is \u003cstrong\u003ebandit.labs.overthewire.org\u003c/strong\u003e, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eRead a bit about what SSH is.\u003c/li\u003e\n\u003cli\u003eResearch about what a port is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go \u003ca href=\"https://en.wikipedia.org/wiki/Secure_Shell\"\u003ehere\u003c/a\u003e.\u003c/p\u003e","title":"Bandit0"},{"content":"Level description The password for the next level is stored in a file called readme located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\nTips for beginners Learn about home directory in Linux. Learn to use cat and ls commands. Solution First step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\nls This shows in terminal the files at the current directory. There you will see the readme file.\nNow we can to check the contents, so let\u0026rsquo;s use cat:\ncat readme To read a file, we use cat \u0026lt;filename\u0026gt;.\nNB: Not every file is human readable in Linux. We deep more about this in later levels.\nThe content of the readme file reveals the password for bandit2 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit1/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u003cstrong\u003ereadme\u003c/strong\u003e located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn about home directory in Linux.\u003c/li\u003e\n\u003cli\u003eLearn to use \u003ccode\u003ecat\u003c/code\u003e and \u003ccode\u003els\u003c/code\u003e commands.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eFirst step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\u003c/p\u003e","title":"Bandit1"},{"content":"Level description The password for the next level is stored in a file called - located in the home directory\nTips for beginners Try to understand why previous solution is not working as you expect. Solution You may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our cat command: The terminal is waiting for something else. This happens due to character - is used to pass arguments to our commands, and the linux shell is interpreting that. To prevent that, we could use:\ncat ./- NB: Dot . is used to refer current directory. The slash / is used at the end of directory name.\nWe get the password for bandit3 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit2/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called - located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eTry to understand why previous solution is not working as you expect.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eYou may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our \u003ccode\u003ecat\u003c/code\u003e command:\n\u003cimg alt=\"bandit2\" loading=\"lazy\" src=\"/images/otw/bandit/bandit2/0.png\"\u003e\u003c/p\u003e\n\u003cp\u003eThe terminal is \u003cem\u003ewaiting\u003c/em\u003e for something else. This happens due to character \u003ccode\u003e-\u003c/code\u003e is used to pass arguments to our commands, and the linux shell is interpreting that.\nTo prevent that, we could use:\u003c/p\u003e","title":"Bandit2"},{"content":"Level description The password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\nTips for beginners Think about how to escape the whitespaces. Solution After login in the machine as bandit3, we can see the filename \u0026ndash;spaces in this filename\u0026ndash;.\nNow we have 2 problems:\nSame as previous level, filename starts with --, so it will be interpreted as an argument. Address this problem using ./. Filename contains whitespaces. This is an issue, as bash interpretes whitespaces to separate commands. To solve the second problem, we must escape the whitespace character in some way. Here is the solution:\ncat ./--spaces\\ in\\ this\\ filename-- NB: Little trick, you can start writting filename and press Tab to autocomplete the name. The \\ is going to be inserted automatically.\nJust using the \\ we can escape the whitespace.\nNow we can continue with the bandit4 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit3/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eThink about how to \u003cem\u003eescape\u003c/em\u003e the whitespaces.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAfter login in the machine as bandit3, we can see the filename \u003cem\u003e\u0026ndash;spaces in this filename\u0026ndash;\u003c/em\u003e.\u003c/p\u003e\n\u003cp\u003eNow we have 2 problems:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eSame as previous level, filename starts with \u003ccode\u003e--\u003c/code\u003e, so it will be interpreted as an argument. Address this problem using \u003ccode\u003e./\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003eFilename contains \u003cstrong\u003ewhitespaces\u003c/strong\u003e. This is an issue, as bash interpretes whitespaces to separate commands.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eTo solve the second problem, we must escape the whitespace character in some way. Here is the solution:\u003c/p\u003e","title":"Bandit3"},{"content":"Level description The password for the next level is stored in a hidden file in the inhere directory.\nTips for beginners Learn how to navigate directories in Linux. First understand what a hidden file is. Solution Listing directory files inside bandit4\u0026rsquo;s home directory, show directory inhere.\nNB: How to distinguish files and directories in Linux? Use ls -l and see the difference.\nWe have 2 options now:\nMove to inhere directory and check contens again. Check contents directly. Moving to another directory can be done using cd \u0026lt;dirName\u0026gt;. If you prefer to check directory contents directly, use ls \u0026lt;dirName\u0026gt;.\nAfter checking inhere contents via ls, we see nothing. The reason is the file is a hidden file. A hidden file in Linux is everyfile whose name starts with dot .. Hidden files are not shown by default with ls command, so we must add a special flag -a to list all files: NB: Both flags -l and -a cna be combined into a single flag -al, which is shorter to type.\nAs you can see, filename is \u0026hellip;Hidding-From-You starting with three dots. Reading file contents should be easy at this point!\nNext level is bandit5.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit4/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a hidden file in the inhere directory.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to navigate directories in Linux.\u003c/li\u003e\n\u003cli\u003eFirst understand what a hidden file is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eListing directory files inside bandit4\u0026rsquo;s home directory, show directory \u003cstrong\u003einhere\u003c/strong\u003e.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e How to distinguish files and directories in Linux? Use \u003ccode\u003els -l\u003c/code\u003e and see the difference.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eWe have 2 options now:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eMove to inhere directory and check contens again.\u003c/li\u003e\n\u003cli\u003eCheck contents directly.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eMoving to another directory can be done using \u003ccode\u003ecd \u0026lt;dirName\u0026gt;\u003c/code\u003e. If you prefer to check directory contents directly, use \u003ccode\u003els \u0026lt;dirName\u0026gt;\u003c/code\u003e.\u003c/p\u003e","title":"Bandit4"},{"content":"Level description The password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\nTips for beginners What means human-readable file? Is there any way to check filetype at Linux?. Solution Checking inhere\u0026rsquo;s contents shows some files names \u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII here\nSo now, our goal is checking if file content of every file in the folder is ASCII or not. file \u0026lt;filename\u0026gt; does the job. Note the use of *. That called a wildcard regular expression, we\u0026rsquo;ll deep into it in later levels. An easy approach could be checking every file separately:\nfile ./--file00 file ./--file01 ... file ./--file09 But that\u0026rsquo;s not funny, imagine we have 100 files to check. All the files are in the same directory, so we can use cat ./* where ./* matches every filename in the directory, applying file to every file.\nNB: Another approach is to use find with certaing flags. Try to do in different ways, don\u0026rsquo;t stick to my solution.\nThe file \u0026ndash;file00 content is not readable, so get password from \u0026ndash;file07 and continue with bandit6.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit5/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eWhat means human-readable file?\u003c/li\u003e\n\u003cli\u003eIs there any way to check filetype at Linux?.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eChecking inhere\u0026rsquo;s contents shows some files names \u003cstrong\u003e\u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09\u003c/strong\u003e. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII \u003ca href=\"https://en.wikipedia.org/wiki/ASCII\"\u003ehere\u003c/a\u003e\u003c/p\u003e","title":"Bandit5"},{"content":"Level description The password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\nhuman-readable 1033 bytes in size not executable Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution The purpose of the level is showing us how to find for files. Listing contents of inhere, we can see some folders, containing a lot of files inside: NB: Adding -R to ls shows recursively the content of every folder inside the directory listed.\nSo this time, checking every file is not an option. We need to find a file with some properties, specific size, not excutable and human-readable. Let\u0026rsquo;s explain the command we\u0026rsquo;re using:\nfind inhere/ -size 1033c ! -executable First, we specify the directory, in this case inhere. The option -size 1033c returns files of 1033 bytes. Then, with -executable we would get executable files, but we want not executable files, that\u0026rsquo;s why we are adding ! before.\nNB: By default, the -size option takes as argument the number of blocks. For example, -size 2 means 2 blocks of 512 bytes, so its 1024. The c is used to specify exact bytes. Don\u0026rsquo;t ask me why it\u0026rsquo;s c and not b 😅.\nThe property of human-readability is not implemented in find. This is not an issue, previous command returns a single file and it is human readable (we could confirm using file): Extra tip: try to use the following:\nfind inhere/ -size 1033c ! -executable | file You get the same result! The pipe | is a great tool to execute 2+ commands in one line.\nGet your password and continue with bandit7.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit6/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ehuman-readable\u003c/li\u003e\n\u003cli\u003e1033 bytes in size\u003c/li\u003e\n\u003cli\u003enot executable\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThe purpose of the level is showing us how to find for files. Listing contents of \u003cstrong\u003einhere\u003c/strong\u003e, we can see some folders, containing a lot of files inside:\n\u003cimg alt=\"bandit6_0\" loading=\"lazy\" src=\"/images/otw/bandit/bandit6/0.png\"\u003e\u003c/p\u003e","title":"Bandit6"},{"content":"Level description The password for the next level is stored somewhere on the server and has all of the following properties:\nowned by user bandit7 owned by group bandit6 33 bytes in size Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution This is very straightforward to do after completing previous level. Now we need to identify a file owned by user bandit7 and group bandi6. Furthermore, the file is somewhere on the server, which means we have to find in the root directory /.\nfind / -user bandit7 -group bandit6 -size 33c 2\u0026gt;/dev/null NB: I added that strange 2\u0026gt;/dev/null to filter error output. The reason why it works like that is more technical, for now just save this a fast way to filter errors in terminal. We get some errors because looking for files in the whole server may return some unaccesible files, as we don\u0026rsquo;t have root user permissions. We will study Linux permissions in later levels.\nWe should get a single file, containing password for bandit8.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit7/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored somewhere on the server and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eowned by user bandit7\u003c/li\u003e\n\u003cli\u003eowned by group bandit6\u003c/li\u003e\n\u003cli\u003e33 bytes in size\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is very straightforward to do after completing previous level. Now we need to identify a file owned by user bandit7 and group bandi6. Furthermore, the file is \u003cstrong\u003esomewhere on the server\u003c/strong\u003e, which means we have to find in the root directory \u003ccode\u003e/\u003c/code\u003e.\u003c/p\u003e","title":"Bandit7"},{"content":"Level description The password for the next level is stored in the file data.txt next to the word millionth.\nTips for beginners Learn how to filter file contents. Solution At previous levels, we discovered how to find for files. Now it\u0026rsquo;s time to find for content inside a file. grep command is going to help with that task.\nNB: Of course I don\u0026rsquo;t want to spoil you the password!\nNotice how this can achieved in different ways.\nUsing grep \u0026lt;keyword\u0026gt; \u0026lt;filename\u0026gt;. Using the pipe | to execute grep over the result of cat command. Take you favorite path to solve the level, and continue with bandit9.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit8/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the file \u003cstrong\u003edata.txt\u003c/strong\u003e next to the word \u003cstrong\u003emillionth\u003c/strong\u003e.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to filter file contents.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAt previous levels, we discovered how to find for files. Now it\u0026rsquo;s time to find for content inside a file. \u003ccode\u003egrep\u003c/code\u003e command is going to help with that task.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"bandit8\" loading=\"lazy\" src=\"/images/otw/bandit/bandit8/0.png\"\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e Of course I don\u0026rsquo;t want to spoil you the password!\u003c/p\u003e","title":"Bandit8"},{"content":"Level description The password for the next level is stored in the file data.txt and is the only line of text that occurs only once.\nTips for beginners First, apply sort to file content. Solution This level is a bit tricky. First, examine the file contents. Using head shows the 10 first lines of a file:\nNB: If you want to show more lines: head -20 or the number of your choice.\nThere are tons of different passwords. The correct one is the only line of text that occurs only once. Try to research how to do on your own. You maybe find uniq. This command has a very interesting flag, -u, used to show only the uniq lines. Let\u0026rsquo;s try with that:\nFor some reason, is not working. The trick here is to sort the file contents before applying uniq. This can be achieved using sort, so the final command looks like this:\ncat data.txt | sort | uniq -u NB: You need to sort lines first because uniq only detects consecutive repetitions. First time I solved this it took a while 😅.\nAfter getting the password, we can continue with bandit10.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit9/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the file \u003cstrong\u003edata.txt\u003c/strong\u003e and is the only line of text that occurs only once.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst, apply \u003ccode\u003esort\u003c/code\u003e to file content.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis level is a bit tricky. First, examine the file contents. Using \u003ccode\u003ehead\u003c/code\u003e shows the 10 first lines of a file:\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"bandit9_0\" loading=\"lazy\" src=\"/images/otw/bandit/bandit9/0.png\"\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e If you want to show more lines: \u003ccode\u003ehead -20\u003c/code\u003e or the number of your choice.\u003c/p\u003e","title":"Bandit9"},{"content":"Level description The password for the next level is stored in the file data.txt in one of the few human-readable strings, preceded by several \u0026lsquo;=\u0026rsquo; characters.\nTips for beginners strings can be used to retrieve human readable-content from a file. You can apply things from previous levels. Solution The file data.txt has mixed content, binary and ASCII. If the password is preceded by several \u0026lsquo;=\u0026rsquo; characters, we can simply filter by some of them. But there is a little problem, content is not fully ASCII, so grep won\u0026rsquo;t work. First you need to get content with strings to get only the human readable content.\nNB: Try to run both cat and strings separately. Observe the differences.\nNext level is bandit10.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit10/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the file \u003cstrong\u003edata.txt\u003c/strong\u003e in one of the few human-readable strings, preceded by several \u0026lsquo;=\u0026rsquo; characters.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003estrings\u003c/code\u003e can be used to retrieve human readable-content from a file.\u003c/li\u003e\n\u003cli\u003eYou can apply things from previous levels.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThe file \u003cstrong\u003edata.txt\u003c/strong\u003e has mixed content, binary and ASCII. If the password is preceded by several \u0026lsquo;=\u0026rsquo; characters, we can simply filter by some of them. But there is a little problem, content is not fully ASCII, so \u003ccode\u003egrep\u003c/code\u003e won\u0026rsquo;t work. First you need to get content with \u003ccode\u003estrings\u003c/code\u003e to get only the human readable content.\u003c/p\u003e","title":"Bandit10"},{"content":"👨‍💻 whoami Hey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\nWhat is this❓​ This blog is basically my thoughts on several hacking topics. Here you’ll see:\nWriteups from CTF challenges, from platforms like HackTheBox or OverTheWire.\nWalkthroughs and notes on pentesting techniques I’m learning or testing.\nSome posts on cryptography — because math can be fun (sometimes).\nRandom topics that freaks like me may (just may) find interesting.\nThe idea is simple: share what I learn, document my journey, and maybe help others who are also diving into the exciting world of ethical hacking.\n📫 Contact Want to say hi, share ideas, or just geek out about hacking? Reach me here:\n📧 Email: mrb0b1073@proton.me 💻​ GitHub: mrb0b173 🟩​ HackTheBox: mrb0b1073 ","permalink":"http://localhost:1313/about/","summary":"\u003ch2 id=\"-whoami\"\u003e👨‍💻 whoami\u003c/h2\u003e\n\u003cp\u003eHey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\u003c/p\u003e\n\u003chr\u003e\n\u003ch2 id=\"what-is-this\"\u003eWhat is this❓​\u003c/h2\u003e\n\u003cp\u003eThis blog is basically my thoughts on several hacking topics. Here you’ll see:\u003c/p\u003e","title":"About"},{"content":"Hey! 👋 I\u0026rsquo;m mrb0b1073 and this is my first post.\nWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\nExcited to start this adventure!\n","permalink":"http://localhost:1313/posts/hello-world/","summary":"\u003cp\u003eHey! 👋 I\u0026rsquo;m \u003cstrong\u003emrb0b1073\u003c/strong\u003e and this is my first post.\u003c/p\u003e\n\u003cp\u003eWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\u003cbr\u003e\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\u003c/p\u003e\n\u003cp\u003eExcited to start this adventure!\u003c/p\u003e","title":"Hello World"},{"content":"Introduction If you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\nIn cybersecurity there are broadly two complementary roles: Blue Team and Red Team. Blue Teams focus on defense, monitoring, incident response, hardening systems and keeping services secure, while Red Teams simulate attackers to find weaknesses and prove what an adversary could do. Ethical hacking aligns closely with Red Team operations, but cybersecurity is highly transversal across IT. There are many specialities or areas, such as cloud security, appsec, pentesting, forensics, governance, risk management, malware analysis, etc. Every topic could deserve its own post, so let\u0026rsquo;s keep it simple and focus on ethical hacking.\nHacker philosophy Let\u0026rsquo;s start with the idea of what is exactly a hacker. A hacker is someone who explores systems to understand how they work, finds creative ways to make or fix things, and solves technical problems. Historically the word describes curiosity, craft, and a drive to improve systems — not criminality. It is important to make the distinction between hacker and cracker, also called cybercriminal. A hacker explores, builds, discloses responsibly and works to improve security. They work in authorized environments or labs. On the other hand, a cracker breaks into systems for theft, vandalism or other illicit gain.\nHere you can find the most popularized ideas often summarized as the hacker ethic:\nCuriosity first: Learn by exploring and tinkering. Freedom of information: All knowledge should be shared to help progress. This fits properly with the idea of open source. Mistrust of needless authority: Centralized control sometimes blocks innovation. It is always good to question anything, specially common assumptions. Meritocracy: Skills, craft and results matter more than titles. Craftsmanship \u0026amp; elegance: Technical beauty matters. Build clean, clever and efficient solutions. Responsability \u0026amp; ethics: Use your skills to build, fix, educate and defend, not to harm. Core fundamentals Assuming you want to init yourself in hacking, you should first build competence across three basic pillars.\nOperating Systems You should learn as much as possible about Linux and Windows. Specially Linux, all the tools you will be using are meant to be used in a Linux environment. Skill with shell is required, learn basic commands and how to interact with the OS using the terminal. Research about processes, file permissions, package management and logs. A large proportion of web servers around the world run on Linux, although Windows is also widely used. Windows knowledge is really valuable too, considering active directory is strongly used in corporate environments.\nNetworking You have to understand how computers communicate each other. Understand basic networking concepts, IP adresses, subnetting, proxies, find out how internet works. Study some protocols such as TCP/IP, HTTP, DNS or SSH. This could sound confusing for beginners, but this step is not optional! Study different client/server models and how services expose attack surfaces.\nProgramming \u0026amp; scripting Is this completely required? Maybe not for complete beginners. Does it help? Absolutely yes. Understanding how web apps or any type of application works makes things much easier. You can imagine different entry points to exploit if you understand how systems are designed. Also writing scripts in bash or python makes you more productive through automation.\nEthical Hacking foundations Once you feel confident with these 3 pillars, you can go to the next step. You can study about different topics and areas. For example, binary exploiting, web pentesting, mobile pentesting, wireless hacking, etc. You should start picking a focus, in this post we focus on web pentesting, as it is beginner friendly. Also web applications are the bread and butter in companies nowadays.\nKey concepts to study:\nCIA Triad: CIA refers to Confidentiality, Integrity and Availability. These three concepts are key in information security, and describe properties we want to ensure in our systems and information. Web Security basics, OWASP: Study the OWASP Top 10, which summarizes most frequent web security risks. Authentication and session control: Understand the concepts of Authentication and Authorization, research about how session is handled in web apps, cookies, JWT tokens, etc. Input validation \u0026amp; injection attacks: Learn about SQL Injection, Cross-Site Scripting (XSS), Code Injection, SSTI, and every injection type. Secure development lifecycle: Find out how to implement security controls in code. This can be more related to Blue Team, but as Red Teamer it is important to understand. Firewall evasion: What a firewall is and some techniques/methods to bypass. Some cryptography: Understand what a chiper and a hash are, how information is encrypted to prevent access from 3rd parties. Focusing on web, read about TLS protocol. There are many more topics you can research and learn, but this could be a nice starting point.\nTools and platforms to learn Now you have an idea of what to study, let\u0026rsquo;s see how to start in practical terms.\nSome platforms I personally recommend:\nOverTheWire: Here you can find some CTFs (Capture The Flag) which are fun to play and also really instructive. Bandit games are a must for complete beginners, as you will explore some linux and bash concepts which are basic to continue. The games are leveled by difficulty, in their web you can get all the information about how to play, only a terminal and SSH is required. This helps building your foundation in Linux OS. HackTheBox: Nº 1 platform in cybersecurity. Has a lot of resources to learn all this core fundamentals, and also red team / blue team security topics. It is focused on labs where you can test your skills hacking different boxes but if you really want to learn it is worth to invest time and money in the academy. I have to say the level here is high, specially if you try to hack machines on your own without using some guide or writeup. TryHackMe: More beginner friendly than hackthebox, it provides a lot of guided learning resources. PortSwigger Labs: Practical labs about specific topics, focused on web hacking. They are great to learn and understand different types of attacks, injections, and security misconfigurations. I would recommend digging into this once you have the theoretical basis about these concepts. I have to mention a few tools I am sure you\u0026rsquo;d end up using:\nNmap: This is probably the most famous tool in hacking, allowing you to gather information about ports and services running in a machine. Burpsuite: A proxy tool widely used in web application security testing. It basically allows you to intercept and modify web requests, which can be used to perform several types of attacks. Metasploit: The most used pentesting framework. Contains a large amount of scripts and exploits ready to run. Another crucial step here is to set up your virtual lab environment to test vulnerable applications. To achieve this goal, there are some Linux distributions like Kali, Parrot or BlackArch, but that\u0026rsquo;s a topic for another post.\nFinal thoughs To sum up, this would be my personal roadmap:\nLearn the fundamentals, specially Linux and networking. Install some Linux in a virtual machine, play with it, get comfortable with the terminal. You can start with bandit wargames in OverTheWire. Complete every level and make sure to understand everything as clear as possible. Move to guided boxes on HackTheBox. I recommend you joining their Discord, ask questions, community is great there! Take notes, repeat, learn, improve your skills. Maybe use your own lab environment, create your own vulnerable apps. Hacking is a mixing of curiosity, study and practice. Being passionate and motivated about it is really helpful and will definitely speed up the process. The path is long and really challenging, so keep it going!\n\u0026ldquo;Yes, I am a criminal. My crime is that of curiosity.\u0026rdquo; — The Mentor (Loyd Blankenship) at The Hacker Manifesto\n","permalink":"http://localhost:1313/posts/starting-point/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIf you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\u003c/p\u003e","title":"Starting Point"},{"content":"Introduction In this post series we are going to solve every level from bandit in OverTheWire This guide pretends to be a writeup containing the solutions of the level, designed for beginners.\nTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing WSL, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\nEvery section will contain the solution as well as some tips for people who is absolutely beginner.\nTips First of all, some tips:\nDo not use this as first resource to solve the levels. Try on your own, make mistakes and learn from them. Only check the solution as last resource or if you are completely new and you have absolutely no idea about what to do next. Take notes from your learning. Write up commands, tips and everything which can be useful in the future. Make sure to understand everything. Is a good idea to note the passwords for every level. If you want to continue letter, you can simply log in in the desired level. It is annoying to repeat everything! Follow the tips and information provided at OverTheWire website. Levels Here is my solution for every level:\nBandit0 Bandit1 Bandit2 Bandit3 Bandit4 Bandit5 Bandit6 Bandit7 ","permalink":"http://localhost:1313/posts/otw/bandit/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIn this post series we are going to solve every level from bandit in \u003ca href=\"https://overthewire.org/wargames/bandit/\"\u003e\u003cem\u003eOverTheWire\u003c/em\u003e\u003c/a\u003e\nThis guide pretends to be a writeup containing the solutions of the level, designed for beginners.\u003c/p\u003e\n\u003cp\u003eTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing \u003ca href=\"https://learn.microsoft.com/en-us/windows/wsl/install\"\u003eWSL\u003c/a\u003e, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\u003c/p\u003e","title":"Bandit"},{"content":"Level description The goal of this level is for you to log into the game using SSH. The host to which you need to connect is bandit.labs.overthewire.org, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\nTips for beginners Read a bit about what SSH is. Research about what a port is. Solution This is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go here.\nAt Linux, we can use ssh client to connect to the server. It should be installed by default on your system. If not, please first research about how to install. Once you have the SSH client installed, you can log in into the first level as follows:\nssh bandit0@bandit.labs.overthewire.org -p 2220 Syntax is simple: ssh \u0026lt;username\u0026gt;@\u0026lt;hostname\u0026gt; -p \u0026lt;port\u0026gt;. Usually SSH runs on port 22 by default, but they changed to port 2220 so we must specify it in the command.\nOnce you try to log in, you will see something like this: NB: If it\u0026rsquo;s the first time you try to log in, you will be asked about the authenticity of the host. Just type yes.\nType the password bandit0 and press enter. Now you are inside bandit server, ready to begin with bandit1!\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit0/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe goal of this level is for you to log into the game using SSH. The host to which you need to connect is \u003cstrong\u003ebandit.labs.overthewire.org\u003c/strong\u003e, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eRead a bit about what SSH is.\u003c/li\u003e\n\u003cli\u003eResearch about what a port is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go \u003ca href=\"https://en.wikipedia.org/wiki/Secure_Shell\"\u003ehere\u003c/a\u003e.\u003c/p\u003e","title":"Bandit0"},{"content":"Level description The password for the next level is stored in a file called readme located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\nTips for beginners Learn about home directory in Linux. Learn to use cat and ls commands. Solution First step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\nls This shows in terminal the files at the current directory. There you will see the readme file.\nNow we can to check the contents, so let\u0026rsquo;s use cat:\ncat readme To read a file, we use cat \u0026lt;filename\u0026gt;.\nNB: Not every file is human readable in Linux. We deep more about this in later levels.\nThe content of the readme file reveals the password for bandit2 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit1/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u003cstrong\u003ereadme\u003c/strong\u003e located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn about home directory in Linux.\u003c/li\u003e\n\u003cli\u003eLearn to use \u003ccode\u003ecat\u003c/code\u003e and \u003ccode\u003els\u003c/code\u003e commands.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eFirst step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\u003c/p\u003e","title":"Bandit0 -\u003e Bandit 1"},{"content":"Level description The password for the next level is stored in a file called - located in the home directory\nTips for beginners Try to understand why previous solution is not working as you expect. Solution You may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our cat command: The terminal is waiting for something else. This happens due to character - is used to pass arguments to our commands, and the linux shell is interpreting that. To prevent that, we could use:\ncat ./- NB: Dot . is used to refer current directory. The slash / is used at the end of directory name.\nWe get the password for bandit3 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit2/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called - located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eTry to understand why previous solution is not working as you expect.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eYou may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our \u003ccode\u003ecat\u003c/code\u003e command:\n\u003cimg alt=\"bandit2\" loading=\"lazy\" src=\"/images/otw/bandit/bandit2/0.png\"\u003e\u003c/p\u003e\n\u003cp\u003eThe terminal is \u003cem\u003ewaiting\u003c/em\u003e for something else. This happens due to character \u003ccode\u003e-\u003c/code\u003e is used to pass arguments to our commands, and the linux shell is interpreting that.\nTo prevent that, we could use:\u003c/p\u003e","title":"Bandit2"},{"content":"Level description The password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\nTips for beginners Think about how to escape the whitespaces. Solution After login in the machine as bandit3, we can see the filename \u0026ndash;spaces in this filename\u0026ndash;.\nNow we have 2 problems:\nSame as previous level, filename starts with --, so it will be interpreted as an argument. Address this problem using ./. Filename contains whitespaces. This is an issue, as bash interpretes whitespaces to separate commands. To solve the second problem, we must escape the whitespace character in some way. Here is the solution:\ncat ./--spaces\\ in\\ this\\ filename-- NB: Little trick, you can start writting filename and press Tab to autocomplete the name. The \\ is going to be inserted automatically.\nJust using the \\ we can escape the whitespace.\nNow we can continue with the bandit4 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit3/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eThink about how to \u003cem\u003eescape\u003c/em\u003e the whitespaces.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAfter login in the machine as bandit3, we can see the filename \u003cem\u003e\u0026ndash;spaces in this filename\u0026ndash;\u003c/em\u003e.\u003c/p\u003e\n\u003cp\u003eNow we have 2 problems:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eSame as previous level, filename starts with \u003ccode\u003e--\u003c/code\u003e, so it will be interpreted as an argument. Address this problem using \u003ccode\u003e./\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003eFilename contains \u003cstrong\u003ewhitespaces\u003c/strong\u003e. This is an issue, as bash interpretes whitespaces to separate commands.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eTo solve the second problem, we must escape the whitespace character in some way. Here is the solution:\u003c/p\u003e","title":"Bandit3"},{"content":"Level description The password for the next level is stored in a hidden file in the inhere directory.\nTips for beginners Learn how to navigate directories in Linux. First understand what a hidden file is. Solution Listing directory files inside bandit4\u0026rsquo;s home directory, show directory inhere.\nNB: How to distinguish files and directories in Linux? Use ls -l and see the difference.\nWe have 2 options now:\nMove to inhere directory and check contens again. Check contents directly. Moving to another directory can be done using cd \u0026lt;dirName\u0026gt;. If you prefer to check directory contents directly, use ls \u0026lt;dirName\u0026gt;.\nAfter checking inhere contents via ls, we see nothing. The reason is the file is a hidden file. A hidden file in Linux is everyfile whose name starts with dot .. Hidden files are not shown by default with ls command, so we must add a special flag -a to list all files: NB: Both flags -l and -a cna be combined into a single flag -al, which is shorter to type.\nAs you can see, filename is \u0026hellip;Hidding-From-You starting with three dots. Reading file contents should be easy at this point!\nNext level is bandit5.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit4/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a hidden file in the inhere directory.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to navigate directories in Linux.\u003c/li\u003e\n\u003cli\u003eFirst understand what a hidden file is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eListing directory files inside bandit4\u0026rsquo;s home directory, show directory \u003cstrong\u003einhere\u003c/strong\u003e.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e How to distinguish files and directories in Linux? Use \u003ccode\u003els -l\u003c/code\u003e and see the difference.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eWe have 2 options now:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eMove to inhere directory and check contens again.\u003c/li\u003e\n\u003cli\u003eCheck contents directly.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eMoving to another directory can be done using \u003ccode\u003ecd \u0026lt;dirName\u0026gt;\u003c/code\u003e. If you prefer to check directory contents directly, use \u003ccode\u003els \u0026lt;dirName\u0026gt;\u003c/code\u003e.\u003c/p\u003e","title":"Bandit4"},{"content":"Level description The password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\nTips for beginners What means human-readable file? Is there any way to check filetype at Linux?. Solution Checking inhere\u0026rsquo;s contents shows some files names \u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII here\nSo now, our goal is checking if file content of every file in the folder is ASCII or not. file \u0026lt;filename\u0026gt; does the job. Note the use of *. That called a wildcard regular expression, we\u0026rsquo;ll deep into it in later levels. An easy approach could be checking every file separately:\nfile ./--file00 file ./--file01 ... file ./--file09 But that\u0026rsquo;s not funny, imagine we have 100 files to check. All the files are in the same directory, so we can use cat ./* where ./* matches every filename in the directory, applying file to every file.\nNB: Another approach is to use find with certaing flags. Try to do in different ways, don\u0026rsquo;t stick to my solution.\nThe file \u0026ndash;file00 content is not readable, so get password from \u0026ndash;file07 and continue with bandit6.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit5/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eWhat means human-readable file?\u003c/li\u003e\n\u003cli\u003eIs there any way to check filetype at Linux?.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eChecking inhere\u0026rsquo;s contents shows some files names \u003cstrong\u003e\u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09\u003c/strong\u003e. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII \u003ca href=\"https://en.wikipedia.org/wiki/ASCII\"\u003ehere\u003c/a\u003e\u003c/p\u003e","title":"Bandit5"},{"content":"Level description The password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\nhuman-readable 1033 bytes in size not executable Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution The purpose of the level is showing us how to find for files. Listing contents of inhere, we can see some folders, containing a lot of files inside: NB: Adding -R to ls shows recursively the content of every folder inside the directory listed.\nSo this time, checking every file is not an option. We need to find a file with some properties, specific size, not excutable and human-readable. Let\u0026rsquo;s explain the command we\u0026rsquo;re using:\nfind inhere/ -size 1033c ! -executable First, we specify the directory, in this case inhere. The option -size 1033c returns files of 1033 bytes. Then, with -executable we would get executable files, but we want not executable files, that\u0026rsquo;s why we are adding ! before.\nNB: By default, the -size option takes as argument the number of blocks. For example, -size 2 means 2 blocks of 512 bytes, so its 1024. The c is used to specify exact bytes. Don\u0026rsquo;t ask me why it\u0026rsquo;s c and not b 😅.\nThe property of human-readability is not implemented in find. This is not an issue, previous command returns a single file and it is human readable (we could confirm using file): Extra tip: try to use the following:\nfind inhere/ -size 1033c ! -executable | file You get the same result! The pipe | is a great tool to execute 2+ commands in one line.\nGet your password and continue with bandit7.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit6/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ehuman-readable\u003c/li\u003e\n\u003cli\u003e1033 bytes in size\u003c/li\u003e\n\u003cli\u003enot executable\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThe purpose of the level is showing us how to find for files. Listing contents of \u003cstrong\u003einhere\u003c/strong\u003e, we can see some folders, containing a lot of files inside:\n\u003cimg alt=\"bandit6_0\" loading=\"lazy\" src=\"/images/otw/bandit/bandit6/0.png\"\u003e\u003c/p\u003e","title":"Bandit6"},{"content":"Level description The password for the next level is stored somewhere on the server and has all of the following properties:\nowned by user bandit7 owned by group bandit6 33 bytes in size Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution This is very straightforward to do after completing previous level. Now we need to identify a file owned by user bandit7 and group bandi6. Furthermore, the file is somewhere on the server, which means we have to find in the root directory /.\nfind / -user bandit7 -group bandit6 -size 33c 2\u0026gt;/dev/null NB: I added that strange 2\u0026gt;/dev/null to filter error output. The reason why it works like that is more technical, for now just save this a fast way to filter errors in terminal. We get some errors because looking for files in the whole server may return some unaccesible files, as we don\u0026rsquo;t have root user permissions. We will study Linux permissions in later levels.\nWe should get a single file, containing password for bandit8.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit7/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored somewhere on the server and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eowned by user bandit7\u003c/li\u003e\n\u003cli\u003eowned by group bandit6\u003c/li\u003e\n\u003cli\u003e33 bytes in size\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is very straightforward to do after completing previous level. Now we need to identify a file owned by user bandit7 and group bandi6. Furthermore, the file is \u003cstrong\u003esomewhere on the server\u003c/strong\u003e, which means we have to find in the root directory \u003ccode\u003e/\u003c/code\u003e.\u003c/p\u003e","title":"Bandit7"},{"content":"Level description The password for the next level is stored in the file data.txt next to the word millionth.\nTips for beginners Learn how to filter file contents. Solution At previous levels, we discovered how to find for files. Now it\u0026rsquo;s time to find for content inside a file. grep command is going to help with that task.\nNB: Of course I don\u0026rsquo;t want to spoil you the password!\nNotice how this can achieved in different ways.\nUsing grep \u0026lt;keyword\u0026gt; \u0026lt;filename\u0026gt;. Using the pipe | to execute grep over the result of cat command. Take you favorite path to solve the level, and continue with bandit9.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit8/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the file \u003cstrong\u003edata.txt\u003c/strong\u003e next to the word \u003cstrong\u003emillionth\u003c/strong\u003e.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to filter file contents.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAt previous levels, we discovered how to find for files. Now it\u0026rsquo;s time to find for content inside a file. \u003ccode\u003egrep\u003c/code\u003e command is going to help with that task.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"bandit8\" loading=\"lazy\" src=\"/images/otw/bandit/bandit8/0.png\"\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e Of course I don\u0026rsquo;t want to spoil you the password!\u003c/p\u003e","title":"Bandit8"},{"content":"Level description The password for the next level is stored in the file data.txt and is the only line of text that occurs only once.\nTips for beginners First, apply sort to file content. Solution This level is a bit tricky. First, examine the file contents. Using head shows the 10 first lines of a file:\nNB: If you want to show more lines: head -20 or the number of your choice.\nThere are tons of different passwords. The correct one is the only line of text that occurs only once. Try to research how to do on your own. You maybe find uniq. This command has a very interesting flag, -u, used to show only the uniq lines. Let\u0026rsquo;s try with that:\nFor some reason, is not working. The trick here is to sort the file contents before applying uniq. This can be achieved using sort, so the final command looks like this:\ncat data.txt | sort | uniq -u NB: You need to sort lines first because uniq only detects consecutive repetitions. First time I solved this it took a while 😅.\nAfter getting the password, we can continue with bandit10.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit9/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the file \u003cstrong\u003edata.txt\u003c/strong\u003e and is the only line of text that occurs only once.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst, apply \u003ccode\u003esort\u003c/code\u003e to file content.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis level is a bit tricky. First, examine the file contents. Using \u003ccode\u003ehead\u003c/code\u003e shows the 10 first lines of a file:\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"bandit9_0\" loading=\"lazy\" src=\"/images/otw/bandit/bandit9/0.png\"\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e If you want to show more lines: \u003ccode\u003ehead -20\u003c/code\u003e or the number of your choice.\u003c/p\u003e","title":"Bandit9"},{"content":"Level description The password for the next level is stored in the file data.txt in one of the few human-readable strings, preceded by several \u0026lsquo;=\u0026rsquo; characters.\nTips for beginners strings can be used to retrieve human readable-content from a file. You can apply things from previous levels. Solution The file data.txt has mixed content, binary and ASCII. If the password is preceded by several \u0026lsquo;=\u0026rsquo; characters, we can simply filter by some of them. But there is a little problem, content is not fully ASCII, so grep won\u0026rsquo;t work. First you need to get content with strings to get only the human readable content.\nNB: Try to run both cat and strings separately. Observe the differences.\nNext level is bandit10.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit10/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the file \u003cstrong\u003edata.txt\u003c/strong\u003e in one of the few human-readable strings, preceded by several \u0026lsquo;=\u0026rsquo; characters.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003estrings\u003c/code\u003e can be used to retrieve human readable-content from a file.\u003c/li\u003e\n\u003cli\u003eYou can apply things from previous levels.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThe file \u003cstrong\u003edata.txt\u003c/strong\u003e has mixed content, binary and ASCII. If the password is preceded by several \u0026lsquo;=\u0026rsquo; characters, we can simply filter by some of them. But there is a little problem, content is not fully ASCII, so \u003ccode\u003egrep\u003c/code\u003e won\u0026rsquo;t work. First you need to get content with \u003ccode\u003estrings\u003c/code\u003e to get only the human readable content.\u003c/p\u003e","title":"Bandit10"},{"content":"👨‍💻 whoami Hey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\nWhat is this❓​ This blog is basically my thoughts on several hacking topics. Here you’ll see:\nWriteups from CTF challenges, from platforms like HackTheBox or OverTheWire.\nWalkthroughs and notes on pentesting techniques I’m learning or testing.\nSome posts on cryptography — because math can be fun (sometimes).\nRandom topics that freaks like me may (just may) find interesting.\nThe idea is simple: share what I learn, document my journey, and maybe help others who are also diving into the exciting world of ethical hacking.\n📫 Contact Want to say hi, share ideas, or just geek out about hacking? Reach me here:\n📧 Email: mrb0b1073@proton.me 💻​ GitHub: mrb0b173 🟩​ HackTheBox: mrb0b1073 ","permalink":"http://localhost:1313/about/","summary":"\u003ch2 id=\"-whoami\"\u003e👨‍💻 whoami\u003c/h2\u003e\n\u003cp\u003eHey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\u003c/p\u003e\n\u003chr\u003e\n\u003ch2 id=\"what-is-this\"\u003eWhat is this❓​\u003c/h2\u003e\n\u003cp\u003eThis blog is basically my thoughts on several hacking topics. Here you’ll see:\u003c/p\u003e","title":"About"},{"content":"Hey! 👋 I\u0026rsquo;m mrb0b1073 and this is my first post.\nWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\nExcited to start this adventure!\n","permalink":"http://localhost:1313/posts/hello-world/","summary":"\u003cp\u003eHey! 👋 I\u0026rsquo;m \u003cstrong\u003emrb0b1073\u003c/strong\u003e and this is my first post.\u003c/p\u003e\n\u003cp\u003eWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\u003cbr\u003e\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\u003c/p\u003e\n\u003cp\u003eExcited to start this adventure!\u003c/p\u003e","title":"Hello World"},{"content":"Introduction If you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\nIn cybersecurity there are broadly two complementary roles: Blue Team and Red Team. Blue Teams focus on defense, monitoring, incident response, hardening systems and keeping services secure, while Red Teams simulate attackers to find weaknesses and prove what an adversary could do. Ethical hacking aligns closely with Red Team operations, but cybersecurity is highly transversal across IT. There are many specialities or areas, such as cloud security, appsec, pentesting, forensics, governance, risk management, malware analysis, etc. Every topic could deserve its own post, so let\u0026rsquo;s keep it simple and focus on ethical hacking.\nHacker philosophy Let\u0026rsquo;s start with the idea of what is exactly a hacker. A hacker is someone who explores systems to understand how they work, finds creative ways to make or fix things, and solves technical problems. Historically the word describes curiosity, craft, and a drive to improve systems — not criminality. It is important to make the distinction between hacker and cracker, also called cybercriminal. A hacker explores, builds, discloses responsibly and works to improve security. They work in authorized environments or labs. On the other hand, a cracker breaks into systems for theft, vandalism or other illicit gain.\nHere you can find the most popularized ideas often summarized as the hacker ethic:\nCuriosity first: Learn by exploring and tinkering. Freedom of information: All knowledge should be shared to help progress. This fits properly with the idea of open source. Mistrust of needless authority: Centralized control sometimes blocks innovation. It is always good to question anything, specially common assumptions. Meritocracy: Skills, craft and results matter more than titles. Craftsmanship \u0026amp; elegance: Technical beauty matters. Build clean, clever and efficient solutions. Responsability \u0026amp; ethics: Use your skills to build, fix, educate and defend, not to harm. Core fundamentals Assuming you want to init yourself in hacking, you should first build competence across three basic pillars.\nOperating Systems You should learn as much as possible about Linux and Windows. Specially Linux, all the tools you will be using are meant to be used in a Linux environment. Skill with shell is required, learn basic commands and how to interact with the OS using the terminal. Research about processes, file permissions, package management and logs. A large proportion of web servers around the world run on Linux, although Windows is also widely used. Windows knowledge is really valuable too, considering active directory is strongly used in corporate environments.\nNetworking You have to understand how computers communicate each other. Understand basic networking concepts, IP adresses, subnetting, proxies, find out how internet works. Study some protocols such as TCP/IP, HTTP, DNS or SSH. This could sound confusing for beginners, but this step is not optional! Study different client/server models and how services expose attack surfaces.\nProgramming \u0026amp; scripting Is this completely required? Maybe not for complete beginners. Does it help? Absolutely yes. Understanding how web apps or any type of application works makes things much easier. You can imagine different entry points to exploit if you understand how systems are designed. Also writing scripts in bash or python makes you more productive through automation.\nEthical Hacking foundations Once you feel confident with these 3 pillars, you can go to the next step. You can study about different topics and areas. For example, binary exploiting, web pentesting, mobile pentesting, wireless hacking, etc. You should start picking a focus, in this post we focus on web pentesting, as it is beginner friendly. Also web applications are the bread and butter in companies nowadays.\nKey concepts to study:\nCIA Triad: CIA refers to Confidentiality, Integrity and Availability. These three concepts are key in information security, and describe properties we want to ensure in our systems and information. Web Security basics, OWASP: Study the OWASP Top 10, which summarizes most frequent web security risks. Authentication and session control: Understand the concepts of Authentication and Authorization, research about how session is handled in web apps, cookies, JWT tokens, etc. Input validation \u0026amp; injection attacks: Learn about SQL Injection, Cross-Site Scripting (XSS), Code Injection, SSTI, and every injection type. Secure development lifecycle: Find out how to implement security controls in code. This can be more related to Blue Team, but as Red Teamer it is important to understand. Firewall evasion: What a firewall is and some techniques/methods to bypass. Some cryptography: Understand what a chiper and a hash are, how information is encrypted to prevent access from 3rd parties. Focusing on web, read about TLS protocol. There are many more topics you can research and learn, but this could be a nice starting point.\nTools and platforms to learn Now you have an idea of what to study, let\u0026rsquo;s see how to start in practical terms.\nSome platforms I personally recommend:\nOverTheWire: Here you can find some CTFs (Capture The Flag) which are fun to play and also really instructive. Bandit games are a must for complete beginners, as you will explore some linux and bash concepts which are basic to continue. The games are leveled by difficulty, in their web you can get all the information about how to play, only a terminal and SSH is required. This helps building your foundation in Linux OS. HackTheBox: Nº 1 platform in cybersecurity. Has a lot of resources to learn all this core fundamentals, and also red team / blue team security topics. It is focused on labs where you can test your skills hacking different boxes but if you really want to learn it is worth to invest time and money in the academy. I have to say the level here is high, specially if you try to hack machines on your own without using some guide or writeup. TryHackMe: More beginner friendly than hackthebox, it provides a lot of guided learning resources. PortSwigger Labs: Practical labs about specific topics, focused on web hacking. They are great to learn and understand different types of attacks, injections, and security misconfigurations. I would recommend digging into this once you have the theoretical basis about these concepts. I have to mention a few tools I am sure you\u0026rsquo;d end up using:\nNmap: This is probably the most famous tool in hacking, allowing you to gather information about ports and services running in a machine. Burpsuite: A proxy tool widely used in web application security testing. It basically allows you to intercept and modify web requests, which can be used to perform several types of attacks. Metasploit: The most used pentesting framework. Contains a large amount of scripts and exploits ready to run. Another crucial step here is to set up your virtual lab environment to test vulnerable applications. To achieve this goal, there are some Linux distributions like Kali, Parrot or BlackArch, but that\u0026rsquo;s a topic for another post.\nFinal thoughs To sum up, this would be my personal roadmap:\nLearn the fundamentals, specially Linux and networking. Install some Linux in a virtual machine, play with it, get comfortable with the terminal. You can start with bandit wargames in OverTheWire. Complete every level and make sure to understand everything as clear as possible. Move to guided boxes on HackTheBox. I recommend you joining their Discord, ask questions, community is great there! Take notes, repeat, learn, improve your skills. Maybe use your own lab environment, create your own vulnerable apps. Hacking is a mixing of curiosity, study and practice. Being passionate and motivated about it is really helpful and will definitely speed up the process. The path is long and really challenging, so keep it going!\n\u0026ldquo;Yes, I am a criminal. My crime is that of curiosity.\u0026rdquo; — The Mentor (Loyd Blankenship) at The Hacker Manifesto\n","permalink":"http://localhost:1313/posts/starting-point/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIf you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\u003c/p\u003e","title":"Starting Point"},{"content":"Introduction In this post series we are going to solve every level from bandit in OverTheWire This guide pretends to be a writeup containing the solutions of the level, designed for beginners.\nTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing WSL, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\nEvery section will contain the solution as well as some tips for people who is absolutely beginner.\nTips First of all, some tips:\nDo not use this as first resource to solve the levels. Try on your own, make mistakes and learn from them. Only check the solution as last resource or if you are completely new and you have absolutely no idea about what to do next. Take notes from your learning. Write up commands, tips and everything which can be useful in the future. Make sure to understand everything. Is a good idea to note the passwords for every level. If you want to continue letter, you can simply log in in the desired level. It is annoying to repeat everything! Follow the tips and information provided at OverTheWire website. Levels Here is my solution for every level:\nBandit0 Bandit1 Bandit2 Bandit3 Bandit4 Bandit5 Bandit6 Bandit7 ","permalink":"http://localhost:1313/posts/otw/bandit/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIn this post series we are going to solve every level from bandit in \u003ca href=\"https://overthewire.org/wargames/bandit/\"\u003e\u003cem\u003eOverTheWire\u003c/em\u003e\u003c/a\u003e\nThis guide pretends to be a writeup containing the solutions of the level, designed for beginners.\u003c/p\u003e\n\u003cp\u003eTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing \u003ca href=\"https://learn.microsoft.com/en-us/windows/wsl/install\"\u003eWSL\u003c/a\u003e, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\u003c/p\u003e","title":"Bandit"},{"content":"Level description The goal of this level is for you to log into the game using SSH. The host to which you need to connect is bandit.labs.overthewire.org, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\nTips for beginners Read a bit about what SSH is. Research about what a port is. Solution This is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go here.\nAt Linux, we can use ssh client to connect to the server. It should be installed by default on your system. If not, please first research about how to install. Once you have the SSH client installed, you can log in into the first level as follows:\nssh bandit0@bandit.labs.overthewire.org -p 2220 Syntax is simple: ssh \u0026lt;username\u0026gt;@\u0026lt;hostname\u0026gt; -p \u0026lt;port\u0026gt;. Usually SSH runs on port 22 by default, but they changed to port 2220 so we must specify it in the command.\nOnce you try to log in, you will see something like this: NB: If it\u0026rsquo;s the first time you try to log in, you will be asked about the authenticity of the host. Just type yes.\nType the password bandit0 and press enter. Now you are inside bandit server, ready to begin with bandit1!\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit0/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe goal of this level is for you to log into the game using SSH. The host to which you need to connect is \u003cstrong\u003ebandit.labs.overthewire.org\u003c/strong\u003e, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eRead a bit about what SSH is.\u003c/li\u003e\n\u003cli\u003eResearch about what a port is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go \u003ca href=\"https://en.wikipedia.org/wiki/Secure_Shell\"\u003ehere\u003c/a\u003e.\u003c/p\u003e","title":"Bandit0"},{"content":"Level description The password for the next level is stored in a file called readme located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\nTips for beginners Learn about home directory in Linux. Learn to use cat and ls commands. Solution First step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\nls This shows in terminal the files at the current directory. There you will see the readme file.\nNow we can to check the contents, so let\u0026rsquo;s use cat:\ncat readme To read a file, we use cat \u0026lt;filename\u0026gt;.\nNB: Not every file is human readable in Linux. We deep more about this in later levels.\nThe content of the readme file reveals the password for bandit2 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit1/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u003cstrong\u003ereadme\u003c/strong\u003e located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn about home directory in Linux.\u003c/li\u003e\n\u003cli\u003eLearn to use \u003ccode\u003ecat\u003c/code\u003e and \u003ccode\u003els\u003c/code\u003e commands.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eFirst step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\u003c/p\u003e","title":"Bandit0 -\u003e Bandit 1"},{"content":"Level description The password for the next level is stored in a file called - located in the home directory\nTips for beginners Try to understand why previous solution is not working as you expect. Solution You may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our cat command: The terminal is waiting for something else. This happens due to character - is used to pass arguments to our commands, and the linux shell is interpreting that. To prevent that, we could use:\ncat ./- NB: Dot . is used to refer current directory. The slash / is used at the end of directory name.\nWe get the password for bandit3 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit2/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called - located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eTry to understand why previous solution is not working as you expect.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eYou may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our \u003ccode\u003ecat\u003c/code\u003e command:\n\u003cimg alt=\"bandit2\" loading=\"lazy\" src=\"/images/otw/bandit/bandit2/0.png\"\u003e\u003c/p\u003e\n\u003cp\u003eThe terminal is \u003cem\u003ewaiting\u003c/em\u003e for something else. This happens due to character \u003ccode\u003e-\u003c/code\u003e is used to pass arguments to our commands, and the linux shell is interpreting that.\nTo prevent that, we could use:\u003c/p\u003e","title":"Bandit1 -\u003e Bandit2"},{"content":"Level description The password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\nTips for beginners Think about how to escape the whitespaces. Solution After login in the machine as bandit3, we can see the filename \u0026ndash;spaces in this filename\u0026ndash;.\nNow we have 2 problems:\nSame as previous level, filename starts with --, so it will be interpreted as an argument. Address this problem using ./. Filename contains whitespaces. This is an issue, as bash interpretes whitespaces to separate commands. To solve the second problem, we must escape the whitespace character in some way. Here is the solution:\ncat ./--spaces\\ in\\ this\\ filename-- NB: Little trick, you can start writting filename and press Tab to autocomplete the name. The \\ is going to be inserted automatically.\nJust using the \\ we can escape the whitespace.\nNow we can continue with the bandit4 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit3/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eThink about how to \u003cem\u003eescape\u003c/em\u003e the whitespaces.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAfter login in the machine as bandit3, we can see the filename \u003cem\u003e\u0026ndash;spaces in this filename\u0026ndash;\u003c/em\u003e.\u003c/p\u003e\n\u003cp\u003eNow we have 2 problems:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eSame as previous level, filename starts with \u003ccode\u003e--\u003c/code\u003e, so it will be interpreted as an argument. Address this problem using \u003ccode\u003e./\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003eFilename contains \u003cstrong\u003ewhitespaces\u003c/strong\u003e. This is an issue, as bash interpretes whitespaces to separate commands.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eTo solve the second problem, we must escape the whitespace character in some way. Here is the solution:\u003c/p\u003e","title":"Bandit3"},{"content":"Level description The password for the next level is stored in a hidden file in the inhere directory.\nTips for beginners Learn how to navigate directories in Linux. First understand what a hidden file is. Solution Listing directory files inside bandit4\u0026rsquo;s home directory, show directory inhere.\nNB: How to distinguish files and directories in Linux? Use ls -l and see the difference.\nWe have 2 options now:\nMove to inhere directory and check contens again. Check contents directly. Moving to another directory can be done using cd \u0026lt;dirName\u0026gt;. If you prefer to check directory contents directly, use ls \u0026lt;dirName\u0026gt;.\nAfter checking inhere contents via ls, we see nothing. The reason is the file is a hidden file. A hidden file in Linux is everyfile whose name starts with dot .. Hidden files are not shown by default with ls command, so we must add a special flag -a to list all files: NB: Both flags -l and -a cna be combined into a single flag -al, which is shorter to type.\nAs you can see, filename is \u0026hellip;Hidding-From-You starting with three dots. Reading file contents should be easy at this point!\nNext level is bandit5.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit4/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a hidden file in the inhere directory.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to navigate directories in Linux.\u003c/li\u003e\n\u003cli\u003eFirst understand what a hidden file is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eListing directory files inside bandit4\u0026rsquo;s home directory, show directory \u003cstrong\u003einhere\u003c/strong\u003e.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e How to distinguish files and directories in Linux? Use \u003ccode\u003els -l\u003c/code\u003e and see the difference.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eWe have 2 options now:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eMove to inhere directory and check contens again.\u003c/li\u003e\n\u003cli\u003eCheck contents directly.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eMoving to another directory can be done using \u003ccode\u003ecd \u0026lt;dirName\u0026gt;\u003c/code\u003e. If you prefer to check directory contents directly, use \u003ccode\u003els \u0026lt;dirName\u0026gt;\u003c/code\u003e.\u003c/p\u003e","title":"Bandit4"},{"content":"Level description The password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\nTips for beginners What means human-readable file? Is there any way to check filetype at Linux?. Solution Checking inhere\u0026rsquo;s contents shows some files names \u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII here\nSo now, our goal is checking if file content of every file in the folder is ASCII or not. file \u0026lt;filename\u0026gt; does the job. Note the use of *. That called a wildcard regular expression, we\u0026rsquo;ll deep into it in later levels. An easy approach could be checking every file separately:\nfile ./--file00 file ./--file01 ... file ./--file09 But that\u0026rsquo;s not funny, imagine we have 100 files to check. All the files are in the same directory, so we can use cat ./* where ./* matches every filename in the directory, applying file to every file.\nNB: Another approach is to use find with certaing flags. Try to do in different ways, don\u0026rsquo;t stick to my solution.\nThe file \u0026ndash;file00 content is not readable, so get password from \u0026ndash;file07 and continue with bandit6.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit5/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eWhat means human-readable file?\u003c/li\u003e\n\u003cli\u003eIs there any way to check filetype at Linux?.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eChecking inhere\u0026rsquo;s contents shows some files names \u003cstrong\u003e\u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09\u003c/strong\u003e. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII \u003ca href=\"https://en.wikipedia.org/wiki/ASCII\"\u003ehere\u003c/a\u003e\u003c/p\u003e","title":"Bandit5"},{"content":"Level description The password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\nhuman-readable 1033 bytes in size not executable Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution The purpose of the level is showing us how to find for files. Listing contents of inhere, we can see some folders, containing a lot of files inside: NB: Adding -R to ls shows recursively the content of every folder inside the directory listed.\nSo this time, checking every file is not an option. We need to find a file with some properties, specific size, not excutable and human-readable. Let\u0026rsquo;s explain the command we\u0026rsquo;re using:\nfind inhere/ -size 1033c ! -executable First, we specify the directory, in this case inhere. The option -size 1033c returns files of 1033 bytes. Then, with -executable we would get executable files, but we want not executable files, that\u0026rsquo;s why we are adding ! before.\nNB: By default, the -size option takes as argument the number of blocks. For example, -size 2 means 2 blocks of 512 bytes, so its 1024. The c is used to specify exact bytes. Don\u0026rsquo;t ask me why it\u0026rsquo;s c and not b 😅.\nThe property of human-readability is not implemented in find. This is not an issue, previous command returns a single file and it is human readable (we could confirm using file): Extra tip: try to use the following:\nfind inhere/ -size 1033c ! -executable | file You get the same result! The pipe | is a great tool to execute 2+ commands in one line.\nGet your password and continue with bandit7.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit6/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ehuman-readable\u003c/li\u003e\n\u003cli\u003e1033 bytes in size\u003c/li\u003e\n\u003cli\u003enot executable\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThe purpose of the level is showing us how to find for files. Listing contents of \u003cstrong\u003einhere\u003c/strong\u003e, we can see some folders, containing a lot of files inside:\n\u003cimg alt=\"bandit6_0\" loading=\"lazy\" src=\"/images/otw/bandit/bandit6/0.png\"\u003e\u003c/p\u003e","title":"Bandit6"},{"content":"Level description The password for the next level is stored somewhere on the server and has all of the following properties:\nowned by user bandit7 owned by group bandit6 33 bytes in size Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution This is very straightforward to do after completing previous level. Now we need to identify a file owned by user bandit7 and group bandi6. Furthermore, the file is somewhere on the server, which means we have to find in the root directory /.\nfind / -user bandit7 -group bandit6 -size 33c 2\u0026gt;/dev/null NB: I added that strange 2\u0026gt;/dev/null to filter error output. The reason why it works like that is more technical, for now just save this a fast way to filter errors in terminal. We get some errors because looking for files in the whole server may return some unaccesible files, as we don\u0026rsquo;t have root user permissions. We will study Linux permissions in later levels.\nWe should get a single file, containing password for bandit8.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit7/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored somewhere on the server and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eowned by user bandit7\u003c/li\u003e\n\u003cli\u003eowned by group bandit6\u003c/li\u003e\n\u003cli\u003e33 bytes in size\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is very straightforward to do after completing previous level. Now we need to identify a file owned by user bandit7 and group bandi6. Furthermore, the file is \u003cstrong\u003esomewhere on the server\u003c/strong\u003e, which means we have to find in the root directory \u003ccode\u003e/\u003c/code\u003e.\u003c/p\u003e","title":"Bandit7"},{"content":"Level description The password for the next level is stored in the file data.txt next to the word millionth.\nTips for beginners Learn how to filter file contents. Solution At previous levels, we discovered how to find for files. Now it\u0026rsquo;s time to find for content inside a file. grep command is going to help with that task.\nNB: Of course I don\u0026rsquo;t want to spoil you the password!\nNotice how this can achieved in different ways.\nUsing grep \u0026lt;keyword\u0026gt; \u0026lt;filename\u0026gt;. Using the pipe | to execute grep over the result of cat command. Take you favorite path to solve the level, and continue with bandit9.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit8/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the file \u003cstrong\u003edata.txt\u003c/strong\u003e next to the word \u003cstrong\u003emillionth\u003c/strong\u003e.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to filter file contents.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAt previous levels, we discovered how to find for files. Now it\u0026rsquo;s time to find for content inside a file. \u003ccode\u003egrep\u003c/code\u003e command is going to help with that task.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"bandit8\" loading=\"lazy\" src=\"/images/otw/bandit/bandit8/0.png\"\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e Of course I don\u0026rsquo;t want to spoil you the password!\u003c/p\u003e","title":"Bandit8"},{"content":"Level description The password for the next level is stored in the file data.txt and is the only line of text that occurs only once.\nTips for beginners First, apply sort to file content. Solution This level is a bit tricky. First, examine the file contents. Using head shows the 10 first lines of a file:\nNB: If you want to show more lines: head -20 or the number of your choice.\nThere are tons of different passwords. The correct one is the only line of text that occurs only once. Try to research how to do on your own. You maybe find uniq. This command has a very interesting flag, -u, used to show only the uniq lines. Let\u0026rsquo;s try with that:\nFor some reason, is not working. The trick here is to sort the file contents before applying uniq. This can be achieved using sort, so the final command looks like this:\ncat data.txt | sort | uniq -u NB: You need to sort lines first because uniq only detects consecutive repetitions. First time I solved this it took a while 😅.\nAfter getting the password, we can continue with bandit10.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit9/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the file \u003cstrong\u003edata.txt\u003c/strong\u003e and is the only line of text that occurs only once.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst, apply \u003ccode\u003esort\u003c/code\u003e to file content.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis level is a bit tricky. First, examine the file contents. Using \u003ccode\u003ehead\u003c/code\u003e shows the 10 first lines of a file:\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"bandit9_0\" loading=\"lazy\" src=\"/images/otw/bandit/bandit9/0.png\"\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e If you want to show more lines: \u003ccode\u003ehead -20\u003c/code\u003e or the number of your choice.\u003c/p\u003e","title":"Bandit9"},{"content":"Level description The password for the next level is stored in the file data.txt in one of the few human-readable strings, preceded by several \u0026lsquo;=\u0026rsquo; characters.\nTips for beginners strings can be used to retrieve human readable-content from a file. You can apply things from previous levels. Solution The file data.txt has mixed content, binary and ASCII. If the password is preceded by several \u0026lsquo;=\u0026rsquo; characters, we can simply filter by some of them. But there is a little problem, content is not fully ASCII, so grep won\u0026rsquo;t work. First you need to get content with strings to get only the human readable content.\nNB: Try to run both cat and strings separately. Observe the differences.\nNext level is bandit10.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit10/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the file \u003cstrong\u003edata.txt\u003c/strong\u003e in one of the few human-readable strings, preceded by several \u0026lsquo;=\u0026rsquo; characters.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003estrings\u003c/code\u003e can be used to retrieve human readable-content from a file.\u003c/li\u003e\n\u003cli\u003eYou can apply things from previous levels.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThe file \u003cstrong\u003edata.txt\u003c/strong\u003e has mixed content, binary and ASCII. If the password is preceded by several \u0026lsquo;=\u0026rsquo; characters, we can simply filter by some of them. But there is a little problem, content is not fully ASCII, so \u003ccode\u003egrep\u003c/code\u003e won\u0026rsquo;t work. First you need to get content with \u003ccode\u003estrings\u003c/code\u003e to get only the human readable content.\u003c/p\u003e","title":"Bandit10"},{"content":"👨‍💻 whoami Hey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\nWhat is this❓​ This blog is basically my thoughts on several hacking topics. Here you’ll see:\nWriteups from CTF challenges, from platforms like HackTheBox or OverTheWire.\nWalkthroughs and notes on pentesting techniques I’m learning or testing.\nSome posts on cryptography — because math can be fun (sometimes).\nRandom topics that freaks like me may (just may) find interesting.\nThe idea is simple: share what I learn, document my journey, and maybe help others who are also diving into the exciting world of ethical hacking.\n📫 Contact Want to say hi, share ideas, or just geek out about hacking? Reach me here:\n📧 Email: mrb0b1073@proton.me 💻​ GitHub: mrb0b173 🟩​ HackTheBox: mrb0b1073 ","permalink":"http://localhost:1313/about/","summary":"\u003ch2 id=\"-whoami\"\u003e👨‍💻 whoami\u003c/h2\u003e\n\u003cp\u003eHey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\u003c/p\u003e\n\u003chr\u003e\n\u003ch2 id=\"what-is-this\"\u003eWhat is this❓​\u003c/h2\u003e\n\u003cp\u003eThis blog is basically my thoughts on several hacking topics. Here you’ll see:\u003c/p\u003e","title":"About"},{"content":"Hey! 👋 I\u0026rsquo;m mrb0b1073 and this is my first post.\nWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\nExcited to start this adventure!\n","permalink":"http://localhost:1313/posts/hello-world/","summary":"\u003cp\u003eHey! 👋 I\u0026rsquo;m \u003cstrong\u003emrb0b1073\u003c/strong\u003e and this is my first post.\u003c/p\u003e\n\u003cp\u003eWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\u003cbr\u003e\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\u003c/p\u003e\n\u003cp\u003eExcited to start this adventure!\u003c/p\u003e","title":"Hello World"},{"content":"Introduction If you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\nIn cybersecurity there are broadly two complementary roles: Blue Team and Red Team. Blue Teams focus on defense, monitoring, incident response, hardening systems and keeping services secure, while Red Teams simulate attackers to find weaknesses and prove what an adversary could do. Ethical hacking aligns closely with Red Team operations, but cybersecurity is highly transversal across IT. There are many specialities or areas, such as cloud security, appsec, pentesting, forensics, governance, risk management, malware analysis, etc. Every topic could deserve its own post, so let\u0026rsquo;s keep it simple and focus on ethical hacking.\nHacker philosophy Let\u0026rsquo;s start with the idea of what is exactly a hacker. A hacker is someone who explores systems to understand how they work, finds creative ways to make or fix things, and solves technical problems. Historically the word describes curiosity, craft, and a drive to improve systems — not criminality. It is important to make the distinction between hacker and cracker, also called cybercriminal. A hacker explores, builds, discloses responsibly and works to improve security. They work in authorized environments or labs. On the other hand, a cracker breaks into systems for theft, vandalism or other illicit gain.\nHere you can find the most popularized ideas often summarized as the hacker ethic:\nCuriosity first: Learn by exploring and tinkering. Freedom of information: All knowledge should be shared to help progress. This fits properly with the idea of open source. Mistrust of needless authority: Centralized control sometimes blocks innovation. It is always good to question anything, specially common assumptions. Meritocracy: Skills, craft and results matter more than titles. Craftsmanship \u0026amp; elegance: Technical beauty matters. Build clean, clever and efficient solutions. Responsability \u0026amp; ethics: Use your skills to build, fix, educate and defend, not to harm. Core fundamentals Assuming you want to init yourself in hacking, you should first build competence across three basic pillars.\nOperating Systems You should learn as much as possible about Linux and Windows. Specially Linux, all the tools you will be using are meant to be used in a Linux environment. Skill with shell is required, learn basic commands and how to interact with the OS using the terminal. Research about processes, file permissions, package management and logs. A large proportion of web servers around the world run on Linux, although Windows is also widely used. Windows knowledge is really valuable too, considering active directory is strongly used in corporate environments.\nNetworking You have to understand how computers communicate each other. Understand basic networking concepts, IP adresses, subnetting, proxies, find out how internet works. Study some protocols such as TCP/IP, HTTP, DNS or SSH. This could sound confusing for beginners, but this step is not optional! Study different client/server models and how services expose attack surfaces.\nProgramming \u0026amp; scripting Is this completely required? Maybe not for complete beginners. Does it help? Absolutely yes. Understanding how web apps or any type of application works makes things much easier. You can imagine different entry points to exploit if you understand how systems are designed. Also writing scripts in bash or python makes you more productive through automation.\nEthical Hacking foundations Once you feel confident with these 3 pillars, you can go to the next step. You can study about different topics and areas. For example, binary exploiting, web pentesting, mobile pentesting, wireless hacking, etc. You should start picking a focus, in this post we focus on web pentesting, as it is beginner friendly. Also web applications are the bread and butter in companies nowadays.\nKey concepts to study:\nCIA Triad: CIA refers to Confidentiality, Integrity and Availability. These three concepts are key in information security, and describe properties we want to ensure in our systems and information. Web Security basics, OWASP: Study the OWASP Top 10, which summarizes most frequent web security risks. Authentication and session control: Understand the concepts of Authentication and Authorization, research about how session is handled in web apps, cookies, JWT tokens, etc. Input validation \u0026amp; injection attacks: Learn about SQL Injection, Cross-Site Scripting (XSS), Code Injection, SSTI, and every injection type. Secure development lifecycle: Find out how to implement security controls in code. This can be more related to Blue Team, but as Red Teamer it is important to understand. Firewall evasion: What a firewall is and some techniques/methods to bypass. Some cryptography: Understand what a chiper and a hash are, how information is encrypted to prevent access from 3rd parties. Focusing on web, read about TLS protocol. There are many more topics you can research and learn, but this could be a nice starting point.\nTools and platforms to learn Now you have an idea of what to study, let\u0026rsquo;s see how to start in practical terms.\nSome platforms I personally recommend:\nOverTheWire: Here you can find some CTFs (Capture The Flag) which are fun to play and also really instructive. Bandit games are a must for complete beginners, as you will explore some linux and bash concepts which are basic to continue. The games are leveled by difficulty, in their web you can get all the information about how to play, only a terminal and SSH is required. This helps building your foundation in Linux OS. HackTheBox: Nº 1 platform in cybersecurity. Has a lot of resources to learn all this core fundamentals, and also red team / blue team security topics. It is focused on labs where you can test your skills hacking different boxes but if you really want to learn it is worth to invest time and money in the academy. I have to say the level here is high, specially if you try to hack machines on your own without using some guide or writeup. TryHackMe: More beginner friendly than hackthebox, it provides a lot of guided learning resources. PortSwigger Labs: Practical labs about specific topics, focused on web hacking. They are great to learn and understand different types of attacks, injections, and security misconfigurations. I would recommend digging into this once you have the theoretical basis about these concepts. I have to mention a few tools I am sure you\u0026rsquo;d end up using:\nNmap: This is probably the most famous tool in hacking, allowing you to gather information about ports and services running in a machine. Burpsuite: A proxy tool widely used in web application security testing. It basically allows you to intercept and modify web requests, which can be used to perform several types of attacks. Metasploit: The most used pentesting framework. Contains a large amount of scripts and exploits ready to run. Another crucial step here is to set up your virtual lab environment to test vulnerable applications. To achieve this goal, there are some Linux distributions like Kali, Parrot or BlackArch, but that\u0026rsquo;s a topic for another post.\nFinal thoughs To sum up, this would be my personal roadmap:\nLearn the fundamentals, specially Linux and networking. Install some Linux in a virtual machine, play with it, get comfortable with the terminal. You can start with bandit wargames in OverTheWire. Complete every level and make sure to understand everything as clear as possible. Move to guided boxes on HackTheBox. I recommend you joining their Discord, ask questions, community is great there! Take notes, repeat, learn, improve your skills. Maybe use your own lab environment, create your own vulnerable apps. Hacking is a mixing of curiosity, study and practice. Being passionate and motivated about it is really helpful and will definitely speed up the process. The path is long and really challenging, so keep it going!\n\u0026ldquo;Yes, I am a criminal. My crime is that of curiosity.\u0026rdquo; — The Mentor (Loyd Blankenship) at The Hacker Manifesto\n","permalink":"http://localhost:1313/posts/starting-point/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIf you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\u003c/p\u003e","title":"Starting Point"},{"content":"Introduction In this post series we are going to solve every level from bandit in OverTheWire This guide pretends to be a writeup containing the solutions of the level, designed for beginners.\nTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing WSL, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\nEvery section will contain the solution as well as some tips for people who is absolutely beginner.\nTips First of all, some tips:\nDo not use this as first resource to solve the levels. Try on your own, make mistakes and learn from them. Only check the solution as last resource or if you are completely new and you have absolutely no idea about what to do next. Take notes from your learning. Write up commands, tips and everything which can be useful in the future. Make sure to understand everything. Is a good idea to note the passwords for every level. If you want to continue letter, you can simply log in in the desired level. It is annoying to repeat everything! Follow the tips and information provided at OverTheWire website. Levels Here is my solution for every level:\nBandit0 Bandit1 Bandit2 Bandit3 Bandit4 Bandit5 Bandit6 Bandit7 ","permalink":"http://localhost:1313/posts/otw/bandit/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIn this post series we are going to solve every level from bandit in \u003ca href=\"https://overthewire.org/wargames/bandit/\"\u003e\u003cem\u003eOverTheWire\u003c/em\u003e\u003c/a\u003e\nThis guide pretends to be a writeup containing the solutions of the level, designed for beginners.\u003c/p\u003e\n\u003cp\u003eTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing \u003ca href=\"https://learn.microsoft.com/en-us/windows/wsl/install\"\u003eWSL\u003c/a\u003e, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\u003c/p\u003e","title":"Bandit"},{"content":"Level description The goal of this level is for you to log into the game using SSH. The host to which you need to connect is bandit.labs.overthewire.org, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\nTips for beginners Read a bit about what SSH is. Research about what a port is. Solution This is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go here.\nAt Linux, we can use ssh client to connect to the server. It should be installed by default on your system. If not, please first research about how to install. Once you have the SSH client installed, you can log in into the first level as follows:\nssh bandit0@bandit.labs.overthewire.org -p 2220 Syntax is simple: ssh \u0026lt;username\u0026gt;@\u0026lt;hostname\u0026gt; -p \u0026lt;port\u0026gt;. Usually SSH runs on port 22 by default, but they changed to port 2220 so we must specify it in the command.\nOnce you try to log in, you will see something like this: NB: If it\u0026rsquo;s the first time you try to log in, you will be asked about the authenticity of the host. Just type yes.\nType the password bandit0 and press enter. Now you are inside bandit server, ready to begin with bandit1!\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit0/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe goal of this level is for you to log into the game using SSH. The host to which you need to connect is \u003cstrong\u003ebandit.labs.overthewire.org\u003c/strong\u003e, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eRead a bit about what SSH is.\u003c/li\u003e\n\u003cli\u003eResearch about what a port is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go \u003ca href=\"https://en.wikipedia.org/wiki/Secure_Shell\"\u003ehere\u003c/a\u003e.\u003c/p\u003e","title":"Bandit0"},{"content":"Level description The password for the next level is stored in a file called readme located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\nTips for beginners Learn about home directory in Linux. Learn to use cat and ls commands. Solution First step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\nls This shows in terminal the files at the current directory. There you will see the readme file.\nNow we can to check the contents, so let\u0026rsquo;s use cat:\ncat readme To read a file, we use cat \u0026lt;filename\u0026gt;.\nNB: Not every file is human readable in Linux. We deep more about this in later levels.\nThe content of the readme file reveals the password for bandit2 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit1/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u003cstrong\u003ereadme\u003c/strong\u003e located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn about home directory in Linux.\u003c/li\u003e\n\u003cli\u003eLearn to use \u003ccode\u003ecat\u003c/code\u003e and \u003ccode\u003els\u003c/code\u003e commands.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eFirst step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\u003c/p\u003e","title":"Bandit0 -\u003e Bandit 1"},{"content":"Level description The password for the next level is stored in a file called - located in the home directory\nTips for beginners Try to understand why previous solution is not working as you expect. Solution You may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our cat command: The terminal is waiting for something else. This happens due to character - is used to pass arguments to our commands, and the linux shell is interpreting that. To prevent that, we could use:\ncat ./- NB: Dot . is used to refer current directory. The slash / is used at the end of directory name.\nWe get the password for bandit3 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit2/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called - located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eTry to understand why previous solution is not working as you expect.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eYou may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our \u003ccode\u003ecat\u003c/code\u003e command:\n\u003cimg alt=\"bandit2\" loading=\"lazy\" src=\"/images/otw/bandit/bandit2/0.png\"\u003e\u003c/p\u003e\n\u003cp\u003eThe terminal is \u003cem\u003ewaiting\u003c/em\u003e for something else. This happens due to character \u003ccode\u003e-\u003c/code\u003e is used to pass arguments to our commands, and the linux shell is interpreting that.\nTo prevent that, we could use:\u003c/p\u003e","title":"Bandit1 -\u003e Bandit2"},{"content":"Level description The password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\nTips for beginners Think about how to escape the whitespaces. Solution After login in the machine as bandit3, we can see the filename \u0026ndash;spaces in this filename\u0026ndash;.\nNow we have 2 problems:\nSame as previous level, filename starts with --, so it will be interpreted as an argument. Address this problem using ./. Filename contains whitespaces. This is an issue, as bash interpretes whitespaces to separate commands. To solve the second problem, we must escape the whitespace character in some way. Here is the solution:\ncat ./--spaces\\ in\\ this\\ filename-- NB: Little trick, you can start writting filename and press Tab to autocomplete the name. The \\ is going to be inserted automatically.\nJust using the \\ we can escape the whitespace.\nNow we can continue with the bandit4 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit3/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eThink about how to \u003cem\u003eescape\u003c/em\u003e the whitespaces.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAfter login in the machine as bandit3, we can see the filename \u003cem\u003e\u0026ndash;spaces in this filename\u0026ndash;\u003c/em\u003e.\u003c/p\u003e\n\u003cp\u003eNow we have 2 problems:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eSame as previous level, filename starts with \u003ccode\u003e--\u003c/code\u003e, so it will be interpreted as an argument. Address this problem using \u003ccode\u003e./\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003eFilename contains \u003cstrong\u003ewhitespaces\u003c/strong\u003e. This is an issue, as bash interpretes whitespaces to separate commands.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eTo solve the second problem, we must escape the whitespace character in some way. Here is the solution:\u003c/p\u003e","title":"Bandit2 -\u003e Bandit 3"},{"content":"Level description The password for the next level is stored in a hidden file in the inhere directory.\nTips for beginners Learn how to navigate directories in Linux. First understand what a hidden file is. Solution Listing directory files inside bandit4\u0026rsquo;s home directory, show directory inhere.\nNB: How to distinguish files and directories in Linux? Use ls -l and see the difference.\nWe have 2 options now:\nMove to inhere directory and check contens again. Check contents directly. Moving to another directory can be done using cd \u0026lt;dirName\u0026gt;. If you prefer to check directory contents directly, use ls \u0026lt;dirName\u0026gt;.\nAfter checking inhere contents via ls, we see nothing. The reason is the file is a hidden file. A hidden file in Linux is everyfile whose name starts with dot .. Hidden files are not shown by default with ls command, so we must add a special flag -a to list all files: NB: Both flags -l and -a cna be combined into a single flag -al, which is shorter to type.\nAs you can see, filename is \u0026hellip;Hidding-From-You starting with three dots. Reading file contents should be easy at this point!\nNext level is bandit5.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit4/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a hidden file in the inhere directory.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to navigate directories in Linux.\u003c/li\u003e\n\u003cli\u003eFirst understand what a hidden file is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eListing directory files inside bandit4\u0026rsquo;s home directory, show directory \u003cstrong\u003einhere\u003c/strong\u003e.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e How to distinguish files and directories in Linux? Use \u003ccode\u003els -l\u003c/code\u003e and see the difference.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eWe have 2 options now:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eMove to inhere directory and check contens again.\u003c/li\u003e\n\u003cli\u003eCheck contents directly.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eMoving to another directory can be done using \u003ccode\u003ecd \u0026lt;dirName\u0026gt;\u003c/code\u003e. If you prefer to check directory contents directly, use \u003ccode\u003els \u0026lt;dirName\u0026gt;\u003c/code\u003e.\u003c/p\u003e","title":"Bandit4"},{"content":"Level description The password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\nTips for beginners What means human-readable file? Is there any way to check filetype at Linux?. Solution Checking inhere\u0026rsquo;s contents shows some files names \u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII here\nSo now, our goal is checking if file content of every file in the folder is ASCII or not. file \u0026lt;filename\u0026gt; does the job. Note the use of *. That called a wildcard regular expression, we\u0026rsquo;ll deep into it in later levels. An easy approach could be checking every file separately:\nfile ./--file00 file ./--file01 ... file ./--file09 But that\u0026rsquo;s not funny, imagine we have 100 files to check. All the files are in the same directory, so we can use cat ./* where ./* matches every filename in the directory, applying file to every file.\nNB: Another approach is to use find with certaing flags. Try to do in different ways, don\u0026rsquo;t stick to my solution.\nThe file \u0026ndash;file00 content is not readable, so get password from \u0026ndash;file07 and continue with bandit6.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit5/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eWhat means human-readable file?\u003c/li\u003e\n\u003cli\u003eIs there any way to check filetype at Linux?.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eChecking inhere\u0026rsquo;s contents shows some files names \u003cstrong\u003e\u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09\u003c/strong\u003e. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII \u003ca href=\"https://en.wikipedia.org/wiki/ASCII\"\u003ehere\u003c/a\u003e\u003c/p\u003e","title":"Bandit5"},{"content":"Level description The password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\nhuman-readable 1033 bytes in size not executable Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution The purpose of the level is showing us how to find for files. Listing contents of inhere, we can see some folders, containing a lot of files inside: NB: Adding -R to ls shows recursively the content of every folder inside the directory listed.\nSo this time, checking every file is not an option. We need to find a file with some properties, specific size, not excutable and human-readable. Let\u0026rsquo;s explain the command we\u0026rsquo;re using:\nfind inhere/ -size 1033c ! -executable First, we specify the directory, in this case inhere. The option -size 1033c returns files of 1033 bytes. Then, with -executable we would get executable files, but we want not executable files, that\u0026rsquo;s why we are adding ! before.\nNB: By default, the -size option takes as argument the number of blocks. For example, -size 2 means 2 blocks of 512 bytes, so its 1024. The c is used to specify exact bytes. Don\u0026rsquo;t ask me why it\u0026rsquo;s c and not b 😅.\nThe property of human-readability is not implemented in find. This is not an issue, previous command returns a single file and it is human readable (we could confirm using file): Extra tip: try to use the following:\nfind inhere/ -size 1033c ! -executable | file You get the same result! The pipe | is a great tool to execute 2+ commands in one line.\nGet your password and continue with bandit7.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit6/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ehuman-readable\u003c/li\u003e\n\u003cli\u003e1033 bytes in size\u003c/li\u003e\n\u003cli\u003enot executable\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThe purpose of the level is showing us how to find for files. Listing contents of \u003cstrong\u003einhere\u003c/strong\u003e, we can see some folders, containing a lot of files inside:\n\u003cimg alt=\"bandit6_0\" loading=\"lazy\" src=\"/images/otw/bandit/bandit6/0.png\"\u003e\u003c/p\u003e","title":"Bandit6"},{"content":"Level description The password for the next level is stored somewhere on the server and has all of the following properties:\nowned by user bandit7 owned by group bandit6 33 bytes in size Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution This is very straightforward to do after completing previous level. Now we need to identify a file owned by user bandit7 and group bandi6. Furthermore, the file is somewhere on the server, which means we have to find in the root directory /.\nfind / -user bandit7 -group bandit6 -size 33c 2\u0026gt;/dev/null NB: I added that strange 2\u0026gt;/dev/null to filter error output. The reason why it works like that is more technical, for now just save this a fast way to filter errors in terminal. We get some errors because looking for files in the whole server may return some unaccesible files, as we don\u0026rsquo;t have root user permissions. We will study Linux permissions in later levels.\nWe should get a single file, containing password for bandit8.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit7/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored somewhere on the server and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eowned by user bandit7\u003c/li\u003e\n\u003cli\u003eowned by group bandit6\u003c/li\u003e\n\u003cli\u003e33 bytes in size\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is very straightforward to do after completing previous level. Now we need to identify a file owned by user bandit7 and group bandi6. Furthermore, the file is \u003cstrong\u003esomewhere on the server\u003c/strong\u003e, which means we have to find in the root directory \u003ccode\u003e/\u003c/code\u003e.\u003c/p\u003e","title":"Bandit7"},{"content":"Level description The password for the next level is stored in the file data.txt next to the word millionth.\nTips for beginners Learn how to filter file contents. Solution At previous levels, we discovered how to find for files. Now it\u0026rsquo;s time to find for content inside a file. grep command is going to help with that task.\nNB: Of course I don\u0026rsquo;t want to spoil you the password!\nNotice how this can achieved in different ways.\nUsing grep \u0026lt;keyword\u0026gt; \u0026lt;filename\u0026gt;. Using the pipe | to execute grep over the result of cat command. Take you favorite path to solve the level, and continue with bandit9.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit8/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the file \u003cstrong\u003edata.txt\u003c/strong\u003e next to the word \u003cstrong\u003emillionth\u003c/strong\u003e.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to filter file contents.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAt previous levels, we discovered how to find for files. Now it\u0026rsquo;s time to find for content inside a file. \u003ccode\u003egrep\u003c/code\u003e command is going to help with that task.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"bandit8\" loading=\"lazy\" src=\"/images/otw/bandit/bandit8/0.png\"\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e Of course I don\u0026rsquo;t want to spoil you the password!\u003c/p\u003e","title":"Bandit8"},{"content":"Level description The password for the next level is stored in the file data.txt and is the only line of text that occurs only once.\nTips for beginners First, apply sort to file content. Solution This level is a bit tricky. First, examine the file contents. Using head shows the 10 first lines of a file:\nNB: If you want to show more lines: head -20 or the number of your choice.\nThere are tons of different passwords. The correct one is the only line of text that occurs only once. Try to research how to do on your own. You maybe find uniq. This command has a very interesting flag, -u, used to show only the uniq lines. Let\u0026rsquo;s try with that:\nFor some reason, is not working. The trick here is to sort the file contents before applying uniq. This can be achieved using sort, so the final command looks like this:\ncat data.txt | sort | uniq -u NB: You need to sort lines first because uniq only detects consecutive repetitions. First time I solved this it took a while 😅.\nAfter getting the password, we can continue with bandit10.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit9/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the file \u003cstrong\u003edata.txt\u003c/strong\u003e and is the only line of text that occurs only once.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst, apply \u003ccode\u003esort\u003c/code\u003e to file content.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis level is a bit tricky. First, examine the file contents. Using \u003ccode\u003ehead\u003c/code\u003e shows the 10 first lines of a file:\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"bandit9_0\" loading=\"lazy\" src=\"/images/otw/bandit/bandit9/0.png\"\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e If you want to show more lines: \u003ccode\u003ehead -20\u003c/code\u003e or the number of your choice.\u003c/p\u003e","title":"Bandit9"},{"content":"Level description The password for the next level is stored in the file data.txt in one of the few human-readable strings, preceded by several \u0026lsquo;=\u0026rsquo; characters.\nTips for beginners strings can be used to retrieve human readable-content from a file. You can apply things from previous levels. Solution The file data.txt has mixed content, binary and ASCII. If the password is preceded by several \u0026lsquo;=\u0026rsquo; characters, we can simply filter by some of them. But there is a little problem, content is not fully ASCII, so grep won\u0026rsquo;t work. First you need to get content with strings to get only the human readable content.\nNB: Try to run both cat and strings separately. Observe the differences.\nNext level is bandit10.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit10/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the file \u003cstrong\u003edata.txt\u003c/strong\u003e in one of the few human-readable strings, preceded by several \u0026lsquo;=\u0026rsquo; characters.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003estrings\u003c/code\u003e can be used to retrieve human readable-content from a file.\u003c/li\u003e\n\u003cli\u003eYou can apply things from previous levels.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThe file \u003cstrong\u003edata.txt\u003c/strong\u003e has mixed content, binary and ASCII. If the password is preceded by several \u0026lsquo;=\u0026rsquo; characters, we can simply filter by some of them. But there is a little problem, content is not fully ASCII, so \u003ccode\u003egrep\u003c/code\u003e won\u0026rsquo;t work. First you need to get content with \u003ccode\u003estrings\u003c/code\u003e to get only the human readable content.\u003c/p\u003e","title":"Bandit10"},{"content":"👨‍💻 whoami Hey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\nWhat is this❓​ This blog is basically my thoughts on several hacking topics. Here you’ll see:\nWriteups from CTF challenges, from platforms like HackTheBox or OverTheWire.\nWalkthroughs and notes on pentesting techniques I’m learning or testing.\nSome posts on cryptography — because math can be fun (sometimes).\nRandom topics that freaks like me may (just may) find interesting.\nThe idea is simple: share what I learn, document my journey, and maybe help others who are also diving into the exciting world of ethical hacking.\n📫 Contact Want to say hi, share ideas, or just geek out about hacking? Reach me here:\n📧 Email: mrb0b1073@proton.me 💻​ GitHub: mrb0b173 🟩​ HackTheBox: mrb0b1073 ","permalink":"http://localhost:1313/about/","summary":"\u003ch2 id=\"-whoami\"\u003e👨‍💻 whoami\u003c/h2\u003e\n\u003cp\u003eHey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\u003c/p\u003e\n\u003chr\u003e\n\u003ch2 id=\"what-is-this\"\u003eWhat is this❓​\u003c/h2\u003e\n\u003cp\u003eThis blog is basically my thoughts on several hacking topics. Here you’ll see:\u003c/p\u003e","title":"About"},{"content":"Hey! 👋 I\u0026rsquo;m mrb0b1073 and this is my first post.\nWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\nExcited to start this adventure!\n","permalink":"http://localhost:1313/posts/hello-world/","summary":"\u003cp\u003eHey! 👋 I\u0026rsquo;m \u003cstrong\u003emrb0b1073\u003c/strong\u003e and this is my first post.\u003c/p\u003e\n\u003cp\u003eWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\u003cbr\u003e\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\u003c/p\u003e\n\u003cp\u003eExcited to start this adventure!\u003c/p\u003e","title":"Hello World"},{"content":"Introduction If you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\nIn cybersecurity there are broadly two complementary roles: Blue Team and Red Team. Blue Teams focus on defense, monitoring, incident response, hardening systems and keeping services secure, while Red Teams simulate attackers to find weaknesses and prove what an adversary could do. Ethical hacking aligns closely with Red Team operations, but cybersecurity is highly transversal across IT. There are many specialities or areas, such as cloud security, appsec, pentesting, forensics, governance, risk management, malware analysis, etc. Every topic could deserve its own post, so let\u0026rsquo;s keep it simple and focus on ethical hacking.\nHacker philosophy Let\u0026rsquo;s start with the idea of what is exactly a hacker. A hacker is someone who explores systems to understand how they work, finds creative ways to make or fix things, and solves technical problems. Historically the word describes curiosity, craft, and a drive to improve systems — not criminality. It is important to make the distinction between hacker and cracker, also called cybercriminal. A hacker explores, builds, discloses responsibly and works to improve security. They work in authorized environments or labs. On the other hand, a cracker breaks into systems for theft, vandalism or other illicit gain.\nHere you can find the most popularized ideas often summarized as the hacker ethic:\nCuriosity first: Learn by exploring and tinkering. Freedom of information: All knowledge should be shared to help progress. This fits properly with the idea of open source. Mistrust of needless authority: Centralized control sometimes blocks innovation. It is always good to question anything, specially common assumptions. Meritocracy: Skills, craft and results matter more than titles. Craftsmanship \u0026amp; elegance: Technical beauty matters. Build clean, clever and efficient solutions. Responsability \u0026amp; ethics: Use your skills to build, fix, educate and defend, not to harm. Core fundamentals Assuming you want to init yourself in hacking, you should first build competence across three basic pillars.\nOperating Systems You should learn as much as possible about Linux and Windows. Specially Linux, all the tools you will be using are meant to be used in a Linux environment. Skill with shell is required, learn basic commands and how to interact with the OS using the terminal. Research about processes, file permissions, package management and logs. A large proportion of web servers around the world run on Linux, although Windows is also widely used. Windows knowledge is really valuable too, considering active directory is strongly used in corporate environments.\nNetworking You have to understand how computers communicate each other. Understand basic networking concepts, IP adresses, subnetting, proxies, find out how internet works. Study some protocols such as TCP/IP, HTTP, DNS or SSH. This could sound confusing for beginners, but this step is not optional! Study different client/server models and how services expose attack surfaces.\nProgramming \u0026amp; scripting Is this completely required? Maybe not for complete beginners. Does it help? Absolutely yes. Understanding how web apps or any type of application works makes things much easier. You can imagine different entry points to exploit if you understand how systems are designed. Also writing scripts in bash or python makes you more productive through automation.\nEthical Hacking foundations Once you feel confident with these 3 pillars, you can go to the next step. You can study about different topics and areas. For example, binary exploiting, web pentesting, mobile pentesting, wireless hacking, etc. You should start picking a focus, in this post we focus on web pentesting, as it is beginner friendly. Also web applications are the bread and butter in companies nowadays.\nKey concepts to study:\nCIA Triad: CIA refers to Confidentiality, Integrity and Availability. These three concepts are key in information security, and describe properties we want to ensure in our systems and information. Web Security basics, OWASP: Study the OWASP Top 10, which summarizes most frequent web security risks. Authentication and session control: Understand the concepts of Authentication and Authorization, research about how session is handled in web apps, cookies, JWT tokens, etc. Input validation \u0026amp; injection attacks: Learn about SQL Injection, Cross-Site Scripting (XSS), Code Injection, SSTI, and every injection type. Secure development lifecycle: Find out how to implement security controls in code. This can be more related to Blue Team, but as Red Teamer it is important to understand. Firewall evasion: What a firewall is and some techniques/methods to bypass. Some cryptography: Understand what a chiper and a hash are, how information is encrypted to prevent access from 3rd parties. Focusing on web, read about TLS protocol. There are many more topics you can research and learn, but this could be a nice starting point.\nTools and platforms to learn Now you have an idea of what to study, let\u0026rsquo;s see how to start in practical terms.\nSome platforms I personally recommend:\nOverTheWire: Here you can find some CTFs (Capture The Flag) which are fun to play and also really instructive. Bandit games are a must for complete beginners, as you will explore some linux and bash concepts which are basic to continue. The games are leveled by difficulty, in their web you can get all the information about how to play, only a terminal and SSH is required. This helps building your foundation in Linux OS. HackTheBox: Nº 1 platform in cybersecurity. Has a lot of resources to learn all this core fundamentals, and also red team / blue team security topics. It is focused on labs where you can test your skills hacking different boxes but if you really want to learn it is worth to invest time and money in the academy. I have to say the level here is high, specially if you try to hack machines on your own without using some guide or writeup. TryHackMe: More beginner friendly than hackthebox, it provides a lot of guided learning resources. PortSwigger Labs: Practical labs about specific topics, focused on web hacking. They are great to learn and understand different types of attacks, injections, and security misconfigurations. I would recommend digging into this once you have the theoretical basis about these concepts. I have to mention a few tools I am sure you\u0026rsquo;d end up using:\nNmap: This is probably the most famous tool in hacking, allowing you to gather information about ports and services running in a machine. Burpsuite: A proxy tool widely used in web application security testing. It basically allows you to intercept and modify web requests, which can be used to perform several types of attacks. Metasploit: The most used pentesting framework. Contains a large amount of scripts and exploits ready to run. Another crucial step here is to set up your virtual lab environment to test vulnerable applications. To achieve this goal, there are some Linux distributions like Kali, Parrot or BlackArch, but that\u0026rsquo;s a topic for another post.\nFinal thoughs To sum up, this would be my personal roadmap:\nLearn the fundamentals, specially Linux and networking. Install some Linux in a virtual machine, play with it, get comfortable with the terminal. You can start with bandit wargames in OverTheWire. Complete every level and make sure to understand everything as clear as possible. Move to guided boxes on HackTheBox. I recommend you joining their Discord, ask questions, community is great there! Take notes, repeat, learn, improve your skills. Maybe use your own lab environment, create your own vulnerable apps. Hacking is a mixing of curiosity, study and practice. Being passionate and motivated about it is really helpful and will definitely speed up the process. The path is long and really challenging, so keep it going!\n\u0026ldquo;Yes, I am a criminal. My crime is that of curiosity.\u0026rdquo; — The Mentor (Loyd Blankenship) at The Hacker Manifesto\n","permalink":"http://localhost:1313/posts/starting-point/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIf you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\u003c/p\u003e","title":"Starting Point"},{"content":"Introduction In this post series we are going to solve every level from bandit in OverTheWire This guide pretends to be a writeup containing the solutions of the level, designed for beginners.\nTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing WSL, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\nEvery section will contain the solution as well as some tips for people who is absolutely beginner.\nTips First of all, some tips:\nDo not use this as first resource to solve the levels. Try on your own, make mistakes and learn from them. Only check the solution as last resource or if you are completely new and you have absolutely no idea about what to do next. Take notes from your learning. Write up commands, tips and everything which can be useful in the future. Make sure to understand everything. Is a good idea to note the passwords for every level. If you want to continue letter, you can simply log in in the desired level. It is annoying to repeat everything! Follow the tips and information provided at OverTheWire website. Levels Here is my solution for every level:\nBandit0 Bandit1 Bandit2 Bandit3 Bandit4 Bandit5 Bandit6 Bandit7 ","permalink":"http://localhost:1313/posts/otw/bandit/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIn this post series we are going to solve every level from bandit in \u003ca href=\"https://overthewire.org/wargames/bandit/\"\u003e\u003cem\u003eOverTheWire\u003c/em\u003e\u003c/a\u003e\nThis guide pretends to be a writeup containing the solutions of the level, designed for beginners.\u003c/p\u003e\n\u003cp\u003eTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing \u003ca href=\"https://learn.microsoft.com/en-us/windows/wsl/install\"\u003eWSL\u003c/a\u003e, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\u003c/p\u003e","title":"Bandit"},{"content":"Level description The goal of this level is for you to log into the game using SSH. The host to which you need to connect is bandit.labs.overthewire.org, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\nTips for beginners Read a bit about what SSH is. Research about what a port is. Solution This is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go here.\nAt Linux, we can use ssh client to connect to the server. It should be installed by default on your system. If not, please first research about how to install. Once you have the SSH client installed, you can log in into the first level as follows:\nssh bandit0@bandit.labs.overthewire.org -p 2220 Syntax is simple: ssh \u0026lt;username\u0026gt;@\u0026lt;hostname\u0026gt; -p \u0026lt;port\u0026gt;. Usually SSH runs on port 22 by default, but they changed to port 2220 so we must specify it in the command.\nOnce you try to log in, you will see something like this: NB: If it\u0026rsquo;s the first time you try to log in, you will be asked about the authenticity of the host. Just type yes.\nType the password bandit0 and press enter. Now you are inside bandit server, ready to begin with bandit1!\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit0/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe goal of this level is for you to log into the game using SSH. The host to which you need to connect is \u003cstrong\u003ebandit.labs.overthewire.org\u003c/strong\u003e, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eRead a bit about what SSH is.\u003c/li\u003e\n\u003cli\u003eResearch about what a port is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go \u003ca href=\"https://en.wikipedia.org/wiki/Secure_Shell\"\u003ehere\u003c/a\u003e.\u003c/p\u003e","title":"Bandit0"},{"content":"Level description The password for the next level is stored in a file called readme located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\nTips for beginners Learn about home directory in Linux. Learn to use cat and ls commands. Solution First step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\nls This shows in terminal the files at the current directory. There you will see the readme file.\nNow we can to check the contents, so let\u0026rsquo;s use cat:\ncat readme To read a file, we use cat \u0026lt;filename\u0026gt;.\nNB: Not every file is human readable in Linux. We deep more about this in later levels.\nThe content of the readme file reveals the password for bandit2 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit1/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u003cstrong\u003ereadme\u003c/strong\u003e located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn about home directory in Linux.\u003c/li\u003e\n\u003cli\u003eLearn to use \u003ccode\u003ecat\u003c/code\u003e and \u003ccode\u003els\u003c/code\u003e commands.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eFirst step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\u003c/p\u003e","title":"Bandit0 -\u003e Bandit 1"},{"content":"Level description The password for the next level is stored in a file called - located in the home directory\nTips for beginners Try to understand why previous solution is not working as you expect. Solution You may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our cat command: The terminal is waiting for something else. This happens due to character - is used to pass arguments to our commands, and the linux shell is interpreting that. To prevent that, we could use:\ncat ./- NB: Dot . is used to refer current directory. The slash / is used at the end of directory name.\nWe get the password for bandit3 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit2/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called - located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eTry to understand why previous solution is not working as you expect.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eYou may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our \u003ccode\u003ecat\u003c/code\u003e command:\n\u003cimg alt=\"bandit2\" loading=\"lazy\" src=\"/images/otw/bandit/bandit2/0.png\"\u003e\u003c/p\u003e\n\u003cp\u003eThe terminal is \u003cem\u003ewaiting\u003c/em\u003e for something else. This happens due to character \u003ccode\u003e-\u003c/code\u003e is used to pass arguments to our commands, and the linux shell is interpreting that.\nTo prevent that, we could use:\u003c/p\u003e","title":"Bandit1 -\u003e Bandit2"},{"content":"Level description The password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\nTips for beginners Think about how to escape the whitespaces. Solution After login in the machine as bandit3, we can see the filename \u0026ndash;spaces in this filename\u0026ndash;.\nNow we have 2 problems:\nSame as previous level, filename starts with --, so it will be interpreted as an argument. Address this problem using ./. Filename contains whitespaces. This is an issue, as bash interpretes whitespaces to separate commands. To solve the second problem, we must escape the whitespace character in some way. Here is the solution:\ncat ./--spaces\\ in\\ this\\ filename-- NB: Little trick, you can start writting filename and press Tab to autocomplete the name. The \\ is going to be inserted automatically.\nJust using the \\ we can escape the whitespace.\nNow we can continue with the bandit4 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit3/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eThink about how to \u003cem\u003eescape\u003c/em\u003e the whitespaces.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAfter login in the machine as bandit3, we can see the filename \u003cem\u003e\u0026ndash;spaces in this filename\u0026ndash;\u003c/em\u003e.\u003c/p\u003e\n\u003cp\u003eNow we have 2 problems:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eSame as previous level, filename starts with \u003ccode\u003e--\u003c/code\u003e, so it will be interpreted as an argument. Address this problem using \u003ccode\u003e./\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003eFilename contains \u003cstrong\u003ewhitespaces\u003c/strong\u003e. This is an issue, as bash interpretes whitespaces to separate commands.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eTo solve the second problem, we must escape the whitespace character in some way. Here is the solution:\u003c/p\u003e","title":"Bandit2 -\u003e Bandit3"},{"content":"Level description The password for the next level is stored in a hidden file in the inhere directory.\nTips for beginners Learn how to navigate directories in Linux. First understand what a hidden file is. Solution Listing directory files inside bandit4\u0026rsquo;s home directory, show directory inhere.\nNB: How to distinguish files and directories in Linux? Use ls -l and see the difference.\nWe have 2 options now:\nMove to inhere directory and check contens again. Check contents directly. Moving to another directory can be done using cd \u0026lt;dirName\u0026gt;. If you prefer to check directory contents directly, use ls \u0026lt;dirName\u0026gt;.\nAfter checking inhere contents via ls, we see nothing. The reason is the file is a hidden file. A hidden file in Linux is everyfile whose name starts with dot .. Hidden files are not shown by default with ls command, so we must add a special flag -a to list all files: NB: Both flags -l and -a cna be combined into a single flag -al, which is shorter to type.\nAs you can see, filename is \u0026hellip;Hidding-From-You starting with three dots. Reading file contents should be easy at this point!\nNext level is bandit5.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit4/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a hidden file in the inhere directory.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to navigate directories in Linux.\u003c/li\u003e\n\u003cli\u003eFirst understand what a hidden file is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eListing directory files inside bandit4\u0026rsquo;s home directory, show directory \u003cstrong\u003einhere\u003c/strong\u003e.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e How to distinguish files and directories in Linux? Use \u003ccode\u003els -l\u003c/code\u003e and see the difference.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eWe have 2 options now:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eMove to inhere directory and check contens again.\u003c/li\u003e\n\u003cli\u003eCheck contents directly.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eMoving to another directory can be done using \u003ccode\u003ecd \u0026lt;dirName\u0026gt;\u003c/code\u003e. If you prefer to check directory contents directly, use \u003ccode\u003els \u0026lt;dirName\u0026gt;\u003c/code\u003e.\u003c/p\u003e","title":"Bandit4"},{"content":"Level description The password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\nTips for beginners What means human-readable file? Is there any way to check filetype at Linux?. Solution Checking inhere\u0026rsquo;s contents shows some files names \u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII here\nSo now, our goal is checking if file content of every file in the folder is ASCII or not. file \u0026lt;filename\u0026gt; does the job. Note the use of *. That called a wildcard regular expression, we\u0026rsquo;ll deep into it in later levels. An easy approach could be checking every file separately:\nfile ./--file00 file ./--file01 ... file ./--file09 But that\u0026rsquo;s not funny, imagine we have 100 files to check. All the files are in the same directory, so we can use cat ./* where ./* matches every filename in the directory, applying file to every file.\nNB: Another approach is to use find with certaing flags. Try to do in different ways, don\u0026rsquo;t stick to my solution.\nThe file \u0026ndash;file00 content is not readable, so get password from \u0026ndash;file07 and continue with bandit6.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit5/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eWhat means human-readable file?\u003c/li\u003e\n\u003cli\u003eIs there any way to check filetype at Linux?.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eChecking inhere\u0026rsquo;s contents shows some files names \u003cstrong\u003e\u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09\u003c/strong\u003e. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII \u003ca href=\"https://en.wikipedia.org/wiki/ASCII\"\u003ehere\u003c/a\u003e\u003c/p\u003e","title":"Bandit5"},{"content":"Level description The password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\nhuman-readable 1033 bytes in size not executable Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution The purpose of the level is showing us how to find for files. Listing contents of inhere, we can see some folders, containing a lot of files inside: NB: Adding -R to ls shows recursively the content of every folder inside the directory listed.\nSo this time, checking every file is not an option. We need to find a file with some properties, specific size, not excutable and human-readable. Let\u0026rsquo;s explain the command we\u0026rsquo;re using:\nfind inhere/ -size 1033c ! -executable First, we specify the directory, in this case inhere. The option -size 1033c returns files of 1033 bytes. Then, with -executable we would get executable files, but we want not executable files, that\u0026rsquo;s why we are adding ! before.\nNB: By default, the -size option takes as argument the number of blocks. For example, -size 2 means 2 blocks of 512 bytes, so its 1024. The c is used to specify exact bytes. Don\u0026rsquo;t ask me why it\u0026rsquo;s c and not b 😅.\nThe property of human-readability is not implemented in find. This is not an issue, previous command returns a single file and it is human readable (we could confirm using file): Extra tip: try to use the following:\nfind inhere/ -size 1033c ! -executable | file You get the same result! The pipe | is a great tool to execute 2+ commands in one line.\nGet your password and continue with bandit7.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit6/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ehuman-readable\u003c/li\u003e\n\u003cli\u003e1033 bytes in size\u003c/li\u003e\n\u003cli\u003enot executable\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThe purpose of the level is showing us how to find for files. Listing contents of \u003cstrong\u003einhere\u003c/strong\u003e, we can see some folders, containing a lot of files inside:\n\u003cimg alt=\"bandit6_0\" loading=\"lazy\" src=\"/images/otw/bandit/bandit6/0.png\"\u003e\u003c/p\u003e","title":"Bandit6"},{"content":"Level description The password for the next level is stored somewhere on the server and has all of the following properties:\nowned by user bandit7 owned by group bandit6 33 bytes in size Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution This is very straightforward to do after completing previous level. Now we need to identify a file owned by user bandit7 and group bandi6. Furthermore, the file is somewhere on the server, which means we have to find in the root directory /.\nfind / -user bandit7 -group bandit6 -size 33c 2\u0026gt;/dev/null NB: I added that strange 2\u0026gt;/dev/null to filter error output. The reason why it works like that is more technical, for now just save this a fast way to filter errors in terminal. We get some errors because looking for files in the whole server may return some unaccesible files, as we don\u0026rsquo;t have root user permissions. We will study Linux permissions in later levels.\nWe should get a single file, containing password for bandit8.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit7/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored somewhere on the server and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eowned by user bandit7\u003c/li\u003e\n\u003cli\u003eowned by group bandit6\u003c/li\u003e\n\u003cli\u003e33 bytes in size\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is very straightforward to do after completing previous level. Now we need to identify a file owned by user bandit7 and group bandi6. Furthermore, the file is \u003cstrong\u003esomewhere on the server\u003c/strong\u003e, which means we have to find in the root directory \u003ccode\u003e/\u003c/code\u003e.\u003c/p\u003e","title":"Bandit7"},{"content":"Level description The password for the next level is stored in the file data.txt next to the word millionth.\nTips for beginners Learn how to filter file contents. Solution At previous levels, we discovered how to find for files. Now it\u0026rsquo;s time to find for content inside a file. grep command is going to help with that task.\nNB: Of course I don\u0026rsquo;t want to spoil you the password!\nNotice how this can achieved in different ways.\nUsing grep \u0026lt;keyword\u0026gt; \u0026lt;filename\u0026gt;. Using the pipe | to execute grep over the result of cat command. Take you favorite path to solve the level, and continue with bandit9.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit8/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the file \u003cstrong\u003edata.txt\u003c/strong\u003e next to the word \u003cstrong\u003emillionth\u003c/strong\u003e.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to filter file contents.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAt previous levels, we discovered how to find for files. Now it\u0026rsquo;s time to find for content inside a file. \u003ccode\u003egrep\u003c/code\u003e command is going to help with that task.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"bandit8\" loading=\"lazy\" src=\"/images/otw/bandit/bandit8/0.png\"\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e Of course I don\u0026rsquo;t want to spoil you the password!\u003c/p\u003e","title":"Bandit8"},{"content":"Level description The password for the next level is stored in the file data.txt and is the only line of text that occurs only once.\nTips for beginners First, apply sort to file content. Solution This level is a bit tricky. First, examine the file contents. Using head shows the 10 first lines of a file:\nNB: If you want to show more lines: head -20 or the number of your choice.\nThere are tons of different passwords. The correct one is the only line of text that occurs only once. Try to research how to do on your own. You maybe find uniq. This command has a very interesting flag, -u, used to show only the uniq lines. Let\u0026rsquo;s try with that:\nFor some reason, is not working. The trick here is to sort the file contents before applying uniq. This can be achieved using sort, so the final command looks like this:\ncat data.txt | sort | uniq -u NB: You need to sort lines first because uniq only detects consecutive repetitions. First time I solved this it took a while 😅.\nAfter getting the password, we can continue with bandit10.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit9/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the file \u003cstrong\u003edata.txt\u003c/strong\u003e and is the only line of text that occurs only once.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst, apply \u003ccode\u003esort\u003c/code\u003e to file content.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis level is a bit tricky. First, examine the file contents. Using \u003ccode\u003ehead\u003c/code\u003e shows the 10 first lines of a file:\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"bandit9_0\" loading=\"lazy\" src=\"/images/otw/bandit/bandit9/0.png\"\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e If you want to show more lines: \u003ccode\u003ehead -20\u003c/code\u003e or the number of your choice.\u003c/p\u003e","title":"Bandit9"},{"content":"Level description The password for the next level is stored in the file data.txt in one of the few human-readable strings, preceded by several \u0026lsquo;=\u0026rsquo; characters.\nTips for beginners strings can be used to retrieve human readable-content from a file. You can apply things from previous levels. Solution The file data.txt has mixed content, binary and ASCII. If the password is preceded by several \u0026lsquo;=\u0026rsquo; characters, we can simply filter by some of them. But there is a little problem, content is not fully ASCII, so grep won\u0026rsquo;t work. First you need to get content with strings to get only the human readable content.\nNB: Try to run both cat and strings separately. Observe the differences.\nNext level is bandit10.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit10/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the file \u003cstrong\u003edata.txt\u003c/strong\u003e in one of the few human-readable strings, preceded by several \u0026lsquo;=\u0026rsquo; characters.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003estrings\u003c/code\u003e can be used to retrieve human readable-content from a file.\u003c/li\u003e\n\u003cli\u003eYou can apply things from previous levels.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThe file \u003cstrong\u003edata.txt\u003c/strong\u003e has mixed content, binary and ASCII. If the password is preceded by several \u0026lsquo;=\u0026rsquo; characters, we can simply filter by some of them. But there is a little problem, content is not fully ASCII, so \u003ccode\u003egrep\u003c/code\u003e won\u0026rsquo;t work. First you need to get content with \u003ccode\u003estrings\u003c/code\u003e to get only the human readable content.\u003c/p\u003e","title":"Bandit10"},{"content":"👨‍💻 whoami Hey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\nWhat is this❓​ This blog is basically my thoughts on several hacking topics. Here you’ll see:\nWriteups from CTF challenges, from platforms like HackTheBox or OverTheWire.\nWalkthroughs and notes on pentesting techniques I’m learning or testing.\nSome posts on cryptography — because math can be fun (sometimes).\nRandom topics that freaks like me may (just may) find interesting.\nThe idea is simple: share what I learn, document my journey, and maybe help others who are also diving into the exciting world of ethical hacking.\n📫 Contact Want to say hi, share ideas, or just geek out about hacking? Reach me here:\n📧 Email: mrb0b1073@proton.me 💻​ GitHub: mrb0b173 🟩​ HackTheBox: mrb0b1073 ","permalink":"http://localhost:1313/about/","summary":"\u003ch2 id=\"-whoami\"\u003e👨‍💻 whoami\u003c/h2\u003e\n\u003cp\u003eHey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\u003c/p\u003e\n\u003chr\u003e\n\u003ch2 id=\"what-is-this\"\u003eWhat is this❓​\u003c/h2\u003e\n\u003cp\u003eThis blog is basically my thoughts on several hacking topics. Here you’ll see:\u003c/p\u003e","title":"About"},{"content":"Hey! 👋 I\u0026rsquo;m mrb0b1073 and this is my first post.\nWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\nExcited to start this adventure!\n","permalink":"http://localhost:1313/posts/hello-world/","summary":"\u003cp\u003eHey! 👋 I\u0026rsquo;m \u003cstrong\u003emrb0b1073\u003c/strong\u003e and this is my first post.\u003c/p\u003e\n\u003cp\u003eWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\u003cbr\u003e\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\u003c/p\u003e\n\u003cp\u003eExcited to start this adventure!\u003c/p\u003e","title":"Hello World"},{"content":"Introduction If you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\nIn cybersecurity there are broadly two complementary roles: Blue Team and Red Team. Blue Teams focus on defense, monitoring, incident response, hardening systems and keeping services secure, while Red Teams simulate attackers to find weaknesses and prove what an adversary could do. Ethical hacking aligns closely with Red Team operations, but cybersecurity is highly transversal across IT. There are many specialities or areas, such as cloud security, appsec, pentesting, forensics, governance, risk management, malware analysis, etc. Every topic could deserve its own post, so let\u0026rsquo;s keep it simple and focus on ethical hacking.\nHacker philosophy Let\u0026rsquo;s start with the idea of what is exactly a hacker. A hacker is someone who explores systems to understand how they work, finds creative ways to make or fix things, and solves technical problems. Historically the word describes curiosity, craft, and a drive to improve systems — not criminality. It is important to make the distinction between hacker and cracker, also called cybercriminal. A hacker explores, builds, discloses responsibly and works to improve security. They work in authorized environments or labs. On the other hand, a cracker breaks into systems for theft, vandalism or other illicit gain.\nHere you can find the most popularized ideas often summarized as the hacker ethic:\nCuriosity first: Learn by exploring and tinkering. Freedom of information: All knowledge should be shared to help progress. This fits properly with the idea of open source. Mistrust of needless authority: Centralized control sometimes blocks innovation. It is always good to question anything, specially common assumptions. Meritocracy: Skills, craft and results matter more than titles. Craftsmanship \u0026amp; elegance: Technical beauty matters. Build clean, clever and efficient solutions. Responsability \u0026amp; ethics: Use your skills to build, fix, educate and defend, not to harm. Core fundamentals Assuming you want to init yourself in hacking, you should first build competence across three basic pillars.\nOperating Systems You should learn as much as possible about Linux and Windows. Specially Linux, all the tools you will be using are meant to be used in a Linux environment. Skill with shell is required, learn basic commands and how to interact with the OS using the terminal. Research about processes, file permissions, package management and logs. A large proportion of web servers around the world run on Linux, although Windows is also widely used. Windows knowledge is really valuable too, considering active directory is strongly used in corporate environments.\nNetworking You have to understand how computers communicate each other. Understand basic networking concepts, IP adresses, subnetting, proxies, find out how internet works. Study some protocols such as TCP/IP, HTTP, DNS or SSH. This could sound confusing for beginners, but this step is not optional! Study different client/server models and how services expose attack surfaces.\nProgramming \u0026amp; scripting Is this completely required? Maybe not for complete beginners. Does it help? Absolutely yes. Understanding how web apps or any type of application works makes things much easier. You can imagine different entry points to exploit if you understand how systems are designed. Also writing scripts in bash or python makes you more productive through automation.\nEthical Hacking foundations Once you feel confident with these 3 pillars, you can go to the next step. You can study about different topics and areas. For example, binary exploiting, web pentesting, mobile pentesting, wireless hacking, etc. You should start picking a focus, in this post we focus on web pentesting, as it is beginner friendly. Also web applications are the bread and butter in companies nowadays.\nKey concepts to study:\nCIA Triad: CIA refers to Confidentiality, Integrity and Availability. These three concepts are key in information security, and describe properties we want to ensure in our systems and information. Web Security basics, OWASP: Study the OWASP Top 10, which summarizes most frequent web security risks. Authentication and session control: Understand the concepts of Authentication and Authorization, research about how session is handled in web apps, cookies, JWT tokens, etc. Input validation \u0026amp; injection attacks: Learn about SQL Injection, Cross-Site Scripting (XSS), Code Injection, SSTI, and every injection type. Secure development lifecycle: Find out how to implement security controls in code. This can be more related to Blue Team, but as Red Teamer it is important to understand. Firewall evasion: What a firewall is and some techniques/methods to bypass. Some cryptography: Understand what a chiper and a hash are, how information is encrypted to prevent access from 3rd parties. Focusing on web, read about TLS protocol. There are many more topics you can research and learn, but this could be a nice starting point.\nTools and platforms to learn Now you have an idea of what to study, let\u0026rsquo;s see how to start in practical terms.\nSome platforms I personally recommend:\nOverTheWire: Here you can find some CTFs (Capture The Flag) which are fun to play and also really instructive. Bandit games are a must for complete beginners, as you will explore some linux and bash concepts which are basic to continue. The games are leveled by difficulty, in their web you can get all the information about how to play, only a terminal and SSH is required. This helps building your foundation in Linux OS. HackTheBox: Nº 1 platform in cybersecurity. Has a lot of resources to learn all this core fundamentals, and also red team / blue team security topics. It is focused on labs where you can test your skills hacking different boxes but if you really want to learn it is worth to invest time and money in the academy. I have to say the level here is high, specially if you try to hack machines on your own without using some guide or writeup. TryHackMe: More beginner friendly than hackthebox, it provides a lot of guided learning resources. PortSwigger Labs: Practical labs about specific topics, focused on web hacking. They are great to learn and understand different types of attacks, injections, and security misconfigurations. I would recommend digging into this once you have the theoretical basis about these concepts. I have to mention a few tools I am sure you\u0026rsquo;d end up using:\nNmap: This is probably the most famous tool in hacking, allowing you to gather information about ports and services running in a machine. Burpsuite: A proxy tool widely used in web application security testing. It basically allows you to intercept and modify web requests, which can be used to perform several types of attacks. Metasploit: The most used pentesting framework. Contains a large amount of scripts and exploits ready to run. Another crucial step here is to set up your virtual lab environment to test vulnerable applications. To achieve this goal, there are some Linux distributions like Kali, Parrot or BlackArch, but that\u0026rsquo;s a topic for another post.\nFinal thoughs To sum up, this would be my personal roadmap:\nLearn the fundamentals, specially Linux and networking. Install some Linux in a virtual machine, play with it, get comfortable with the terminal. You can start with bandit wargames in OverTheWire. Complete every level and make sure to understand everything as clear as possible. Move to guided boxes on HackTheBox. I recommend you joining their Discord, ask questions, community is great there! Take notes, repeat, learn, improve your skills. Maybe use your own lab environment, create your own vulnerable apps. Hacking is a mixing of curiosity, study and practice. Being passionate and motivated about it is really helpful and will definitely speed up the process. The path is long and really challenging, so keep it going!\n\u0026ldquo;Yes, I am a criminal. My crime is that of curiosity.\u0026rdquo; — The Mentor (Loyd Blankenship) at The Hacker Manifesto\n","permalink":"http://localhost:1313/posts/starting-point/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIf you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\u003c/p\u003e","title":"Starting Point"},{"content":"Introduction In this post series we are going to solve every level from bandit in OverTheWire This guide pretends to be a writeup containing the solutions of the level, designed for beginners.\nTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing WSL, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\nEvery section will contain the solution as well as some tips for people who is absolutely beginner.\nTips First of all, some tips:\nDo not use this as first resource to solve the levels. Try on your own, make mistakes and learn from them. Only check the solution as last resource or if you are completely new and you have absolutely no idea about what to do next. Take notes from your learning. Write up commands, tips and everything which can be useful in the future. Make sure to understand everything. Is a good idea to note the passwords for every level. If you want to continue letter, you can simply log in in the desired level. It is annoying to repeat everything! Follow the tips and information provided at OverTheWire website. Levels Here is my solution for every level:\nBandit0 Bandit1 Bandit2 Bandit3 Bandit4 Bandit5 Bandit6 Bandit7 ","permalink":"http://localhost:1313/posts/otw/bandit/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIn this post series we are going to solve every level from bandit in \u003ca href=\"https://overthewire.org/wargames/bandit/\"\u003e\u003cem\u003eOverTheWire\u003c/em\u003e\u003c/a\u003e\nThis guide pretends to be a writeup containing the solutions of the level, designed for beginners.\u003c/p\u003e\n\u003cp\u003eTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing \u003ca href=\"https://learn.microsoft.com/en-us/windows/wsl/install\"\u003eWSL\u003c/a\u003e, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\u003c/p\u003e","title":"Bandit"},{"content":"Level description The goal of this level is for you to log into the game using SSH. The host to which you need to connect is bandit.labs.overthewire.org, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\nTips for beginners Read a bit about what SSH is. Research about what a port is. Solution This is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go here.\nAt Linux, we can use ssh client to connect to the server. It should be installed by default on your system. If not, please first research about how to install. Once you have the SSH client installed, you can log in into the first level as follows:\nssh bandit0@bandit.labs.overthewire.org -p 2220 Syntax is simple: ssh \u0026lt;username\u0026gt;@\u0026lt;hostname\u0026gt; -p \u0026lt;port\u0026gt;. Usually SSH runs on port 22 by default, but they changed to port 2220 so we must specify it in the command.\nOnce you try to log in, you will see something like this: NB: If it\u0026rsquo;s the first time you try to log in, you will be asked about the authenticity of the host. Just type yes.\nType the password bandit0 and press enter. Now you are inside bandit server, ready to begin with bandit1!\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit0/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe goal of this level is for you to log into the game using SSH. The host to which you need to connect is \u003cstrong\u003ebandit.labs.overthewire.org\u003c/strong\u003e, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eRead a bit about what SSH is.\u003c/li\u003e\n\u003cli\u003eResearch about what a port is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go \u003ca href=\"https://en.wikipedia.org/wiki/Secure_Shell\"\u003ehere\u003c/a\u003e.\u003c/p\u003e","title":"Bandit0"},{"content":"Level description The password for the next level is stored in a file called readme located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\nTips for beginners Learn about home directory in Linux. Learn to use cat and ls commands. Solution First step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\nls This shows in terminal the files at the current directory. There you will see the readme file.\nNow we can to check the contents, so let\u0026rsquo;s use cat:\ncat readme To read a file, we use cat \u0026lt;filename\u0026gt;.\nNB: Not every file is human readable in Linux. We deep more about this in later levels.\nThe content of the readme file reveals the password for bandit2 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit1/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u003cstrong\u003ereadme\u003c/strong\u003e located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn about home directory in Linux.\u003c/li\u003e\n\u003cli\u003eLearn to use \u003ccode\u003ecat\u003c/code\u003e and \u003ccode\u003els\u003c/code\u003e commands.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eFirst step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\u003c/p\u003e","title":"Bandit0 -\u003e Bandit 1"},{"content":"Level description The password for the next level is stored in a file called - located in the home directory\nTips for beginners Try to understand why previous solution is not working as you expect. Solution You may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our cat command: The terminal is waiting for something else. This happens due to character - is used to pass arguments to our commands, and the linux shell is interpreting that. To prevent that, we could use:\ncat ./- NB: Dot . is used to refer current directory. The slash / is used at the end of directory name.\nWe get the password for bandit3 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit2/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called - located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eTry to understand why previous solution is not working as you expect.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eYou may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our \u003ccode\u003ecat\u003c/code\u003e command:\n\u003cimg alt=\"bandit2\" loading=\"lazy\" src=\"/images/otw/bandit/bandit2/0.png\"\u003e\u003c/p\u003e\n\u003cp\u003eThe terminal is \u003cem\u003ewaiting\u003c/em\u003e for something else. This happens due to character \u003ccode\u003e-\u003c/code\u003e is used to pass arguments to our commands, and the linux shell is interpreting that.\nTo prevent that, we could use:\u003c/p\u003e","title":"Bandit1 -\u003e Bandit2"},{"content":"Level description The password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\nTips for beginners Think about how to escape the whitespaces. Solution After login in the machine as bandit3, we can see the filename \u0026ndash;spaces in this filename\u0026ndash;.\nNow we have 2 problems:\nSame as previous level, filename starts with --, so it will be interpreted as an argument. Address this problem using ./. Filename contains whitespaces. This is an issue, as bash interpretes whitespaces to separate commands. To solve the second problem, we must escape the whitespace character in some way. Here is the solution:\ncat ./--spaces\\ in\\ this\\ filename-- NB: Little trick, you can start writting filename and press Tab to autocomplete the name. The \\ is going to be inserted automatically.\nJust using the \\ we can escape the whitespace.\nNow we can continue with the bandit4 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit3/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eThink about how to \u003cem\u003eescape\u003c/em\u003e the whitespaces.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAfter login in the machine as bandit3, we can see the filename \u003cem\u003e\u0026ndash;spaces in this filename\u0026ndash;\u003c/em\u003e.\u003c/p\u003e\n\u003cp\u003eNow we have 2 problems:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eSame as previous level, filename starts with \u003ccode\u003e--\u003c/code\u003e, so it will be interpreted as an argument. Address this problem using \u003ccode\u003e./\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003eFilename contains \u003cstrong\u003ewhitespaces\u003c/strong\u003e. This is an issue, as bash interpretes whitespaces to separate commands.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eTo solve the second problem, we must escape the whitespace character in some way. Here is the solution:\u003c/p\u003e","title":"Bandit2 -\u003e Bandit3"},{"content":"Level description The password for the next level is stored in a hidden file in the inhere directory.\nTips for beginners Learn how to navigate directories in Linux. First understand what a hidden file is. Solution Listing directory files inside bandit4\u0026rsquo;s home directory, show directory inhere.\nNB: How to distinguish files and directories in Linux? Use ls -l and see the difference.\nWe have 2 options now:\nMove to inhere directory and check contens again. Check contents directly. Moving to another directory can be done using cd \u0026lt;dirName\u0026gt;. If you prefer to check directory contents directly, use ls \u0026lt;dirName\u0026gt;.\nAfter checking inhere contents via ls, we see nothing. The reason is the file is a hidden file. A hidden file in Linux is everyfile whose name starts with dot .. Hidden files are not shown by default with ls command, so we must add a special flag -a to list all files: NB: Both flags -l and -a cna be combined into a single flag -al, which is shorter to type.\nAs you can see, filename is \u0026hellip;Hidding-From-You starting with three dots. Reading file contents should be easy at this point!\nNext level is bandit5.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit4/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a hidden file in the inhere directory.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to navigate directories in Linux.\u003c/li\u003e\n\u003cli\u003eFirst understand what a hidden file is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eListing directory files inside bandit4\u0026rsquo;s home directory, show directory \u003cstrong\u003einhere\u003c/strong\u003e.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e How to distinguish files and directories in Linux? Use \u003ccode\u003els -l\u003c/code\u003e and see the difference.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eWe have 2 options now:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eMove to inhere directory and check contens again.\u003c/li\u003e\n\u003cli\u003eCheck contents directly.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eMoving to another directory can be done using \u003ccode\u003ecd \u0026lt;dirName\u0026gt;\u003c/code\u003e. If you prefer to check directory contents directly, use \u003ccode\u003els \u0026lt;dirName\u0026gt;\u003c/code\u003e.\u003c/p\u003e","title":"Bandit3 -\u003e Bandit4"},{"content":"Level description The password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\nTips for beginners What means human-readable file? Is there any way to check filetype at Linux?. Solution Checking inhere\u0026rsquo;s contents shows some files names \u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII here\nSo now, our goal is checking if file content of every file in the folder is ASCII or not. file \u0026lt;filename\u0026gt; does the job. Note the use of *. That called a wildcard regular expression, we\u0026rsquo;ll deep into it in later levels. An easy approach could be checking every file separately:\nfile ./--file00 file ./--file01 ... file ./--file09 But that\u0026rsquo;s not funny, imagine we have 100 files to check. All the files are in the same directory, so we can use cat ./* where ./* matches every filename in the directory, applying file to every file.\nNB: Another approach is to use find with certaing flags. Try to do in different ways, don\u0026rsquo;t stick to my solution.\nThe file \u0026ndash;file00 content is not readable, so get password from \u0026ndash;file07 and continue with bandit6.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit5/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eWhat means human-readable file?\u003c/li\u003e\n\u003cli\u003eIs there any way to check filetype at Linux?.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eChecking inhere\u0026rsquo;s contents shows some files names \u003cstrong\u003e\u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09\u003c/strong\u003e. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII \u003ca href=\"https://en.wikipedia.org/wiki/ASCII\"\u003ehere\u003c/a\u003e\u003c/p\u003e","title":"Bandit5"},{"content":"Level description The password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\nhuman-readable 1033 bytes in size not executable Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution The purpose of the level is showing us how to find for files. Listing contents of inhere, we can see some folders, containing a lot of files inside: NB: Adding -R to ls shows recursively the content of every folder inside the directory listed.\nSo this time, checking every file is not an option. We need to find a file with some properties, specific size, not excutable and human-readable. Let\u0026rsquo;s explain the command we\u0026rsquo;re using:\nfind inhere/ -size 1033c ! -executable First, we specify the directory, in this case inhere. The option -size 1033c returns files of 1033 bytes. Then, with -executable we would get executable files, but we want not executable files, that\u0026rsquo;s why we are adding ! before.\nNB: By default, the -size option takes as argument the number of blocks. For example, -size 2 means 2 blocks of 512 bytes, so its 1024. The c is used to specify exact bytes. Don\u0026rsquo;t ask me why it\u0026rsquo;s c and not b 😅.\nThe property of human-readability is not implemented in find. This is not an issue, previous command returns a single file and it is human readable (we could confirm using file): Extra tip: try to use the following:\nfind inhere/ -size 1033c ! -executable | file You get the same result! The pipe | is a great tool to execute 2+ commands in one line.\nGet your password and continue with bandit7.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit6/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ehuman-readable\u003c/li\u003e\n\u003cli\u003e1033 bytes in size\u003c/li\u003e\n\u003cli\u003enot executable\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThe purpose of the level is showing us how to find for files. Listing contents of \u003cstrong\u003einhere\u003c/strong\u003e, we can see some folders, containing a lot of files inside:\n\u003cimg alt=\"bandit6_0\" loading=\"lazy\" src=\"/images/otw/bandit/bandit6/0.png\"\u003e\u003c/p\u003e","title":"Bandit6"},{"content":"Level description The password for the next level is stored somewhere on the server and has all of the following properties:\nowned by user bandit7 owned by group bandit6 33 bytes in size Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution This is very straightforward to do after completing previous level. Now we need to identify a file owned by user bandit7 and group bandi6. Furthermore, the file is somewhere on the server, which means we have to find in the root directory /.\nfind / -user bandit7 -group bandit6 -size 33c 2\u0026gt;/dev/null NB: I added that strange 2\u0026gt;/dev/null to filter error output. The reason why it works like that is more technical, for now just save this a fast way to filter errors in terminal. We get some errors because looking for files in the whole server may return some unaccesible files, as we don\u0026rsquo;t have root user permissions. We will study Linux permissions in later levels.\nWe should get a single file, containing password for bandit8.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit7/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored somewhere on the server and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eowned by user bandit7\u003c/li\u003e\n\u003cli\u003eowned by group bandit6\u003c/li\u003e\n\u003cli\u003e33 bytes in size\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is very straightforward to do after completing previous level. Now we need to identify a file owned by user bandit7 and group bandi6. Furthermore, the file is \u003cstrong\u003esomewhere on the server\u003c/strong\u003e, which means we have to find in the root directory \u003ccode\u003e/\u003c/code\u003e.\u003c/p\u003e","title":"Bandit7"},{"content":"Level description The password for the next level is stored in the file data.txt next to the word millionth.\nTips for beginners Learn how to filter file contents. Solution At previous levels, we discovered how to find for files. Now it\u0026rsquo;s time to find for content inside a file. grep command is going to help with that task.\nNB: Of course I don\u0026rsquo;t want to spoil you the password!\nNotice how this can achieved in different ways.\nUsing grep \u0026lt;keyword\u0026gt; \u0026lt;filename\u0026gt;. Using the pipe | to execute grep over the result of cat command. Take you favorite path to solve the level, and continue with bandit9.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit8/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the file \u003cstrong\u003edata.txt\u003c/strong\u003e next to the word \u003cstrong\u003emillionth\u003c/strong\u003e.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to filter file contents.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAt previous levels, we discovered how to find for files. Now it\u0026rsquo;s time to find for content inside a file. \u003ccode\u003egrep\u003c/code\u003e command is going to help with that task.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"bandit8\" loading=\"lazy\" src=\"/images/otw/bandit/bandit8/0.png\"\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e Of course I don\u0026rsquo;t want to spoil you the password!\u003c/p\u003e","title":"Bandit8"},{"content":"Level description The password for the next level is stored in the file data.txt and is the only line of text that occurs only once.\nTips for beginners First, apply sort to file content. Solution This level is a bit tricky. First, examine the file contents. Using head shows the 10 first lines of a file:\nNB: If you want to show more lines: head -20 or the number of your choice.\nThere are tons of different passwords. The correct one is the only line of text that occurs only once. Try to research how to do on your own. You maybe find uniq. This command has a very interesting flag, -u, used to show only the uniq lines. Let\u0026rsquo;s try with that:\nFor some reason, is not working. The trick here is to sort the file contents before applying uniq. This can be achieved using sort, so the final command looks like this:\ncat data.txt | sort | uniq -u NB: You need to sort lines first because uniq only detects consecutive repetitions. First time I solved this it took a while 😅.\nAfter getting the password, we can continue with bandit10.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit9/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the file \u003cstrong\u003edata.txt\u003c/strong\u003e and is the only line of text that occurs only once.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst, apply \u003ccode\u003esort\u003c/code\u003e to file content.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis level is a bit tricky. First, examine the file contents. Using \u003ccode\u003ehead\u003c/code\u003e shows the 10 first lines of a file:\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"bandit9_0\" loading=\"lazy\" src=\"/images/otw/bandit/bandit9/0.png\"\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e If you want to show more lines: \u003ccode\u003ehead -20\u003c/code\u003e or the number of your choice.\u003c/p\u003e","title":"Bandit9"},{"content":"Level description The password for the next level is stored in the file data.txt in one of the few human-readable strings, preceded by several \u0026lsquo;=\u0026rsquo; characters.\nTips for beginners strings can be used to retrieve human readable-content from a file. You can apply things from previous levels. Solution The file data.txt has mixed content, binary and ASCII. If the password is preceded by several \u0026lsquo;=\u0026rsquo; characters, we can simply filter by some of them. But there is a little problem, content is not fully ASCII, so grep won\u0026rsquo;t work. First you need to get content with strings to get only the human readable content.\nNB: Try to run both cat and strings separately. Observe the differences.\nNext level is bandit10.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit10/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the file \u003cstrong\u003edata.txt\u003c/strong\u003e in one of the few human-readable strings, preceded by several \u0026lsquo;=\u0026rsquo; characters.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003estrings\u003c/code\u003e can be used to retrieve human readable-content from a file.\u003c/li\u003e\n\u003cli\u003eYou can apply things from previous levels.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThe file \u003cstrong\u003edata.txt\u003c/strong\u003e has mixed content, binary and ASCII. If the password is preceded by several \u0026lsquo;=\u0026rsquo; characters, we can simply filter by some of them. But there is a little problem, content is not fully ASCII, so \u003ccode\u003egrep\u003c/code\u003e won\u0026rsquo;t work. First you need to get content with \u003ccode\u003estrings\u003c/code\u003e to get only the human readable content.\u003c/p\u003e","title":"Bandit10"},{"content":"👨‍💻 whoami Hey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\nWhat is this❓​ This blog is basically my thoughts on several hacking topics. Here you’ll see:\nWriteups from CTF challenges, from platforms like HackTheBox or OverTheWire.\nWalkthroughs and notes on pentesting techniques I’m learning or testing.\nSome posts on cryptography — because math can be fun (sometimes).\nRandom topics that freaks like me may (just may) find interesting.\nThe idea is simple: share what I learn, document my journey, and maybe help others who are also diving into the exciting world of ethical hacking.\n📫 Contact Want to say hi, share ideas, or just geek out about hacking? Reach me here:\n📧 Email: mrb0b1073@proton.me 💻​ GitHub: mrb0b173 🟩​ HackTheBox: mrb0b1073 ","permalink":"http://localhost:1313/about/","summary":"\u003ch2 id=\"-whoami\"\u003e👨‍💻 whoami\u003c/h2\u003e\n\u003cp\u003eHey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\u003c/p\u003e\n\u003chr\u003e\n\u003ch2 id=\"what-is-this\"\u003eWhat is this❓​\u003c/h2\u003e\n\u003cp\u003eThis blog is basically my thoughts on several hacking topics. Here you’ll see:\u003c/p\u003e","title":"About"},{"content":"Hey! 👋 I\u0026rsquo;m mrb0b1073 and this is my first post.\nWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\nExcited to start this adventure!\n","permalink":"http://localhost:1313/posts/hello-world/","summary":"\u003cp\u003eHey! 👋 I\u0026rsquo;m \u003cstrong\u003emrb0b1073\u003c/strong\u003e and this is my first post.\u003c/p\u003e\n\u003cp\u003eWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\u003cbr\u003e\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\u003c/p\u003e\n\u003cp\u003eExcited to start this adventure!\u003c/p\u003e","title":"Hello World"},{"content":"Introduction If you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\nIn cybersecurity there are broadly two complementary roles: Blue Team and Red Team. Blue Teams focus on defense, monitoring, incident response, hardening systems and keeping services secure, while Red Teams simulate attackers to find weaknesses and prove what an adversary could do. Ethical hacking aligns closely with Red Team operations, but cybersecurity is highly transversal across IT. There are many specialities or areas, such as cloud security, appsec, pentesting, forensics, governance, risk management, malware analysis, etc. Every topic could deserve its own post, so let\u0026rsquo;s keep it simple and focus on ethical hacking.\nHacker philosophy Let\u0026rsquo;s start with the idea of what is exactly a hacker. A hacker is someone who explores systems to understand how they work, finds creative ways to make or fix things, and solves technical problems. Historically the word describes curiosity, craft, and a drive to improve systems — not criminality. It is important to make the distinction between hacker and cracker, also called cybercriminal. A hacker explores, builds, discloses responsibly and works to improve security. They work in authorized environments or labs. On the other hand, a cracker breaks into systems for theft, vandalism or other illicit gain.\nHere you can find the most popularized ideas often summarized as the hacker ethic:\nCuriosity first: Learn by exploring and tinkering. Freedom of information: All knowledge should be shared to help progress. This fits properly with the idea of open source. Mistrust of needless authority: Centralized control sometimes blocks innovation. It is always good to question anything, specially common assumptions. Meritocracy: Skills, craft and results matter more than titles. Craftsmanship \u0026amp; elegance: Technical beauty matters. Build clean, clever and efficient solutions. Responsability \u0026amp; ethics: Use your skills to build, fix, educate and defend, not to harm. Core fundamentals Assuming you want to init yourself in hacking, you should first build competence across three basic pillars.\nOperating Systems You should learn as much as possible about Linux and Windows. Specially Linux, all the tools you will be using are meant to be used in a Linux environment. Skill with shell is required, learn basic commands and how to interact with the OS using the terminal. Research about processes, file permissions, package management and logs. A large proportion of web servers around the world run on Linux, although Windows is also widely used. Windows knowledge is really valuable too, considering active directory is strongly used in corporate environments.\nNetworking You have to understand how computers communicate each other. Understand basic networking concepts, IP adresses, subnetting, proxies, find out how internet works. Study some protocols such as TCP/IP, HTTP, DNS or SSH. This could sound confusing for beginners, but this step is not optional! Study different client/server models and how services expose attack surfaces.\nProgramming \u0026amp; scripting Is this completely required? Maybe not for complete beginners. Does it help? Absolutely yes. Understanding how web apps or any type of application works makes things much easier. You can imagine different entry points to exploit if you understand how systems are designed. Also writing scripts in bash or python makes you more productive through automation.\nEthical Hacking foundations Once you feel confident with these 3 pillars, you can go to the next step. You can study about different topics and areas. For example, binary exploiting, web pentesting, mobile pentesting, wireless hacking, etc. You should start picking a focus, in this post we focus on web pentesting, as it is beginner friendly. Also web applications are the bread and butter in companies nowadays.\nKey concepts to study:\nCIA Triad: CIA refers to Confidentiality, Integrity and Availability. These three concepts are key in information security, and describe properties we want to ensure in our systems and information. Web Security basics, OWASP: Study the OWASP Top 10, which summarizes most frequent web security risks. Authentication and session control: Understand the concepts of Authentication and Authorization, research about how session is handled in web apps, cookies, JWT tokens, etc. Input validation \u0026amp; injection attacks: Learn about SQL Injection, Cross-Site Scripting (XSS), Code Injection, SSTI, and every injection type. Secure development lifecycle: Find out how to implement security controls in code. This can be more related to Blue Team, but as Red Teamer it is important to understand. Firewall evasion: What a firewall is and some techniques/methods to bypass. Some cryptography: Understand what a chiper and a hash are, how information is encrypted to prevent access from 3rd parties. Focusing on web, read about TLS protocol. There are many more topics you can research and learn, but this could be a nice starting point.\nTools and platforms to learn Now you have an idea of what to study, let\u0026rsquo;s see how to start in practical terms.\nSome platforms I personally recommend:\nOverTheWire: Here you can find some CTFs (Capture The Flag) which are fun to play and also really instructive. Bandit games are a must for complete beginners, as you will explore some linux and bash concepts which are basic to continue. The games are leveled by difficulty, in their web you can get all the information about how to play, only a terminal and SSH is required. This helps building your foundation in Linux OS. HackTheBox: Nº 1 platform in cybersecurity. Has a lot of resources to learn all this core fundamentals, and also red team / blue team security topics. It is focused on labs where you can test your skills hacking different boxes but if you really want to learn it is worth to invest time and money in the academy. I have to say the level here is high, specially if you try to hack machines on your own without using some guide or writeup. TryHackMe: More beginner friendly than hackthebox, it provides a lot of guided learning resources. PortSwigger Labs: Practical labs about specific topics, focused on web hacking. They are great to learn and understand different types of attacks, injections, and security misconfigurations. I would recommend digging into this once you have the theoretical basis about these concepts. I have to mention a few tools I am sure you\u0026rsquo;d end up using:\nNmap: This is probably the most famous tool in hacking, allowing you to gather information about ports and services running in a machine. Burpsuite: A proxy tool widely used in web application security testing. It basically allows you to intercept and modify web requests, which can be used to perform several types of attacks. Metasploit: The most used pentesting framework. Contains a large amount of scripts and exploits ready to run. Another crucial step here is to set up your virtual lab environment to test vulnerable applications. To achieve this goal, there are some Linux distributions like Kali, Parrot or BlackArch, but that\u0026rsquo;s a topic for another post.\nFinal thoughs To sum up, this would be my personal roadmap:\nLearn the fundamentals, specially Linux and networking. Install some Linux in a virtual machine, play with it, get comfortable with the terminal. You can start with bandit wargames in OverTheWire. Complete every level and make sure to understand everything as clear as possible. Move to guided boxes on HackTheBox. I recommend you joining their Discord, ask questions, community is great there! Take notes, repeat, learn, improve your skills. Maybe use your own lab environment, create your own vulnerable apps. Hacking is a mixing of curiosity, study and practice. Being passionate and motivated about it is really helpful and will definitely speed up the process. The path is long and really challenging, so keep it going!\n\u0026ldquo;Yes, I am a criminal. My crime is that of curiosity.\u0026rdquo; — The Mentor (Loyd Blankenship) at The Hacker Manifesto\n","permalink":"http://localhost:1313/posts/starting-point/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIf you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\u003c/p\u003e","title":"Starting Point"},{"content":"Introduction In this post series we are going to solve every level from bandit in OverTheWire This guide pretends to be a writeup containing the solutions of the level, designed for beginners.\nTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing WSL, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\nEvery section will contain the solution as well as some tips for people who is absolutely beginner.\nTips First of all, some tips:\nDo not use this as first resource to solve the levels. Try on your own, make mistakes and learn from them. Only check the solution as last resource or if you are completely new and you have absolutely no idea about what to do next. Take notes from your learning. Write up commands, tips and everything which can be useful in the future. Make sure to understand everything. Is a good idea to note the passwords for every level. If you want to continue letter, you can simply log in in the desired level. It is annoying to repeat everything! Follow the tips and information provided at OverTheWire website. Levels Here is my solution for every level:\nBandit0 Bandit1 Bandit2 Bandit3 Bandit4 Bandit5 Bandit6 Bandit7 ","permalink":"http://localhost:1313/posts/otw/bandit/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIn this post series we are going to solve every level from bandit in \u003ca href=\"https://overthewire.org/wargames/bandit/\"\u003e\u003cem\u003eOverTheWire\u003c/em\u003e\u003c/a\u003e\nThis guide pretends to be a writeup containing the solutions of the level, designed for beginners.\u003c/p\u003e\n\u003cp\u003eTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing \u003ca href=\"https://learn.microsoft.com/en-us/windows/wsl/install\"\u003eWSL\u003c/a\u003e, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\u003c/p\u003e","title":"Bandit"},{"content":"Level description The goal of this level is for you to log into the game using SSH. The host to which you need to connect is bandit.labs.overthewire.org, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\nTips for beginners Read a bit about what SSH is. Research about what a port is. Solution This is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go here.\nAt Linux, we can use ssh client to connect to the server. It should be installed by default on your system. If not, please first research about how to install. Once you have the SSH client installed, you can log in into the first level as follows:\nssh bandit0@bandit.labs.overthewire.org -p 2220 Syntax is simple: ssh \u0026lt;username\u0026gt;@\u0026lt;hostname\u0026gt; -p \u0026lt;port\u0026gt;. Usually SSH runs on port 22 by default, but they changed to port 2220 so we must specify it in the command.\nOnce you try to log in, you will see something like this: NB: If it\u0026rsquo;s the first time you try to log in, you will be asked about the authenticity of the host. Just type yes.\nType the password bandit0 and press enter. Now you are inside bandit server, ready to begin with bandit1!\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit0/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe goal of this level is for you to log into the game using SSH. The host to which you need to connect is \u003cstrong\u003ebandit.labs.overthewire.org\u003c/strong\u003e, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eRead a bit about what SSH is.\u003c/li\u003e\n\u003cli\u003eResearch about what a port is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go \u003ca href=\"https://en.wikipedia.org/wiki/Secure_Shell\"\u003ehere\u003c/a\u003e.\u003c/p\u003e","title":"Bandit0"},{"content":"Level description The password for the next level is stored in a file called readme located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\nTips for beginners Learn about home directory in Linux. Learn to use cat and ls commands. Solution First step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\nls This shows in terminal the files at the current directory. There you will see the readme file.\nNow we can to check the contents, so let\u0026rsquo;s use cat:\ncat readme To read a file, we use cat \u0026lt;filename\u0026gt;.\nNB: Not every file is human readable in Linux. We deep more about this in later levels.\nThe content of the readme file reveals the password for bandit2 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit1/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u003cstrong\u003ereadme\u003c/strong\u003e located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn about home directory in Linux.\u003c/li\u003e\n\u003cli\u003eLearn to use \u003ccode\u003ecat\u003c/code\u003e and \u003ccode\u003els\u003c/code\u003e commands.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eFirst step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\u003c/p\u003e","title":"Bandit0 -\u003e Bandit 1"},{"content":"Level description The password for the next level is stored in a file called - located in the home directory\nTips for beginners Try to understand why previous solution is not working as you expect. Solution You may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our cat command: The terminal is waiting for something else. This happens due to character - is used to pass arguments to our commands, and the linux shell is interpreting that. To prevent that, we could use:\ncat ./- NB: Dot . is used to refer current directory. The slash / is used at the end of directory name.\nWe get the password for bandit3 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit2/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called - located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eTry to understand why previous solution is not working as you expect.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eYou may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our \u003ccode\u003ecat\u003c/code\u003e command:\n\u003cimg alt=\"bandit2\" loading=\"lazy\" src=\"/images/otw/bandit/bandit2/0.png\"\u003e\u003c/p\u003e\n\u003cp\u003eThe terminal is \u003cem\u003ewaiting\u003c/em\u003e for something else. This happens due to character \u003ccode\u003e-\u003c/code\u003e is used to pass arguments to our commands, and the linux shell is interpreting that.\nTo prevent that, we could use:\u003c/p\u003e","title":"Bandit1 -\u003e Bandit2"},{"content":"Level description The password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\nTips for beginners Think about how to escape the whitespaces. Solution After login in the machine as bandit3, we can see the filename \u0026ndash;spaces in this filename\u0026ndash;.\nNow we have 2 problems:\nSame as previous level, filename starts with --, so it will be interpreted as an argument. Address this problem using ./. Filename contains whitespaces. This is an issue, as bash interpretes whitespaces to separate commands. To solve the second problem, we must escape the whitespace character in some way. Here is the solution:\ncat ./--spaces\\ in\\ this\\ filename-- NB: Little trick, you can start writting filename and press Tab to autocomplete the name. The \\ is going to be inserted automatically.\nJust using the \\ we can escape the whitespace.\nNow we can continue with the bandit4 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit3/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eThink about how to \u003cem\u003eescape\u003c/em\u003e the whitespaces.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAfter login in the machine as bandit3, we can see the filename \u003cem\u003e\u0026ndash;spaces in this filename\u0026ndash;\u003c/em\u003e.\u003c/p\u003e\n\u003cp\u003eNow we have 2 problems:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eSame as previous level, filename starts with \u003ccode\u003e--\u003c/code\u003e, so it will be interpreted as an argument. Address this problem using \u003ccode\u003e./\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003eFilename contains \u003cstrong\u003ewhitespaces\u003c/strong\u003e. This is an issue, as bash interpretes whitespaces to separate commands.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eTo solve the second problem, we must escape the whitespace character in some way. Here is the solution:\u003c/p\u003e","title":"Bandit2 -\u003e Bandit3"},{"content":"Level description The password for the next level is stored in a hidden file in the inhere directory.\nTips for beginners Learn how to navigate directories in Linux. First understand what a hidden file is. Solution Listing directory files inside bandit4\u0026rsquo;s home directory, show directory inhere.\nNB: How to distinguish files and directories in Linux? Use ls -l and see the difference.\nWe have 2 options now:\nMove to inhere directory and check contens again. Check contents directly. Moving to another directory can be done using cd \u0026lt;dirName\u0026gt;. If you prefer to check directory contents directly, use ls \u0026lt;dirName\u0026gt;.\nAfter checking inhere contents via ls, we see nothing. The reason is the file is a hidden file. A hidden file in Linux is everyfile whose name starts with dot .. Hidden files are not shown by default with ls command, so we must add a special flag -a to list all files: NB: Both flags -l and -a cna be combined into a single flag -al, which is shorter to type.\nAs you can see, filename is \u0026hellip;Hidding-From-You starting with three dots. Reading file contents should be easy at this point!\nNext level is bandit5.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit4/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a hidden file in the inhere directory.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to navigate directories in Linux.\u003c/li\u003e\n\u003cli\u003eFirst understand what a hidden file is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eListing directory files inside bandit4\u0026rsquo;s home directory, show directory \u003cstrong\u003einhere\u003c/strong\u003e.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e How to distinguish files and directories in Linux? Use \u003ccode\u003els -l\u003c/code\u003e and see the difference.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eWe have 2 options now:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eMove to inhere directory and check contens again.\u003c/li\u003e\n\u003cli\u003eCheck contents directly.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eMoving to another directory can be done using \u003ccode\u003ecd \u0026lt;dirName\u0026gt;\u003c/code\u003e. If you prefer to check directory contents directly, use \u003ccode\u003els \u0026lt;dirName\u0026gt;\u003c/code\u003e.\u003c/p\u003e","title":"Bandit3 -\u003e Bandit4"},{"content":"Level description The password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\nTips for beginners What means human-readable file? Is there any way to check filetype at Linux?. Solution Checking inhere\u0026rsquo;s contents shows some files names \u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII here\nSo now, our goal is checking if file content of every file in the folder is ASCII or not. file \u0026lt;filename\u0026gt; does the job. Note the use of *. That called a wildcard regular expression, we\u0026rsquo;ll deep into it in later levels. An easy approach could be checking every file separately:\nfile ./--file00 file ./--file01 ... file ./--file09 But that\u0026rsquo;s not funny, imagine we have 100 files to check. All the files are in the same directory, so we can use cat ./* where ./* matches every filename in the directory, applying file to every file.\nNB: Another approach is to use find with certaing flags. Try to do in different ways, don\u0026rsquo;t stick to my solution.\nThe file \u0026ndash;file00 content is not readable, so get password from \u0026ndash;file07 and continue with bandit6.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit5/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eWhat means human-readable file?\u003c/li\u003e\n\u003cli\u003eIs there any way to check filetype at Linux?.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eChecking inhere\u0026rsquo;s contents shows some files names \u003cstrong\u003e\u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09\u003c/strong\u003e. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII \u003ca href=\"https://en.wikipedia.org/wiki/ASCII\"\u003ehere\u003c/a\u003e\u003c/p\u003e","title":"Bandit4 -\u003e Bandit5"},{"content":"Level description The password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\nhuman-readable 1033 bytes in size not executable Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution The purpose of the level is showing us how to find for files. Listing contents of inhere, we can see some folders, containing a lot of files inside: NB: Adding -R to ls shows recursively the content of every folder inside the directory listed.\nSo this time, checking every file is not an option. We need to find a file with some properties, specific size, not excutable and human-readable. Let\u0026rsquo;s explain the command we\u0026rsquo;re using:\nfind inhere/ -size 1033c ! -executable First, we specify the directory, in this case inhere. The option -size 1033c returns files of 1033 bytes. Then, with -executable we would get executable files, but we want not executable files, that\u0026rsquo;s why we are adding ! before.\nNB: By default, the -size option takes as argument the number of blocks. For example, -size 2 means 2 blocks of 512 bytes, so its 1024. The c is used to specify exact bytes. Don\u0026rsquo;t ask me why it\u0026rsquo;s c and not b 😅.\nThe property of human-readability is not implemented in find. This is not an issue, previous command returns a single file and it is human readable (we could confirm using file): Extra tip: try to use the following:\nfind inhere/ -size 1033c ! -executable | file You get the same result! The pipe | is a great tool to execute 2+ commands in one line.\nGet your password and continue with bandit7.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit6/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ehuman-readable\u003c/li\u003e\n\u003cli\u003e1033 bytes in size\u003c/li\u003e\n\u003cli\u003enot executable\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThe purpose of the level is showing us how to find for files. Listing contents of \u003cstrong\u003einhere\u003c/strong\u003e, we can see some folders, containing a lot of files inside:\n\u003cimg alt=\"bandit6_0\" loading=\"lazy\" src=\"/images/otw/bandit/bandit6/0.png\"\u003e\u003c/p\u003e","title":"Bandit6"},{"content":"Level description The password for the next level is stored somewhere on the server and has all of the following properties:\nowned by user bandit7 owned by group bandit6 33 bytes in size Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution This is very straightforward to do after completing previous level. Now we need to identify a file owned by user bandit7 and group bandi6. Furthermore, the file is somewhere on the server, which means we have to find in the root directory /.\nfind / -user bandit7 -group bandit6 -size 33c 2\u0026gt;/dev/null NB: I added that strange 2\u0026gt;/dev/null to filter error output. The reason why it works like that is more technical, for now just save this a fast way to filter errors in terminal. We get some errors because looking for files in the whole server may return some unaccesible files, as we don\u0026rsquo;t have root user permissions. We will study Linux permissions in later levels.\nWe should get a single file, containing password for bandit8.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit7/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored somewhere on the server and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eowned by user bandit7\u003c/li\u003e\n\u003cli\u003eowned by group bandit6\u003c/li\u003e\n\u003cli\u003e33 bytes in size\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is very straightforward to do after completing previous level. Now we need to identify a file owned by user bandit7 and group bandi6. Furthermore, the file is \u003cstrong\u003esomewhere on the server\u003c/strong\u003e, which means we have to find in the root directory \u003ccode\u003e/\u003c/code\u003e.\u003c/p\u003e","title":"Bandit7"},{"content":"Level description The password for the next level is stored in the file data.txt next to the word millionth.\nTips for beginners Learn how to filter file contents. Solution At previous levels, we discovered how to find for files. Now it\u0026rsquo;s time to find for content inside a file. grep command is going to help with that task.\nNB: Of course I don\u0026rsquo;t want to spoil you the password!\nNotice how this can achieved in different ways.\nUsing grep \u0026lt;keyword\u0026gt; \u0026lt;filename\u0026gt;. Using the pipe | to execute grep over the result of cat command. Take you favorite path to solve the level, and continue with bandit9.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit8/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the file \u003cstrong\u003edata.txt\u003c/strong\u003e next to the word \u003cstrong\u003emillionth\u003c/strong\u003e.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to filter file contents.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAt previous levels, we discovered how to find for files. Now it\u0026rsquo;s time to find for content inside a file. \u003ccode\u003egrep\u003c/code\u003e command is going to help with that task.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"bandit8\" loading=\"lazy\" src=\"/images/otw/bandit/bandit8/0.png\"\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e Of course I don\u0026rsquo;t want to spoil you the password!\u003c/p\u003e","title":"Bandit8"},{"content":"Level description The password for the next level is stored in the file data.txt and is the only line of text that occurs only once.\nTips for beginners First, apply sort to file content. Solution This level is a bit tricky. First, examine the file contents. Using head shows the 10 first lines of a file:\nNB: If you want to show more lines: head -20 or the number of your choice.\nThere are tons of different passwords. The correct one is the only line of text that occurs only once. Try to research how to do on your own. You maybe find uniq. This command has a very interesting flag, -u, used to show only the uniq lines. Let\u0026rsquo;s try with that:\nFor some reason, is not working. The trick here is to sort the file contents before applying uniq. This can be achieved using sort, so the final command looks like this:\ncat data.txt | sort | uniq -u NB: You need to sort lines first because uniq only detects consecutive repetitions. First time I solved this it took a while 😅.\nAfter getting the password, we can continue with bandit10.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit9/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the file \u003cstrong\u003edata.txt\u003c/strong\u003e and is the only line of text that occurs only once.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst, apply \u003ccode\u003esort\u003c/code\u003e to file content.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis level is a bit tricky. First, examine the file contents. Using \u003ccode\u003ehead\u003c/code\u003e shows the 10 first lines of a file:\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"bandit9_0\" loading=\"lazy\" src=\"/images/otw/bandit/bandit9/0.png\"\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e If you want to show more lines: \u003ccode\u003ehead -20\u003c/code\u003e or the number of your choice.\u003c/p\u003e","title":"Bandit9"},{"content":"Level description The password for the next level is stored in the file data.txt in one of the few human-readable strings, preceded by several \u0026lsquo;=\u0026rsquo; characters.\nTips for beginners strings can be used to retrieve human readable-content from a file. You can apply things from previous levels. Solution The file data.txt has mixed content, binary and ASCII. If the password is preceded by several \u0026lsquo;=\u0026rsquo; characters, we can simply filter by some of them. But there is a little problem, content is not fully ASCII, so grep won\u0026rsquo;t work. First you need to get content with strings to get only the human readable content.\nNB: Try to run both cat and strings separately. Observe the differences.\nNext level is bandit10.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit10/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the file \u003cstrong\u003edata.txt\u003c/strong\u003e in one of the few human-readable strings, preceded by several \u0026lsquo;=\u0026rsquo; characters.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003estrings\u003c/code\u003e can be used to retrieve human readable-content from a file.\u003c/li\u003e\n\u003cli\u003eYou can apply things from previous levels.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThe file \u003cstrong\u003edata.txt\u003c/strong\u003e has mixed content, binary and ASCII. If the password is preceded by several \u0026lsquo;=\u0026rsquo; characters, we can simply filter by some of them. But there is a little problem, content is not fully ASCII, so \u003ccode\u003egrep\u003c/code\u003e won\u0026rsquo;t work. First you need to get content with \u003ccode\u003estrings\u003c/code\u003e to get only the human readable content.\u003c/p\u003e","title":"Bandit10"},{"content":"👨‍💻 whoami Hey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\nWhat is this❓​ This blog is basically my thoughts on several hacking topics. Here you’ll see:\nWriteups from CTF challenges, from platforms like HackTheBox or OverTheWire.\nWalkthroughs and notes on pentesting techniques I’m learning or testing.\nSome posts on cryptography — because math can be fun (sometimes).\nRandom topics that freaks like me may (just may) find interesting.\nThe idea is simple: share what I learn, document my journey, and maybe help others who are also diving into the exciting world of ethical hacking.\n📫 Contact Want to say hi, share ideas, or just geek out about hacking? Reach me here:\n📧 Email: mrb0b1073@proton.me 💻​ GitHub: mrb0b173 🟩​ HackTheBox: mrb0b1073 ","permalink":"http://localhost:1313/about/","summary":"\u003ch2 id=\"-whoami\"\u003e👨‍💻 whoami\u003c/h2\u003e\n\u003cp\u003eHey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\u003c/p\u003e\n\u003chr\u003e\n\u003ch2 id=\"what-is-this\"\u003eWhat is this❓​\u003c/h2\u003e\n\u003cp\u003eThis blog is basically my thoughts on several hacking topics. Here you’ll see:\u003c/p\u003e","title":"About"},{"content":"Hey! 👋 I\u0026rsquo;m mrb0b1073 and this is my first post.\nWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\nExcited to start this adventure!\n","permalink":"http://localhost:1313/posts/hello-world/","summary":"\u003cp\u003eHey! 👋 I\u0026rsquo;m \u003cstrong\u003emrb0b1073\u003c/strong\u003e and this is my first post.\u003c/p\u003e\n\u003cp\u003eWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\u003cbr\u003e\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\u003c/p\u003e\n\u003cp\u003eExcited to start this adventure!\u003c/p\u003e","title":"Hello World"},{"content":"Introduction If you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\nIn cybersecurity there are broadly two complementary roles: Blue Team and Red Team. Blue Teams focus on defense, monitoring, incident response, hardening systems and keeping services secure, while Red Teams simulate attackers to find weaknesses and prove what an adversary could do. Ethical hacking aligns closely with Red Team operations, but cybersecurity is highly transversal across IT. There are many specialities or areas, such as cloud security, appsec, pentesting, forensics, governance, risk management, malware analysis, etc. Every topic could deserve its own post, so let\u0026rsquo;s keep it simple and focus on ethical hacking.\nHacker philosophy Let\u0026rsquo;s start with the idea of what is exactly a hacker. A hacker is someone who explores systems to understand how they work, finds creative ways to make or fix things, and solves technical problems. Historically the word describes curiosity, craft, and a drive to improve systems — not criminality. It is important to make the distinction between hacker and cracker, also called cybercriminal. A hacker explores, builds, discloses responsibly and works to improve security. They work in authorized environments or labs. On the other hand, a cracker breaks into systems for theft, vandalism or other illicit gain.\nHere you can find the most popularized ideas often summarized as the hacker ethic:\nCuriosity first: Learn by exploring and tinkering. Freedom of information: All knowledge should be shared to help progress. This fits properly with the idea of open source. Mistrust of needless authority: Centralized control sometimes blocks innovation. It is always good to question anything, specially common assumptions. Meritocracy: Skills, craft and results matter more than titles. Craftsmanship \u0026amp; elegance: Technical beauty matters. Build clean, clever and efficient solutions. Responsability \u0026amp; ethics: Use your skills to build, fix, educate and defend, not to harm. Core fundamentals Assuming you want to init yourself in hacking, you should first build competence across three basic pillars.\nOperating Systems You should learn as much as possible about Linux and Windows. Specially Linux, all the tools you will be using are meant to be used in a Linux environment. Skill with shell is required, learn basic commands and how to interact with the OS using the terminal. Research about processes, file permissions, package management and logs. A large proportion of web servers around the world run on Linux, although Windows is also widely used. Windows knowledge is really valuable too, considering active directory is strongly used in corporate environments.\nNetworking You have to understand how computers communicate each other. Understand basic networking concepts, IP adresses, subnetting, proxies, find out how internet works. Study some protocols such as TCP/IP, HTTP, DNS or SSH. This could sound confusing for beginners, but this step is not optional! Study different client/server models and how services expose attack surfaces.\nProgramming \u0026amp; scripting Is this completely required? Maybe not for complete beginners. Does it help? Absolutely yes. Understanding how web apps or any type of application works makes things much easier. You can imagine different entry points to exploit if you understand how systems are designed. Also writing scripts in bash or python makes you more productive through automation.\nEthical Hacking foundations Once you feel confident with these 3 pillars, you can go to the next step. You can study about different topics and areas. For example, binary exploiting, web pentesting, mobile pentesting, wireless hacking, etc. You should start picking a focus, in this post we focus on web pentesting, as it is beginner friendly. Also web applications are the bread and butter in companies nowadays.\nKey concepts to study:\nCIA Triad: CIA refers to Confidentiality, Integrity and Availability. These three concepts are key in information security, and describe properties we want to ensure in our systems and information. Web Security basics, OWASP: Study the OWASP Top 10, which summarizes most frequent web security risks. Authentication and session control: Understand the concepts of Authentication and Authorization, research about how session is handled in web apps, cookies, JWT tokens, etc. Input validation \u0026amp; injection attacks: Learn about SQL Injection, Cross-Site Scripting (XSS), Code Injection, SSTI, and every injection type. Secure development lifecycle: Find out how to implement security controls in code. This can be more related to Blue Team, but as Red Teamer it is important to understand. Firewall evasion: What a firewall is and some techniques/methods to bypass. Some cryptography: Understand what a chiper and a hash are, how information is encrypted to prevent access from 3rd parties. Focusing on web, read about TLS protocol. There are many more topics you can research and learn, but this could be a nice starting point.\nTools and platforms to learn Now you have an idea of what to study, let\u0026rsquo;s see how to start in practical terms.\nSome platforms I personally recommend:\nOverTheWire: Here you can find some CTFs (Capture The Flag) which are fun to play and also really instructive. Bandit games are a must for complete beginners, as you will explore some linux and bash concepts which are basic to continue. The games are leveled by difficulty, in their web you can get all the information about how to play, only a terminal and SSH is required. This helps building your foundation in Linux OS. HackTheBox: Nº 1 platform in cybersecurity. Has a lot of resources to learn all this core fundamentals, and also red team / blue team security topics. It is focused on labs where you can test your skills hacking different boxes but if you really want to learn it is worth to invest time and money in the academy. I have to say the level here is high, specially if you try to hack machines on your own without using some guide or writeup. TryHackMe: More beginner friendly than hackthebox, it provides a lot of guided learning resources. PortSwigger Labs: Practical labs about specific topics, focused on web hacking. They are great to learn and understand different types of attacks, injections, and security misconfigurations. I would recommend digging into this once you have the theoretical basis about these concepts. I have to mention a few tools I am sure you\u0026rsquo;d end up using:\nNmap: This is probably the most famous tool in hacking, allowing you to gather information about ports and services running in a machine. Burpsuite: A proxy tool widely used in web application security testing. It basically allows you to intercept and modify web requests, which can be used to perform several types of attacks. Metasploit: The most used pentesting framework. Contains a large amount of scripts and exploits ready to run. Another crucial step here is to set up your virtual lab environment to test vulnerable applications. To achieve this goal, there are some Linux distributions like Kali, Parrot or BlackArch, but that\u0026rsquo;s a topic for another post.\nFinal thoughs To sum up, this would be my personal roadmap:\nLearn the fundamentals, specially Linux and networking. Install some Linux in a virtual machine, play with it, get comfortable with the terminal. You can start with bandit wargames in OverTheWire. Complete every level and make sure to understand everything as clear as possible. Move to guided boxes on HackTheBox. I recommend you joining their Discord, ask questions, community is great there! Take notes, repeat, learn, improve your skills. Maybe use your own lab environment, create your own vulnerable apps. Hacking is a mixing of curiosity, study and practice. Being passionate and motivated about it is really helpful and will definitely speed up the process. The path is long and really challenging, so keep it going!\n\u0026ldquo;Yes, I am a criminal. My crime is that of curiosity.\u0026rdquo; — The Mentor (Loyd Blankenship) at The Hacker Manifesto\n","permalink":"http://localhost:1313/posts/starting-point/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIf you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\u003c/p\u003e","title":"Starting Point"},{"content":"Introduction In this post series we are going to solve every level from bandit in OverTheWire This guide pretends to be a writeup containing the solutions of the level, designed for beginners.\nTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing WSL, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\nEvery section will contain the solution as well as some tips for people who is absolutely beginner.\nTips First of all, some tips:\nDo not use this as first resource to solve the levels. Try on your own, make mistakes and learn from them. Only check the solution as last resource or if you are completely new and you have absolutely no idea about what to do next. Take notes from your learning. Write up commands, tips and everything which can be useful in the future. Make sure to understand everything. Is a good idea to note the passwords for every level. If you want to continue letter, you can simply log in in the desired level. It is annoying to repeat everything! Follow the tips and information provided at OverTheWire website. Levels Here is my solution for every level:\nBandit0 Bandit1 Bandit2 Bandit3 Bandit4 Bandit5 Bandit6 Bandit7 ","permalink":"http://localhost:1313/posts/otw/bandit/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIn this post series we are going to solve every level from bandit in \u003ca href=\"https://overthewire.org/wargames/bandit/\"\u003e\u003cem\u003eOverTheWire\u003c/em\u003e\u003c/a\u003e\nThis guide pretends to be a writeup containing the solutions of the level, designed for beginners.\u003c/p\u003e\n\u003cp\u003eTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing \u003ca href=\"https://learn.microsoft.com/en-us/windows/wsl/install\"\u003eWSL\u003c/a\u003e, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\u003c/p\u003e","title":"Bandit"},{"content":"Level description The goal of this level is for you to log into the game using SSH. The host to which you need to connect is bandit.labs.overthewire.org, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\nTips for beginners Read a bit about what SSH is. Research about what a port is. Solution This is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go here.\nAt Linux, we can use ssh client to connect to the server. It should be installed by default on your system. If not, please first research about how to install. Once you have the SSH client installed, you can log in into the first level as follows:\nssh bandit0@bandit.labs.overthewire.org -p 2220 Syntax is simple: ssh \u0026lt;username\u0026gt;@\u0026lt;hostname\u0026gt; -p \u0026lt;port\u0026gt;. Usually SSH runs on port 22 by default, but they changed to port 2220 so we must specify it in the command.\nOnce you try to log in, you will see something like this: NB: If it\u0026rsquo;s the first time you try to log in, you will be asked about the authenticity of the host. Just type yes.\nType the password bandit0 and press enter. Now you are inside bandit server, ready to begin with bandit1!\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit0/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe goal of this level is for you to log into the game using SSH. The host to which you need to connect is \u003cstrong\u003ebandit.labs.overthewire.org\u003c/strong\u003e, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eRead a bit about what SSH is.\u003c/li\u003e\n\u003cli\u003eResearch about what a port is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go \u003ca href=\"https://en.wikipedia.org/wiki/Secure_Shell\"\u003ehere\u003c/a\u003e.\u003c/p\u003e","title":"Bandit0"},{"content":"Level description The password for the next level is stored in a file called readme located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\nTips for beginners Learn about home directory in Linux. Learn to use cat and ls commands. Solution First step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\nls This shows in terminal the files at the current directory. There you will see the readme file.\nNow we can to check the contents, so let\u0026rsquo;s use cat:\ncat readme To read a file, we use cat \u0026lt;filename\u0026gt;.\nNB: Not every file is human readable in Linux. We deep more about this in later levels.\nThe content of the readme file reveals the password for bandit2 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit1/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u003cstrong\u003ereadme\u003c/strong\u003e located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn about home directory in Linux.\u003c/li\u003e\n\u003cli\u003eLearn to use \u003ccode\u003ecat\u003c/code\u003e and \u003ccode\u003els\u003c/code\u003e commands.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eFirst step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\u003c/p\u003e","title":"Bandit0 -\u003e Bandit 1"},{"content":"Level description The password for the next level is stored in a file called - located in the home directory\nTips for beginners Try to understand why previous solution is not working as you expect. Solution You may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our cat command: The terminal is waiting for something else. This happens due to character - is used to pass arguments to our commands, and the linux shell is interpreting that. To prevent that, we could use:\ncat ./- NB: Dot . is used to refer current directory. The slash / is used at the end of directory name.\nWe get the password for bandit3 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit2/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called - located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eTry to understand why previous solution is not working as you expect.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eYou may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our \u003ccode\u003ecat\u003c/code\u003e command:\n\u003cimg alt=\"bandit2\" loading=\"lazy\" src=\"/images/otw/bandit/bandit2/0.png\"\u003e\u003c/p\u003e\n\u003cp\u003eThe terminal is \u003cem\u003ewaiting\u003c/em\u003e for something else. This happens due to character \u003ccode\u003e-\u003c/code\u003e is used to pass arguments to our commands, and the linux shell is interpreting that.\nTo prevent that, we could use:\u003c/p\u003e","title":"Bandit1 -\u003e Bandit2"},{"content":"Level description The password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\nTips for beginners Think about how to escape the whitespaces. Solution After login in the machine as bandit3, we can see the filename \u0026ndash;spaces in this filename\u0026ndash;.\nNow we have 2 problems:\nSame as previous level, filename starts with --, so it will be interpreted as an argument. Address this problem using ./. Filename contains whitespaces. This is an issue, as bash interpretes whitespaces to separate commands. To solve the second problem, we must escape the whitespace character in some way. Here is the solution:\ncat ./--spaces\\ in\\ this\\ filename-- NB: Little trick, you can start writting filename and press Tab to autocomplete the name. The \\ is going to be inserted automatically.\nJust using the \\ we can escape the whitespace.\nNow we can continue with the bandit4 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit3/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eThink about how to \u003cem\u003eescape\u003c/em\u003e the whitespaces.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAfter login in the machine as bandit3, we can see the filename \u003cem\u003e\u0026ndash;spaces in this filename\u0026ndash;\u003c/em\u003e.\u003c/p\u003e\n\u003cp\u003eNow we have 2 problems:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eSame as previous level, filename starts with \u003ccode\u003e--\u003c/code\u003e, so it will be interpreted as an argument. Address this problem using \u003ccode\u003e./\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003eFilename contains \u003cstrong\u003ewhitespaces\u003c/strong\u003e. This is an issue, as bash interpretes whitespaces to separate commands.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eTo solve the second problem, we must escape the whitespace character in some way. Here is the solution:\u003c/p\u003e","title":"Bandit2 -\u003e Bandit3"},{"content":"Level description The password for the next level is stored in a hidden file in the inhere directory.\nTips for beginners Learn how to navigate directories in Linux. First understand what a hidden file is. Solution Listing directory files inside bandit4\u0026rsquo;s home directory, show directory inhere.\nNB: How to distinguish files and directories in Linux? Use ls -l and see the difference.\nWe have 2 options now:\nMove to inhere directory and check contens again. Check contents directly. Moving to another directory can be done using cd \u0026lt;dirName\u0026gt;. If you prefer to check directory contents directly, use ls \u0026lt;dirName\u0026gt;.\nAfter checking inhere contents via ls, we see nothing. The reason is the file is a hidden file. A hidden file in Linux is everyfile whose name starts with dot .. Hidden files are not shown by default with ls command, so we must add a special flag -a to list all files: NB: Both flags -l and -a cna be combined into a single flag -al, which is shorter to type.\nAs you can see, filename is \u0026hellip;Hidding-From-You starting with three dots. Reading file contents should be easy at this point!\nNext level is bandit5.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit4/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a hidden file in the inhere directory.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to navigate directories in Linux.\u003c/li\u003e\n\u003cli\u003eFirst understand what a hidden file is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eListing directory files inside bandit4\u0026rsquo;s home directory, show directory \u003cstrong\u003einhere\u003c/strong\u003e.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e How to distinguish files and directories in Linux? Use \u003ccode\u003els -l\u003c/code\u003e and see the difference.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eWe have 2 options now:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eMove to inhere directory and check contens again.\u003c/li\u003e\n\u003cli\u003eCheck contents directly.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eMoving to another directory can be done using \u003ccode\u003ecd \u0026lt;dirName\u0026gt;\u003c/code\u003e. If you prefer to check directory contents directly, use \u003ccode\u003els \u0026lt;dirName\u0026gt;\u003c/code\u003e.\u003c/p\u003e","title":"Bandit3 -\u003e Bandit4"},{"content":"Level description The password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\nTips for beginners What means human-readable file? Is there any way to check filetype at Linux?. Solution Checking inhere\u0026rsquo;s contents shows some files names \u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII here\nSo now, our goal is checking if file content of every file in the folder is ASCII or not. file \u0026lt;filename\u0026gt; does the job. Note the use of *. That called a wildcard regular expression, we\u0026rsquo;ll deep into it in later levels. An easy approach could be checking every file separately:\nfile ./--file00 file ./--file01 ... file ./--file09 But that\u0026rsquo;s not funny, imagine we have 100 files to check. All the files are in the same directory, so we can use cat ./* where ./* matches every filename in the directory, applying file to every file.\nNB: Another approach is to use find with certaing flags. Try to do in different ways, don\u0026rsquo;t stick to my solution.\nThe file \u0026ndash;file00 content is not readable, so get password from \u0026ndash;file07 and continue with bandit6.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit5/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eWhat means human-readable file?\u003c/li\u003e\n\u003cli\u003eIs there any way to check filetype at Linux?.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eChecking inhere\u0026rsquo;s contents shows some files names \u003cstrong\u003e\u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09\u003c/strong\u003e. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII \u003ca href=\"https://en.wikipedia.org/wiki/ASCII\"\u003ehere\u003c/a\u003e\u003c/p\u003e","title":"Bandit4 -\u003e Bandit5"},{"content":"Level description The password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\nhuman-readable 1033 bytes in size not executable Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution The purpose of the level is showing us how to find for files. Listing contents of inhere, we can see some folders, containing a lot of files inside: NB: Adding -R to ls shows recursively the content of every folder inside the directory listed.\nSo this time, checking every file is not an option. We need to find a file with some properties, specific size, not excutable and human-readable. Let\u0026rsquo;s explain the command we\u0026rsquo;re using:\nfind inhere/ -size 1033c ! -executable First, we specify the directory, in this case inhere. The option -size 1033c returns files of 1033 bytes. Then, with -executable we would get executable files, but we want not executable files, that\u0026rsquo;s why we are adding ! before.\nNB: By default, the -size option takes as argument the number of blocks. For example, -size 2 means 2 blocks of 512 bytes, so its 1024. The c is used to specify exact bytes. Don\u0026rsquo;t ask me why it\u0026rsquo;s c and not b 😅.\nThe property of human-readability is not implemented in find. This is not an issue, previous command returns a single file and it is human readable (we could confirm using file): Extra tip: try to use the following:\nfind inhere/ -size 1033c ! -executable | file You get the same result! The pipe | is a great tool to execute 2+ commands in one line.\nGet your password and continue with bandit7.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit6/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ehuman-readable\u003c/li\u003e\n\u003cli\u003e1033 bytes in size\u003c/li\u003e\n\u003cli\u003enot executable\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThe purpose of the level is showing us how to find for files. Listing contents of \u003cstrong\u003einhere\u003c/strong\u003e, we can see some folders, containing a lot of files inside:\n\u003cimg alt=\"bandit6_0\" loading=\"lazy\" src=\"/images/otw/bandit/bandit6/0.png\"\u003e\u003c/p\u003e","title":"Bandit5 -\u003e Bandit6"},{"content":"Level description The password for the next level is stored somewhere on the server and has all of the following properties:\nowned by user bandit7 owned by group bandit6 33 bytes in size Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution This is very straightforward to do after completing previous level. Now we need to identify a file owned by user bandit7 and group bandi6. Furthermore, the file is somewhere on the server, which means we have to find in the root directory /.\nfind / -user bandit7 -group bandit6 -size 33c 2\u0026gt;/dev/null NB: I added that strange 2\u0026gt;/dev/null to filter error output. The reason why it works like that is more technical, for now just save this a fast way to filter errors in terminal. We get some errors because looking for files in the whole server may return some unaccesible files, as we don\u0026rsquo;t have root user permissions. We will study Linux permissions in later levels.\nWe should get a single file, containing password for bandit8.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit7/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored somewhere on the server and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eowned by user bandit7\u003c/li\u003e\n\u003cli\u003eowned by group bandit6\u003c/li\u003e\n\u003cli\u003e33 bytes in size\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is very straightforward to do after completing previous level. Now we need to identify a file owned by user bandit7 and group bandi6. Furthermore, the file is \u003cstrong\u003esomewhere on the server\u003c/strong\u003e, which means we have to find in the root directory \u003ccode\u003e/\u003c/code\u003e.\u003c/p\u003e","title":"Bandit7"},{"content":"Level description The password for the next level is stored in the file data.txt next to the word millionth.\nTips for beginners Learn how to filter file contents. Solution At previous levels, we discovered how to find for files. Now it\u0026rsquo;s time to find for content inside a file. grep command is going to help with that task.\nNB: Of course I don\u0026rsquo;t want to spoil you the password!\nNotice how this can achieved in different ways.\nUsing grep \u0026lt;keyword\u0026gt; \u0026lt;filename\u0026gt;. Using the pipe | to execute grep over the result of cat command. Take you favorite path to solve the level, and continue with bandit9.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit8/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the file \u003cstrong\u003edata.txt\u003c/strong\u003e next to the word \u003cstrong\u003emillionth\u003c/strong\u003e.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to filter file contents.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAt previous levels, we discovered how to find for files. Now it\u0026rsquo;s time to find for content inside a file. \u003ccode\u003egrep\u003c/code\u003e command is going to help with that task.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"bandit8\" loading=\"lazy\" src=\"/images/otw/bandit/bandit8/0.png\"\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e Of course I don\u0026rsquo;t want to spoil you the password!\u003c/p\u003e","title":"Bandit8"},{"content":"Level description The password for the next level is stored in the file data.txt and is the only line of text that occurs only once.\nTips for beginners First, apply sort to file content. Solution This level is a bit tricky. First, examine the file contents. Using head shows the 10 first lines of a file:\nNB: If you want to show more lines: head -20 or the number of your choice.\nThere are tons of different passwords. The correct one is the only line of text that occurs only once. Try to research how to do on your own. You maybe find uniq. This command has a very interesting flag, -u, used to show only the uniq lines. Let\u0026rsquo;s try with that:\nFor some reason, is not working. The trick here is to sort the file contents before applying uniq. This can be achieved using sort, so the final command looks like this:\ncat data.txt | sort | uniq -u NB: You need to sort lines first because uniq only detects consecutive repetitions. First time I solved this it took a while 😅.\nAfter getting the password, we can continue with bandit10.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit9/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the file \u003cstrong\u003edata.txt\u003c/strong\u003e and is the only line of text that occurs only once.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst, apply \u003ccode\u003esort\u003c/code\u003e to file content.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis level is a bit tricky. First, examine the file contents. Using \u003ccode\u003ehead\u003c/code\u003e shows the 10 first lines of a file:\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"bandit9_0\" loading=\"lazy\" src=\"/images/otw/bandit/bandit9/0.png\"\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e If you want to show more lines: \u003ccode\u003ehead -20\u003c/code\u003e or the number of your choice.\u003c/p\u003e","title":"Bandit9"},{"content":"Level description The password for the next level is stored in the file data.txt in one of the few human-readable strings, preceded by several \u0026lsquo;=\u0026rsquo; characters.\nTips for beginners strings can be used to retrieve human readable-content from a file. You can apply things from previous levels. Solution The file data.txt has mixed content, binary and ASCII. If the password is preceded by several \u0026lsquo;=\u0026rsquo; characters, we can simply filter by some of them. But there is a little problem, content is not fully ASCII, so grep won\u0026rsquo;t work. First you need to get content with strings to get only the human readable content.\nNB: Try to run both cat and strings separately. Observe the differences.\nNext level is bandit10.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit10/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the file \u003cstrong\u003edata.txt\u003c/strong\u003e in one of the few human-readable strings, preceded by several \u0026lsquo;=\u0026rsquo; characters.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003estrings\u003c/code\u003e can be used to retrieve human readable-content from a file.\u003c/li\u003e\n\u003cli\u003eYou can apply things from previous levels.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThe file \u003cstrong\u003edata.txt\u003c/strong\u003e has mixed content, binary and ASCII. If the password is preceded by several \u0026lsquo;=\u0026rsquo; characters, we can simply filter by some of them. But there is a little problem, content is not fully ASCII, so \u003ccode\u003egrep\u003c/code\u003e won\u0026rsquo;t work. First you need to get content with \u003ccode\u003estrings\u003c/code\u003e to get only the human readable content.\u003c/p\u003e","title":"Bandit10"},{"content":"👨‍💻 whoami Hey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\nWhat is this❓​ This blog is basically my thoughts on several hacking topics. Here you’ll see:\nWriteups from CTF challenges, from platforms like HackTheBox or OverTheWire.\nWalkthroughs and notes on pentesting techniques I’m learning or testing.\nSome posts on cryptography — because math can be fun (sometimes).\nRandom topics that freaks like me may (just may) find interesting.\nThe idea is simple: share what I learn, document my journey, and maybe help others who are also diving into the exciting world of ethical hacking.\n📫 Contact Want to say hi, share ideas, or just geek out about hacking? Reach me here:\n📧 Email: mrb0b1073@proton.me 💻​ GitHub: mrb0b173 🟩​ HackTheBox: mrb0b1073 ","permalink":"http://localhost:1313/about/","summary":"\u003ch2 id=\"-whoami\"\u003e👨‍💻 whoami\u003c/h2\u003e\n\u003cp\u003eHey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\u003c/p\u003e\n\u003chr\u003e\n\u003ch2 id=\"what-is-this\"\u003eWhat is this❓​\u003c/h2\u003e\n\u003cp\u003eThis blog is basically my thoughts on several hacking topics. Here you’ll see:\u003c/p\u003e","title":"About"},{"content":"Hey! 👋 I\u0026rsquo;m mrb0b1073 and this is my first post.\nWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\nExcited to start this adventure!\n","permalink":"http://localhost:1313/posts/hello-world/","summary":"\u003cp\u003eHey! 👋 I\u0026rsquo;m \u003cstrong\u003emrb0b1073\u003c/strong\u003e and this is my first post.\u003c/p\u003e\n\u003cp\u003eWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\u003cbr\u003e\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\u003c/p\u003e\n\u003cp\u003eExcited to start this adventure!\u003c/p\u003e","title":"Hello World"},{"content":"Introduction If you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\nIn cybersecurity there are broadly two complementary roles: Blue Team and Red Team. Blue Teams focus on defense, monitoring, incident response, hardening systems and keeping services secure, while Red Teams simulate attackers to find weaknesses and prove what an adversary could do. Ethical hacking aligns closely with Red Team operations, but cybersecurity is highly transversal across IT. There are many specialities or areas, such as cloud security, appsec, pentesting, forensics, governance, risk management, malware analysis, etc. Every topic could deserve its own post, so let\u0026rsquo;s keep it simple and focus on ethical hacking.\nHacker philosophy Let\u0026rsquo;s start with the idea of what is exactly a hacker. A hacker is someone who explores systems to understand how they work, finds creative ways to make or fix things, and solves technical problems. Historically the word describes curiosity, craft, and a drive to improve systems — not criminality. It is important to make the distinction between hacker and cracker, also called cybercriminal. A hacker explores, builds, discloses responsibly and works to improve security. They work in authorized environments or labs. On the other hand, a cracker breaks into systems for theft, vandalism or other illicit gain.\nHere you can find the most popularized ideas often summarized as the hacker ethic:\nCuriosity first: Learn by exploring and tinkering. Freedom of information: All knowledge should be shared to help progress. This fits properly with the idea of open source. Mistrust of needless authority: Centralized control sometimes blocks innovation. It is always good to question anything, specially common assumptions. Meritocracy: Skills, craft and results matter more than titles. Craftsmanship \u0026amp; elegance: Technical beauty matters. Build clean, clever and efficient solutions. Responsability \u0026amp; ethics: Use your skills to build, fix, educate and defend, not to harm. Core fundamentals Assuming you want to init yourself in hacking, you should first build competence across three basic pillars.\nOperating Systems You should learn as much as possible about Linux and Windows. Specially Linux, all the tools you will be using are meant to be used in a Linux environment. Skill with shell is required, learn basic commands and how to interact with the OS using the terminal. Research about processes, file permissions, package management and logs. A large proportion of web servers around the world run on Linux, although Windows is also widely used. Windows knowledge is really valuable too, considering active directory is strongly used in corporate environments.\nNetworking You have to understand how computers communicate each other. Understand basic networking concepts, IP adresses, subnetting, proxies, find out how internet works. Study some protocols such as TCP/IP, HTTP, DNS or SSH. This could sound confusing for beginners, but this step is not optional! Study different client/server models and how services expose attack surfaces.\nProgramming \u0026amp; scripting Is this completely required? Maybe not for complete beginners. Does it help? Absolutely yes. Understanding how web apps or any type of application works makes things much easier. You can imagine different entry points to exploit if you understand how systems are designed. Also writing scripts in bash or python makes you more productive through automation.\nEthical Hacking foundations Once you feel confident with these 3 pillars, you can go to the next step. You can study about different topics and areas. For example, binary exploiting, web pentesting, mobile pentesting, wireless hacking, etc. You should start picking a focus, in this post we focus on web pentesting, as it is beginner friendly. Also web applications are the bread and butter in companies nowadays.\nKey concepts to study:\nCIA Triad: CIA refers to Confidentiality, Integrity and Availability. These three concepts are key in information security, and describe properties we want to ensure in our systems and information. Web Security basics, OWASP: Study the OWASP Top 10, which summarizes most frequent web security risks. Authentication and session control: Understand the concepts of Authentication and Authorization, research about how session is handled in web apps, cookies, JWT tokens, etc. Input validation \u0026amp; injection attacks: Learn about SQL Injection, Cross-Site Scripting (XSS), Code Injection, SSTI, and every injection type. Secure development lifecycle: Find out how to implement security controls in code. This can be more related to Blue Team, but as Red Teamer it is important to understand. Firewall evasion: What a firewall is and some techniques/methods to bypass. Some cryptography: Understand what a chiper and a hash are, how information is encrypted to prevent access from 3rd parties. Focusing on web, read about TLS protocol. There are many more topics you can research and learn, but this could be a nice starting point.\nTools and platforms to learn Now you have an idea of what to study, let\u0026rsquo;s see how to start in practical terms.\nSome platforms I personally recommend:\nOverTheWire: Here you can find some CTFs (Capture The Flag) which are fun to play and also really instructive. Bandit games are a must for complete beginners, as you will explore some linux and bash concepts which are basic to continue. The games are leveled by difficulty, in their web you can get all the information about how to play, only a terminal and SSH is required. This helps building your foundation in Linux OS. HackTheBox: Nº 1 platform in cybersecurity. Has a lot of resources to learn all this core fundamentals, and also red team / blue team security topics. It is focused on labs where you can test your skills hacking different boxes but if you really want to learn it is worth to invest time and money in the academy. I have to say the level here is high, specially if you try to hack machines on your own without using some guide or writeup. TryHackMe: More beginner friendly than hackthebox, it provides a lot of guided learning resources. PortSwigger Labs: Practical labs about specific topics, focused on web hacking. They are great to learn and understand different types of attacks, injections, and security misconfigurations. I would recommend digging into this once you have the theoretical basis about these concepts. I have to mention a few tools I am sure you\u0026rsquo;d end up using:\nNmap: This is probably the most famous tool in hacking, allowing you to gather information about ports and services running in a machine. Burpsuite: A proxy tool widely used in web application security testing. It basically allows you to intercept and modify web requests, which can be used to perform several types of attacks. Metasploit: The most used pentesting framework. Contains a large amount of scripts and exploits ready to run. Another crucial step here is to set up your virtual lab environment to test vulnerable applications. To achieve this goal, there are some Linux distributions like Kali, Parrot or BlackArch, but that\u0026rsquo;s a topic for another post.\nFinal thoughs To sum up, this would be my personal roadmap:\nLearn the fundamentals, specially Linux and networking. Install some Linux in a virtual machine, play with it, get comfortable with the terminal. You can start with bandit wargames in OverTheWire. Complete every level and make sure to understand everything as clear as possible. Move to guided boxes on HackTheBox. I recommend you joining their Discord, ask questions, community is great there! Take notes, repeat, learn, improve your skills. Maybe use your own lab environment, create your own vulnerable apps. Hacking is a mixing of curiosity, study and practice. Being passionate and motivated about it is really helpful and will definitely speed up the process. The path is long and really challenging, so keep it going!\n\u0026ldquo;Yes, I am a criminal. My crime is that of curiosity.\u0026rdquo; — The Mentor (Loyd Blankenship) at The Hacker Manifesto\n","permalink":"http://localhost:1313/posts/starting-point/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIf you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\u003c/p\u003e","title":"Starting Point"},{"content":"Introduction In this post series we are going to solve every level from bandit in OverTheWire This guide pretends to be a writeup containing the solutions of the level, designed for beginners.\nTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing WSL, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\nEvery section will contain the solution as well as some tips for people who is absolutely beginner.\nTips First of all, some tips:\nDo not use this as first resource to solve the levels. Try on your own, make mistakes and learn from them. Only check the solution as last resource or if you are completely new and you have absolutely no idea about what to do next. Take notes from your learning. Write up commands, tips and everything which can be useful in the future. Make sure to understand everything. Is a good idea to note the passwords for every level. If you want to continue letter, you can simply log in in the desired level. It is annoying to repeat everything! Follow the tips and information provided at OverTheWire website. Levels Here is my solution for every level:\nBandit0 Bandit1 Bandit2 Bandit3 Bandit4 Bandit5 Bandit6 Bandit7 ","permalink":"http://localhost:1313/posts/otw/bandit/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIn this post series we are going to solve every level from bandit in \u003ca href=\"https://overthewire.org/wargames/bandit/\"\u003e\u003cem\u003eOverTheWire\u003c/em\u003e\u003c/a\u003e\nThis guide pretends to be a writeup containing the solutions of the level, designed for beginners.\u003c/p\u003e\n\u003cp\u003eTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing \u003ca href=\"https://learn.microsoft.com/en-us/windows/wsl/install\"\u003eWSL\u003c/a\u003e, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\u003c/p\u003e","title":"Bandit"},{"content":"Level description The goal of this level is for you to log into the game using SSH. The host to which you need to connect is bandit.labs.overthewire.org, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\nTips for beginners Read a bit about what SSH is. Research about what a port is. Solution This is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go here.\nAt Linux, we can use ssh client to connect to the server. It should be installed by default on your system. If not, please first research about how to install. Once you have the SSH client installed, you can log in into the first level as follows:\nssh bandit0@bandit.labs.overthewire.org -p 2220 Syntax is simple: ssh \u0026lt;username\u0026gt;@\u0026lt;hostname\u0026gt; -p \u0026lt;port\u0026gt;. Usually SSH runs on port 22 by default, but they changed to port 2220 so we must specify it in the command.\nOnce you try to log in, you will see something like this: NB: If it\u0026rsquo;s the first time you try to log in, you will be asked about the authenticity of the host. Just type yes.\nType the password bandit0 and press enter. Now you are inside bandit server, ready to begin with bandit1!\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit0/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe goal of this level is for you to log into the game using SSH. The host to which you need to connect is \u003cstrong\u003ebandit.labs.overthewire.org\u003c/strong\u003e, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eRead a bit about what SSH is.\u003c/li\u003e\n\u003cli\u003eResearch about what a port is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go \u003ca href=\"https://en.wikipedia.org/wiki/Secure_Shell\"\u003ehere\u003c/a\u003e.\u003c/p\u003e","title":"Bandit0"},{"content":"Level description The password for the next level is stored in a file called readme located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\nTips for beginners Learn about home directory in Linux. Learn to use cat and ls commands. Solution First step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\nls This shows in terminal the files at the current directory. There you will see the readme file.\nNow we can to check the contents, so let\u0026rsquo;s use cat:\ncat readme To read a file, we use cat \u0026lt;filename\u0026gt;.\nNB: Not every file is human readable in Linux. We deep more about this in later levels.\nThe content of the readme file reveals the password for bandit2 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit1/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u003cstrong\u003ereadme\u003c/strong\u003e located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn about home directory in Linux.\u003c/li\u003e\n\u003cli\u003eLearn to use \u003ccode\u003ecat\u003c/code\u003e and \u003ccode\u003els\u003c/code\u003e commands.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eFirst step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\u003c/p\u003e","title":"Bandit0 -\u003e Bandit 1"},{"content":"Level description The password for the next level is stored in a file called - located in the home directory\nTips for beginners Try to understand why previous solution is not working as you expect. Solution You may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our cat command: The terminal is waiting for something else. This happens due to character - is used to pass arguments to our commands, and the linux shell is interpreting that. To prevent that, we could use:\ncat ./- NB: Dot . is used to refer current directory. The slash / is used at the end of directory name.\nWe get the password for bandit3 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit2/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called - located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eTry to understand why previous solution is not working as you expect.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eYou may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our \u003ccode\u003ecat\u003c/code\u003e command:\n\u003cimg alt=\"bandit2\" loading=\"lazy\" src=\"/images/otw/bandit/bandit2/0.png\"\u003e\u003c/p\u003e\n\u003cp\u003eThe terminal is \u003cem\u003ewaiting\u003c/em\u003e for something else. This happens due to character \u003ccode\u003e-\u003c/code\u003e is used to pass arguments to our commands, and the linux shell is interpreting that.\nTo prevent that, we could use:\u003c/p\u003e","title":"Bandit1 -\u003e Bandit2"},{"content":"Level description The password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\nTips for beginners Think about how to escape the whitespaces. Solution After login in the machine as bandit3, we can see the filename \u0026ndash;spaces in this filename\u0026ndash;.\nNow we have 2 problems:\nSame as previous level, filename starts with --, so it will be interpreted as an argument. Address this problem using ./. Filename contains whitespaces. This is an issue, as bash interpretes whitespaces to separate commands. To solve the second problem, we must escape the whitespace character in some way. Here is the solution:\ncat ./--spaces\\ in\\ this\\ filename-- NB: Little trick, you can start writting filename and press Tab to autocomplete the name. The \\ is going to be inserted automatically.\nJust using the \\ we can escape the whitespace.\nNow we can continue with the bandit4 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit3/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eThink about how to \u003cem\u003eescape\u003c/em\u003e the whitespaces.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAfter login in the machine as bandit3, we can see the filename \u003cem\u003e\u0026ndash;spaces in this filename\u0026ndash;\u003c/em\u003e.\u003c/p\u003e\n\u003cp\u003eNow we have 2 problems:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eSame as previous level, filename starts with \u003ccode\u003e--\u003c/code\u003e, so it will be interpreted as an argument. Address this problem using \u003ccode\u003e./\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003eFilename contains \u003cstrong\u003ewhitespaces\u003c/strong\u003e. This is an issue, as bash interpretes whitespaces to separate commands.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eTo solve the second problem, we must escape the whitespace character in some way. Here is the solution:\u003c/p\u003e","title":"Bandit2 -\u003e Bandit3"},{"content":"Level description The password for the next level is stored in a hidden file in the inhere directory.\nTips for beginners Learn how to navigate directories in Linux. First understand what a hidden file is. Solution Listing directory files inside bandit4\u0026rsquo;s home directory, show directory inhere.\nNB: How to distinguish files and directories in Linux? Use ls -l and see the difference.\nWe have 2 options now:\nMove to inhere directory and check contens again. Check contents directly. Moving to another directory can be done using cd \u0026lt;dirName\u0026gt;. If you prefer to check directory contents directly, use ls \u0026lt;dirName\u0026gt;.\nAfter checking inhere contents via ls, we see nothing. The reason is the file is a hidden file. A hidden file in Linux is everyfile whose name starts with dot .. Hidden files are not shown by default with ls command, so we must add a special flag -a to list all files: NB: Both flags -l and -a cna be combined into a single flag -al, which is shorter to type.\nAs you can see, filename is \u0026hellip;Hidding-From-You starting with three dots. Reading file contents should be easy at this point!\nNext level is bandit5.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit4/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a hidden file in the inhere directory.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to navigate directories in Linux.\u003c/li\u003e\n\u003cli\u003eFirst understand what a hidden file is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eListing directory files inside bandit4\u0026rsquo;s home directory, show directory \u003cstrong\u003einhere\u003c/strong\u003e.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e How to distinguish files and directories in Linux? Use \u003ccode\u003els -l\u003c/code\u003e and see the difference.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eWe have 2 options now:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eMove to inhere directory and check contens again.\u003c/li\u003e\n\u003cli\u003eCheck contents directly.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eMoving to another directory can be done using \u003ccode\u003ecd \u0026lt;dirName\u0026gt;\u003c/code\u003e. If you prefer to check directory contents directly, use \u003ccode\u003els \u0026lt;dirName\u0026gt;\u003c/code\u003e.\u003c/p\u003e","title":"Bandit3 -\u003e Bandit4"},{"content":"Level description The password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\nTips for beginners What means human-readable file? Is there any way to check filetype at Linux?. Solution Checking inhere\u0026rsquo;s contents shows some files names \u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII here\nSo now, our goal is checking if file content of every file in the folder is ASCII or not. file \u0026lt;filename\u0026gt; does the job. Note the use of *. That called a wildcard regular expression, we\u0026rsquo;ll deep into it in later levels. An easy approach could be checking every file separately:\nfile ./--file00 file ./--file01 ... file ./--file09 But that\u0026rsquo;s not funny, imagine we have 100 files to check. All the files are in the same directory, so we can use cat ./* where ./* matches every filename in the directory, applying file to every file.\nNB: Another approach is to use find with certaing flags. Try to do in different ways, don\u0026rsquo;t stick to my solution.\nThe file \u0026ndash;file00 content is not readable, so get password from \u0026ndash;file07 and continue with bandit6.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit5/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eWhat means human-readable file?\u003c/li\u003e\n\u003cli\u003eIs there any way to check filetype at Linux?.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eChecking inhere\u0026rsquo;s contents shows some files names \u003cstrong\u003e\u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09\u003c/strong\u003e. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII \u003ca href=\"https://en.wikipedia.org/wiki/ASCII\"\u003ehere\u003c/a\u003e\u003c/p\u003e","title":"Bandit4 -\u003e Bandit5"},{"content":"Level description The password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\nhuman-readable 1033 bytes in size not executable Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution The purpose of the level is showing us how to find for files. Listing contents of inhere, we can see some folders, containing a lot of files inside: NB: Adding -R to ls shows recursively the content of every folder inside the directory listed.\nSo this time, checking every file is not an option. We need to find a file with some properties, specific size, not excutable and human-readable. Let\u0026rsquo;s explain the command we\u0026rsquo;re using:\nfind inhere/ -size 1033c ! -executable First, we specify the directory, in this case inhere. The option -size 1033c returns files of 1033 bytes. Then, with -executable we would get executable files, but we want not executable files, that\u0026rsquo;s why we are adding ! before.\nNB: By default, the -size option takes as argument the number of blocks. For example, -size 2 means 2 blocks of 512 bytes, so its 1024. The c is used to specify exact bytes. Don\u0026rsquo;t ask me why it\u0026rsquo;s c and not b 😅.\nThe property of human-readability is not implemented in find. This is not an issue, previous command returns a single file and it is human readable (we could confirm using file): Extra tip: try to use the following:\nfind inhere/ -size 1033c ! -executable | file You get the same result! The pipe | is a great tool to execute 2+ commands in one line.\nGet your password and continue with bandit7.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit6/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ehuman-readable\u003c/li\u003e\n\u003cli\u003e1033 bytes in size\u003c/li\u003e\n\u003cli\u003enot executable\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThe purpose of the level is showing us how to find for files. Listing contents of \u003cstrong\u003einhere\u003c/strong\u003e, we can see some folders, containing a lot of files inside:\n\u003cimg alt=\"bandit6_0\" loading=\"lazy\" src=\"/images/otw/bandit/bandit6/0.png\"\u003e\u003c/p\u003e","title":"Bandit5 -\u003e Bandit6"},{"content":"Level description The password for the next level is stored somewhere on the server and has all of the following properties:\nowned by user bandit7 owned by group bandit6 33 bytes in size Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution This is very straightforward to do after completing previous level. Now we need to identify a file owned by user bandit7 and group bandi6. Furthermore, the file is somewhere on the server, which means we have to find in the root directory /.\nfind / -user bandit7 -group bandit6 -size 33c 2\u0026gt;/dev/null NB: I added that strange 2\u0026gt;/dev/null to filter error output. The reason why it works like that is more technical, for now just save this a fast way to filter errors in terminal. We get some errors because looking for files in the whole server may return some unaccesible files, as we don\u0026rsquo;t have root user permissions. We will study Linux permissions in later levels.\nWe should get a single file, containing password for bandit8.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit7/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored somewhere on the server and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eowned by user bandit7\u003c/li\u003e\n\u003cli\u003eowned by group bandit6\u003c/li\u003e\n\u003cli\u003e33 bytes in size\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is very straightforward to do after completing previous level. Now we need to identify a file owned by user bandit7 and group bandi6. Furthermore, the file is \u003cstrong\u003esomewhere on the server\u003c/strong\u003e, which means we have to find in the root directory \u003ccode\u003e/\u003c/code\u003e.\u003c/p\u003e","title":"Bandit6 -\u003e Bandit7"},{"content":"Level description The password for the next level is stored in the file data.txt next to the word millionth.\nTips for beginners Learn how to filter file contents. Solution At previous levels, we discovered how to find for files. Now it\u0026rsquo;s time to find for content inside a file. grep command is going to help with that task.\nNB: Of course I don\u0026rsquo;t want to spoil you the password!\nNotice how this can achieved in different ways.\nUsing grep \u0026lt;keyword\u0026gt; \u0026lt;filename\u0026gt;. Using the pipe | to execute grep over the result of cat command. Take you favorite path to solve the level, and continue with bandit9.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit8/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the file \u003cstrong\u003edata.txt\u003c/strong\u003e next to the word \u003cstrong\u003emillionth\u003c/strong\u003e.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to filter file contents.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAt previous levels, we discovered how to find for files. Now it\u0026rsquo;s time to find for content inside a file. \u003ccode\u003egrep\u003c/code\u003e command is going to help with that task.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"bandit8\" loading=\"lazy\" src=\"/images/otw/bandit/bandit8/0.png\"\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e Of course I don\u0026rsquo;t want to spoil you the password!\u003c/p\u003e","title":"Bandit8"},{"content":"Level description The password for the next level is stored in the file data.txt and is the only line of text that occurs only once.\nTips for beginners First, apply sort to file content. Solution This level is a bit tricky. First, examine the file contents. Using head shows the 10 first lines of a file:\nNB: If you want to show more lines: head -20 or the number of your choice.\nThere are tons of different passwords. The correct one is the only line of text that occurs only once. Try to research how to do on your own. You maybe find uniq. This command has a very interesting flag, -u, used to show only the uniq lines. Let\u0026rsquo;s try with that:\nFor some reason, is not working. The trick here is to sort the file contents before applying uniq. This can be achieved using sort, so the final command looks like this:\ncat data.txt | sort | uniq -u NB: You need to sort lines first because uniq only detects consecutive repetitions. First time I solved this it took a while 😅.\nAfter getting the password, we can continue with bandit10.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit9/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the file \u003cstrong\u003edata.txt\u003c/strong\u003e and is the only line of text that occurs only once.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst, apply \u003ccode\u003esort\u003c/code\u003e to file content.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis level is a bit tricky. First, examine the file contents. Using \u003ccode\u003ehead\u003c/code\u003e shows the 10 first lines of a file:\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"bandit9_0\" loading=\"lazy\" src=\"/images/otw/bandit/bandit9/0.png\"\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e If you want to show more lines: \u003ccode\u003ehead -20\u003c/code\u003e or the number of your choice.\u003c/p\u003e","title":"Bandit9"},{"content":"Level description The password for the next level is stored in the file data.txt in one of the few human-readable strings, preceded by several \u0026lsquo;=\u0026rsquo; characters.\nTips for beginners strings can be used to retrieve human readable-content from a file. You can apply things from previous levels. Solution The file data.txt has mixed content, binary and ASCII. If the password is preceded by several \u0026lsquo;=\u0026rsquo; characters, we can simply filter by some of them. But there is a little problem, content is not fully ASCII, so grep won\u0026rsquo;t work. First you need to get content with strings to get only the human readable content.\nNB: Try to run both cat and strings separately. Observe the differences.\nNext level is bandit10.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit10/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the file \u003cstrong\u003edata.txt\u003c/strong\u003e in one of the few human-readable strings, preceded by several \u0026lsquo;=\u0026rsquo; characters.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003estrings\u003c/code\u003e can be used to retrieve human readable-content from a file.\u003c/li\u003e\n\u003cli\u003eYou can apply things from previous levels.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThe file \u003cstrong\u003edata.txt\u003c/strong\u003e has mixed content, binary and ASCII. If the password is preceded by several \u0026lsquo;=\u0026rsquo; characters, we can simply filter by some of them. But there is a little problem, content is not fully ASCII, so \u003ccode\u003egrep\u003c/code\u003e won\u0026rsquo;t work. First you need to get content with \u003ccode\u003estrings\u003c/code\u003e to get only the human readable content.\u003c/p\u003e","title":"Bandit10"},{"content":"👨‍💻 whoami Hey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\nWhat is this❓​ This blog is basically my thoughts on several hacking topics. Here you’ll see:\nWriteups from CTF challenges, from platforms like HackTheBox or OverTheWire.\nWalkthroughs and notes on pentesting techniques I’m learning or testing.\nSome posts on cryptography — because math can be fun (sometimes).\nRandom topics that freaks like me may (just may) find interesting.\nThe idea is simple: share what I learn, document my journey, and maybe help others who are also diving into the exciting world of ethical hacking.\n📫 Contact Want to say hi, share ideas, or just geek out about hacking? Reach me here:\n📧 Email: mrb0b1073@proton.me 💻​ GitHub: mrb0b173 🟩​ HackTheBox: mrb0b1073 ","permalink":"http://localhost:1313/about/","summary":"\u003ch2 id=\"-whoami\"\u003e👨‍💻 whoami\u003c/h2\u003e\n\u003cp\u003eHey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\u003c/p\u003e\n\u003chr\u003e\n\u003ch2 id=\"what-is-this\"\u003eWhat is this❓​\u003c/h2\u003e\n\u003cp\u003eThis blog is basically my thoughts on several hacking topics. Here you’ll see:\u003c/p\u003e","title":"About"},{"content":"Hey! 👋 I\u0026rsquo;m mrb0b1073 and this is my first post.\nWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\nExcited to start this adventure!\n","permalink":"http://localhost:1313/posts/hello-world/","summary":"\u003cp\u003eHey! 👋 I\u0026rsquo;m \u003cstrong\u003emrb0b1073\u003c/strong\u003e and this is my first post.\u003c/p\u003e\n\u003cp\u003eWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\u003cbr\u003e\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\u003c/p\u003e\n\u003cp\u003eExcited to start this adventure!\u003c/p\u003e","title":"Hello World"},{"content":"Introduction If you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\nIn cybersecurity there are broadly two complementary roles: Blue Team and Red Team. Blue Teams focus on defense, monitoring, incident response, hardening systems and keeping services secure, while Red Teams simulate attackers to find weaknesses and prove what an adversary could do. Ethical hacking aligns closely with Red Team operations, but cybersecurity is highly transversal across IT. There are many specialities or areas, such as cloud security, appsec, pentesting, forensics, governance, risk management, malware analysis, etc. Every topic could deserve its own post, so let\u0026rsquo;s keep it simple and focus on ethical hacking.\nHacker philosophy Let\u0026rsquo;s start with the idea of what is exactly a hacker. A hacker is someone who explores systems to understand how they work, finds creative ways to make or fix things, and solves technical problems. Historically the word describes curiosity, craft, and a drive to improve systems — not criminality. It is important to make the distinction between hacker and cracker, also called cybercriminal. A hacker explores, builds, discloses responsibly and works to improve security. They work in authorized environments or labs. On the other hand, a cracker breaks into systems for theft, vandalism or other illicit gain.\nHere you can find the most popularized ideas often summarized as the hacker ethic:\nCuriosity first: Learn by exploring and tinkering. Freedom of information: All knowledge should be shared to help progress. This fits properly with the idea of open source. Mistrust of needless authority: Centralized control sometimes blocks innovation. It is always good to question anything, specially common assumptions. Meritocracy: Skills, craft and results matter more than titles. Craftsmanship \u0026amp; elegance: Technical beauty matters. Build clean, clever and efficient solutions. Responsability \u0026amp; ethics: Use your skills to build, fix, educate and defend, not to harm. Core fundamentals Assuming you want to init yourself in hacking, you should first build competence across three basic pillars.\nOperating Systems You should learn as much as possible about Linux and Windows. Specially Linux, all the tools you will be using are meant to be used in a Linux environment. Skill with shell is required, learn basic commands and how to interact with the OS using the terminal. Research about processes, file permissions, package management and logs. A large proportion of web servers around the world run on Linux, although Windows is also widely used. Windows knowledge is really valuable too, considering active directory is strongly used in corporate environments.\nNetworking You have to understand how computers communicate each other. Understand basic networking concepts, IP adresses, subnetting, proxies, find out how internet works. Study some protocols such as TCP/IP, HTTP, DNS or SSH. This could sound confusing for beginners, but this step is not optional! Study different client/server models and how services expose attack surfaces.\nProgramming \u0026amp; scripting Is this completely required? Maybe not for complete beginners. Does it help? Absolutely yes. Understanding how web apps or any type of application works makes things much easier. You can imagine different entry points to exploit if you understand how systems are designed. Also writing scripts in bash or python makes you more productive through automation.\nEthical Hacking foundations Once you feel confident with these 3 pillars, you can go to the next step. You can study about different topics and areas. For example, binary exploiting, web pentesting, mobile pentesting, wireless hacking, etc. You should start picking a focus, in this post we focus on web pentesting, as it is beginner friendly. Also web applications are the bread and butter in companies nowadays.\nKey concepts to study:\nCIA Triad: CIA refers to Confidentiality, Integrity and Availability. These three concepts are key in information security, and describe properties we want to ensure in our systems and information. Web Security basics, OWASP: Study the OWASP Top 10, which summarizes most frequent web security risks. Authentication and session control: Understand the concepts of Authentication and Authorization, research about how session is handled in web apps, cookies, JWT tokens, etc. Input validation \u0026amp; injection attacks: Learn about SQL Injection, Cross-Site Scripting (XSS), Code Injection, SSTI, and every injection type. Secure development lifecycle: Find out how to implement security controls in code. This can be more related to Blue Team, but as Red Teamer it is important to understand. Firewall evasion: What a firewall is and some techniques/methods to bypass. Some cryptography: Understand what a chiper and a hash are, how information is encrypted to prevent access from 3rd parties. Focusing on web, read about TLS protocol. There are many more topics you can research and learn, but this could be a nice starting point.\nTools and platforms to learn Now you have an idea of what to study, let\u0026rsquo;s see how to start in practical terms.\nSome platforms I personally recommend:\nOverTheWire: Here you can find some CTFs (Capture The Flag) which are fun to play and also really instructive. Bandit games are a must for complete beginners, as you will explore some linux and bash concepts which are basic to continue. The games are leveled by difficulty, in their web you can get all the information about how to play, only a terminal and SSH is required. This helps building your foundation in Linux OS. HackTheBox: Nº 1 platform in cybersecurity. Has a lot of resources to learn all this core fundamentals, and also red team / blue team security topics. It is focused on labs where you can test your skills hacking different boxes but if you really want to learn it is worth to invest time and money in the academy. I have to say the level here is high, specially if you try to hack machines on your own without using some guide or writeup. TryHackMe: More beginner friendly than hackthebox, it provides a lot of guided learning resources. PortSwigger Labs: Practical labs about specific topics, focused on web hacking. They are great to learn and understand different types of attacks, injections, and security misconfigurations. I would recommend digging into this once you have the theoretical basis about these concepts. I have to mention a few tools I am sure you\u0026rsquo;d end up using:\nNmap: This is probably the most famous tool in hacking, allowing you to gather information about ports and services running in a machine. Burpsuite: A proxy tool widely used in web application security testing. It basically allows you to intercept and modify web requests, which can be used to perform several types of attacks. Metasploit: The most used pentesting framework. Contains a large amount of scripts and exploits ready to run. Another crucial step here is to set up your virtual lab environment to test vulnerable applications. To achieve this goal, there are some Linux distributions like Kali, Parrot or BlackArch, but that\u0026rsquo;s a topic for another post.\nFinal thoughs To sum up, this would be my personal roadmap:\nLearn the fundamentals, specially Linux and networking. Install some Linux in a virtual machine, play with it, get comfortable with the terminal. You can start with bandit wargames in OverTheWire. Complete every level and make sure to understand everything as clear as possible. Move to guided boxes on HackTheBox. I recommend you joining their Discord, ask questions, community is great there! Take notes, repeat, learn, improve your skills. Maybe use your own lab environment, create your own vulnerable apps. Hacking is a mixing of curiosity, study and practice. Being passionate and motivated about it is really helpful and will definitely speed up the process. The path is long and really challenging, so keep it going!\n\u0026ldquo;Yes, I am a criminal. My crime is that of curiosity.\u0026rdquo; — The Mentor (Loyd Blankenship) at The Hacker Manifesto\n","permalink":"http://localhost:1313/posts/starting-point/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIf you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\u003c/p\u003e","title":"Starting Point"},{"content":"Introduction In this post series we are going to solve every level from bandit in OverTheWire This guide pretends to be a writeup containing the solutions of the level, designed for beginners.\nTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing WSL, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\nEvery section will contain the solution as well as some tips for people who is absolutely beginner.\nTips First of all, some tips:\nDo not use this as first resource to solve the levels. Try on your own, make mistakes and learn from them. Only check the solution as last resource or if you are completely new and you have absolutely no idea about what to do next. Take notes from your learning. Write up commands, tips and everything which can be useful in the future. Make sure to understand everything. Is a good idea to note the passwords for every level. If you want to continue letter, you can simply log in in the desired level. It is annoying to repeat everything! Follow the tips and information provided at OverTheWire website. Levels Here is my solution for every level:\nBandit0 Bandit1 Bandit2 Bandit3 Bandit4 Bandit5 Bandit6 Bandit7 ","permalink":"http://localhost:1313/posts/otw/bandit/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIn this post series we are going to solve every level from bandit in \u003ca href=\"https://overthewire.org/wargames/bandit/\"\u003e\u003cem\u003eOverTheWire\u003c/em\u003e\u003c/a\u003e\nThis guide pretends to be a writeup containing the solutions of the level, designed for beginners.\u003c/p\u003e\n\u003cp\u003eTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing \u003ca href=\"https://learn.microsoft.com/en-us/windows/wsl/install\"\u003eWSL\u003c/a\u003e, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\u003c/p\u003e","title":"Bandit"},{"content":"Level description The goal of this level is for you to log into the game using SSH. The host to which you need to connect is bandit.labs.overthewire.org, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\nTips for beginners Read a bit about what SSH is. Research about what a port is. Solution This is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go here.\nAt Linux, we can use ssh client to connect to the server. It should be installed by default on your system. If not, please first research about how to install. Once you have the SSH client installed, you can log in into the first level as follows:\nssh bandit0@bandit.labs.overthewire.org -p 2220 Syntax is simple: ssh \u0026lt;username\u0026gt;@\u0026lt;hostname\u0026gt; -p \u0026lt;port\u0026gt;. Usually SSH runs on port 22 by default, but they changed to port 2220 so we must specify it in the command.\nOnce you try to log in, you will see something like this: NB: If it\u0026rsquo;s the first time you try to log in, you will be asked about the authenticity of the host. Just type yes.\nType the password bandit0 and press enter. Now you are inside bandit server, ready to begin with bandit1!\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit0/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe goal of this level is for you to log into the game using SSH. The host to which you need to connect is \u003cstrong\u003ebandit.labs.overthewire.org\u003c/strong\u003e, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eRead a bit about what SSH is.\u003c/li\u003e\n\u003cli\u003eResearch about what a port is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go \u003ca href=\"https://en.wikipedia.org/wiki/Secure_Shell\"\u003ehere\u003c/a\u003e.\u003c/p\u003e","title":"Bandit0"},{"content":"Level description The password for the next level is stored in a file called readme located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\nTips for beginners Learn about home directory in Linux. Learn to use cat and ls commands. Solution First step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\nls This shows in terminal the files at the current directory. There you will see the readme file.\nNow we can to check the contents, so let\u0026rsquo;s use cat:\ncat readme To read a file, we use cat \u0026lt;filename\u0026gt;.\nNB: Not every file is human readable in Linux. We deep more about this in later levels.\nThe content of the readme file reveals the password for bandit2 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit1/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u003cstrong\u003ereadme\u003c/strong\u003e located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn about home directory in Linux.\u003c/li\u003e\n\u003cli\u003eLearn to use \u003ccode\u003ecat\u003c/code\u003e and \u003ccode\u003els\u003c/code\u003e commands.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eFirst step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\u003c/p\u003e","title":"Bandit0 -\u003e Bandit 1"},{"content":"Level description The password for the next level is stored in a file called - located in the home directory\nTips for beginners Try to understand why previous solution is not working as you expect. Solution You may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our cat command: The terminal is waiting for something else. This happens due to character - is used to pass arguments to our commands, and the linux shell is interpreting that. To prevent that, we could use:\ncat ./- NB: Dot . is used to refer current directory. The slash / is used at the end of directory name.\nWe get the password for bandit3 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit2/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called - located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eTry to understand why previous solution is not working as you expect.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eYou may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our \u003ccode\u003ecat\u003c/code\u003e command:\n\u003cimg alt=\"bandit2\" loading=\"lazy\" src=\"/images/otw/bandit/bandit2/0.png\"\u003e\u003c/p\u003e\n\u003cp\u003eThe terminal is \u003cem\u003ewaiting\u003c/em\u003e for something else. This happens due to character \u003ccode\u003e-\u003c/code\u003e is used to pass arguments to our commands, and the linux shell is interpreting that.\nTo prevent that, we could use:\u003c/p\u003e","title":"Bandit1 -\u003e Bandit2"},{"content":"Level description The password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\nTips for beginners Think about how to escape the whitespaces. Solution After login in the machine as bandit3, we can see the filename \u0026ndash;spaces in this filename\u0026ndash;.\nNow we have 2 problems:\nSame as previous level, filename starts with --, so it will be interpreted as an argument. Address this problem using ./. Filename contains whitespaces. This is an issue, as bash interpretes whitespaces to separate commands. To solve the second problem, we must escape the whitespace character in some way. Here is the solution:\ncat ./--spaces\\ in\\ this\\ filename-- NB: Little trick, you can start writting filename and press Tab to autocomplete the name. The \\ is going to be inserted automatically.\nJust using the \\ we can escape the whitespace.\nNow we can continue with the bandit4 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit3/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eThink about how to \u003cem\u003eescape\u003c/em\u003e the whitespaces.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAfter login in the machine as bandit3, we can see the filename \u003cem\u003e\u0026ndash;spaces in this filename\u0026ndash;\u003c/em\u003e.\u003c/p\u003e\n\u003cp\u003eNow we have 2 problems:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eSame as previous level, filename starts with \u003ccode\u003e--\u003c/code\u003e, so it will be interpreted as an argument. Address this problem using \u003ccode\u003e./\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003eFilename contains \u003cstrong\u003ewhitespaces\u003c/strong\u003e. This is an issue, as bash interpretes whitespaces to separate commands.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eTo solve the second problem, we must escape the whitespace character in some way. Here is the solution:\u003c/p\u003e","title":"Bandit2 -\u003e Bandit3"},{"content":"Level description The password for the next level is stored in a hidden file in the inhere directory.\nTips for beginners Learn how to navigate directories in Linux. First understand what a hidden file is. Solution Listing directory files inside bandit4\u0026rsquo;s home directory, show directory inhere.\nNB: How to distinguish files and directories in Linux? Use ls -l and see the difference.\nWe have 2 options now:\nMove to inhere directory and check contens again. Check contents directly. Moving to another directory can be done using cd \u0026lt;dirName\u0026gt;. If you prefer to check directory contents directly, use ls \u0026lt;dirName\u0026gt;.\nAfter checking inhere contents via ls, we see nothing. The reason is the file is a hidden file. A hidden file in Linux is everyfile whose name starts with dot .. Hidden files are not shown by default with ls command, so we must add a special flag -a to list all files: NB: Both flags -l and -a cna be combined into a single flag -al, which is shorter to type.\nAs you can see, filename is \u0026hellip;Hidding-From-You starting with three dots. Reading file contents should be easy at this point!\nNext level is bandit5.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit4/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a hidden file in the inhere directory.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to navigate directories in Linux.\u003c/li\u003e\n\u003cli\u003eFirst understand what a hidden file is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eListing directory files inside bandit4\u0026rsquo;s home directory, show directory \u003cstrong\u003einhere\u003c/strong\u003e.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e How to distinguish files and directories in Linux? Use \u003ccode\u003els -l\u003c/code\u003e and see the difference.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eWe have 2 options now:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eMove to inhere directory and check contens again.\u003c/li\u003e\n\u003cli\u003eCheck contents directly.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eMoving to another directory can be done using \u003ccode\u003ecd \u0026lt;dirName\u0026gt;\u003c/code\u003e. If you prefer to check directory contents directly, use \u003ccode\u003els \u0026lt;dirName\u0026gt;\u003c/code\u003e.\u003c/p\u003e","title":"Bandit3 -\u003e Bandit4"},{"content":"Level description The password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\nTips for beginners What means human-readable file? Is there any way to check filetype at Linux?. Solution Checking inhere\u0026rsquo;s contents shows some files names \u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII here\nSo now, our goal is checking if file content of every file in the folder is ASCII or not. file \u0026lt;filename\u0026gt; does the job. Note the use of *. That called a wildcard regular expression, we\u0026rsquo;ll deep into it in later levels. An easy approach could be checking every file separately:\nfile ./--file00 file ./--file01 ... file ./--file09 But that\u0026rsquo;s not funny, imagine we have 100 files to check. All the files are in the same directory, so we can use cat ./* where ./* matches every filename in the directory, applying file to every file.\nNB: Another approach is to use find with certaing flags. Try to do in different ways, don\u0026rsquo;t stick to my solution.\nThe file \u0026ndash;file00 content is not readable, so get password from \u0026ndash;file07 and continue with bandit6.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit5/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eWhat means human-readable file?\u003c/li\u003e\n\u003cli\u003eIs there any way to check filetype at Linux?.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eChecking inhere\u0026rsquo;s contents shows some files names \u003cstrong\u003e\u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09\u003c/strong\u003e. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII \u003ca href=\"https://en.wikipedia.org/wiki/ASCII\"\u003ehere\u003c/a\u003e\u003c/p\u003e","title":"Bandit4 -\u003e Bandit5"},{"content":"Level description The password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\nhuman-readable 1033 bytes in size not executable Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution The purpose of the level is showing us how to find for files. Listing contents of inhere, we can see some folders, containing a lot of files inside: NB: Adding -R to ls shows recursively the content of every folder inside the directory listed.\nSo this time, checking every file is not an option. We need to find a file with some properties, specific size, not excutable and human-readable. Let\u0026rsquo;s explain the command we\u0026rsquo;re using:\nfind inhere/ -size 1033c ! -executable First, we specify the directory, in this case inhere. The option -size 1033c returns files of 1033 bytes. Then, with -executable we would get executable files, but we want not executable files, that\u0026rsquo;s why we are adding ! before.\nNB: By default, the -size option takes as argument the number of blocks. For example, -size 2 means 2 blocks of 512 bytes, so its 1024. The c is used to specify exact bytes. Don\u0026rsquo;t ask me why it\u0026rsquo;s c and not b 😅.\nThe property of human-readability is not implemented in find. This is not an issue, previous command returns a single file and it is human readable (we could confirm using file): Extra tip: try to use the following:\nfind inhere/ -size 1033c ! -executable | file You get the same result! The pipe | is a great tool to execute 2+ commands in one line.\nGet your password and continue with bandit7.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit6/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ehuman-readable\u003c/li\u003e\n\u003cli\u003e1033 bytes in size\u003c/li\u003e\n\u003cli\u003enot executable\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThe purpose of the level is showing us how to find for files. Listing contents of \u003cstrong\u003einhere\u003c/strong\u003e, we can see some folders, containing a lot of files inside:\n\u003cimg alt=\"bandit6_0\" loading=\"lazy\" src=\"/images/otw/bandit/bandit6/0.png\"\u003e\u003c/p\u003e","title":"Bandit5 -\u003e Bandit6"},{"content":"Level description The password for the next level is stored somewhere on the server and has all of the following properties:\nowned by user bandit7 owned by group bandit6 33 bytes in size Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution This is very straightforward to do after completing previous level. Now we need to identify a file owned by user bandit7 and group bandi6. Furthermore, the file is somewhere on the server, which means we have to find in the root directory /.\nfind / -user bandit7 -group bandit6 -size 33c 2\u0026gt;/dev/null NB: I added that strange 2\u0026gt;/dev/null to filter error output. The reason why it works like that is more technical, for now just save this a fast way to filter errors in terminal. We get some errors because looking for files in the whole server may return some unaccesible files, as we don\u0026rsquo;t have root user permissions. We will study Linux permissions in later levels.\nWe should get a single file, containing password for bandit8.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit7/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored somewhere on the server and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eowned by user bandit7\u003c/li\u003e\n\u003cli\u003eowned by group bandit6\u003c/li\u003e\n\u003cli\u003e33 bytes in size\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is very straightforward to do after completing previous level. Now we need to identify a file owned by user bandit7 and group bandi6. Furthermore, the file is \u003cstrong\u003esomewhere on the server\u003c/strong\u003e, which means we have to find in the root directory \u003ccode\u003e/\u003c/code\u003e.\u003c/p\u003e","title":"Bandit6 -\u003e Bandit7"},{"content":"Level description The password for the next level is stored in the file data.txt next to the word millionth.\nTips for beginners Learn how to filter file contents. Solution At previous levels, we discovered how to find for files. Now it\u0026rsquo;s time to find for content inside a file. grep command is going to help with that task.\nNB: Of course I don\u0026rsquo;t want to spoil you the password!\nNotice how this can achieved in different ways.\nUsing grep \u0026lt;keyword\u0026gt; \u0026lt;filename\u0026gt;. Using the pipe | to execute grep over the result of cat command. Take you favorite path to solve the level, and continue with bandit9.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit8/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the file \u003cstrong\u003edata.txt\u003c/strong\u003e next to the word \u003cstrong\u003emillionth\u003c/strong\u003e.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to filter file contents.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAt previous levels, we discovered how to find for files. Now it\u0026rsquo;s time to find for content inside a file. \u003ccode\u003egrep\u003c/code\u003e command is going to help with that task.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"bandit8\" loading=\"lazy\" src=\"/images/otw/bandit/bandit8/0.png\"\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e Of course I don\u0026rsquo;t want to spoil you the password!\u003c/p\u003e","title":"Bandit7 -\u003e Bandit8"},{"content":"Level description The password for the next level is stored in the file data.txt and is the only line of text that occurs only once.\nTips for beginners First, apply sort to file content. Solution This level is a bit tricky. First, examine the file contents. Using head shows the 10 first lines of a file:\nNB: If you want to show more lines: head -20 or the number of your choice.\nThere are tons of different passwords. The correct one is the only line of text that occurs only once. Try to research how to do on your own. You maybe find uniq. This command has a very interesting flag, -u, used to show only the uniq lines. Let\u0026rsquo;s try with that:\nFor some reason, is not working. The trick here is to sort the file contents before applying uniq. This can be achieved using sort, so the final command looks like this:\ncat data.txt | sort | uniq -u NB: You need to sort lines first because uniq only detects consecutive repetitions. First time I solved this it took a while 😅.\nAfter getting the password, we can continue with bandit10.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit9/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the file \u003cstrong\u003edata.txt\u003c/strong\u003e and is the only line of text that occurs only once.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst, apply \u003ccode\u003esort\u003c/code\u003e to file content.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis level is a bit tricky. First, examine the file contents. Using \u003ccode\u003ehead\u003c/code\u003e shows the 10 first lines of a file:\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"bandit9_0\" loading=\"lazy\" src=\"/images/otw/bandit/bandit9/0.png\"\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e If you want to show more lines: \u003ccode\u003ehead -20\u003c/code\u003e or the number of your choice.\u003c/p\u003e","title":"Bandit9"},{"content":"Level description The password for the next level is stored in the file data.txt in one of the few human-readable strings, preceded by several \u0026lsquo;=\u0026rsquo; characters.\nTips for beginners strings can be used to retrieve human readable-content from a file. You can apply things from previous levels. Solution The file data.txt has mixed content, binary and ASCII. If the password is preceded by several \u0026lsquo;=\u0026rsquo; characters, we can simply filter by some of them. But there is a little problem, content is not fully ASCII, so grep won\u0026rsquo;t work. First you need to get content with strings to get only the human readable content.\nNB: Try to run both cat and strings separately. Observe the differences.\nNext level is bandit10.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit10/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the file \u003cstrong\u003edata.txt\u003c/strong\u003e in one of the few human-readable strings, preceded by several \u0026lsquo;=\u0026rsquo; characters.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003estrings\u003c/code\u003e can be used to retrieve human readable-content from a file.\u003c/li\u003e\n\u003cli\u003eYou can apply things from previous levels.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThe file \u003cstrong\u003edata.txt\u003c/strong\u003e has mixed content, binary and ASCII. If the password is preceded by several \u0026lsquo;=\u0026rsquo; characters, we can simply filter by some of them. But there is a little problem, content is not fully ASCII, so \u003ccode\u003egrep\u003c/code\u003e won\u0026rsquo;t work. First you need to get content with \u003ccode\u003estrings\u003c/code\u003e to get only the human readable content.\u003c/p\u003e","title":"Bandit10"},{"content":"👨‍💻 whoami Hey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\nWhat is this❓​ This blog is basically my thoughts on several hacking topics. Here you’ll see:\nWriteups from CTF challenges, from platforms like HackTheBox or OverTheWire.\nWalkthroughs and notes on pentesting techniques I’m learning or testing.\nSome posts on cryptography — because math can be fun (sometimes).\nRandom topics that freaks like me may (just may) find interesting.\nThe idea is simple: share what I learn, document my journey, and maybe help others who are also diving into the exciting world of ethical hacking.\n📫 Contact Want to say hi, share ideas, or just geek out about hacking? Reach me here:\n📧 Email: mrb0b1073@proton.me 💻​ GitHub: mrb0b173 🟩​ HackTheBox: mrb0b1073 ","permalink":"http://localhost:1313/about/","summary":"\u003ch2 id=\"-whoami\"\u003e👨‍💻 whoami\u003c/h2\u003e\n\u003cp\u003eHey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\u003c/p\u003e\n\u003chr\u003e\n\u003ch2 id=\"what-is-this\"\u003eWhat is this❓​\u003c/h2\u003e\n\u003cp\u003eThis blog is basically my thoughts on several hacking topics. Here you’ll see:\u003c/p\u003e","title":"About"},{"content":"Hey! 👋 I\u0026rsquo;m mrb0b1073 and this is my first post.\nWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\nExcited to start this adventure!\n","permalink":"http://localhost:1313/posts/hello-world/","summary":"\u003cp\u003eHey! 👋 I\u0026rsquo;m \u003cstrong\u003emrb0b1073\u003c/strong\u003e and this is my first post.\u003c/p\u003e\n\u003cp\u003eWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\u003cbr\u003e\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\u003c/p\u003e\n\u003cp\u003eExcited to start this adventure!\u003c/p\u003e","title":"Hello World"},{"content":"Introduction If you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\nIn cybersecurity there are broadly two complementary roles: Blue Team and Red Team. Blue Teams focus on defense, monitoring, incident response, hardening systems and keeping services secure, while Red Teams simulate attackers to find weaknesses and prove what an adversary could do. Ethical hacking aligns closely with Red Team operations, but cybersecurity is highly transversal across IT. There are many specialities or areas, such as cloud security, appsec, pentesting, forensics, governance, risk management, malware analysis, etc. Every topic could deserve its own post, so let\u0026rsquo;s keep it simple and focus on ethical hacking.\nHacker philosophy Let\u0026rsquo;s start with the idea of what is exactly a hacker. A hacker is someone who explores systems to understand how they work, finds creative ways to make or fix things, and solves technical problems. Historically the word describes curiosity, craft, and a drive to improve systems — not criminality. It is important to make the distinction between hacker and cracker, also called cybercriminal. A hacker explores, builds, discloses responsibly and works to improve security. They work in authorized environments or labs. On the other hand, a cracker breaks into systems for theft, vandalism or other illicit gain.\nHere you can find the most popularized ideas often summarized as the hacker ethic:\nCuriosity first: Learn by exploring and tinkering. Freedom of information: All knowledge should be shared to help progress. This fits properly with the idea of open source. Mistrust of needless authority: Centralized control sometimes blocks innovation. It is always good to question anything, specially common assumptions. Meritocracy: Skills, craft and results matter more than titles. Craftsmanship \u0026amp; elegance: Technical beauty matters. Build clean, clever and efficient solutions. Responsability \u0026amp; ethics: Use your skills to build, fix, educate and defend, not to harm. Core fundamentals Assuming you want to init yourself in hacking, you should first build competence across three basic pillars.\nOperating Systems You should learn as much as possible about Linux and Windows. Specially Linux, all the tools you will be using are meant to be used in a Linux environment. Skill with shell is required, learn basic commands and how to interact with the OS using the terminal. Research about processes, file permissions, package management and logs. A large proportion of web servers around the world run on Linux, although Windows is also widely used. Windows knowledge is really valuable too, considering active directory is strongly used in corporate environments.\nNetworking You have to understand how computers communicate each other. Understand basic networking concepts, IP adresses, subnetting, proxies, find out how internet works. Study some protocols such as TCP/IP, HTTP, DNS or SSH. This could sound confusing for beginners, but this step is not optional! Study different client/server models and how services expose attack surfaces.\nProgramming \u0026amp; scripting Is this completely required? Maybe not for complete beginners. Does it help? Absolutely yes. Understanding how web apps or any type of application works makes things much easier. You can imagine different entry points to exploit if you understand how systems are designed. Also writing scripts in bash or python makes you more productive through automation.\nEthical Hacking foundations Once you feel confident with these 3 pillars, you can go to the next step. You can study about different topics and areas. For example, binary exploiting, web pentesting, mobile pentesting, wireless hacking, etc. You should start picking a focus, in this post we focus on web pentesting, as it is beginner friendly. Also web applications are the bread and butter in companies nowadays.\nKey concepts to study:\nCIA Triad: CIA refers to Confidentiality, Integrity and Availability. These three concepts are key in information security, and describe properties we want to ensure in our systems and information. Web Security basics, OWASP: Study the OWASP Top 10, which summarizes most frequent web security risks. Authentication and session control: Understand the concepts of Authentication and Authorization, research about how session is handled in web apps, cookies, JWT tokens, etc. Input validation \u0026amp; injection attacks: Learn about SQL Injection, Cross-Site Scripting (XSS), Code Injection, SSTI, and every injection type. Secure development lifecycle: Find out how to implement security controls in code. This can be more related to Blue Team, but as Red Teamer it is important to understand. Firewall evasion: What a firewall is and some techniques/methods to bypass. Some cryptography: Understand what a chiper and a hash are, how information is encrypted to prevent access from 3rd parties. Focusing on web, read about TLS protocol. There are many more topics you can research and learn, but this could be a nice starting point.\nTools and platforms to learn Now you have an idea of what to study, let\u0026rsquo;s see how to start in practical terms.\nSome platforms I personally recommend:\nOverTheWire: Here you can find some CTFs (Capture The Flag) which are fun to play and also really instructive. Bandit games are a must for complete beginners, as you will explore some linux and bash concepts which are basic to continue. The games are leveled by difficulty, in their web you can get all the information about how to play, only a terminal and SSH is required. This helps building your foundation in Linux OS. HackTheBox: Nº 1 platform in cybersecurity. Has a lot of resources to learn all this core fundamentals, and also red team / blue team security topics. It is focused on labs where you can test your skills hacking different boxes but if you really want to learn it is worth to invest time and money in the academy. I have to say the level here is high, specially if you try to hack machines on your own without using some guide or writeup. TryHackMe: More beginner friendly than hackthebox, it provides a lot of guided learning resources. PortSwigger Labs: Practical labs about specific topics, focused on web hacking. They are great to learn and understand different types of attacks, injections, and security misconfigurations. I would recommend digging into this once you have the theoretical basis about these concepts. I have to mention a few tools I am sure you\u0026rsquo;d end up using:\nNmap: This is probably the most famous tool in hacking, allowing you to gather information about ports and services running in a machine. Burpsuite: A proxy tool widely used in web application security testing. It basically allows you to intercept and modify web requests, which can be used to perform several types of attacks. Metasploit: The most used pentesting framework. Contains a large amount of scripts and exploits ready to run. Another crucial step here is to set up your virtual lab environment to test vulnerable applications. To achieve this goal, there are some Linux distributions like Kali, Parrot or BlackArch, but that\u0026rsquo;s a topic for another post.\nFinal thoughs To sum up, this would be my personal roadmap:\nLearn the fundamentals, specially Linux and networking. Install some Linux in a virtual machine, play with it, get comfortable with the terminal. You can start with bandit wargames in OverTheWire. Complete every level and make sure to understand everything as clear as possible. Move to guided boxes on HackTheBox. I recommend you joining their Discord, ask questions, community is great there! Take notes, repeat, learn, improve your skills. Maybe use your own lab environment, create your own vulnerable apps. Hacking is a mixing of curiosity, study and practice. Being passionate and motivated about it is really helpful and will definitely speed up the process. The path is long and really challenging, so keep it going!\n\u0026ldquo;Yes, I am a criminal. My crime is that of curiosity.\u0026rdquo; — The Mentor (Loyd Blankenship) at The Hacker Manifesto\n","permalink":"http://localhost:1313/posts/starting-point/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIf you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\u003c/p\u003e","title":"Starting Point"},{"content":"Introduction In this post series we are going to solve every level from bandit in OverTheWire This guide pretends to be a writeup containing the solutions of the level, designed for beginners.\nTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing WSL, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\nEvery section will contain the solution as well as some tips for people who is absolutely beginner.\nTips First of all, some tips:\nDo not use this as first resource to solve the levels. Try on your own, make mistakes and learn from them. Only check the solution as last resource or if you are completely new and you have absolutely no idea about what to do next. Take notes from your learning. Write up commands, tips and everything which can be useful in the future. Make sure to understand everything. Is a good idea to note the passwords for every level. If you want to continue letter, you can simply log in in the desired level. It is annoying to repeat everything! Follow the tips and information provided at OverTheWire website. Levels Here is my solution for every level:\nBandit0 Bandit1 Bandit2 Bandit3 Bandit4 Bandit5 Bandit6 Bandit7 ","permalink":"http://localhost:1313/posts/otw/bandit/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIn this post series we are going to solve every level from bandit in \u003ca href=\"https://overthewire.org/wargames/bandit/\"\u003e\u003cem\u003eOverTheWire\u003c/em\u003e\u003c/a\u003e\nThis guide pretends to be a writeup containing the solutions of the level, designed for beginners.\u003c/p\u003e\n\u003cp\u003eTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing \u003ca href=\"https://learn.microsoft.com/en-us/windows/wsl/install\"\u003eWSL\u003c/a\u003e, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\u003c/p\u003e","title":"Bandit"},{"content":"Level description The goal of this level is for you to log into the game using SSH. The host to which you need to connect is bandit.labs.overthewire.org, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\nTips for beginners Read a bit about what SSH is. Research about what a port is. Solution This is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go here.\nAt Linux, we can use ssh client to connect to the server. It should be installed by default on your system. If not, please first research about how to install. Once you have the SSH client installed, you can log in into the first level as follows:\nssh bandit0@bandit.labs.overthewire.org -p 2220 Syntax is simple: ssh \u0026lt;username\u0026gt;@\u0026lt;hostname\u0026gt; -p \u0026lt;port\u0026gt;. Usually SSH runs on port 22 by default, but they changed to port 2220 so we must specify it in the command.\nOnce you try to log in, you will see something like this: NB: If it\u0026rsquo;s the first time you try to log in, you will be asked about the authenticity of the host. Just type yes.\nType the password bandit0 and press enter. Now you are inside bandit server, ready to begin with bandit1!\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit0/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe goal of this level is for you to log into the game using SSH. The host to which you need to connect is \u003cstrong\u003ebandit.labs.overthewire.org\u003c/strong\u003e, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eRead a bit about what SSH is.\u003c/li\u003e\n\u003cli\u003eResearch about what a port is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go \u003ca href=\"https://en.wikipedia.org/wiki/Secure_Shell\"\u003ehere\u003c/a\u003e.\u003c/p\u003e","title":"Bandit0"},{"content":"Level description The password for the next level is stored in a file called readme located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\nTips for beginners Learn about home directory in Linux. Learn to use cat and ls commands. Solution First step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\nls This shows in terminal the files at the current directory. There you will see the readme file.\nNow we can to check the contents, so let\u0026rsquo;s use cat:\ncat readme To read a file, we use cat \u0026lt;filename\u0026gt;.\nNB: Not every file is human readable in Linux. We deep more about this in later levels.\nThe content of the readme file reveals the password for bandit2 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit1/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u003cstrong\u003ereadme\u003c/strong\u003e located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn about home directory in Linux.\u003c/li\u003e\n\u003cli\u003eLearn to use \u003ccode\u003ecat\u003c/code\u003e and \u003ccode\u003els\u003c/code\u003e commands.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eFirst step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\u003c/p\u003e","title":"Bandit0 -\u003e Bandit 1"},{"content":"Level description The password for the next level is stored in a file called - located in the home directory\nTips for beginners Try to understand why previous solution is not working as you expect. Solution You may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our cat command: The terminal is waiting for something else. This happens due to character - is used to pass arguments to our commands, and the linux shell is interpreting that. To prevent that, we could use:\ncat ./- NB: Dot . is used to refer current directory. The slash / is used at the end of directory name.\nWe get the password for bandit3 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit2/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called - located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eTry to understand why previous solution is not working as you expect.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eYou may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our \u003ccode\u003ecat\u003c/code\u003e command:\n\u003cimg alt=\"bandit2\" loading=\"lazy\" src=\"/images/otw/bandit/bandit2/0.png\"\u003e\u003c/p\u003e\n\u003cp\u003eThe terminal is \u003cem\u003ewaiting\u003c/em\u003e for something else. This happens due to character \u003ccode\u003e-\u003c/code\u003e is used to pass arguments to our commands, and the linux shell is interpreting that.\nTo prevent that, we could use:\u003c/p\u003e","title":"Bandit1 -\u003e Bandit2"},{"content":"Level description The password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\nTips for beginners Think about how to escape the whitespaces. Solution After login in the machine as bandit3, we can see the filename \u0026ndash;spaces in this filename\u0026ndash;.\nNow we have 2 problems:\nSame as previous level, filename starts with --, so it will be interpreted as an argument. Address this problem using ./. Filename contains whitespaces. This is an issue, as bash interpretes whitespaces to separate commands. To solve the second problem, we must escape the whitespace character in some way. Here is the solution:\ncat ./--spaces\\ in\\ this\\ filename-- NB: Little trick, you can start writting filename and press Tab to autocomplete the name. The \\ is going to be inserted automatically.\nJust using the \\ we can escape the whitespace.\nNow we can continue with the bandit4 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit3/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eThink about how to \u003cem\u003eescape\u003c/em\u003e the whitespaces.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAfter login in the machine as bandit3, we can see the filename \u003cem\u003e\u0026ndash;spaces in this filename\u0026ndash;\u003c/em\u003e.\u003c/p\u003e\n\u003cp\u003eNow we have 2 problems:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eSame as previous level, filename starts with \u003ccode\u003e--\u003c/code\u003e, so it will be interpreted as an argument. Address this problem using \u003ccode\u003e./\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003eFilename contains \u003cstrong\u003ewhitespaces\u003c/strong\u003e. This is an issue, as bash interpretes whitespaces to separate commands.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eTo solve the second problem, we must escape the whitespace character in some way. Here is the solution:\u003c/p\u003e","title":"Bandit2 -\u003e Bandit3"},{"content":"Level description The password for the next level is stored in a hidden file in the inhere directory.\nTips for beginners Learn how to navigate directories in Linux. First understand what a hidden file is. Solution Listing directory files inside bandit4\u0026rsquo;s home directory, show directory inhere.\nNB: How to distinguish files and directories in Linux? Use ls -l and see the difference.\nWe have 2 options now:\nMove to inhere directory and check contens again. Check contents directly. Moving to another directory can be done using cd \u0026lt;dirName\u0026gt;. If you prefer to check directory contents directly, use ls \u0026lt;dirName\u0026gt;.\nAfter checking inhere contents via ls, we see nothing. The reason is the file is a hidden file. A hidden file in Linux is everyfile whose name starts with dot .. Hidden files are not shown by default with ls command, so we must add a special flag -a to list all files: NB: Both flags -l and -a cna be combined into a single flag -al, which is shorter to type.\nAs you can see, filename is \u0026hellip;Hidding-From-You starting with three dots. Reading file contents should be easy at this point!\nNext level is bandit5.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit4/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a hidden file in the inhere directory.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to navigate directories in Linux.\u003c/li\u003e\n\u003cli\u003eFirst understand what a hidden file is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eListing directory files inside bandit4\u0026rsquo;s home directory, show directory \u003cstrong\u003einhere\u003c/strong\u003e.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e How to distinguish files and directories in Linux? Use \u003ccode\u003els -l\u003c/code\u003e and see the difference.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eWe have 2 options now:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eMove to inhere directory and check contens again.\u003c/li\u003e\n\u003cli\u003eCheck contents directly.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eMoving to another directory can be done using \u003ccode\u003ecd \u0026lt;dirName\u0026gt;\u003c/code\u003e. If you prefer to check directory contents directly, use \u003ccode\u003els \u0026lt;dirName\u0026gt;\u003c/code\u003e.\u003c/p\u003e","title":"Bandit3 -\u003e Bandit4"},{"content":"Level description The password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\nTips for beginners What means human-readable file? Is there any way to check filetype at Linux?. Solution Checking inhere\u0026rsquo;s contents shows some files names \u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII here\nSo now, our goal is checking if file content of every file in the folder is ASCII or not. file \u0026lt;filename\u0026gt; does the job. Note the use of *. That called a wildcard regular expression, we\u0026rsquo;ll deep into it in later levels. An easy approach could be checking every file separately:\nfile ./--file00 file ./--file01 ... file ./--file09 But that\u0026rsquo;s not funny, imagine we have 100 files to check. All the files are in the same directory, so we can use cat ./* where ./* matches every filename in the directory, applying file to every file.\nNB: Another approach is to use find with certaing flags. Try to do in different ways, don\u0026rsquo;t stick to my solution.\nThe file \u0026ndash;file00 content is not readable, so get password from \u0026ndash;file07 and continue with bandit6.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit5/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eWhat means human-readable file?\u003c/li\u003e\n\u003cli\u003eIs there any way to check filetype at Linux?.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eChecking inhere\u0026rsquo;s contents shows some files names \u003cstrong\u003e\u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09\u003c/strong\u003e. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII \u003ca href=\"https://en.wikipedia.org/wiki/ASCII\"\u003ehere\u003c/a\u003e\u003c/p\u003e","title":"Bandit4 -\u003e Bandit5"},{"content":"Level description The password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\nhuman-readable 1033 bytes in size not executable Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution The purpose of the level is showing us how to find for files. Listing contents of inhere, we can see some folders, containing a lot of files inside: NB: Adding -R to ls shows recursively the content of every folder inside the directory listed.\nSo this time, checking every file is not an option. We need to find a file with some properties, specific size, not excutable and human-readable. Let\u0026rsquo;s explain the command we\u0026rsquo;re using:\nfind inhere/ -size 1033c ! -executable First, we specify the directory, in this case inhere. The option -size 1033c returns files of 1033 bytes. Then, with -executable we would get executable files, but we want not executable files, that\u0026rsquo;s why we are adding ! before.\nNB: By default, the -size option takes as argument the number of blocks. For example, -size 2 means 2 blocks of 512 bytes, so its 1024. The c is used to specify exact bytes. Don\u0026rsquo;t ask me why it\u0026rsquo;s c and not b 😅.\nThe property of human-readability is not implemented in find. This is not an issue, previous command returns a single file and it is human readable (we could confirm using file): Extra tip: try to use the following:\nfind inhere/ -size 1033c ! -executable | file You get the same result! The pipe | is a great tool to execute 2+ commands in one line.\nGet your password and continue with bandit7.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit6/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ehuman-readable\u003c/li\u003e\n\u003cli\u003e1033 bytes in size\u003c/li\u003e\n\u003cli\u003enot executable\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThe purpose of the level is showing us how to find for files. Listing contents of \u003cstrong\u003einhere\u003c/strong\u003e, we can see some folders, containing a lot of files inside:\n\u003cimg alt=\"bandit6_0\" loading=\"lazy\" src=\"/images/otw/bandit/bandit6/0.png\"\u003e\u003c/p\u003e","title":"Bandit5 -\u003e Bandit6"},{"content":"Level description The password for the next level is stored somewhere on the server and has all of the following properties:\nowned by user bandit7 owned by group bandit6 33 bytes in size Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution This is very straightforward to do after completing previous level. Now we need to identify a file owned by user bandit7 and group bandi6. Furthermore, the file is somewhere on the server, which means we have to find in the root directory /.\nfind / -user bandit7 -group bandit6 -size 33c 2\u0026gt;/dev/null NB: I added that strange 2\u0026gt;/dev/null to filter error output. The reason why it works like that is more technical, for now just save this a fast way to filter errors in terminal. We get some errors because looking for files in the whole server may return some unaccesible files, as we don\u0026rsquo;t have root user permissions. We will study Linux permissions in later levels.\nWe should get a single file, containing password for bandit8.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit7/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored somewhere on the server and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eowned by user bandit7\u003c/li\u003e\n\u003cli\u003eowned by group bandit6\u003c/li\u003e\n\u003cli\u003e33 bytes in size\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is very straightforward to do after completing previous level. Now we need to identify a file owned by user bandit7 and group bandi6. Furthermore, the file is \u003cstrong\u003esomewhere on the server\u003c/strong\u003e, which means we have to find in the root directory \u003ccode\u003e/\u003c/code\u003e.\u003c/p\u003e","title":"Bandit6 -\u003e Bandit7"},{"content":"Level description The password for the next level is stored in the file data.txt next to the word millionth.\nTips for beginners Learn how to filter file contents. Solution At previous levels, we discovered how to find for files. Now it\u0026rsquo;s time to find for content inside a file. grep command is going to help with that task.\nNB: Of course I don\u0026rsquo;t want to spoil you the password!\nNotice how this can achieved in different ways.\nUsing grep \u0026lt;keyword\u0026gt; \u0026lt;filename\u0026gt;. Using the pipe | to execute grep over the result of cat command. Take you favorite path to solve the level, and continue with bandit9.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit8/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the file \u003cstrong\u003edata.txt\u003c/strong\u003e next to the word \u003cstrong\u003emillionth\u003c/strong\u003e.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to filter file contents.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAt previous levels, we discovered how to find for files. Now it\u0026rsquo;s time to find for content inside a file. \u003ccode\u003egrep\u003c/code\u003e command is going to help with that task.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"bandit8\" loading=\"lazy\" src=\"/images/otw/bandit/bandit8/0.png\"\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e Of course I don\u0026rsquo;t want to spoil you the password!\u003c/p\u003e","title":"Bandit7 -\u003e Bandit8"},{"content":"Level description The password for the next level is stored in the file data.txt and is the only line of text that occurs only once.\nTips for beginners First, apply sort to file content. Solution This level is a bit tricky. First, examine the file contents. Using head shows the 10 first lines of a file:\nNB: If you want to show more lines: head -20 or the number of your choice.\nThere are tons of different passwords. The correct one is the only line of text that occurs only once. Try to research how to do on your own. You maybe find uniq. This command has a very interesting flag, -u, used to show only the uniq lines. Let\u0026rsquo;s try with that:\nFor some reason, is not working. The trick here is to sort the file contents before applying uniq. This can be achieved using sort, so the final command looks like this:\ncat data.txt | sort | uniq -u NB: You need to sort lines first because uniq only detects consecutive repetitions. First time I solved this it took a while 😅.\nAfter getting the password, we can continue with bandit10.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit9/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the file \u003cstrong\u003edata.txt\u003c/strong\u003e and is the only line of text that occurs only once.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst, apply \u003ccode\u003esort\u003c/code\u003e to file content.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis level is a bit tricky. First, examine the file contents. Using \u003ccode\u003ehead\u003c/code\u003e shows the 10 first lines of a file:\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"bandit9_0\" loading=\"lazy\" src=\"/images/otw/bandit/bandit9/0.png\"\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e If you want to show more lines: \u003ccode\u003ehead -20\u003c/code\u003e or the number of your choice.\u003c/p\u003e","title":"Bandit8 -\u003e Bandit9"},{"content":"Level description The password for the next level is stored in the file data.txt in one of the few human-readable strings, preceded by several \u0026lsquo;=\u0026rsquo; characters.\nTips for beginners strings can be used to retrieve human readable-content from a file. You can apply things from previous levels. Solution The file data.txt has mixed content, binary and ASCII. If the password is preceded by several \u0026lsquo;=\u0026rsquo; characters, we can simply filter by some of them. But there is a little problem, content is not fully ASCII, so grep won\u0026rsquo;t work. First you need to get content with strings to get only the human readable content.\nNB: Try to run both cat and strings separately. Observe the differences.\nNext level is bandit10.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit10/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the file \u003cstrong\u003edata.txt\u003c/strong\u003e in one of the few human-readable strings, preceded by several \u0026lsquo;=\u0026rsquo; characters.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003estrings\u003c/code\u003e can be used to retrieve human readable-content from a file.\u003c/li\u003e\n\u003cli\u003eYou can apply things from previous levels.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThe file \u003cstrong\u003edata.txt\u003c/strong\u003e has mixed content, binary and ASCII. If the password is preceded by several \u0026lsquo;=\u0026rsquo; characters, we can simply filter by some of them. But there is a little problem, content is not fully ASCII, so \u003ccode\u003egrep\u003c/code\u003e won\u0026rsquo;t work. First you need to get content with \u003ccode\u003estrings\u003c/code\u003e to get only the human readable content.\u003c/p\u003e","title":"Bandit10"},{"content":"👨‍💻 whoami Hey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\nWhat is this❓​ This blog is basically my thoughts on several hacking topics. Here you’ll see:\nWriteups from CTF challenges, from platforms like HackTheBox or OverTheWire.\nWalkthroughs and notes on pentesting techniques I’m learning or testing.\nSome posts on cryptography — because math can be fun (sometimes).\nRandom topics that freaks like me may (just may) find interesting.\nThe idea is simple: share what I learn, document my journey, and maybe help others who are also diving into the exciting world of ethical hacking.\n📫 Contact Want to say hi, share ideas, or just geek out about hacking? Reach me here:\n📧 Email: mrb0b1073@proton.me 💻​ GitHub: mrb0b173 🟩​ HackTheBox: mrb0b1073 ","permalink":"http://localhost:1313/about/","summary":"\u003ch2 id=\"-whoami\"\u003e👨‍💻 whoami\u003c/h2\u003e\n\u003cp\u003eHey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\u003c/p\u003e\n\u003chr\u003e\n\u003ch2 id=\"what-is-this\"\u003eWhat is this❓​\u003c/h2\u003e\n\u003cp\u003eThis blog is basically my thoughts on several hacking topics. Here you’ll see:\u003c/p\u003e","title":"About"},{"content":"Hey! 👋 I\u0026rsquo;m mrb0b1073 and this is my first post.\nWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\nExcited to start this adventure!\n","permalink":"http://localhost:1313/posts/hello-world/","summary":"\u003cp\u003eHey! 👋 I\u0026rsquo;m \u003cstrong\u003emrb0b1073\u003c/strong\u003e and this is my first post.\u003c/p\u003e\n\u003cp\u003eWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\u003cbr\u003e\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\u003c/p\u003e\n\u003cp\u003eExcited to start this adventure!\u003c/p\u003e","title":"Hello World"},{"content":"Introduction If you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\nIn cybersecurity there are broadly two complementary roles: Blue Team and Red Team. Blue Teams focus on defense, monitoring, incident response, hardening systems and keeping services secure, while Red Teams simulate attackers to find weaknesses and prove what an adversary could do. Ethical hacking aligns closely with Red Team operations, but cybersecurity is highly transversal across IT. There are many specialities or areas, such as cloud security, appsec, pentesting, forensics, governance, risk management, malware analysis, etc. Every topic could deserve its own post, so let\u0026rsquo;s keep it simple and focus on ethical hacking.\nHacker philosophy Let\u0026rsquo;s start with the idea of what is exactly a hacker. A hacker is someone who explores systems to understand how they work, finds creative ways to make or fix things, and solves technical problems. Historically the word describes curiosity, craft, and a drive to improve systems — not criminality. It is important to make the distinction between hacker and cracker, also called cybercriminal. A hacker explores, builds, discloses responsibly and works to improve security. They work in authorized environments or labs. On the other hand, a cracker breaks into systems for theft, vandalism or other illicit gain.\nHere you can find the most popularized ideas often summarized as the hacker ethic:\nCuriosity first: Learn by exploring and tinkering. Freedom of information: All knowledge should be shared to help progress. This fits properly with the idea of open source. Mistrust of needless authority: Centralized control sometimes blocks innovation. It is always good to question anything, specially common assumptions. Meritocracy: Skills, craft and results matter more than titles. Craftsmanship \u0026amp; elegance: Technical beauty matters. Build clean, clever and efficient solutions. Responsability \u0026amp; ethics: Use your skills to build, fix, educate and defend, not to harm. Core fundamentals Assuming you want to init yourself in hacking, you should first build competence across three basic pillars.\nOperating Systems You should learn as much as possible about Linux and Windows. Specially Linux, all the tools you will be using are meant to be used in a Linux environment. Skill with shell is required, learn basic commands and how to interact with the OS using the terminal. Research about processes, file permissions, package management and logs. A large proportion of web servers around the world run on Linux, although Windows is also widely used. Windows knowledge is really valuable too, considering active directory is strongly used in corporate environments.\nNetworking You have to understand how computers communicate each other. Understand basic networking concepts, IP adresses, subnetting, proxies, find out how internet works. Study some protocols such as TCP/IP, HTTP, DNS or SSH. This could sound confusing for beginners, but this step is not optional! Study different client/server models and how services expose attack surfaces.\nProgramming \u0026amp; scripting Is this completely required? Maybe not for complete beginners. Does it help? Absolutely yes. Understanding how web apps or any type of application works makes things much easier. You can imagine different entry points to exploit if you understand how systems are designed. Also writing scripts in bash or python makes you more productive through automation.\nEthical Hacking foundations Once you feel confident with these 3 pillars, you can go to the next step. You can study about different topics and areas. For example, binary exploiting, web pentesting, mobile pentesting, wireless hacking, etc. You should start picking a focus, in this post we focus on web pentesting, as it is beginner friendly. Also web applications are the bread and butter in companies nowadays.\nKey concepts to study:\nCIA Triad: CIA refers to Confidentiality, Integrity and Availability. These three concepts are key in information security, and describe properties we want to ensure in our systems and information. Web Security basics, OWASP: Study the OWASP Top 10, which summarizes most frequent web security risks. Authentication and session control: Understand the concepts of Authentication and Authorization, research about how session is handled in web apps, cookies, JWT tokens, etc. Input validation \u0026amp; injection attacks: Learn about SQL Injection, Cross-Site Scripting (XSS), Code Injection, SSTI, and every injection type. Secure development lifecycle: Find out how to implement security controls in code. This can be more related to Blue Team, but as Red Teamer it is important to understand. Firewall evasion: What a firewall is and some techniques/methods to bypass. Some cryptography: Understand what a chiper and a hash are, how information is encrypted to prevent access from 3rd parties. Focusing on web, read about TLS protocol. There are many more topics you can research and learn, but this could be a nice starting point.\nTools and platforms to learn Now you have an idea of what to study, let\u0026rsquo;s see how to start in practical terms.\nSome platforms I personally recommend:\nOverTheWire: Here you can find some CTFs (Capture The Flag) which are fun to play and also really instructive. Bandit games are a must for complete beginners, as you will explore some linux and bash concepts which are basic to continue. The games are leveled by difficulty, in their web you can get all the information about how to play, only a terminal and SSH is required. This helps building your foundation in Linux OS. HackTheBox: Nº 1 platform in cybersecurity. Has a lot of resources to learn all this core fundamentals, and also red team / blue team security topics. It is focused on labs where you can test your skills hacking different boxes but if you really want to learn it is worth to invest time and money in the academy. I have to say the level here is high, specially if you try to hack machines on your own without using some guide or writeup. TryHackMe: More beginner friendly than hackthebox, it provides a lot of guided learning resources. PortSwigger Labs: Practical labs about specific topics, focused on web hacking. They are great to learn and understand different types of attacks, injections, and security misconfigurations. I would recommend digging into this once you have the theoretical basis about these concepts. I have to mention a few tools I am sure you\u0026rsquo;d end up using:\nNmap: This is probably the most famous tool in hacking, allowing you to gather information about ports and services running in a machine. Burpsuite: A proxy tool widely used in web application security testing. It basically allows you to intercept and modify web requests, which can be used to perform several types of attacks. Metasploit: The most used pentesting framework. Contains a large amount of scripts and exploits ready to run. Another crucial step here is to set up your virtual lab environment to test vulnerable applications. To achieve this goal, there are some Linux distributions like Kali, Parrot or BlackArch, but that\u0026rsquo;s a topic for another post.\nFinal thoughs To sum up, this would be my personal roadmap:\nLearn the fundamentals, specially Linux and networking. Install some Linux in a virtual machine, play with it, get comfortable with the terminal. You can start with bandit wargames in OverTheWire. Complete every level and make sure to understand everything as clear as possible. Move to guided boxes on HackTheBox. I recommend you joining their Discord, ask questions, community is great there! Take notes, repeat, learn, improve your skills. Maybe use your own lab environment, create your own vulnerable apps. Hacking is a mixing of curiosity, study and practice. Being passionate and motivated about it is really helpful and will definitely speed up the process. The path is long and really challenging, so keep it going!\n\u0026ldquo;Yes, I am a criminal. My crime is that of curiosity.\u0026rdquo; — The Mentor (Loyd Blankenship) at The Hacker Manifesto\n","permalink":"http://localhost:1313/posts/starting-point/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIf you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\u003c/p\u003e","title":"Starting Point"},{"content":"Introduction In this post series we are going to solve every level from bandit in OverTheWire This guide pretends to be a writeup containing the solutions of the level, designed for beginners.\nTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing WSL, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\nEvery section will contain the solution as well as some tips for people who is absolutely beginner.\nTips First of all, some tips:\nDo not use this as first resource to solve the levels. Try on your own, make mistakes and learn from them. Only check the solution as last resource or if you are completely new and you have absolutely no idea about what to do next. Take notes from your learning. Write up commands, tips and everything which can be useful in the future. Make sure to understand everything. Is a good idea to note the passwords for every level. If you want to continue letter, you can simply log in in the desired level. It is annoying to repeat everything! Follow the tips and information provided at OverTheWire website. Levels Here is my solution for every level:\nBandit0 Bandit1 Bandit2 Bandit3 Bandit4 Bandit5 Bandit6 Bandit7 ","permalink":"http://localhost:1313/posts/otw/bandit/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIn this post series we are going to solve every level from bandit in \u003ca href=\"https://overthewire.org/wargames/bandit/\"\u003e\u003cem\u003eOverTheWire\u003c/em\u003e\u003c/a\u003e\nThis guide pretends to be a writeup containing the solutions of the level, designed for beginners.\u003c/p\u003e\n\u003cp\u003eTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing \u003ca href=\"https://learn.microsoft.com/en-us/windows/wsl/install\"\u003eWSL\u003c/a\u003e, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\u003c/p\u003e","title":"Bandit"},{"content":"Level description The goal of this level is for you to log into the game using SSH. The host to which you need to connect is bandit.labs.overthewire.org, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\nTips for beginners Read a bit about what SSH is. Research about what a port is. Solution This is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go here.\nAt Linux, we can use ssh client to connect to the server. It should be installed by default on your system. If not, please first research about how to install. Once you have the SSH client installed, you can log in into the first level as follows:\nssh bandit0@bandit.labs.overthewire.org -p 2220 Syntax is simple: ssh \u0026lt;username\u0026gt;@\u0026lt;hostname\u0026gt; -p \u0026lt;port\u0026gt;. Usually SSH runs on port 22 by default, but they changed to port 2220 so we must specify it in the command.\nOnce you try to log in, you will see something like this: NB: If it\u0026rsquo;s the first time you try to log in, you will be asked about the authenticity of the host. Just type yes.\nType the password bandit0 and press enter. Now you are inside bandit server, ready to begin with bandit1!\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit0/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe goal of this level is for you to log into the game using SSH. The host to which you need to connect is \u003cstrong\u003ebandit.labs.overthewire.org\u003c/strong\u003e, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eRead a bit about what SSH is.\u003c/li\u003e\n\u003cli\u003eResearch about what a port is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go \u003ca href=\"https://en.wikipedia.org/wiki/Secure_Shell\"\u003ehere\u003c/a\u003e.\u003c/p\u003e","title":"Bandit0"},{"content":"Level description The password for the next level is stored in a file called readme located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\nTips for beginners Learn about home directory in Linux. Learn to use cat and ls commands. Solution First step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\nls This shows in terminal the files at the current directory. There you will see the readme file.\nNow we can to check the contents, so let\u0026rsquo;s use cat:\ncat readme To read a file, we use cat \u0026lt;filename\u0026gt;.\nNB: Not every file is human readable in Linux. We deep more about this in later levels.\nThe content of the readme file reveals the password for bandit2 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit1/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u003cstrong\u003ereadme\u003c/strong\u003e located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn about home directory in Linux.\u003c/li\u003e\n\u003cli\u003eLearn to use \u003ccode\u003ecat\u003c/code\u003e and \u003ccode\u003els\u003c/code\u003e commands.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eFirst step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\u003c/p\u003e","title":"Bandit0 -\u003e Bandit 1"},{"content":"Level description The password for the next level is stored in a file called - located in the home directory\nTips for beginners Try to understand why previous solution is not working as you expect. Solution You may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our cat command: The terminal is waiting for something else. This happens due to character - is used to pass arguments to our commands, and the linux shell is interpreting that. To prevent that, we could use:\ncat ./- NB: Dot . is used to refer current directory. The slash / is used at the end of directory name.\nWe get the password for bandit3 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit2/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called - located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eTry to understand why previous solution is not working as you expect.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eYou may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our \u003ccode\u003ecat\u003c/code\u003e command:\n\u003cimg alt=\"bandit2\" loading=\"lazy\" src=\"/images/otw/bandit/bandit2/0.png\"\u003e\u003c/p\u003e\n\u003cp\u003eThe terminal is \u003cem\u003ewaiting\u003c/em\u003e for something else. This happens due to character \u003ccode\u003e-\u003c/code\u003e is used to pass arguments to our commands, and the linux shell is interpreting that.\nTo prevent that, we could use:\u003c/p\u003e","title":"Bandit1 -\u003e Bandit2"},{"content":"Level description The password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\nTips for beginners Think about how to escape the whitespaces. Solution After login in the machine as bandit3, we can see the filename \u0026ndash;spaces in this filename\u0026ndash;.\nNow we have 2 problems:\nSame as previous level, filename starts with --, so it will be interpreted as an argument. Address this problem using ./. Filename contains whitespaces. This is an issue, as bash interpretes whitespaces to separate commands. To solve the second problem, we must escape the whitespace character in some way. Here is the solution:\ncat ./--spaces\\ in\\ this\\ filename-- NB: Little trick, you can start writting filename and press Tab to autocomplete the name. The \\ is going to be inserted automatically.\nJust using the \\ we can escape the whitespace.\nNow we can continue with the bandit4 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit3/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eThink about how to \u003cem\u003eescape\u003c/em\u003e the whitespaces.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAfter login in the machine as bandit3, we can see the filename \u003cem\u003e\u0026ndash;spaces in this filename\u0026ndash;\u003c/em\u003e.\u003c/p\u003e\n\u003cp\u003eNow we have 2 problems:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eSame as previous level, filename starts with \u003ccode\u003e--\u003c/code\u003e, so it will be interpreted as an argument. Address this problem using \u003ccode\u003e./\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003eFilename contains \u003cstrong\u003ewhitespaces\u003c/strong\u003e. This is an issue, as bash interpretes whitespaces to separate commands.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eTo solve the second problem, we must escape the whitespace character in some way. Here is the solution:\u003c/p\u003e","title":"Bandit2 -\u003e Bandit3"},{"content":"Level description The password for the next level is stored in a hidden file in the inhere directory.\nTips for beginners Learn how to navigate directories in Linux. First understand what a hidden file is. Solution Listing directory files inside bandit4\u0026rsquo;s home directory, show directory inhere.\nNB: How to distinguish files and directories in Linux? Use ls -l and see the difference.\nWe have 2 options now:\nMove to inhere directory and check contens again. Check contents directly. Moving to another directory can be done using cd \u0026lt;dirName\u0026gt;. If you prefer to check directory contents directly, use ls \u0026lt;dirName\u0026gt;.\nAfter checking inhere contents via ls, we see nothing. The reason is the file is a hidden file. A hidden file in Linux is everyfile whose name starts with dot .. Hidden files are not shown by default with ls command, so we must add a special flag -a to list all files: NB: Both flags -l and -a cna be combined into a single flag -al, which is shorter to type.\nAs you can see, filename is \u0026hellip;Hidding-From-You starting with three dots. Reading file contents should be easy at this point!\nNext level is bandit5.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit4/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a hidden file in the inhere directory.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to navigate directories in Linux.\u003c/li\u003e\n\u003cli\u003eFirst understand what a hidden file is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eListing directory files inside bandit4\u0026rsquo;s home directory, show directory \u003cstrong\u003einhere\u003c/strong\u003e.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e How to distinguish files and directories in Linux? Use \u003ccode\u003els -l\u003c/code\u003e and see the difference.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eWe have 2 options now:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eMove to inhere directory and check contens again.\u003c/li\u003e\n\u003cli\u003eCheck contents directly.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eMoving to another directory can be done using \u003ccode\u003ecd \u0026lt;dirName\u0026gt;\u003c/code\u003e. If you prefer to check directory contents directly, use \u003ccode\u003els \u0026lt;dirName\u0026gt;\u003c/code\u003e.\u003c/p\u003e","title":"Bandit3 -\u003e Bandit4"},{"content":"Level description The password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\nTips for beginners What means human-readable file? Is there any way to check filetype at Linux?. Solution Checking inhere\u0026rsquo;s contents shows some files names \u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII here\nSo now, our goal is checking if file content of every file in the folder is ASCII or not. file \u0026lt;filename\u0026gt; does the job. Note the use of *. That called a wildcard regular expression, we\u0026rsquo;ll deep into it in later levels. An easy approach could be checking every file separately:\nfile ./--file00 file ./--file01 ... file ./--file09 But that\u0026rsquo;s not funny, imagine we have 100 files to check. All the files are in the same directory, so we can use cat ./* where ./* matches every filename in the directory, applying file to every file.\nNB: Another approach is to use find with certaing flags. Try to do in different ways, don\u0026rsquo;t stick to my solution.\nThe file \u0026ndash;file00 content is not readable, so get password from \u0026ndash;file07 and continue with bandit6.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit5/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eWhat means human-readable file?\u003c/li\u003e\n\u003cli\u003eIs there any way to check filetype at Linux?.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eChecking inhere\u0026rsquo;s contents shows some files names \u003cstrong\u003e\u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09\u003c/strong\u003e. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII \u003ca href=\"https://en.wikipedia.org/wiki/ASCII\"\u003ehere\u003c/a\u003e\u003c/p\u003e","title":"Bandit4 -\u003e Bandit5"},{"content":"Level description The password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\nhuman-readable 1033 bytes in size not executable Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution The purpose of the level is showing us how to find for files. Listing contents of inhere, we can see some folders, containing a lot of files inside: NB: Adding -R to ls shows recursively the content of every folder inside the directory listed.\nSo this time, checking every file is not an option. We need to find a file with some properties, specific size, not excutable and human-readable. Let\u0026rsquo;s explain the command we\u0026rsquo;re using:\nfind inhere/ -size 1033c ! -executable First, we specify the directory, in this case inhere. The option -size 1033c returns files of 1033 bytes. Then, with -executable we would get executable files, but we want not executable files, that\u0026rsquo;s why we are adding ! before.\nNB: By default, the -size option takes as argument the number of blocks. For example, -size 2 means 2 blocks of 512 bytes, so its 1024. The c is used to specify exact bytes. Don\u0026rsquo;t ask me why it\u0026rsquo;s c and not b 😅.\nThe property of human-readability is not implemented in find. This is not an issue, previous command returns a single file and it is human readable (we could confirm using file): Extra tip: try to use the following:\nfind inhere/ -size 1033c ! -executable | file You get the same result! The pipe | is a great tool to execute 2+ commands in one line.\nGet your password and continue with bandit7.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit6/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ehuman-readable\u003c/li\u003e\n\u003cli\u003e1033 bytes in size\u003c/li\u003e\n\u003cli\u003enot executable\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThe purpose of the level is showing us how to find for files. Listing contents of \u003cstrong\u003einhere\u003c/strong\u003e, we can see some folders, containing a lot of files inside:\n\u003cimg alt=\"bandit6_0\" loading=\"lazy\" src=\"/images/otw/bandit/bandit6/0.png\"\u003e\u003c/p\u003e","title":"Bandit5 -\u003e Bandit6"},{"content":"Level description The password for the next level is stored somewhere on the server and has all of the following properties:\nowned by user bandit7 owned by group bandit6 33 bytes in size Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution This is very straightforward to do after completing previous level. Now we need to identify a file owned by user bandit7 and group bandi6. Furthermore, the file is somewhere on the server, which means we have to find in the root directory /.\nfind / -user bandit7 -group bandit6 -size 33c 2\u0026gt;/dev/null NB: I added that strange 2\u0026gt;/dev/null to filter error output. The reason why it works like that is more technical, for now just save this a fast way to filter errors in terminal. We get some errors because looking for files in the whole server may return some unaccesible files, as we don\u0026rsquo;t have root user permissions. We will study Linux permissions in later levels.\nWe should get a single file, containing password for bandit8.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit7/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored somewhere on the server and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eowned by user bandit7\u003c/li\u003e\n\u003cli\u003eowned by group bandit6\u003c/li\u003e\n\u003cli\u003e33 bytes in size\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is very straightforward to do after completing previous level. Now we need to identify a file owned by user bandit7 and group bandi6. Furthermore, the file is \u003cstrong\u003esomewhere on the server\u003c/strong\u003e, which means we have to find in the root directory \u003ccode\u003e/\u003c/code\u003e.\u003c/p\u003e","title":"Bandit6 -\u003e Bandit7"},{"content":"Level description The password for the next level is stored in the file data.txt next to the word millionth.\nTips for beginners Learn how to filter file contents. Solution At previous levels, we discovered how to find for files. Now it\u0026rsquo;s time to find for content inside a file. grep command is going to help with that task.\nNB: Of course I don\u0026rsquo;t want to spoil you the password!\nNotice how this can achieved in different ways.\nUsing grep \u0026lt;keyword\u0026gt; \u0026lt;filename\u0026gt;. Using the pipe | to execute grep over the result of cat command. Take you favorite path to solve the level, and continue with bandit9.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit8/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the file \u003cstrong\u003edata.txt\u003c/strong\u003e next to the word \u003cstrong\u003emillionth\u003c/strong\u003e.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to filter file contents.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAt previous levels, we discovered how to find for files. Now it\u0026rsquo;s time to find for content inside a file. \u003ccode\u003egrep\u003c/code\u003e command is going to help with that task.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"bandit8\" loading=\"lazy\" src=\"/images/otw/bandit/bandit8/0.png\"\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e Of course I don\u0026rsquo;t want to spoil you the password!\u003c/p\u003e","title":"Bandit7 -\u003e Bandit8"},{"content":"Level description The password for the next level is stored in the file data.txt and is the only line of text that occurs only once.\nTips for beginners First, apply sort to file content. Solution This level is a bit tricky. First, examine the file contents. Using head shows the 10 first lines of a file:\nNB: If you want to show more lines: head -20 or the number of your choice.\nThere are tons of different passwords. The correct one is the only line of text that occurs only once. Try to research how to do on your own. You maybe find uniq. This command has a very interesting flag, -u, used to show only the uniq lines. Let\u0026rsquo;s try with that:\nFor some reason, is not working. The trick here is to sort the file contents before applying uniq. This can be achieved using sort, so the final command looks like this:\ncat data.txt | sort | uniq -u NB: You need to sort lines first because uniq only detects consecutive repetitions. First time I solved this it took a while 😅.\nAfter getting the password, we can continue with bandit10.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit9/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the file \u003cstrong\u003edata.txt\u003c/strong\u003e and is the only line of text that occurs only once.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst, apply \u003ccode\u003esort\u003c/code\u003e to file content.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis level is a bit tricky. First, examine the file contents. Using \u003ccode\u003ehead\u003c/code\u003e shows the 10 first lines of a file:\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"bandit9_0\" loading=\"lazy\" src=\"/images/otw/bandit/bandit9/0.png\"\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e If you want to show more lines: \u003ccode\u003ehead -20\u003c/code\u003e or the number of your choice.\u003c/p\u003e","title":"Bandit8 -\u003e Bandit9"},{"content":"Level description The password for the next level is stored in the file data.txt in one of the few human-readable strings, preceded by several \u0026lsquo;=\u0026rsquo; characters.\nTips for beginners strings can be used to retrieve human readable-content from a file. You can apply things from previous levels. Solution The file data.txt has mixed content, binary and ASCII. If the password is preceded by several \u0026lsquo;=\u0026rsquo; characters, we can simply filter by some of them. But there is a little problem, content is not fully ASCII, so grep won\u0026rsquo;t work. First you need to get content with strings to get only the human readable content.\nNB: Try to run both cat and strings separately. Observe the differences.\nNext level is bandit10.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit10/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the file \u003cstrong\u003edata.txt\u003c/strong\u003e in one of the few human-readable strings, preceded by several \u0026lsquo;=\u0026rsquo; characters.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003estrings\u003c/code\u003e can be used to retrieve human readable-content from a file.\u003c/li\u003e\n\u003cli\u003eYou can apply things from previous levels.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThe file \u003cstrong\u003edata.txt\u003c/strong\u003e has mixed content, binary and ASCII. If the password is preceded by several \u0026lsquo;=\u0026rsquo; characters, we can simply filter by some of them. But there is a little problem, content is not fully ASCII, so \u003ccode\u003egrep\u003c/code\u003e won\u0026rsquo;t work. First you need to get content with \u003ccode\u003estrings\u003c/code\u003e to get only the human readable content.\u003c/p\u003e","title":"Bandit9 -\u003e Bandit10"},{"content":"👨‍💻 whoami Hey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\nWhat is this❓​ This blog is basically my thoughts on several hacking topics. Here you’ll see:\nWriteups from CTF challenges, from platforms like HackTheBox or OverTheWire.\nWalkthroughs and notes on pentesting techniques I’m learning or testing.\nSome posts on cryptography — because math can be fun (sometimes).\nRandom topics that freaks like me may (just may) find interesting.\nThe idea is simple: share what I learn, document my journey, and maybe help others who are also diving into the exciting world of ethical hacking.\n📫 Contact Want to say hi, share ideas, or just geek out about hacking? Reach me here:\n📧 Email: mrb0b1073@proton.me 💻​ GitHub: mrb0b173 🟩​ HackTheBox: mrb0b1073 ","permalink":"http://localhost:1313/about/","summary":"\u003ch2 id=\"-whoami\"\u003e👨‍💻 whoami\u003c/h2\u003e\n\u003cp\u003eHey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\u003c/p\u003e\n\u003chr\u003e\n\u003ch2 id=\"what-is-this\"\u003eWhat is this❓​\u003c/h2\u003e\n\u003cp\u003eThis blog is basically my thoughts on several hacking topics. Here you’ll see:\u003c/p\u003e","title":"About"},{"content":"Hey! 👋 I\u0026rsquo;m mrb0b1073 and this is my first post.\nWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\nExcited to start this adventure!\n","permalink":"http://localhost:1313/posts/hello-world/","summary":"\u003cp\u003eHey! 👋 I\u0026rsquo;m \u003cstrong\u003emrb0b1073\u003c/strong\u003e and this is my first post.\u003c/p\u003e\n\u003cp\u003eWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\u003cbr\u003e\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\u003c/p\u003e\n\u003cp\u003eExcited to start this adventure!\u003c/p\u003e","title":"Hello World"},{"content":"Introduction If you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\nIn cybersecurity there are broadly two complementary roles: Blue Team and Red Team. Blue Teams focus on defense, monitoring, incident response, hardening systems and keeping services secure, while Red Teams simulate attackers to find weaknesses and prove what an adversary could do. Ethical hacking aligns closely with Red Team operations, but cybersecurity is highly transversal across IT. There are many specialities or areas, such as cloud security, appsec, pentesting, forensics, governance, risk management, malware analysis, etc. Every topic could deserve its own post, so let\u0026rsquo;s keep it simple and focus on ethical hacking.\nHacker philosophy Let\u0026rsquo;s start with the idea of what is exactly a hacker. A hacker is someone who explores systems to understand how they work, finds creative ways to make or fix things, and solves technical problems. Historically the word describes curiosity, craft, and a drive to improve systems — not criminality. It is important to make the distinction between hacker and cracker, also called cybercriminal. A hacker explores, builds, discloses responsibly and works to improve security. They work in authorized environments or labs. On the other hand, a cracker breaks into systems for theft, vandalism or other illicit gain.\nHere you can find the most popularized ideas often summarized as the hacker ethic:\nCuriosity first: Learn by exploring and tinkering. Freedom of information: All knowledge should be shared to help progress. This fits properly with the idea of open source. Mistrust of needless authority: Centralized control sometimes blocks innovation. It is always good to question anything, specially common assumptions. Meritocracy: Skills, craft and results matter more than titles. Craftsmanship \u0026amp; elegance: Technical beauty matters. Build clean, clever and efficient solutions. Responsability \u0026amp; ethics: Use your skills to build, fix, educate and defend, not to harm. Core fundamentals Assuming you want to init yourself in hacking, you should first build competence across three basic pillars.\nOperating Systems You should learn as much as possible about Linux and Windows. Specially Linux, all the tools you will be using are meant to be used in a Linux environment. Skill with shell is required, learn basic commands and how to interact with the OS using the terminal. Research about processes, file permissions, package management and logs. A large proportion of web servers around the world run on Linux, although Windows is also widely used. Windows knowledge is really valuable too, considering active directory is strongly used in corporate environments.\nNetworking You have to understand how computers communicate each other. Understand basic networking concepts, IP adresses, subnetting, proxies, find out how internet works. Study some protocols such as TCP/IP, HTTP, DNS or SSH. This could sound confusing for beginners, but this step is not optional! Study different client/server models and how services expose attack surfaces.\nProgramming \u0026amp; scripting Is this completely required? Maybe not for complete beginners. Does it help? Absolutely yes. Understanding how web apps or any type of application works makes things much easier. You can imagine different entry points to exploit if you understand how systems are designed. Also writing scripts in bash or python makes you more productive through automation.\nEthical Hacking foundations Once you feel confident with these 3 pillars, you can go to the next step. You can study about different topics and areas. For example, binary exploiting, web pentesting, mobile pentesting, wireless hacking, etc. You should start picking a focus, in this post we focus on web pentesting, as it is beginner friendly. Also web applications are the bread and butter in companies nowadays.\nKey concepts to study:\nCIA Triad: CIA refers to Confidentiality, Integrity and Availability. These three concepts are key in information security, and describe properties we want to ensure in our systems and information. Web Security basics, OWASP: Study the OWASP Top 10, which summarizes most frequent web security risks. Authentication and session control: Understand the concepts of Authentication and Authorization, research about how session is handled in web apps, cookies, JWT tokens, etc. Input validation \u0026amp; injection attacks: Learn about SQL Injection, Cross-Site Scripting (XSS), Code Injection, SSTI, and every injection type. Secure development lifecycle: Find out how to implement security controls in code. This can be more related to Blue Team, but as Red Teamer it is important to understand. Firewall evasion: What a firewall is and some techniques/methods to bypass. Some cryptography: Understand what a chiper and a hash are, how information is encrypted to prevent access from 3rd parties. Focusing on web, read about TLS protocol. There are many more topics you can research and learn, but this could be a nice starting point.\nTools and platforms to learn Now you have an idea of what to study, let\u0026rsquo;s see how to start in practical terms.\nSome platforms I personally recommend:\nOverTheWire: Here you can find some CTFs (Capture The Flag) which are fun to play and also really instructive. Bandit games are a must for complete beginners, as you will explore some linux and bash concepts which are basic to continue. The games are leveled by difficulty, in their web you can get all the information about how to play, only a terminal and SSH is required. This helps building your foundation in Linux OS. HackTheBox: Nº 1 platform in cybersecurity. Has a lot of resources to learn all this core fundamentals, and also red team / blue team security topics. It is focused on labs where you can test your skills hacking different boxes but if you really want to learn it is worth to invest time and money in the academy. I have to say the level here is high, specially if you try to hack machines on your own without using some guide or writeup. TryHackMe: More beginner friendly than hackthebox, it provides a lot of guided learning resources. PortSwigger Labs: Practical labs about specific topics, focused on web hacking. They are great to learn and understand different types of attacks, injections, and security misconfigurations. I would recommend digging into this once you have the theoretical basis about these concepts. I have to mention a few tools I am sure you\u0026rsquo;d end up using:\nNmap: This is probably the most famous tool in hacking, allowing you to gather information about ports and services running in a machine. Burpsuite: A proxy tool widely used in web application security testing. It basically allows you to intercept and modify web requests, which can be used to perform several types of attacks. Metasploit: The most used pentesting framework. Contains a large amount of scripts and exploits ready to run. Another crucial step here is to set up your virtual lab environment to test vulnerable applications. To achieve this goal, there are some Linux distributions like Kali, Parrot or BlackArch, but that\u0026rsquo;s a topic for another post.\nFinal thoughs To sum up, this would be my personal roadmap:\nLearn the fundamentals, specially Linux and networking. Install some Linux in a virtual machine, play with it, get comfortable with the terminal. You can start with bandit wargames in OverTheWire. Complete every level and make sure to understand everything as clear as possible. Move to guided boxes on HackTheBox. I recommend you joining their Discord, ask questions, community is great there! Take notes, repeat, learn, improve your skills. Maybe use your own lab environment, create your own vulnerable apps. Hacking is a mixing of curiosity, study and practice. Being passionate and motivated about it is really helpful and will definitely speed up the process. The path is long and really challenging, so keep it going!\n\u0026ldquo;Yes, I am a criminal. My crime is that of curiosity.\u0026rdquo; — The Mentor (Loyd Blankenship) at The Hacker Manifesto\n","permalink":"http://localhost:1313/posts/starting-point/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIf you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\u003c/p\u003e","title":"Starting Point"},{"content":"Introduction In this post series we are going to solve every level from bandit in OverTheWire This guide pretends to be a writeup containing the solutions of the level, designed for beginners.\nTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing WSL, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\nEvery section will contain the solution as well as some tips for people who is absolutely beginner.\nTips First of all, some tips:\nDo not use this as first resource to solve the levels. Try on your own, make mistakes and learn from them. Only check the solution as last resource or if you are completely new and you have absolutely no idea about what to do next. Take notes from your learning. Write up commands, tips and everything which can be useful in the future. Make sure to understand everything. Is a good idea to note the passwords for every level. If you want to continue letter, you can simply log in in the desired level. It is annoying to repeat everything! Follow the tips and information provided at OverTheWire website. Levels Here is my solution for every level:\nBandit0 Bandit1 Bandit2 Bandit3 Bandit4 Bandit5 Bandit6 Bandit7 ","permalink":"http://localhost:1313/posts/otw/bandit/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIn this post series we are going to solve every level from bandit in \u003ca href=\"https://overthewire.org/wargames/bandit/\"\u003e\u003cem\u003eOverTheWire\u003c/em\u003e\u003c/a\u003e\nThis guide pretends to be a writeup containing the solutions of the level, designed for beginners.\u003c/p\u003e\n\u003cp\u003eTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing \u003ca href=\"https://learn.microsoft.com/en-us/windows/wsl/install\"\u003eWSL\u003c/a\u003e, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\u003c/p\u003e","title":"Bandit"},{"content":"Level description The goal of this level is for you to log into the game using SSH. The host to which you need to connect is bandit.labs.overthewire.org, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\nTips for beginners Read a bit about what SSH is. Research about what a port is. Solution This is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go here.\nAt Linux, we can use ssh client to connect to the server. It should be installed by default on your system. If not, please first research about how to install. Once you have the SSH client installed, you can log in into the first level as follows:\nssh bandit0@bandit.labs.overthewire.org -p 2220 Syntax is simple: ssh \u0026lt;username\u0026gt;@\u0026lt;hostname\u0026gt; -p \u0026lt;port\u0026gt;. Usually SSH runs on port 22 by default, but they changed to port 2220 so we must specify it in the command.\nOnce you try to log in, you will see something like this: NB: If it\u0026rsquo;s the first time you try to log in, you will be asked about the authenticity of the host. Just type yes.\nType the password bandit0 and press enter. Now you are inside bandit server, ready to begin with bandit1!\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit0/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe goal of this level is for you to log into the game using SSH. The host to which you need to connect is \u003cstrong\u003ebandit.labs.overthewire.org\u003c/strong\u003e, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eRead a bit about what SSH is.\u003c/li\u003e\n\u003cli\u003eResearch about what a port is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go \u003ca href=\"https://en.wikipedia.org/wiki/Secure_Shell\"\u003ehere\u003c/a\u003e.\u003c/p\u003e","title":"Bandit0"},{"content":"Level description The password for the next level is stored in a file called readme located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\nTips for beginners Learn about home directory in Linux. Learn to use cat and ls commands. Solution First step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\nls This shows in terminal the files at the current directory. There you will see the readme file.\nNow we can to check the contents, so let\u0026rsquo;s use cat:\ncat readme To read a file, we use cat \u0026lt;filename\u0026gt;.\nNB: Not every file is human readable in Linux. We deep more about this in later levels.\nThe content of the readme file reveals the password for bandit2 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit1/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u003cstrong\u003ereadme\u003c/strong\u003e located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn about home directory in Linux.\u003c/li\u003e\n\u003cli\u003eLearn to use \u003ccode\u003ecat\u003c/code\u003e and \u003ccode\u003els\u003c/code\u003e commands.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eFirst step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\u003c/p\u003e","title":"Bandit0 -\u003e Bandit 1"},{"content":"Level description The password for the next level is stored in a file called - located in the home directory\nTips for beginners Try to understand why previous solution is not working as you expect. Solution You may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our cat command: The terminal is waiting for something else. This happens due to character - is used to pass arguments to our commands, and the linux shell is interpreting that. To prevent that, we could use:\ncat ./- NB: Dot . is used to refer current directory. The slash / is used at the end of directory name.\nWe get the password for bandit3 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit2/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called - located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eTry to understand why previous solution is not working as you expect.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eYou may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our \u003ccode\u003ecat\u003c/code\u003e command:\n\u003cimg alt=\"bandit2\" loading=\"lazy\" src=\"/images/otw/bandit/bandit2/0.png\"\u003e\u003c/p\u003e\n\u003cp\u003eThe terminal is \u003cem\u003ewaiting\u003c/em\u003e for something else. This happens due to character \u003ccode\u003e-\u003c/code\u003e is used to pass arguments to our commands, and the linux shell is interpreting that.\nTo prevent that, we could use:\u003c/p\u003e","title":"Bandit1 -\u003e Bandit2"},{"content":"Level description The password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\nTips for beginners Think about how to escape the whitespaces. Solution After login in the machine as bandit3, we can see the filename \u0026ndash;spaces in this filename\u0026ndash;.\nNow we have 2 problems:\nSame as previous level, filename starts with --, so it will be interpreted as an argument. Address this problem using ./. Filename contains whitespaces. This is an issue, as bash interpretes whitespaces to separate commands. To solve the second problem, we must escape the whitespace character in some way. Here is the solution:\ncat ./--spaces\\ in\\ this\\ filename-- NB: Little trick, you can start writting filename and press Tab to autocomplete the name. The \\ is going to be inserted automatically.\nJust using the \\ we can escape the whitespace.\nNow we can continue with the bandit4 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit3/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eThink about how to \u003cem\u003eescape\u003c/em\u003e the whitespaces.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAfter login in the machine as bandit3, we can see the filename \u003cem\u003e\u0026ndash;spaces in this filename\u0026ndash;\u003c/em\u003e.\u003c/p\u003e\n\u003cp\u003eNow we have 2 problems:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eSame as previous level, filename starts with \u003ccode\u003e--\u003c/code\u003e, so it will be interpreted as an argument. Address this problem using \u003ccode\u003e./\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003eFilename contains \u003cstrong\u003ewhitespaces\u003c/strong\u003e. This is an issue, as bash interpretes whitespaces to separate commands.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eTo solve the second problem, we must escape the whitespace character in some way. Here is the solution:\u003c/p\u003e","title":"Bandit2 -\u003e Bandit3"},{"content":"Level description The password for the next level is stored in a hidden file in the inhere directory.\nTips for beginners Learn how to navigate directories in Linux. First understand what a hidden file is. Solution Listing directory files inside bandit4\u0026rsquo;s home directory, show directory inhere.\nNB: How to distinguish files and directories in Linux? Use ls -l and see the difference.\nWe have 2 options now:\nMove to inhere directory and check contens again. Check contents directly. Moving to another directory can be done using cd \u0026lt;dirName\u0026gt;. If you prefer to check directory contents directly, use ls \u0026lt;dirName\u0026gt;.\nAfter checking inhere contents via ls, we see nothing. The reason is the file is a hidden file. A hidden file in Linux is everyfile whose name starts with dot .. Hidden files are not shown by default with ls command, so we must add a special flag -a to list all files: NB: Both flags -l and -a cna be combined into a single flag -al, which is shorter to type.\nAs you can see, filename is \u0026hellip;Hidding-From-You starting with three dots. Reading file contents should be easy at this point!\nNext level is bandit5.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit4/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a hidden file in the inhere directory.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to navigate directories in Linux.\u003c/li\u003e\n\u003cli\u003eFirst understand what a hidden file is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eListing directory files inside bandit4\u0026rsquo;s home directory, show directory \u003cstrong\u003einhere\u003c/strong\u003e.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e How to distinguish files and directories in Linux? Use \u003ccode\u003els -l\u003c/code\u003e and see the difference.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eWe have 2 options now:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eMove to inhere directory and check contens again.\u003c/li\u003e\n\u003cli\u003eCheck contents directly.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eMoving to another directory can be done using \u003ccode\u003ecd \u0026lt;dirName\u0026gt;\u003c/code\u003e. If you prefer to check directory contents directly, use \u003ccode\u003els \u0026lt;dirName\u0026gt;\u003c/code\u003e.\u003c/p\u003e","title":"Bandit3 -\u003e Bandit4"},{"content":"Level description The password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\nTips for beginners What means human-readable file? Is there any way to check filetype at Linux?. Solution Checking inhere\u0026rsquo;s contents shows some files names \u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII here\nSo now, our goal is checking if file content of every file in the folder is ASCII or not. file \u0026lt;filename\u0026gt; does the job. Note the use of *. That called a wildcard regular expression, we\u0026rsquo;ll deep into it in later levels. An easy approach could be checking every file separately:\nfile ./--file00 file ./--file01 ... file ./--file09 But that\u0026rsquo;s not funny, imagine we have 100 files to check. All the files are in the same directory, so we can use cat ./* where ./* matches every filename in the directory, applying file to every file.\nNB: Another approach is to use find with certaing flags. Try to do in different ways, don\u0026rsquo;t stick to my solution.\nThe file \u0026ndash;file00 content is not readable, so get password from \u0026ndash;file07 and continue with bandit6.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit5/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eWhat means human-readable file?\u003c/li\u003e\n\u003cli\u003eIs there any way to check filetype at Linux?.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eChecking inhere\u0026rsquo;s contents shows some files names \u003cstrong\u003e\u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09\u003c/strong\u003e. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII \u003ca href=\"https://en.wikipedia.org/wiki/ASCII\"\u003ehere\u003c/a\u003e\u003c/p\u003e","title":"Bandit4 -\u003e Bandit5"},{"content":"Level description The password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\nhuman-readable 1033 bytes in size not executable Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution The purpose of the level is showing us how to find for files. Listing contents of inhere, we can see some folders, containing a lot of files inside: NB: Adding -R to ls shows recursively the content of every folder inside the directory listed.\nSo this time, checking every file is not an option. We need to find a file with some properties, specific size, not excutable and human-readable. Let\u0026rsquo;s explain the command we\u0026rsquo;re using:\nfind inhere/ -size 1033c ! -executable First, we specify the directory, in this case inhere. The option -size 1033c returns files of 1033 bytes. Then, with -executable we would get executable files, but we want not executable files, that\u0026rsquo;s why we are adding ! before.\nNB: By default, the -size option takes as argument the number of blocks. For example, -size 2 means 2 blocks of 512 bytes, so its 1024. The c is used to specify exact bytes. Don\u0026rsquo;t ask me why it\u0026rsquo;s c and not b 😅.\nThe property of human-readability is not implemented in find. This is not an issue, previous command returns a single file and it is human readable (we could confirm using file): Extra tip: try to use the following:\nfind inhere/ -size 1033c ! -executable | file You get the same result! The pipe | is a great tool to execute 2+ commands in one line.\nGet your password and continue with bandit7.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit6/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ehuman-readable\u003c/li\u003e\n\u003cli\u003e1033 bytes in size\u003c/li\u003e\n\u003cli\u003enot executable\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThe purpose of the level is showing us how to find for files. Listing contents of \u003cstrong\u003einhere\u003c/strong\u003e, we can see some folders, containing a lot of files inside:\n\u003cimg alt=\"bandit6_0\" loading=\"lazy\" src=\"/images/otw/bandit/bandit6/0.png\"\u003e\u003c/p\u003e","title":"Bandit5 -\u003e Bandit6"},{"content":"Level description The password for the next level is stored somewhere on the server and has all of the following properties:\nowned by user bandit7 owned by group bandit6 33 bytes in size Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution This is very straightforward to do after completing previous level. Now we need to identify a file owned by user bandit7 and group bandi6. Furthermore, the file is somewhere on the server, which means we have to find in the root directory /.\nfind / -user bandit7 -group bandit6 -size 33c 2\u0026gt;/dev/null NB: I added that strange 2\u0026gt;/dev/null to filter error output. The reason why it works like that is more technical, for now just save this a fast way to filter errors in terminal. We get some errors because looking for files in the whole server may return some unaccesible files, as we don\u0026rsquo;t have root user permissions. We will study Linux permissions in later levels.\nWe should get a single file, containing password for bandit8.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit7/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored somewhere on the server and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eowned by user bandit7\u003c/li\u003e\n\u003cli\u003eowned by group bandit6\u003c/li\u003e\n\u003cli\u003e33 bytes in size\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is very straightforward to do after completing previous level. Now we need to identify a file owned by user bandit7 and group bandi6. Furthermore, the file is \u003cstrong\u003esomewhere on the server\u003c/strong\u003e, which means we have to find in the root directory \u003ccode\u003e/\u003c/code\u003e.\u003c/p\u003e","title":"Bandit6 -\u003e Bandit7"},{"content":"Level description The password for the next level is stored in the file data.txt next to the word millionth.\nTips for beginners Learn how to filter file contents. Solution At previous levels, we discovered how to find for files. Now it\u0026rsquo;s time to find for content inside a file. grep command is going to help with that task.\nNB: Of course I don\u0026rsquo;t want to spoil you the password!\nNotice how this can achieved in different ways.\nUsing grep \u0026lt;keyword\u0026gt; \u0026lt;filename\u0026gt;. Using the pipe | to execute grep over the result of cat command. Take you favorite path to solve the level, and continue with bandit9.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit8/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the file \u003cstrong\u003edata.txt\u003c/strong\u003e next to the word \u003cstrong\u003emillionth\u003c/strong\u003e.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to filter file contents.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAt previous levels, we discovered how to find for files. Now it\u0026rsquo;s time to find for content inside a file. \u003ccode\u003egrep\u003c/code\u003e command is going to help with that task.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"bandit8\" loading=\"lazy\" src=\"/images/otw/bandit/bandit8/0.png\"\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e Of course I don\u0026rsquo;t want to spoil you the password!\u003c/p\u003e","title":"Bandit7 -\u003e Bandit8"},{"content":"Level description The password for the next level is stored in the file data.txt and is the only line of text that occurs only once.\nTips for beginners First, apply sort to file content. Solution This level is a bit tricky. First, examine the file contents. Using head shows the 10 first lines of a file:\nNB: If you want to show more lines: head -20 or the number of your choice.\nThere are tons of different passwords. The correct one is the only line of text that occurs only once. Try to research how to do on your own. You maybe find uniq. This command has a very interesting flag, -u, used to show only the uniq lines. Let\u0026rsquo;s try with that:\nFor some reason, is not working. The trick here is to sort the file contents before applying uniq. This can be achieved using sort, so the final command looks like this:\ncat data.txt | sort | uniq -u NB: You need to sort lines first because uniq only detects consecutive repetitions. First time I solved this it took a while 😅.\nAfter getting the password, we can continue with bandit10.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit9/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the file \u003cstrong\u003edata.txt\u003c/strong\u003e and is the only line of text that occurs only once.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst, apply \u003ccode\u003esort\u003c/code\u003e to file content.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis level is a bit tricky. First, examine the file contents. Using \u003ccode\u003ehead\u003c/code\u003e shows the 10 first lines of a file:\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"bandit9_0\" loading=\"lazy\" src=\"/images/otw/bandit/bandit9/0.png\"\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e If you want to show more lines: \u003ccode\u003ehead -20\u003c/code\u003e or the number of your choice.\u003c/p\u003e","title":"Bandit8 -\u003e Bandit9"},{"content":"Level description The password for the next level is stored in the file data.txt in one of the few human-readable strings, preceded by several \u0026lsquo;=\u0026rsquo; characters.\nTips for beginners strings can be used to retrieve human readable-content from a file. You can apply things from previous levels. Solution The file data.txt has mixed content, binary and ASCII. If the password is preceded by several \u0026lsquo;=\u0026rsquo; characters, we can simply filter by some of them. But there is a little problem, content is not fully ASCII, so grep won\u0026rsquo;t work. First you need to get content with strings to get only the human readable content.\nNB: Try to run both cat and strings separately. Observe the differences.\nNext level is bandit11 (in progress).\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit10/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the file \u003cstrong\u003edata.txt\u003c/strong\u003e in one of the few human-readable strings, preceded by several \u0026lsquo;=\u0026rsquo; characters.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003estrings\u003c/code\u003e can be used to retrieve human readable-content from a file.\u003c/li\u003e\n\u003cli\u003eYou can apply things from previous levels.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThe file \u003cstrong\u003edata.txt\u003c/strong\u003e has mixed content, binary and ASCII. If the password is preceded by several \u0026lsquo;=\u0026rsquo; characters, we can simply filter by some of them. But there is a little problem, content is not fully ASCII, so \u003ccode\u003egrep\u003c/code\u003e won\u0026rsquo;t work. First you need to get content with \u003ccode\u003estrings\u003c/code\u003e to get only the human readable content.\u003c/p\u003e","title":"Bandit9 -\u003e Bandit10"},{"content":"👨‍💻 whoami Hey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\nWhat is this❓​ This blog is basically my thoughts on several hacking topics. Here you’ll see:\nWriteups from CTF challenges, from platforms like HackTheBox or OverTheWire.\nWalkthroughs and notes on pentesting techniques I’m learning or testing.\nSome posts on cryptography — because math can be fun (sometimes).\nRandom topics that freaks like me may (just may) find interesting.\nThe idea is simple: share what I learn, document my journey, and maybe help others who are also diving into the exciting world of ethical hacking.\n📫 Contact Want to say hi, share ideas, or just geek out about hacking? Reach me here:\n📧 Email: mrb0b1073@proton.me 💻​ GitHub: mrb0b173 🟩​ HackTheBox: mrb0b1073 ","permalink":"http://localhost:1313/about/","summary":"\u003ch2 id=\"-whoami\"\u003e👨‍💻 whoami\u003c/h2\u003e\n\u003cp\u003eHey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\u003c/p\u003e\n\u003chr\u003e\n\u003ch2 id=\"what-is-this\"\u003eWhat is this❓​\u003c/h2\u003e\n\u003cp\u003eThis blog is basically my thoughts on several hacking topics. Here you’ll see:\u003c/p\u003e","title":"About"},{"content":"Hey! 👋 I\u0026rsquo;m mrb0b1073 and this is my first post.\nWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\nExcited to start this adventure!\n","permalink":"http://localhost:1313/posts/hello-world/","summary":"\u003cp\u003eHey! 👋 I\u0026rsquo;m \u003cstrong\u003emrb0b1073\u003c/strong\u003e and this is my first post.\u003c/p\u003e\n\u003cp\u003eWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\u003cbr\u003e\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\u003c/p\u003e\n\u003cp\u003eExcited to start this adventure!\u003c/p\u003e","title":"Hello World"},{"content":"Introduction If you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\nIn cybersecurity there are broadly two complementary roles: Blue Team and Red Team. Blue Teams focus on defense, monitoring, incident response, hardening systems and keeping services secure, while Red Teams simulate attackers to find weaknesses and prove what an adversary could do. Ethical hacking aligns closely with Red Team operations, but cybersecurity is highly transversal across IT. There are many specialities or areas, such as cloud security, appsec, pentesting, forensics, governance, risk management, malware analysis, etc. Every topic could deserve its own post, so let\u0026rsquo;s keep it simple and focus on ethical hacking.\nHacker philosophy Let\u0026rsquo;s start with the idea of what is exactly a hacker. A hacker is someone who explores systems to understand how they work, finds creative ways to make or fix things, and solves technical problems. Historically the word describes curiosity, craft, and a drive to improve systems — not criminality. It is important to make the distinction between hacker and cracker, also called cybercriminal. A hacker explores, builds, discloses responsibly and works to improve security. They work in authorized environments or labs. On the other hand, a cracker breaks into systems for theft, vandalism or other illicit gain.\nHere you can find the most popularized ideas often summarized as the hacker ethic:\nCuriosity first: Learn by exploring and tinkering. Freedom of information: All knowledge should be shared to help progress. This fits properly with the idea of open source. Mistrust of needless authority: Centralized control sometimes blocks innovation. It is always good to question anything, specially common assumptions. Meritocracy: Skills, craft and results matter more than titles. Craftsmanship \u0026amp; elegance: Technical beauty matters. Build clean, clever and efficient solutions. Responsability \u0026amp; ethics: Use your skills to build, fix, educate and defend, not to harm. Core fundamentals Assuming you want to init yourself in hacking, you should first build competence across three basic pillars.\nOperating Systems You should learn as much as possible about Linux and Windows. Specially Linux, all the tools you will be using are meant to be used in a Linux environment. Skill with shell is required, learn basic commands and how to interact with the OS using the terminal. Research about processes, file permissions, package management and logs. A large proportion of web servers around the world run on Linux, although Windows is also widely used. Windows knowledge is really valuable too, considering active directory is strongly used in corporate environments.\nNetworking You have to understand how computers communicate each other. Understand basic networking concepts, IP adresses, subnetting, proxies, find out how internet works. Study some protocols such as TCP/IP, HTTP, DNS or SSH. This could sound confusing for beginners, but this step is not optional! Study different client/server models and how services expose attack surfaces.\nProgramming \u0026amp; scripting Is this completely required? Maybe not for complete beginners. Does it help? Absolutely yes. Understanding how web apps or any type of application works makes things much easier. You can imagine different entry points to exploit if you understand how systems are designed. Also writing scripts in bash or python makes you more productive through automation.\nEthical Hacking foundations Once you feel confident with these 3 pillars, you can go to the next step. You can study about different topics and areas. For example, binary exploiting, web pentesting, mobile pentesting, wireless hacking, etc. You should start picking a focus, in this post we focus on web pentesting, as it is beginner friendly. Also web applications are the bread and butter in companies nowadays.\nKey concepts to study:\nCIA Triad: CIA refers to Confidentiality, Integrity and Availability. These three concepts are key in information security, and describe properties we want to ensure in our systems and information. Web Security basics, OWASP: Study the OWASP Top 10, which summarizes most frequent web security risks. Authentication and session control: Understand the concepts of Authentication and Authorization, research about how session is handled in web apps, cookies, JWT tokens, etc. Input validation \u0026amp; injection attacks: Learn about SQL Injection, Cross-Site Scripting (XSS), Code Injection, SSTI, and every injection type. Secure development lifecycle: Find out how to implement security controls in code. This can be more related to Blue Team, but as Red Teamer it is important to understand. Firewall evasion: What a firewall is and some techniques/methods to bypass. Some cryptography: Understand what a chiper and a hash are, how information is encrypted to prevent access from 3rd parties. Focusing on web, read about TLS protocol. There are many more topics you can research and learn, but this could be a nice starting point.\nTools and platforms to learn Now you have an idea of what to study, let\u0026rsquo;s see how to start in practical terms.\nSome platforms I personally recommend:\nOverTheWire: Here you can find some CTFs (Capture The Flag) which are fun to play and also really instructive. Bandit games are a must for complete beginners, as you will explore some linux and bash concepts which are basic to continue. The games are leveled by difficulty, in their web you can get all the information about how to play, only a terminal and SSH is required. This helps building your foundation in Linux OS. HackTheBox: Nº 1 platform in cybersecurity. Has a lot of resources to learn all this core fundamentals, and also red team / blue team security topics. It is focused on labs where you can test your skills hacking different boxes but if you really want to learn it is worth to invest time and money in the academy. I have to say the level here is high, specially if you try to hack machines on your own without using some guide or writeup. TryHackMe: More beginner friendly than hackthebox, it provides a lot of guided learning resources. PortSwigger Labs: Practical labs about specific topics, focused on web hacking. They are great to learn and understand different types of attacks, injections, and security misconfigurations. I would recommend digging into this once you have the theoretical basis about these concepts. I have to mention a few tools I am sure you\u0026rsquo;d end up using:\nNmap: This is probably the most famous tool in hacking, allowing you to gather information about ports and services running in a machine. Burpsuite: A proxy tool widely used in web application security testing. It basically allows you to intercept and modify web requests, which can be used to perform several types of attacks. Metasploit: The most used pentesting framework. Contains a large amount of scripts and exploits ready to run. Another crucial step here is to set up your virtual lab environment to test vulnerable applications. To achieve this goal, there are some Linux distributions like Kali, Parrot or BlackArch, but that\u0026rsquo;s a topic for another post.\nFinal thoughs To sum up, this would be my personal roadmap:\nLearn the fundamentals, specially Linux and networking. Install some Linux in a virtual machine, play with it, get comfortable with the terminal. You can start with bandit wargames in OverTheWire. Complete every level and make sure to understand everything as clear as possible. Move to guided boxes on HackTheBox. I recommend you joining their Discord, ask questions, community is great there! Take notes, repeat, learn, improve your skills. Maybe use your own lab environment, create your own vulnerable apps. Hacking is a mixing of curiosity, study and practice. Being passionate and motivated about it is really helpful and will definitely speed up the process. The path is long and really challenging, so keep it going!\n\u0026ldquo;Yes, I am a criminal. My crime is that of curiosity.\u0026rdquo; — The Mentor (Loyd Blankenship) at The Hacker Manifesto\n","permalink":"http://localhost:1313/posts/starting-point/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIf you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\u003c/p\u003e","title":"Starting Point"},{"content":"Introduction In this post series we are going to solve every level from bandit in OverTheWire This guide pretends to be a writeup containing the solutions of the level, designed for beginners.\nTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing WSL, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\nEvery section will contain the solution as well as some tips for people who is absolutely beginner.\nTips First of all, some tips:\nDo not use this as first resource to solve the levels. Try on your own, make mistakes and learn from them. Only check the solution as last resource or if you are completely new and you have absolutely no idea about what to do next. Take notes from your learning. Write up commands, tips and everything which can be useful in the future. Make sure to understand everything. Is a good idea to note the passwords for every level. If you want to continue letter, you can simply log in in the desired level. It is annoying to repeat everything! Follow the tips and information provided at OverTheWire website. Levels Here is my solution for every level:\nBandit0 Bandit1 Bandit2 Bandit3 Bandit4 Bandit5 Bandit6 Bandit7 ","permalink":"http://localhost:1313/posts/otw/bandit/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIn this post series we are going to solve every level from bandit in \u003ca href=\"https://overthewire.org/wargames/bandit/\"\u003e\u003cem\u003eOverTheWire\u003c/em\u003e\u003c/a\u003e\nThis guide pretends to be a writeup containing the solutions of the level, designed for beginners.\u003c/p\u003e\n\u003cp\u003eTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing \u003ca href=\"https://learn.microsoft.com/en-us/windows/wsl/install\"\u003eWSL\u003c/a\u003e, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\u003c/p\u003e","title":"Bandit"},{"content":"Level description The goal of this level is for you to log into the game using SSH. The host to which you need to connect is bandit.labs.overthewire.org, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\nTips for beginners Read a bit about what SSH is. Research about what a port is. Solution This is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go here.\nAt Linux, we can use ssh client to connect to the server. It should be installed by default on your system. If not, please first research about how to install. Once you have the SSH client installed, you can log in into the first level as follows:\nssh bandit0@bandit.labs.overthewire.org -p 2220 Syntax is simple: ssh \u0026lt;username\u0026gt;@\u0026lt;hostname\u0026gt; -p \u0026lt;port\u0026gt;. Usually SSH runs on port 22 by default, but they changed to port 2220 so we must specify it in the command.\nOnce you try to log in, you will see something like this: NB: If it\u0026rsquo;s the first time you try to log in, you will be asked about the authenticity of the host. Just type yes.\nType the password bandit0 and press enter. Now you are inside bandit server, ready to begin with bandit1!\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit0/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe goal of this level is for you to log into the game using SSH. The host to which you need to connect is \u003cstrong\u003ebandit.labs.overthewire.org\u003c/strong\u003e, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eRead a bit about what SSH is.\u003c/li\u003e\n\u003cli\u003eResearch about what a port is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go \u003ca href=\"https://en.wikipedia.org/wiki/Secure_Shell\"\u003ehere\u003c/a\u003e.\u003c/p\u003e","title":"Bandit0"},{"content":"Level description The password for the next level is stored in a file called readme located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\nTips for beginners Learn about home directory in Linux. Learn to use cat and ls commands. Solution First step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\nls This shows in terminal the files at the current directory. There you will see the readme file.\nNow we can to check the contents, so let\u0026rsquo;s use cat:\ncat readme To read a file, we use cat \u0026lt;filename\u0026gt;.\nNB: Not every file is human readable in Linux. We deep more about this in later levels.\nThe content of the readme file reveals the password for bandit2 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit1/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u003cstrong\u003ereadme\u003c/strong\u003e located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn about home directory in Linux.\u003c/li\u003e\n\u003cli\u003eLearn to use \u003ccode\u003ecat\u003c/code\u003e and \u003ccode\u003els\u003c/code\u003e commands.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eFirst step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\u003c/p\u003e","title":"Bandit0 -\u003e Bandit 1"},{"content":"Level description The password for the next level is stored in a file called - located in the home directory\nTips for beginners Try to understand why previous solution is not working as you expect. Solution You may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our cat command: The terminal is waiting for something else. This happens due to character - is used to pass arguments to our commands, and the linux shell is interpreting that. To prevent that, we could use:\ncat ./- NB: Dot . is used to refer current directory. The slash / is used at the end of directory name.\nWe get the password for bandit3 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit2/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called - located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eTry to understand why previous solution is not working as you expect.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eYou may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our \u003ccode\u003ecat\u003c/code\u003e command:\n\u003cimg alt=\"bandit2\" loading=\"lazy\" src=\"/images/otw/bandit/bandit2/0.png\"\u003e\u003c/p\u003e\n\u003cp\u003eThe terminal is \u003cem\u003ewaiting\u003c/em\u003e for something else. This happens due to character \u003ccode\u003e-\u003c/code\u003e is used to pass arguments to our commands, and the linux shell is interpreting that.\nTo prevent that, we could use:\u003c/p\u003e","title":"Bandit1 -\u003e Bandit2"},{"content":"Level description The password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\nTips for beginners Think about how to escape the whitespaces. Solution After login in the machine as bandit3, we can see the filename \u0026ndash;spaces in this filename\u0026ndash;.\nNow we have 2 problems:\nSame as previous level, filename starts with --, so it will be interpreted as an argument. Address this problem using ./. Filename contains whitespaces. This is an issue, as bash interpretes whitespaces to separate commands. To solve the second problem, we must escape the whitespace character in some way. Here is the solution:\ncat ./--spaces\\ in\\ this\\ filename-- NB: Little trick, you can start writting filename and press Tab to autocomplete the name. The \\ is going to be inserted automatically.\nJust using the \\ we can escape the whitespace.\nNow we can continue with the bandit4 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit3/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eThink about how to \u003cem\u003eescape\u003c/em\u003e the whitespaces.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAfter login in the machine as bandit3, we can see the filename \u003cem\u003e\u0026ndash;spaces in this filename\u0026ndash;\u003c/em\u003e.\u003c/p\u003e\n\u003cp\u003eNow we have 2 problems:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eSame as previous level, filename starts with \u003ccode\u003e--\u003c/code\u003e, so it will be interpreted as an argument. Address this problem using \u003ccode\u003e./\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003eFilename contains \u003cstrong\u003ewhitespaces\u003c/strong\u003e. This is an issue, as bash interpretes whitespaces to separate commands.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eTo solve the second problem, we must escape the whitespace character in some way. Here is the solution:\u003c/p\u003e","title":"Bandit2 -\u003e Bandit3"},{"content":"Level description The password for the next level is stored in a hidden file in the inhere directory.\nTips for beginners Learn how to navigate directories in Linux. First understand what a hidden file is. Solution Listing directory files inside bandit4\u0026rsquo;s home directory, show directory inhere.\nNB: How to distinguish files and directories in Linux? Use ls -l and see the difference.\nWe have 2 options now:\nMove to inhere directory and check contens again. Check contents directly. Moving to another directory can be done using cd \u0026lt;dirName\u0026gt;. If you prefer to check directory contents directly, use ls \u0026lt;dirName\u0026gt;.\nAfter checking inhere contents via ls, we see nothing. The reason is the file is a hidden file. A hidden file in Linux is everyfile whose name starts with dot .. Hidden files are not shown by default with ls command, so we must add a special flag -a to list all files: NB: Both flags -l and -a cna be combined into a single flag -al, which is shorter to type.\nAs you can see, filename is \u0026hellip;Hidding-From-You starting with three dots. Reading file contents should be easy at this point!\nNext level is bandit5.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit4/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a hidden file in the inhere directory.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to navigate directories in Linux.\u003c/li\u003e\n\u003cli\u003eFirst understand what a hidden file is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eListing directory files inside bandit4\u0026rsquo;s home directory, show directory \u003cstrong\u003einhere\u003c/strong\u003e.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e How to distinguish files and directories in Linux? Use \u003ccode\u003els -l\u003c/code\u003e and see the difference.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eWe have 2 options now:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eMove to inhere directory and check contens again.\u003c/li\u003e\n\u003cli\u003eCheck contents directly.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eMoving to another directory can be done using \u003ccode\u003ecd \u0026lt;dirName\u0026gt;\u003c/code\u003e. If you prefer to check directory contents directly, use \u003ccode\u003els \u0026lt;dirName\u0026gt;\u003c/code\u003e.\u003c/p\u003e","title":"Bandit3 -\u003e Bandit4"},{"content":"Level description The password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\nTips for beginners What means human-readable file? Is there any way to check filetype at Linux?. Solution Checking inhere\u0026rsquo;s contents shows some files names \u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII here\nSo now, our goal is checking if file content of every file in the folder is ASCII or not. file \u0026lt;filename\u0026gt; does the job. Note the use of *. That called a wildcard regular expression, we\u0026rsquo;ll deep into it in later levels. An easy approach could be checking every file separately:\nfile ./--file00 file ./--file01 ... file ./--file09 But that\u0026rsquo;s not funny, imagine we have 100 files to check. All the files are in the same directory, so we can use cat ./* where ./* matches every filename in the directory, applying file to every file.\nNB: Another approach is to use find with certaing flags. Try to do in different ways, don\u0026rsquo;t stick to my solution.\nThe file \u0026ndash;file00 content is not readable, so get password from \u0026ndash;file07 and continue with bandit6.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit5/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eWhat means human-readable file?\u003c/li\u003e\n\u003cli\u003eIs there any way to check filetype at Linux?.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eChecking inhere\u0026rsquo;s contents shows some files names \u003cstrong\u003e\u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09\u003c/strong\u003e. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII \u003ca href=\"https://en.wikipedia.org/wiki/ASCII\"\u003ehere\u003c/a\u003e\u003c/p\u003e","title":"Bandit4 -\u003e Bandit5"},{"content":"Level description The password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\nhuman-readable 1033 bytes in size not executable Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution The purpose of the level is showing us how to find for files. Listing contents of inhere, we can see some folders, containing a lot of files inside: NB: Adding -R to ls shows recursively the content of every folder inside the directory listed.\nSo this time, checking every file is not an option. We need to find a file with some properties, specific size, not excutable and human-readable. Let\u0026rsquo;s explain the command we\u0026rsquo;re using:\nfind inhere/ -size 1033c ! -executable First, we specify the directory, in this case inhere. The option -size 1033c returns files of 1033 bytes. Then, with -executable we would get executable files, but we want not executable files, that\u0026rsquo;s why we are adding ! before.\nNB: By default, the -size option takes as argument the number of blocks. For example, -size 2 means 2 blocks of 512 bytes, so its 1024. The c is used to specify exact bytes. Don\u0026rsquo;t ask me why it\u0026rsquo;s c and not b 😅.\nThe property of human-readability is not implemented in find. This is not an issue, previous command returns a single file and it is human readable (we could confirm using file): Get your password and continue with bandit7.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit6/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ehuman-readable\u003c/li\u003e\n\u003cli\u003e1033 bytes in size\u003c/li\u003e\n\u003cli\u003enot executable\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThe purpose of the level is showing us how to find for files. Listing contents of \u003cstrong\u003einhere\u003c/strong\u003e, we can see some folders, containing a lot of files inside:\n\u003cimg alt=\"bandit6_0\" loading=\"lazy\" src=\"/images/otw/bandit/bandit6/0.png\"\u003e\u003c/p\u003e","title":"Bandit5 -\u003e Bandit6"},{"content":"Level description The password for the next level is stored somewhere on the server and has all of the following properties:\nowned by user bandit7 owned by group bandit6 33 bytes in size Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution This is very straightforward to do after completing previous level. Now we need to identify a file owned by user bandit7 and group bandi6. Furthermore, the file is somewhere on the server, which means we have to find in the root directory /.\nfind / -user bandit7 -group bandit6 -size 33c 2\u0026gt;/dev/null NB: I added that strange 2\u0026gt;/dev/null to filter error output. The reason why it works like that is more technical, for now just save this a fast way to filter errors in terminal. We get some errors because looking for files in the whole server may return some unaccesible files, as we don\u0026rsquo;t have root user permissions. We will study Linux permissions in later levels.\nWe should get a single file, containing password for bandit8.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit7/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored somewhere on the server and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eowned by user bandit7\u003c/li\u003e\n\u003cli\u003eowned by group bandit6\u003c/li\u003e\n\u003cli\u003e33 bytes in size\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is very straightforward to do after completing previous level. Now we need to identify a file owned by user bandit7 and group bandi6. Furthermore, the file is \u003cstrong\u003esomewhere on the server\u003c/strong\u003e, which means we have to find in the root directory \u003ccode\u003e/\u003c/code\u003e.\u003c/p\u003e","title":"Bandit6 -\u003e Bandit7"},{"content":"Level description The password for the next level is stored in the file data.txt next to the word millionth.\nTips for beginners Learn how to filter file contents. Solution At previous levels, we discovered how to find for files. Now it\u0026rsquo;s time to find for content inside a file. grep command is going to help with that task.\nNB: Of course I don\u0026rsquo;t want to spoil you the password!\nNotice how this can achieved in different ways.\nUsing grep \u0026lt;keyword\u0026gt; \u0026lt;filename\u0026gt;. Using the pipe | to execute grep over the result of cat command. Take you favorite path to solve the level, and continue with bandit9.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit8/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the file \u003cstrong\u003edata.txt\u003c/strong\u003e next to the word \u003cstrong\u003emillionth\u003c/strong\u003e.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to filter file contents.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAt previous levels, we discovered how to find for files. Now it\u0026rsquo;s time to find for content inside a file. \u003ccode\u003egrep\u003c/code\u003e command is going to help with that task.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"bandit8\" loading=\"lazy\" src=\"/images/otw/bandit/bandit8/0.png\"\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e Of course I don\u0026rsquo;t want to spoil you the password!\u003c/p\u003e","title":"Bandit7 -\u003e Bandit8"},{"content":"Level description The password for the next level is stored in the file data.txt and is the only line of text that occurs only once.\nTips for beginners First, apply sort to file content. Solution This level is a bit tricky. First, examine the file contents. Using head shows the 10 first lines of a file:\nNB: If you want to show more lines: head -20 or the number of your choice.\nThere are tons of different passwords. The correct one is the only line of text that occurs only once. Try to research how to do on your own. You maybe find uniq. This command has a very interesting flag, -u, used to show only the uniq lines. Let\u0026rsquo;s try with that:\nFor some reason, is not working. The trick here is to sort the file contents before applying uniq. This can be achieved using sort, so the final command looks like this:\ncat data.txt | sort | uniq -u NB: You need to sort lines first because uniq only detects consecutive repetitions. First time I solved this it took a while 😅.\nAfter getting the password, we can continue with bandit10.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit9/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the file \u003cstrong\u003edata.txt\u003c/strong\u003e and is the only line of text that occurs only once.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst, apply \u003ccode\u003esort\u003c/code\u003e to file content.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis level is a bit tricky. First, examine the file contents. Using \u003ccode\u003ehead\u003c/code\u003e shows the 10 first lines of a file:\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"bandit9_0\" loading=\"lazy\" src=\"/images/otw/bandit/bandit9/0.png\"\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e If you want to show more lines: \u003ccode\u003ehead -20\u003c/code\u003e or the number of your choice.\u003c/p\u003e","title":"Bandit8 -\u003e Bandit9"},{"content":"Level description The password for the next level is stored in the file data.txt in one of the few human-readable strings, preceded by several \u0026lsquo;=\u0026rsquo; characters.\nTips for beginners strings can be used to retrieve human readable-content from a file. You can apply things from previous levels. Solution The file data.txt has mixed content, binary and ASCII. If the password is preceded by several \u0026lsquo;=\u0026rsquo; characters, we can simply filter by some of them. But there is a little problem, content is not fully ASCII, so grep won\u0026rsquo;t work. First you need to get content with strings to get only the human readable content.\nNB: Try to run both cat and strings separately. Observe the differences.\nNext level is bandit11 (in progress).\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit10/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the file \u003cstrong\u003edata.txt\u003c/strong\u003e in one of the few human-readable strings, preceded by several \u0026lsquo;=\u0026rsquo; characters.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003estrings\u003c/code\u003e can be used to retrieve human readable-content from a file.\u003c/li\u003e\n\u003cli\u003eYou can apply things from previous levels.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThe file \u003cstrong\u003edata.txt\u003c/strong\u003e has mixed content, binary and ASCII. If the password is preceded by several \u0026lsquo;=\u0026rsquo; characters, we can simply filter by some of them. But there is a little problem, content is not fully ASCII, so \u003ccode\u003egrep\u003c/code\u003e won\u0026rsquo;t work. First you need to get content with \u003ccode\u003estrings\u003c/code\u003e to get only the human readable content.\u003c/p\u003e","title":"Bandit9 -\u003e Bandit10"},{"content":"👨‍💻 whoami Hey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\nWhat is this❓​ This blog is basically my thoughts on several hacking topics. Here you’ll see:\nWriteups from CTF challenges, from platforms like HackTheBox or OverTheWire.\nWalkthroughs and notes on pentesting techniques I’m learning or testing.\nSome posts on cryptography — because math can be fun (sometimes).\nRandom topics that freaks like me may (just may) find interesting.\nThe idea is simple: share what I learn, document my journey, and maybe help others who are also diving into the exciting world of ethical hacking.\n📫 Contact Want to say hi, share ideas, or just geek out about hacking? Reach me here:\n📧 Email: mrb0b1073@proton.me 💻​ GitHub: mrb0b173 🟩​ HackTheBox: mrb0b1073 ","permalink":"http://localhost:1313/about/","summary":"\u003ch2 id=\"-whoami\"\u003e👨‍💻 whoami\u003c/h2\u003e\n\u003cp\u003eHey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\u003c/p\u003e\n\u003chr\u003e\n\u003ch2 id=\"what-is-this\"\u003eWhat is this❓​\u003c/h2\u003e\n\u003cp\u003eThis blog is basically my thoughts on several hacking topics. Here you’ll see:\u003c/p\u003e","title":"About"},{"content":"Hey! 👋 I\u0026rsquo;m mrb0b1073 and this is my first post.\nWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\nExcited to start this adventure!\n","permalink":"http://localhost:1313/posts/hello-world/","summary":"\u003cp\u003eHey! 👋 I\u0026rsquo;m \u003cstrong\u003emrb0b1073\u003c/strong\u003e and this is my first post.\u003c/p\u003e\n\u003cp\u003eWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\u003cbr\u003e\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\u003c/p\u003e\n\u003cp\u003eExcited to start this adventure!\u003c/p\u003e","title":"Hello World"},{"content":"Introduction If you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\nIn cybersecurity there are broadly two complementary roles: Blue Team and Red Team. Blue Teams focus on defense, monitoring, incident response, hardening systems and keeping services secure, while Red Teams simulate attackers to find weaknesses and prove what an adversary could do. Ethical hacking aligns closely with Red Team operations, but cybersecurity is highly transversal across IT. There are many specialities or areas, such as cloud security, appsec, pentesting, forensics, governance, risk management, malware analysis, etc. Every topic could deserve its own post, so let\u0026rsquo;s keep it simple and focus on ethical hacking.\nHacker philosophy Let\u0026rsquo;s start with the idea of what is exactly a hacker. A hacker is someone who explores systems to understand how they work, finds creative ways to make or fix things, and solves technical problems. Historically the word describes curiosity, craft, and a drive to improve systems — not criminality. It is important to make the distinction between hacker and cracker, also called cybercriminal. A hacker explores, builds, discloses responsibly and works to improve security. They work in authorized environments or labs. On the other hand, a cracker breaks into systems for theft, vandalism or other illicit gain.\nHere you can find the most popularized ideas often summarized as the hacker ethic:\nCuriosity first: Learn by exploring and tinkering. Freedom of information: All knowledge should be shared to help progress. This fits properly with the idea of open source. Mistrust of needless authority: Centralized control sometimes blocks innovation. It is always good to question anything, specially common assumptions. Meritocracy: Skills, craft and results matter more than titles. Craftsmanship \u0026amp; elegance: Technical beauty matters. Build clean, clever and efficient solutions. Responsability \u0026amp; ethics: Use your skills to build, fix, educate and defend, not to harm. Core fundamentals Assuming you want to init yourself in hacking, you should first build competence across three basic pillars.\nOperating Systems You should learn as much as possible about Linux and Windows. Specially Linux, all the tools you will be using are meant to be used in a Linux environment. Skill with shell is required, learn basic commands and how to interact with the OS using the terminal. Research about processes, file permissions, package management and logs. A large proportion of web servers around the world run on Linux, although Windows is also widely used. Windows knowledge is really valuable too, considering active directory is strongly used in corporate environments.\nNetworking You have to understand how computers communicate each other. Understand basic networking concepts, IP adresses, subnetting, proxies, find out how internet works. Study some protocols such as TCP/IP, HTTP, DNS or SSH. This could sound confusing for beginners, but this step is not optional! Study different client/server models and how services expose attack surfaces.\nProgramming \u0026amp; scripting Is this completely required? Maybe not for complete beginners. Does it help? Absolutely yes. Understanding how web apps or any type of application works makes things much easier. You can imagine different entry points to exploit if you understand how systems are designed. Also writing scripts in bash or python makes you more productive through automation.\nEthical Hacking foundations Once you feel confident with these 3 pillars, you can go to the next step. You can study about different topics and areas. For example, binary exploiting, web pentesting, mobile pentesting, wireless hacking, etc. You should start picking a focus, in this post we focus on web pentesting, as it is beginner friendly. Also web applications are the bread and butter in companies nowadays.\nKey concepts to study:\nCIA Triad: CIA refers to Confidentiality, Integrity and Availability. These three concepts are key in information security, and describe properties we want to ensure in our systems and information. Web Security basics, OWASP: Study the OWASP Top 10, which summarizes most frequent web security risks. Authentication and session control: Understand the concepts of Authentication and Authorization, research about how session is handled in web apps, cookies, JWT tokens, etc. Input validation \u0026amp; injection attacks: Learn about SQL Injection, Cross-Site Scripting (XSS), Code Injection, SSTI, and every injection type. Secure development lifecycle: Find out how to implement security controls in code. This can be more related to Blue Team, but as Red Teamer it is important to understand. Firewall evasion: What a firewall is and some techniques/methods to bypass. Some cryptography: Understand what a chiper and a hash are, how information is encrypted to prevent access from 3rd parties. Focusing on web, read about TLS protocol. There are many more topics you can research and learn, but this could be a nice starting point.\nTools and platforms to learn Now you have an idea of what to study, let\u0026rsquo;s see how to start in practical terms.\nSome platforms I personally recommend:\nOverTheWire: Here you can find some CTFs (Capture The Flag) which are fun to play and also really instructive. Bandit games are a must for complete beginners, as you will explore some linux and bash concepts which are basic to continue. The games are leveled by difficulty, in their web you can get all the information about how to play, only a terminal and SSH is required. This helps building your foundation in Linux OS. HackTheBox: Nº 1 platform in cybersecurity. Has a lot of resources to learn all this core fundamentals, and also red team / blue team security topics. It is focused on labs where you can test your skills hacking different boxes but if you really want to learn it is worth to invest time and money in the academy. I have to say the level here is high, specially if you try to hack machines on your own without using some guide or writeup. TryHackMe: More beginner friendly than hackthebox, it provides a lot of guided learning resources. PortSwigger Labs: Practical labs about specific topics, focused on web hacking. They are great to learn and understand different types of attacks, injections, and security misconfigurations. I would recommend digging into this once you have the theoretical basis about these concepts. I have to mention a few tools I am sure you\u0026rsquo;d end up using:\nNmap: This is probably the most famous tool in hacking, allowing you to gather information about ports and services running in a machine. Burpsuite: A proxy tool widely used in web application security testing. It basically allows you to intercept and modify web requests, which can be used to perform several types of attacks. Metasploit: The most used pentesting framework. Contains a large amount of scripts and exploits ready to run. Another crucial step here is to set up your virtual lab environment to test vulnerable applications. To achieve this goal, there are some Linux distributions like Kali, Parrot or BlackArch, but that\u0026rsquo;s a topic for another post.\nFinal thoughs To sum up, this would be my personal roadmap:\nLearn the fundamentals, specially Linux and networking. Install some Linux in a virtual machine, play with it, get comfortable with the terminal. You can start with bandit wargames in OverTheWire. Complete every level and make sure to understand everything as clear as possible. Move to guided boxes on HackTheBox. I recommend you joining their Discord, ask questions, community is great there! Take notes, repeat, learn, improve your skills. Maybe use your own lab environment, create your own vulnerable apps. Hacking is a mixing of curiosity, study and practice. Being passionate and motivated about it is really helpful and will definitely speed up the process. The path is long and really challenging, so keep it going!\n\u0026ldquo;Yes, I am a criminal. My crime is that of curiosity.\u0026rdquo; — The Mentor (Loyd Blankenship) at The Hacker Manifesto\n","permalink":"http://localhost:1313/posts/starting-point/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIf you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\u003c/p\u003e","title":"Starting Point"},{"content":"Introduction In this post series we are going to solve every level from bandit in OverTheWire This guide pretends to be a writeup containing the solutions of the level, designed for beginners.\nTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing WSL, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\nEvery section will contain the solution as well as some tips for people who is absolutely beginner.\nTips First of all, some tips:\nDo not use this as first resource to solve the levels. Try on your own, make mistakes and learn from them. Only check the solution as last resource or if you are completely new and you have absolutely no idea about what to do next. Take notes from your learning. Write up commands, tips and everything which can be useful in the future. Make sure to understand everything. Is a good idea to note the passwords for every level. If you want to continue letter, you can simply log in in the desired level. It is annoying to repeat everything! Follow the tips and information provided at OverTheWire website. Levels Here is my solution for every level:\nBandit0 Bandit1 Bandit2 Bandit3 Bandit4 Bandit5 Bandit6 Bandit7 ","permalink":"http://localhost:1313/posts/otw/bandit/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIn this post series we are going to solve every level from bandit in \u003ca href=\"https://overthewire.org/wargames/bandit/\"\u003e\u003cem\u003eOverTheWire\u003c/em\u003e\u003c/a\u003e\nThis guide pretends to be a writeup containing the solutions of the level, designed for beginners.\u003c/p\u003e\n\u003cp\u003eTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing \u003ca href=\"https://learn.microsoft.com/en-us/windows/wsl/install\"\u003eWSL\u003c/a\u003e, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\u003c/p\u003e","title":"Bandit"},{"content":"Level description The goal of this level is for you to log into the game using SSH. The host to which you need to connect is bandit.labs.overthewire.org, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\nTips for beginners Read a bit about what SSH is. Research about what a port is. Solution This is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go here.\nAt Linux, we can use ssh client to connect to the server. It should be installed by default on your system. If not, please first research about how to install. Once you have the SSH client installed, you can log in into the first level as follows:\nssh bandit0@bandit.labs.overthewire.org -p 2220 Syntax is simple: ssh \u0026lt;username\u0026gt;@\u0026lt;hostname\u0026gt; -p \u0026lt;port\u0026gt;. Usually SSH runs on port 22 by default, but they changed to port 2220 so we must specify it in the command.\nOnce you try to log in, you will see something like this: NB: If it\u0026rsquo;s the first time you try to log in, you will be asked about the authenticity of the host. Just type yes.\nType the password bandit0 and press enter. Now you are inside bandit server, ready to begin with bandit1!\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit0/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe goal of this level is for you to log into the game using SSH. The host to which you need to connect is \u003cstrong\u003ebandit.labs.overthewire.org\u003c/strong\u003e, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eRead a bit about what SSH is.\u003c/li\u003e\n\u003cli\u003eResearch about what a port is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go \u003ca href=\"https://en.wikipedia.org/wiki/Secure_Shell\"\u003ehere\u003c/a\u003e.\u003c/p\u003e","title":"Bandit0"},{"content":"Level description The password for the next level is stored in a file called readme located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\nTips for beginners Learn about home directory in Linux. Learn to use cat and ls commands. Solution First step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\nls This shows in terminal the files at the current directory. There you will see the readme file.\nNow we can to check the contents, so let\u0026rsquo;s use cat:\ncat readme To read a file, we use cat \u0026lt;filename\u0026gt;.\nNB: Not every file is human readable in Linux. We deep more about this in later levels.\nThe content of the readme file reveals the password for bandit2 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit1/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u003cstrong\u003ereadme\u003c/strong\u003e located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn about home directory in Linux.\u003c/li\u003e\n\u003cli\u003eLearn to use \u003ccode\u003ecat\u003c/code\u003e and \u003ccode\u003els\u003c/code\u003e commands.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eFirst step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\u003c/p\u003e","title":"Bandit0 -\u003e Bandit 1"},{"content":"Level description The password for the next level is stored in a file called - located in the home directory\nTips for beginners Try to understand why previous solution is not working as you expect. Solution You may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our cat command: The terminal is waiting for something else. This happens due to character - is used to pass arguments to our commands, and the linux shell is interpreting that. To prevent that, we could use:\ncat ./- NB: Dot . is used to refer current directory. The slash / is used at the end of directory name.\nWe get the password for bandit3 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit2/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called - located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eTry to understand why previous solution is not working as you expect.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eYou may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our \u003ccode\u003ecat\u003c/code\u003e command:\n\u003cimg alt=\"bandit2\" loading=\"lazy\" src=\"/images/otw/bandit/bandit2/0.png\"\u003e\u003c/p\u003e\n\u003cp\u003eThe terminal is \u003cem\u003ewaiting\u003c/em\u003e for something else. This happens due to character \u003ccode\u003e-\u003c/code\u003e is used to pass arguments to our commands, and the linux shell is interpreting that.\nTo prevent that, we could use:\u003c/p\u003e","title":"Bandit1 -\u003e Bandit2"},{"content":"Level description The password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\nTips for beginners Think about how to escape the whitespaces. Solution After login in the machine as bandit3, we can see the filename \u0026ndash;spaces in this filename\u0026ndash;.\nNow we have 2 problems:\nSame as previous level, filename starts with --, so it will be interpreted as an argument. Address this problem using ./. Filename contains whitespaces. This is an issue, as bash interpretes whitespaces to separate commands. To solve the second problem, we must escape the whitespace character in some way. Here is the solution:\ncat ./--spaces\\ in\\ this\\ filename-- NB: Little trick, you can start writting filename and press Tab to autocomplete the name. The \\ is going to be inserted automatically.\nJust using the \\ we can escape the whitespace.\nNow we can continue with the bandit4 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit3/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eThink about how to \u003cem\u003eescape\u003c/em\u003e the whitespaces.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAfter login in the machine as bandit3, we can see the filename \u003cem\u003e\u0026ndash;spaces in this filename\u0026ndash;\u003c/em\u003e.\u003c/p\u003e\n\u003cp\u003eNow we have 2 problems:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eSame as previous level, filename starts with \u003ccode\u003e--\u003c/code\u003e, so it will be interpreted as an argument. Address this problem using \u003ccode\u003e./\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003eFilename contains \u003cstrong\u003ewhitespaces\u003c/strong\u003e. This is an issue, as bash interpretes whitespaces to separate commands.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eTo solve the second problem, we must escape the whitespace character in some way. Here is the solution:\u003c/p\u003e","title":"Bandit2 -\u003e Bandit3"},{"content":"Level description The password for the next level is stored in a hidden file in the inhere directory.\nTips for beginners Learn how to navigate directories in Linux. First understand what a hidden file is. Solution Listing directory files inside bandit4\u0026rsquo;s home directory, show directory inhere.\nNB: How to distinguish files and directories in Linux? Use ls -l and see the difference.\nWe have 2 options now:\nMove to inhere directory and check contens again. Check contents directly. Moving to another directory can be done using cd \u0026lt;dirName\u0026gt;. If you prefer to check directory contents directly, use ls \u0026lt;dirName\u0026gt;.\nAfter checking inhere contents via ls, we see nothing. The reason is the file is a hidden file. A hidden file in Linux is everyfile whose name starts with dot .. Hidden files are not shown by default with ls command, so we must add a special flag -a to list all files: NB: Both flags -l and -a cna be combined into a single flag -al, which is shorter to type.\nAs you can see, filename is \u0026hellip;Hidding-From-You starting with three dots. Reading file contents should be easy at this point!\nNext level is bandit5.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit4/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a hidden file in the inhere directory.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to navigate directories in Linux.\u003c/li\u003e\n\u003cli\u003eFirst understand what a hidden file is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eListing directory files inside bandit4\u0026rsquo;s home directory, show directory \u003cstrong\u003einhere\u003c/strong\u003e.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e How to distinguish files and directories in Linux? Use \u003ccode\u003els -l\u003c/code\u003e and see the difference.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eWe have 2 options now:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eMove to inhere directory and check contens again.\u003c/li\u003e\n\u003cli\u003eCheck contents directly.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eMoving to another directory can be done using \u003ccode\u003ecd \u0026lt;dirName\u0026gt;\u003c/code\u003e. If you prefer to check directory contents directly, use \u003ccode\u003els \u0026lt;dirName\u0026gt;\u003c/code\u003e.\u003c/p\u003e","title":"Bandit3 -\u003e Bandit4"},{"content":"Level description The password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\nTips for beginners What means human-readable file? Is there any way to check filetype at Linux?. Solution Checking inhere\u0026rsquo;s contents shows some files names \u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII here\nSo now, our goal is checking if file content of every file in the folder is ASCII or not. file \u0026lt;filename\u0026gt; does the job. Note the use of *. That called a wildcard regular expression, we\u0026rsquo;ll deep into it in later levels. An easy approach could be checking every file separately:\nfile ./--file00 file ./--file01 ... file ./--file09 But that\u0026rsquo;s not funny, imagine we have 100 files to check. All the files are in the same directory, so we can use cat ./* where ./* matches every filename in the directory, applying file to every file.\nNB: Another approach is to use find with certaing flags. Try to do in different ways, don\u0026rsquo;t stick to my solution.\nThe file \u0026ndash;file00 content is not readable, so get password from \u0026ndash;file07 and continue with bandit6.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit5/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eWhat means human-readable file?\u003c/li\u003e\n\u003cli\u003eIs there any way to check filetype at Linux?.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eChecking inhere\u0026rsquo;s contents shows some files names \u003cstrong\u003e\u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09\u003c/strong\u003e. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII \u003ca href=\"https://en.wikipedia.org/wiki/ASCII\"\u003ehere\u003c/a\u003e\u003c/p\u003e","title":"Bandit4 -\u003e Bandit5"},{"content":"Level description The password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\nhuman-readable 1033 bytes in size not executable Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution The purpose of the level is showing us how to find for files. Listing contents of inhere, we can see some folders, containing a lot of files inside: NB: Adding -R to ls shows recursively the content of every folder inside the directory listed.\nSo this time, checking every file is not an option. We need to find a file with some properties, specific size, not excutable and human-readable. Let\u0026rsquo;s explain the command we\u0026rsquo;re using:\nfind inhere/ -size 1033c ! -executable First, we specify the directory, in this case inhere. The option -size 1033c returns files of 1033 bytes. Then, with -executable we would get executable files, but we want not executable files, that\u0026rsquo;s why we are adding ! before.\nNB: By default, the -size option takes as argument the number of blocks. For example, -size 2 means 2 blocks of 512 bytes, so its 1024. The c is used to specify exact bytes. Don\u0026rsquo;t ask me why it\u0026rsquo;s c and not b 😅.\nThe property of human-readability is not implemented in find. This is not an issue, previous command returns a single file and it is human readable (we could confirm using file): Get your password and continue with bandit7.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit6/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ehuman-readable\u003c/li\u003e\n\u003cli\u003e1033 bytes in size\u003c/li\u003e\n\u003cli\u003enot executable\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThe purpose of the level is showing us how to find for files. Listing contents of \u003cstrong\u003einhere\u003c/strong\u003e, we can see some folders, containing a lot of files inside:\n\u003cimg alt=\"bandit6_0\" loading=\"lazy\" src=\"/images/otw/bandit/bandit6/0.png\"\u003e\u003c/p\u003e","title":"Bandit5 -\u003e Bandit6"},{"content":"Level description The password for the next level is stored somewhere on the server and has all of the following properties:\nowned by user bandit7 owned by group bandit6 33 bytes in size Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution This is very straightforward to do after completing previous level. Now we need to identify a file owned by user bandit7 and group bandi6. Furthermore, the file is somewhere on the server, which means we have to find in the root directory /.\nfind / -user bandit7 -group bandit6 -size 33c 2\u0026gt;/dev/null NB: I added that strange 2\u0026gt;/dev/null to filter error output. The reason why it works like that is more technical, for now just save this a fast way to filter errors in terminal. We get some errors because looking for files in the whole server may return some unaccesible files, as we don\u0026rsquo;t have root user permissions. We will study Linux permissions in later levels.\nWe should get a single file, containing password for bandit8.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit7/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored somewhere on the server and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eowned by user bandit7\u003c/li\u003e\n\u003cli\u003eowned by group bandit6\u003c/li\u003e\n\u003cli\u003e33 bytes in size\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is very straightforward to do after completing previous level. Now we need to identify a file owned by user bandit7 and group bandi6. Furthermore, the file is \u003cstrong\u003esomewhere on the server\u003c/strong\u003e, which means we have to find in the root directory \u003ccode\u003e/\u003c/code\u003e.\u003c/p\u003e","title":"Bandit6 -\u003e Bandit7"},{"content":"Level description The password for the next level is stored in the file data.txt next to the word millionth.\nTips for beginners Learn how to filter file contents. Solution At previous levels, we discovered how to find for files. Now it\u0026rsquo;s time to find for content inside a file. grep command is going to help with that task.\nNB: Of course I don\u0026rsquo;t want to spoil you the password!\nNotice how this can achieved in different ways.\nUsing grep \u0026lt;keyword\u0026gt; \u0026lt;filename\u0026gt;. Using the pipe | to execute grep over the result of cat command. Take you favorite path to solve the level, and continue with bandit9.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit8/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the file \u003cstrong\u003edata.txt\u003c/strong\u003e next to the word \u003cstrong\u003emillionth\u003c/strong\u003e.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to filter file contents.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAt previous levels, we discovered how to find for files. Now it\u0026rsquo;s time to find for content inside a file. \u003ccode\u003egrep\u003c/code\u003e command is going to help with that task.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"bandit8\" loading=\"lazy\" src=\"/images/otw/bandit/bandit8/0.png\"\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e Of course I don\u0026rsquo;t want to spoil you the password!\u003c/p\u003e","title":"Bandit7 -\u003e Bandit8"},{"content":"Level description The password for the next level is stored in the file data.txt and is the only line of text that occurs only once.\nTips for beginners First, apply sort to file content. Solution This level is a bit tricky. First, examine the file contents. Using head shows the 10 first lines of a file:\nNB: If you want to show more lines: head -20 or the number of your choice.\nThere are tons of different passwords. The correct one is the only line of text that occurs only once. Try to research how to do on your own. You maybe find uniq. This command has a very interesting flag, -u, used to show only the uniq lines. Let\u0026rsquo;s try with that:\nFor some reason, is not working. The trick here is to sort the file contents before applying uniq. This can be achieved using sort, so the final command looks like this:\ncat data.txt | sort | uniq -u NB: You need to sort lines first because uniq only detects consecutive repetitions. First time I solved this it took a while 😅.\nAfter getting the password, we can continue with bandit10.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit9/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the file \u003cstrong\u003edata.txt\u003c/strong\u003e and is the only line of text that occurs only once.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst, apply \u003ccode\u003esort\u003c/code\u003e to file content.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis level is a bit tricky. First, examine the file contents. Using \u003ccode\u003ehead\u003c/code\u003e shows the 10 first lines of a file:\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"bandit9_0\" loading=\"lazy\" src=\"/images/otw/bandit/bandit9/0.png\"\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e If you want to show more lines: \u003ccode\u003ehead -20\u003c/code\u003e or the number of your choice.\u003c/p\u003e","title":"Bandit8 -\u003e Bandit9"},{"content":"Level description The password for the next level is stored in the file data.txt in one of the few human-readable strings, preceded by several \u0026lsquo;=\u0026rsquo; characters.\nTips for beginners strings can be used to retrieve human readable-content from a file. You can apply things from previous levels. Solution The file data.txt has mixed content, binary and ASCII. If the password is preceded by several \u0026lsquo;=\u0026rsquo; characters, we can simply filter by some of them. But there is a little problem, content is not fully ASCII, so grep won\u0026rsquo;t work. First you need to get content with strings to get only the human readable content.\nNB: Try to run both cat and strings separately. Observe the differences.\nNext level is bandit11 (in progress).\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit10/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the file \u003cstrong\u003edata.txt\u003c/strong\u003e in one of the few human-readable strings, preceded by several \u0026lsquo;=\u0026rsquo; characters.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003estrings\u003c/code\u003e can be used to retrieve human readable-content from a file.\u003c/li\u003e\n\u003cli\u003eYou can apply things from previous levels.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThe file \u003cstrong\u003edata.txt\u003c/strong\u003e has mixed content, binary and ASCII. If the password is preceded by several \u0026lsquo;=\u0026rsquo; characters, we can simply filter by some of them. But there is a little problem, content is not fully ASCII, so \u003ccode\u003egrep\u003c/code\u003e won\u0026rsquo;t work. First you need to get content with \u003ccode\u003estrings\u003c/code\u003e to get only the human readable content.\u003c/p\u003e","title":"Bandit9 -\u003e Bandit10"},{"content":"👨‍💻 whoami Hey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\nWhat is this❓​ This blog is basically my thoughts on several hacking topics. Here you’ll see:\nWriteups from CTF challenges, from platforms like HackTheBox or OverTheWire.\nWalkthroughs and notes on pentesting techniques I’m learning or testing.\nSome posts on cryptography — because math can be fun (sometimes).\nRandom topics that freaks like me may (just may) find interesting.\nThe idea is simple: share what I learn, document my journey, and maybe help others who are also diving into the exciting world of ethical hacking.\n📫 Contact Want to say hi, share ideas, or just geek out about hacking? Reach me here:\n📧 Email: mrb0b1073@proton.me 💻​ GitHub: mrb0b173 🟩​ HackTheBox: mrb0b1073 ","permalink":"http://localhost:1313/about/","summary":"\u003ch2 id=\"-whoami\"\u003e👨‍💻 whoami\u003c/h2\u003e\n\u003cp\u003eHey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\u003c/p\u003e\n\u003chr\u003e\n\u003ch2 id=\"what-is-this\"\u003eWhat is this❓​\u003c/h2\u003e\n\u003cp\u003eThis blog is basically my thoughts on several hacking topics. Here you’ll see:\u003c/p\u003e","title":"About"},{"content":"Hey! 👋 I\u0026rsquo;m mrb0b1073 and this is my first post.\nWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\nExcited to start this adventure!\n","permalink":"http://localhost:1313/posts/hello-world/","summary":"\u003cp\u003eHey! 👋 I\u0026rsquo;m \u003cstrong\u003emrb0b1073\u003c/strong\u003e and this is my first post.\u003c/p\u003e\n\u003cp\u003eWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\u003cbr\u003e\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\u003c/p\u003e\n\u003cp\u003eExcited to start this adventure!\u003c/p\u003e","title":"Hello World"},{"content":"Introduction If you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\nIn cybersecurity there are broadly two complementary roles: Blue Team and Red Team. Blue Teams focus on defense, monitoring, incident response, hardening systems and keeping services secure, while Red Teams simulate attackers to find weaknesses and prove what an adversary could do. Ethical hacking aligns closely with Red Team operations, but cybersecurity is highly transversal across IT. There are many specialities or areas, such as cloud security, appsec, pentesting, forensics, governance, risk management, malware analysis, etc. Every topic could deserve its own post, so let\u0026rsquo;s keep it simple and focus on ethical hacking.\nHacker philosophy Let\u0026rsquo;s start with the idea of what is exactly a hacker. A hacker is someone who explores systems to understand how they work, finds creative ways to make or fix things, and solves technical problems. Historically the word describes curiosity, craft, and a drive to improve systems — not criminality. It is important to make the distinction between hacker and cracker, also called cybercriminal. A hacker explores, builds, discloses responsibly and works to improve security. They work in authorized environments or labs. On the other hand, a cracker breaks into systems for theft, vandalism or other illicit gain.\nHere you can find the most popularized ideas often summarized as the hacker ethic:\nCuriosity first: Learn by exploring and tinkering. Freedom of information: All knowledge should be shared to help progress. This fits properly with the idea of open source. Mistrust of needless authority: Centralized control sometimes blocks innovation. It is always good to question anything, specially common assumptions. Meritocracy: Skills, craft and results matter more than titles. Craftsmanship \u0026amp; elegance: Technical beauty matters. Build clean, clever and efficient solutions. Responsability \u0026amp; ethics: Use your skills to build, fix, educate and defend, not to harm. Core fundamentals Assuming you want to init yourself in hacking, you should first build competence across three basic pillars.\nOperating Systems You should learn as much as possible about Linux and Windows. Specially Linux, all the tools you will be using are meant to be used in a Linux environment. Skill with shell is required, learn basic commands and how to interact with the OS using the terminal. Research about processes, file permissions, package management and logs. A large proportion of web servers around the world run on Linux, although Windows is also widely used. Windows knowledge is really valuable too, considering active directory is strongly used in corporate environments.\nNetworking You have to understand how computers communicate each other. Understand basic networking concepts, IP adresses, subnetting, proxies, find out how internet works. Study some protocols such as TCP/IP, HTTP, DNS or SSH. This could sound confusing for beginners, but this step is not optional! Study different client/server models and how services expose attack surfaces.\nProgramming \u0026amp; scripting Is this completely required? Maybe not for complete beginners. Does it help? Absolutely yes. Understanding how web apps or any type of application works makes things much easier. You can imagine different entry points to exploit if you understand how systems are designed. Also writing scripts in bash or python makes you more productive through automation.\nEthical Hacking foundations Once you feel confident with these 3 pillars, you can go to the next step. You can study about different topics and areas. For example, binary exploiting, web pentesting, mobile pentesting, wireless hacking, etc. You should start picking a focus, in this post we focus on web pentesting, as it is beginner friendly. Also web applications are the bread and butter in companies nowadays.\nKey concepts to study:\nCIA Triad: CIA refers to Confidentiality, Integrity and Availability. These three concepts are key in information security, and describe properties we want to ensure in our systems and information. Web Security basics, OWASP: Study the OWASP Top 10, which summarizes most frequent web security risks. Authentication and session control: Understand the concepts of Authentication and Authorization, research about how session is handled in web apps, cookies, JWT tokens, etc. Input validation \u0026amp; injection attacks: Learn about SQL Injection, Cross-Site Scripting (XSS), Code Injection, SSTI, and every injection type. Secure development lifecycle: Find out how to implement security controls in code. This can be more related to Blue Team, but as Red Teamer it is important to understand. Firewall evasion: What a firewall is and some techniques/methods to bypass. Some cryptography: Understand what a chiper and a hash are, how information is encrypted to prevent access from 3rd parties. Focusing on web, read about TLS protocol. There are many more topics you can research and learn, but this could be a nice starting point.\nTools and platforms to learn Now you have an idea of what to study, let\u0026rsquo;s see how to start in practical terms.\nSome platforms I personally recommend:\nOverTheWire: Here you can find some CTFs (Capture The Flag) which are fun to play and also really instructive. Bandit games are a must for complete beginners, as you will explore some linux and bash concepts which are basic to continue. The games are leveled by difficulty, in their web you can get all the information about how to play, only a terminal and SSH is required. This helps building your foundation in Linux OS. HackTheBox: Nº 1 platform in cybersecurity. Has a lot of resources to learn all this core fundamentals, and also red team / blue team security topics. It is focused on labs where you can test your skills hacking different boxes but if you really want to learn it is worth to invest time and money in the academy. I have to say the level here is high, specially if you try to hack machines on your own without using some guide or writeup. TryHackMe: More beginner friendly than hackthebox, it provides a lot of guided learning resources. PortSwigger Labs: Practical labs about specific topics, focused on web hacking. They are great to learn and understand different types of attacks, injections, and security misconfigurations. I would recommend digging into this once you have the theoretical basis about these concepts. I have to mention a few tools I am sure you\u0026rsquo;d end up using:\nNmap: This is probably the most famous tool in hacking, allowing you to gather information about ports and services running in a machine. Burpsuite: A proxy tool widely used in web application security testing. It basically allows you to intercept and modify web requests, which can be used to perform several types of attacks. Metasploit: The most used pentesting framework. Contains a large amount of scripts and exploits ready to run. Another crucial step here is to set up your virtual lab environment to test vulnerable applications. To achieve this goal, there are some Linux distributions like Kali, Parrot or BlackArch, but that\u0026rsquo;s a topic for another post.\nFinal thoughs To sum up, this would be my personal roadmap:\nLearn the fundamentals, specially Linux and networking. Install some Linux in a virtual machine, play with it, get comfortable with the terminal. You can start with bandit wargames in OverTheWire. Complete every level and make sure to understand everything as clear as possible. Move to guided boxes on HackTheBox. I recommend you joining their Discord, ask questions, community is great there! Take notes, repeat, learn, improve your skills. Maybe use your own lab environment, create your own vulnerable apps. Hacking is a mixing of curiosity, study and practice. Being passionate and motivated about it is really helpful and will definitely speed up the process. The path is long and really challenging, so keep it going!\n\u0026ldquo;Yes, I am a criminal. My crime is that of curiosity.\u0026rdquo; — The Mentor (Loyd Blankenship) at The Hacker Manifesto\n","permalink":"http://localhost:1313/posts/starting-point/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIf you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\u003c/p\u003e","title":"Starting Point"},{"content":"Introduction In this post series we are going to solve every level from bandit in OverTheWire. This guide pretends to be a writeup containing the solutions of the level, designed for beginners.\nTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing WSL, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\nEvery section will contain the solution as well as some tips for people who is absolutely beginner.\nTips First of all, some tips:\nDo not use this as first resource to solve the levels. Try on your own, make mistakes and learn from them. Only check the solution as last resource or if you are completely new and you have absolutely no idea about what to do next. Take notes from your learning. Write up commands, tips and everything which can be useful in the future. Make sure to understand everything. Is a good idea to note the passwords for every level. If you want to continue letter, you can simply log in in the desired level. It is annoying to repeat everything! Follow the tips and information provided at OverTheWire website. Levels Here is my solution for every level:\nBandit0 Bandit1 Bandit2 Bandit3 Bandit4 Bandit5 Bandit6 Bandit7 Bandit8 Bandit9 ","permalink":"http://localhost:1313/posts/otw/bandit/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIn this post series we are going to solve every level from bandit in \u003ca href=\"https://overthewire.org/wargames/bandit/\"\u003e\u003cem\u003eOverTheWire\u003c/em\u003e\u003c/a\u003e.\nThis guide pretends to be a writeup containing the solutions of the level, designed for beginners.\u003c/p\u003e\n\u003cp\u003eTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing \u003ca href=\"https://learn.microsoft.com/en-us/windows/wsl/install\"\u003eWSL\u003c/a\u003e, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\u003c/p\u003e","title":"Bandit"},{"content":"Level description The goal of this level is for you to log into the game using SSH. The host to which you need to connect is bandit.labs.overthewire.org, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\nTips for beginners Read a bit about what SSH is. Research about what a port is. Solution This is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go here.\nAt Linux, we can use ssh client to connect to the server. It should be installed by default on your system. If not, please first research about how to install. Once you have the SSH client installed, you can log in into the first level as follows:\nssh bandit0@bandit.labs.overthewire.org -p 2220 Syntax is simple: ssh \u0026lt;username\u0026gt;@\u0026lt;hostname\u0026gt; -p \u0026lt;port\u0026gt;. Usually SSH runs on port 22 by default, but they changed to port 2220 so we must specify it in the command.\nOnce you try to log in, you will see something like this: NB: If it\u0026rsquo;s the first time you try to log in, you will be asked about the authenticity of the host. Just type yes.\nType the password bandit0 and press enter. Now you are inside bandit server, ready to begin with bandit1!\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit0/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe goal of this level is for you to log into the game using SSH. The host to which you need to connect is \u003cstrong\u003ebandit.labs.overthewire.org\u003c/strong\u003e, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eRead a bit about what SSH is.\u003c/li\u003e\n\u003cli\u003eResearch about what a port is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go \u003ca href=\"https://en.wikipedia.org/wiki/Secure_Shell\"\u003ehere\u003c/a\u003e.\u003c/p\u003e","title":"Bandit0"},{"content":"Level description The password for the next level is stored in a file called readme located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\nTips for beginners Learn about home directory in Linux. Learn to use cat and ls commands. Solution First step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\nls This shows in terminal the files at the current directory. There you will see the readme file.\nNow we can to check the contents, so let\u0026rsquo;s use cat:\ncat readme To read a file, we use cat \u0026lt;filename\u0026gt;.\nNB: Not every file is human readable in Linux. We deep more about this in later levels.\nThe content of the readme file reveals the password for bandit2 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit1/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u003cstrong\u003ereadme\u003c/strong\u003e located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn about home directory in Linux.\u003c/li\u003e\n\u003cli\u003eLearn to use \u003ccode\u003ecat\u003c/code\u003e and \u003ccode\u003els\u003c/code\u003e commands.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eFirst step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\u003c/p\u003e","title":"Bandit0 -\u003e Bandit 1"},{"content":"Level description The password for the next level is stored in a file called - located in the home directory\nTips for beginners Try to understand why previous solution is not working as you expect. Solution You may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our cat command: The terminal is waiting for something else. This happens due to character - is used to pass arguments to our commands, and the linux shell is interpreting that. To prevent that, we could use:\ncat ./- NB: Dot . is used to refer current directory. The slash / is used at the end of directory name.\nWe get the password for bandit3 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit2/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called - located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eTry to understand why previous solution is not working as you expect.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eYou may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our \u003ccode\u003ecat\u003c/code\u003e command:\n\u003cimg alt=\"bandit2\" loading=\"lazy\" src=\"/images/otw/bandit/bandit2/0.png\"\u003e\u003c/p\u003e\n\u003cp\u003eThe terminal is \u003cem\u003ewaiting\u003c/em\u003e for something else. This happens due to character \u003ccode\u003e-\u003c/code\u003e is used to pass arguments to our commands, and the linux shell is interpreting that.\nTo prevent that, we could use:\u003c/p\u003e","title":"Bandit1 -\u003e Bandit2"},{"content":"Level description The password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\nTips for beginners Think about how to escape the whitespaces. Solution After login in the machine as bandit3, we can see the filename \u0026ndash;spaces in this filename\u0026ndash;.\nNow we have 2 problems:\nSame as previous level, filename starts with --, so it will be interpreted as an argument. Address this problem using ./. Filename contains whitespaces. This is an issue, as bash interpretes whitespaces to separate commands. To solve the second problem, we must escape the whitespace character in some way. Here is the solution:\ncat ./--spaces\\ in\\ this\\ filename-- NB: Little trick, you can start writting filename and press Tab to autocomplete the name. The \\ is going to be inserted automatically.\nJust using the \\ we can escape the whitespace.\nNow we can continue with the bandit4 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit3/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eThink about how to \u003cem\u003eescape\u003c/em\u003e the whitespaces.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAfter login in the machine as bandit3, we can see the filename \u003cem\u003e\u0026ndash;spaces in this filename\u0026ndash;\u003c/em\u003e.\u003c/p\u003e\n\u003cp\u003eNow we have 2 problems:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eSame as previous level, filename starts with \u003ccode\u003e--\u003c/code\u003e, so it will be interpreted as an argument. Address this problem using \u003ccode\u003e./\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003eFilename contains \u003cstrong\u003ewhitespaces\u003c/strong\u003e. This is an issue, as bash interpretes whitespaces to separate commands.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eTo solve the second problem, we must escape the whitespace character in some way. Here is the solution:\u003c/p\u003e","title":"Bandit2 -\u003e Bandit3"},{"content":"Level description The password for the next level is stored in a hidden file in the inhere directory.\nTips for beginners Learn how to navigate directories in Linux. First understand what a hidden file is. Solution Listing directory files inside bandit4\u0026rsquo;s home directory, show directory inhere.\nNB: How to distinguish files and directories in Linux? Use ls -l and see the difference.\nWe have 2 options now:\nMove to inhere directory and check contens again. Check contents directly. Moving to another directory can be done using cd \u0026lt;dirName\u0026gt;. If you prefer to check directory contents directly, use ls \u0026lt;dirName\u0026gt;.\nAfter checking inhere contents via ls, we see nothing. The reason is the file is a hidden file. A hidden file in Linux is everyfile whose name starts with dot .. Hidden files are not shown by default with ls command, so we must add a special flag -a to list all files: NB: Both flags -l and -a cna be combined into a single flag -al, which is shorter to type.\nAs you can see, filename is \u0026hellip;Hidding-From-You starting with three dots. Reading file contents should be easy at this point!\nNext level is bandit5.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit4/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a hidden file in the inhere directory.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to navigate directories in Linux.\u003c/li\u003e\n\u003cli\u003eFirst understand what a hidden file is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eListing directory files inside bandit4\u0026rsquo;s home directory, show directory \u003cstrong\u003einhere\u003c/strong\u003e.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e How to distinguish files and directories in Linux? Use \u003ccode\u003els -l\u003c/code\u003e and see the difference.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eWe have 2 options now:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eMove to inhere directory and check contens again.\u003c/li\u003e\n\u003cli\u003eCheck contents directly.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eMoving to another directory can be done using \u003ccode\u003ecd \u0026lt;dirName\u0026gt;\u003c/code\u003e. If you prefer to check directory contents directly, use \u003ccode\u003els \u0026lt;dirName\u0026gt;\u003c/code\u003e.\u003c/p\u003e","title":"Bandit3 -\u003e Bandit4"},{"content":"Level description The password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\nTips for beginners What means human-readable file? Is there any way to check filetype at Linux?. Solution Checking inhere\u0026rsquo;s contents shows some files names \u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII here\nSo now, our goal is checking if file content of every file in the folder is ASCII or not. file \u0026lt;filename\u0026gt; does the job. Note the use of *. That called a wildcard regular expression, we\u0026rsquo;ll deep into it in later levels. An easy approach could be checking every file separately:\nfile ./--file00 file ./--file01 ... file ./--file09 But that\u0026rsquo;s not funny, imagine we have 100 files to check. All the files are in the same directory, so we can use cat ./* where ./* matches every filename in the directory, applying file to every file.\nNB: Another approach is to use find with certaing flags. Try to do in different ways, don\u0026rsquo;t stick to my solution.\nThe file \u0026ndash;file00 content is not readable, so get password from \u0026ndash;file07 and continue with bandit6.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit5/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eWhat means human-readable file?\u003c/li\u003e\n\u003cli\u003eIs there any way to check filetype at Linux?.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eChecking inhere\u0026rsquo;s contents shows some files names \u003cstrong\u003e\u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09\u003c/strong\u003e. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII \u003ca href=\"https://en.wikipedia.org/wiki/ASCII\"\u003ehere\u003c/a\u003e\u003c/p\u003e","title":"Bandit4 -\u003e Bandit5"},{"content":"Level description The password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\nhuman-readable 1033 bytes in size not executable Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution The purpose of the level is showing us how to find for files. Listing contents of inhere, we can see some folders, containing a lot of files inside: NB: Adding -R to ls shows recursively the content of every folder inside the directory listed.\nSo this time, checking every file is not an option. We need to find a file with some properties, specific size, not excutable and human-readable. Let\u0026rsquo;s explain the command we\u0026rsquo;re using:\nfind inhere/ -size 1033c ! -executable First, we specify the directory, in this case inhere. The option -size 1033c returns files of 1033 bytes. Then, with -executable we would get executable files, but we want not executable files, that\u0026rsquo;s why we are adding ! before.\nNB: By default, the -size option takes as argument the number of blocks. For example, -size 2 means 2 blocks of 512 bytes, so its 1024. The c is used to specify exact bytes. Don\u0026rsquo;t ask me why it\u0026rsquo;s c and not b 😅.\nThe property of human-readability is not implemented in find. This is not an issue, previous command returns a single file and it is human readable (we could confirm using file): Get your password and continue with bandit7.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit6/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ehuman-readable\u003c/li\u003e\n\u003cli\u003e1033 bytes in size\u003c/li\u003e\n\u003cli\u003enot executable\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThe purpose of the level is showing us how to find for files. Listing contents of \u003cstrong\u003einhere\u003c/strong\u003e, we can see some folders, containing a lot of files inside:\n\u003cimg alt=\"bandit6_0\" loading=\"lazy\" src=\"/images/otw/bandit/bandit6/0.png\"\u003e\u003c/p\u003e","title":"Bandit5 -\u003e Bandit6"},{"content":"Level description The password for the next level is stored somewhere on the server and has all of the following properties:\nowned by user bandit7 owned by group bandit6 33 bytes in size Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution This is very straightforward to do after completing previous level. Now we need to identify a file owned by user bandit7 and group bandi6. Furthermore, the file is somewhere on the server, which means we have to find in the root directory /.\nfind / -user bandit7 -group bandit6 -size 33c 2\u0026gt;/dev/null NB: I added that strange 2\u0026gt;/dev/null to filter error output. The reason why it works like that is more technical, for now just save this a fast way to filter errors in terminal. We get some errors because looking for files in the whole server may return some unaccesible files, as we don\u0026rsquo;t have root user permissions. We will study Linux permissions in later levels.\nWe should get a single file, containing password for bandit8.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit7/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored somewhere on the server and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eowned by user bandit7\u003c/li\u003e\n\u003cli\u003eowned by group bandit6\u003c/li\u003e\n\u003cli\u003e33 bytes in size\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is very straightforward to do after completing previous level. Now we need to identify a file owned by user bandit7 and group bandi6. Furthermore, the file is \u003cstrong\u003esomewhere on the server\u003c/strong\u003e, which means we have to find in the root directory \u003ccode\u003e/\u003c/code\u003e.\u003c/p\u003e","title":"Bandit6 -\u003e Bandit7"},{"content":"Level description The password for the next level is stored in the file data.txt next to the word millionth.\nTips for beginners Learn how to filter file contents. Solution At previous levels, we discovered how to find for files. Now it\u0026rsquo;s time to find for content inside a file. grep command is going to help with that task.\nNB: Of course I don\u0026rsquo;t want to spoil you the password!\nNotice how this can achieved in different ways.\nUsing grep \u0026lt;keyword\u0026gt; \u0026lt;filename\u0026gt;. Using the pipe | to execute grep over the result of cat command. Take you favorite path to solve the level, and continue with bandit9.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit8/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the file \u003cstrong\u003edata.txt\u003c/strong\u003e next to the word \u003cstrong\u003emillionth\u003c/strong\u003e.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to filter file contents.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAt previous levels, we discovered how to find for files. Now it\u0026rsquo;s time to find for content inside a file. \u003ccode\u003egrep\u003c/code\u003e command is going to help with that task.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"bandit8\" loading=\"lazy\" src=\"/images/otw/bandit/bandit8/0.png\"\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e Of course I don\u0026rsquo;t want to spoil you the password!\u003c/p\u003e","title":"Bandit7 -\u003e Bandit8"},{"content":"Level description The password for the next level is stored in the file data.txt and is the only line of text that occurs only once.\nTips for beginners First, apply sort to file content. Solution This level is a bit tricky. First, examine the file contents. Using head shows the 10 first lines of a file:\nNB: If you want to show more lines: head -20 or the number of your choice.\nThere are tons of different passwords. The correct one is the only line of text that occurs only once. Try to research how to do on your own. You maybe find uniq. This command has a very interesting flag, -u, used to show only the uniq lines. Let\u0026rsquo;s try with that:\nFor some reason, is not working. The trick here is to sort the file contents before applying uniq. This can be achieved using sort, so the final command looks like this:\ncat data.txt | sort | uniq -u NB: You need to sort lines first because uniq only detects consecutive repetitions. First time I solved this it took a while 😅.\nAfter getting the password, we can continue with bandit10.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit9/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the file \u003cstrong\u003edata.txt\u003c/strong\u003e and is the only line of text that occurs only once.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst, apply \u003ccode\u003esort\u003c/code\u003e to file content.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis level is a bit tricky. First, examine the file contents. Using \u003ccode\u003ehead\u003c/code\u003e shows the 10 first lines of a file:\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"bandit9_0\" loading=\"lazy\" src=\"/images/otw/bandit/bandit9/0.png\"\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e If you want to show more lines: \u003ccode\u003ehead -20\u003c/code\u003e or the number of your choice.\u003c/p\u003e","title":"Bandit8 -\u003e Bandit9"},{"content":"Level description The password for the next level is stored in the file data.txt in one of the few human-readable strings, preceded by several \u0026lsquo;=\u0026rsquo; characters.\nTips for beginners strings can be used to retrieve human readable-content from a file. You can apply things from previous levels. Solution The file data.txt has mixed content, binary and ASCII. If the password is preceded by several \u0026lsquo;=\u0026rsquo; characters, we can simply filter by some of them. But there is a little problem, content is not fully ASCII, so grep won\u0026rsquo;t work. First you need to get content with strings to get only the human readable content.\nNB: Try to run both cat and strings separately. Observe the differences.\nNext level is bandit11 (in progress).\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit10/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the file \u003cstrong\u003edata.txt\u003c/strong\u003e in one of the few human-readable strings, preceded by several \u0026lsquo;=\u0026rsquo; characters.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003estrings\u003c/code\u003e can be used to retrieve human readable-content from a file.\u003c/li\u003e\n\u003cli\u003eYou can apply things from previous levels.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThe file \u003cstrong\u003edata.txt\u003c/strong\u003e has mixed content, binary and ASCII. If the password is preceded by several \u0026lsquo;=\u0026rsquo; characters, we can simply filter by some of them. But there is a little problem, content is not fully ASCII, so \u003ccode\u003egrep\u003c/code\u003e won\u0026rsquo;t work. First you need to get content with \u003ccode\u003estrings\u003c/code\u003e to get only the human readable content.\u003c/p\u003e","title":"Bandit9 -\u003e Bandit10"},{"content":"👨‍💻 whoami Hey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\nWhat is this❓​ This blog is basically my thoughts on several hacking topics. Here you’ll see:\nWriteups from CTF challenges, from platforms like HackTheBox or OverTheWire.\nWalkthroughs and notes on pentesting techniques I’m learning or testing.\nSome posts on cryptography — because math can be fun (sometimes).\nRandom topics that freaks like me may (just may) find interesting.\nThe idea is simple: share what I learn, document my journey, and maybe help others who are also diving into the exciting world of ethical hacking.\n📫 Contact Want to say hi, share ideas, or just geek out about hacking? Reach me here:\n📧 Email: mrb0b1073@proton.me 💻​ GitHub: mrb0b173 🟩​ HackTheBox: mrb0b1073 ","permalink":"http://localhost:1313/about/","summary":"\u003ch2 id=\"-whoami\"\u003e👨‍💻 whoami\u003c/h2\u003e\n\u003cp\u003eHey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\u003c/p\u003e\n\u003chr\u003e\n\u003ch2 id=\"what-is-this\"\u003eWhat is this❓​\u003c/h2\u003e\n\u003cp\u003eThis blog is basically my thoughts on several hacking topics. Here you’ll see:\u003c/p\u003e","title":"About"},{"content":"Hey! 👋 I\u0026rsquo;m mrb0b1073 and this is my first post.\nWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\nExcited to start this adventure!\n","permalink":"http://localhost:1313/posts/hello-world/","summary":"\u003cp\u003eHey! 👋 I\u0026rsquo;m \u003cstrong\u003emrb0b1073\u003c/strong\u003e and this is my first post.\u003c/p\u003e\n\u003cp\u003eWelcome to my blog where I’ll be sharing my journey in cybersecurity, pentesting, ethical hacking, and some random topics I find interesting.\u003cbr\u003e\nHere you’ll find CTF writeups, tips, and notes on techniques I’m learning along the way.\u003c/p\u003e\n\u003cp\u003eExcited to start this adventure!\u003c/p\u003e","title":"Hello World"},{"content":"Introduction If you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\nIn cybersecurity there are broadly two complementary roles: Blue Team and Red Team. Blue Teams focus on defense, monitoring, incident response, hardening systems and keeping services secure, while Red Teams simulate attackers to find weaknesses and prove what an adversary could do. Ethical hacking aligns closely with Red Team operations, but cybersecurity is highly transversal across IT. There are many specialities or areas, such as cloud security, appsec, pentesting, forensics, governance, risk management, malware analysis, etc. Every topic could deserve its own post, so let\u0026rsquo;s keep it simple and focus on ethical hacking.\nHacker philosophy Let\u0026rsquo;s start with the idea of what is exactly a hacker. A hacker is someone who explores systems to understand how they work, finds creative ways to make or fix things, and solves technical problems. Historically the word describes curiosity, craft, and a drive to improve systems — not criminality. It is important to make the distinction between hacker and cracker, also called cybercriminal. A hacker explores, builds, discloses responsibly and works to improve security. They work in authorized environments or labs. On the other hand, a cracker breaks into systems for theft, vandalism or other illicit gain.\nHere you can find the most popularized ideas often summarized as the hacker ethic:\nCuriosity first: Learn by exploring and tinkering. Freedom of information: All knowledge should be shared to help progress. This fits properly with the idea of open source. Mistrust of needless authority: Centralized control sometimes blocks innovation. It is always good to question anything, specially common assumptions. Meritocracy: Skills, craft and results matter more than titles. Craftsmanship \u0026amp; elegance: Technical beauty matters. Build clean, clever and efficient solutions. Responsability \u0026amp; ethics: Use your skills to build, fix, educate and defend, not to harm. Core fundamentals Assuming you want to init yourself in hacking, you should first build competence across three basic pillars.\nOperating Systems You should learn as much as possible about Linux and Windows. Specially Linux, all the tools you will be using are meant to be used in a Linux environment. Skill with shell is required, learn basic commands and how to interact with the OS using the terminal. Research about processes, file permissions, package management and logs. A large proportion of web servers around the world run on Linux, although Windows is also widely used. Windows knowledge is really valuable too, considering active directory is strongly used in corporate environments.\nNetworking You have to understand how computers communicate each other. Understand basic networking concepts, IP adresses, subnetting, proxies, find out how internet works. Study some protocols such as TCP/IP, HTTP, DNS or SSH. This could sound confusing for beginners, but this step is not optional! Study different client/server models and how services expose attack surfaces.\nProgramming \u0026amp; scripting Is this completely required? Maybe not for complete beginners. Does it help? Absolutely yes. Understanding how web apps or any type of application works makes things much easier. You can imagine different entry points to exploit if you understand how systems are designed. Also writing scripts in bash or python makes you more productive through automation.\nEthical Hacking foundations Once you feel confident with these 3 pillars, you can go to the next step. You can study about different topics and areas. For example, binary exploiting, web pentesting, mobile pentesting, wireless hacking, etc. You should start picking a focus, in this post we focus on web pentesting, as it is beginner friendly. Also web applications are the bread and butter in companies nowadays.\nKey concepts to study:\nCIA Triad: CIA refers to Confidentiality, Integrity and Availability. These three concepts are key in information security, and describe properties we want to ensure in our systems and information. Web Security basics, OWASP: Study the OWASP Top 10, which summarizes most frequent web security risks. Authentication and session control: Understand the concepts of Authentication and Authorization, research about how session is handled in web apps, cookies, JWT tokens, etc. Input validation \u0026amp; injection attacks: Learn about SQL Injection, Cross-Site Scripting (XSS), Code Injection, SSTI, and every injection type. Secure development lifecycle: Find out how to implement security controls in code. This can be more related to Blue Team, but as Red Teamer it is important to understand. Firewall evasion: What a firewall is and some techniques/methods to bypass. Some cryptography: Understand what a chiper and a hash are, how information is encrypted to prevent access from 3rd parties. Focusing on web, read about TLS protocol. There are many more topics you can research and learn, but this could be a nice starting point.\nTools and platforms to learn Now you have an idea of what to study, let\u0026rsquo;s see how to start in practical terms.\nSome platforms I personally recommend:\nOverTheWire: Here you can find some CTFs (Capture The Flag) which are fun to play and also really instructive. Bandit games are a must for complete beginners, as you will explore some linux and bash concepts which are basic to continue. The games are leveled by difficulty, in their web you can get all the information about how to play, only a terminal and SSH is required. This helps building your foundation in Linux OS. HackTheBox: Nº 1 platform in cybersecurity. Has a lot of resources to learn all this core fundamentals, and also red team / blue team security topics. It is focused on labs where you can test your skills hacking different boxes but if you really want to learn it is worth to invest time and money in the academy. I have to say the level here is high, specially if you try to hack machines on your own without using some guide or writeup. TryHackMe: More beginner friendly than hackthebox, it provides a lot of guided learning resources. PortSwigger Labs: Practical labs about specific topics, focused on web hacking. They are great to learn and understand different types of attacks, injections, and security misconfigurations. I would recommend digging into this once you have the theoretical basis about these concepts. I have to mention a few tools I am sure you\u0026rsquo;d end up using:\nNmap: This is probably the most famous tool in hacking, allowing you to gather information about ports and services running in a machine. Burpsuite: A proxy tool widely used in web application security testing. It basically allows you to intercept and modify web requests, which can be used to perform several types of attacks. Metasploit: The most used pentesting framework. Contains a large amount of scripts and exploits ready to run. Another crucial step here is to set up your virtual lab environment to test vulnerable applications. To achieve this goal, there are some Linux distributions like Kali, Parrot or BlackArch, but that\u0026rsquo;s a topic for another post.\nFinal thoughs To sum up, this would be my personal roadmap:\nLearn the fundamentals, specially Linux and networking. Install some Linux in a virtual machine, play with it, get comfortable with the terminal. You can start with bandit wargames in OverTheWire. Complete every level and make sure to understand everything as clear as possible. Move to guided boxes on HackTheBox. I recommend you joining their Discord, ask questions, community is great there! Take notes, repeat, learn, improve your skills. Maybe use your own lab environment, create your own vulnerable apps. Hacking is a mixing of curiosity, study and practice. Being passionate and motivated about it is really helpful and will definitely speed up the process. The path is long and really challenging, so keep it going!\n\u0026ldquo;Yes, I am a criminal. My crime is that of curiosity.\u0026rdquo; — The Mentor (Loyd Blankenship) at The Hacker Manifesto\n","permalink":"http://localhost:1313/posts/starting-point/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIf you’re reading this and you’ve never touched a terminal, written a script, or used Linux, you’re in the right place. This is intended to be a short, practical roadmap to get started in ethical hacking — what hackers do, the mindset behind it, the technical foundations you should build, and the platforms and some tools/personal recommendations that will actually teach you. We could call this a beginner starting point for ethical hacking from my point of view.\u003c/p\u003e","title":"Starting Point"},{"content":"Introduction In this post series we are going to solve every level from bandit in OverTheWire. This guide pretends to be a writeup containing the solutions of the level, designed for beginners.\nTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing WSL, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\nEvery section will contain the solution as well as some tips for people who is absolutely beginner.\nTips First of all, some tips:\nDo not use this as first resource to solve the levels. Try on your own, make mistakes and learn from them. Only check the solution as last resource or if you are completely new and you have absolutely no idea about what to do next. Take notes from your learning. Write up commands, tips and everything which can be useful in the future. Make sure to understand everything. Is a good idea to note the passwords for every level. If you want to continue letter, you can simply log in in the desired level. It is annoying to repeat everything! Follow the tips and information provided at OverTheWire website. Levels Here is my solution for every level:\nBandit0 Bandit1 Bandit2 Bandit3 Bandit4 Bandit5 Bandit6 Bandit7 Bandit8 Bandit9 Bandit10 Bandit11 (in progress) ","permalink":"http://localhost:1313/posts/otw/bandit/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eIn this post series we are going to solve every level from bandit in \u003ca href=\"https://overthewire.org/wargames/bandit/\"\u003e\u003cem\u003eOverTheWire\u003c/em\u003e\u003c/a\u003e.\nThis guide pretends to be a writeup containing the solutions of the level, designed for beginners.\u003c/p\u003e\n\u003cp\u003eTo play the games, you just need a Linux OS or terminal, some patience and motivation for learning. If you are windows user I recommend installing \u003ca href=\"https://learn.microsoft.com/en-us/windows/wsl/install\"\u003eWSL\u003c/a\u003e, it\u0026rsquo;s really simple to use. But of course you could use Kali Linux, Parrot, or basically any Linux system.\u003c/p\u003e","title":"Bandit"},{"content":"Level description The goal of this level is for you to log into the game using SSH. The host to which you need to connect is bandit.labs.overthewire.org, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\nTips for beginners Read a bit about what SSH is. Research about what a port is. Solution This is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go here.\nAt Linux, we can use ssh client to connect to the server. It should be installed by default on your system. If not, please first research about how to install. Once you have the SSH client installed, you can log in into the first level as follows:\nssh bandit0@bandit.labs.overthewire.org -p 2220 Syntax is simple: ssh \u0026lt;username\u0026gt;@\u0026lt;hostname\u0026gt; -p \u0026lt;port\u0026gt;. Usually SSH runs on port 22 by default, but they changed to port 2220 so we must specify it in the command.\nOnce you try to log in, you will see something like this: NB: If it\u0026rsquo;s the first time you try to log in, you will be asked about the authenticity of the host. Just type yes.\nType the password bandit0 and press enter. Now you are inside bandit server, ready to begin with bandit1!\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit0/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe goal of this level is for you to log into the game using SSH. The host to which you need to connect is \u003cstrong\u003ebandit.labs.overthewire.org\u003c/strong\u003e, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eRead a bit about what SSH is.\u003c/li\u003e\n\u003cli\u003eResearch about what a port is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is just the tutorial. Here we learn to connect to a server using SSH. For more information about what SSH is, please go \u003ca href=\"https://en.wikipedia.org/wiki/Secure_Shell\"\u003ehere\u003c/a\u003e.\u003c/p\u003e","title":"Bandit0"},{"content":"Level description The password for the next level is stored in a file called readme located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\nTips for beginners Learn about home directory in Linux. Learn to use cat and ls commands. Solution First step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\nls This shows in terminal the files at the current directory. There you will see the readme file.\nNow we can to check the contents, so let\u0026rsquo;s use cat:\ncat readme To read a file, we use cat \u0026lt;filename\u0026gt;.\nNB: Not every file is human readable in Linux. We deep more about this in later levels.\nThe content of the readme file reveals the password for bandit2 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit1/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u003cstrong\u003ereadme\u003c/strong\u003e located in the home directory. Use this password to log into bandit1 using SSH. Whenever you find a password for a level, use SSH (on port 2220) to log into that level and continue the game.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn about home directory in Linux.\u003c/li\u003e\n\u003cli\u003eLearn to use \u003ccode\u003ecat\u003c/code\u003e and \u003ccode\u003els\u003c/code\u003e commands.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eFirst step is to learn basic Linux commands. How we can read files? How can we list files inside a directory? To achieve this goal, lets just type:\u003c/p\u003e","title":"Bandit0 -\u003e Bandit 1"},{"content":"Level description The password for the next level is stored in a file called - located in the home directory\nTips for beginners Try to understand why previous solution is not working as you expect. Solution You may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our cat command: The terminal is waiting for something else. This happens due to character - is used to pass arguments to our commands, and the linux shell is interpreting that. To prevent that, we could use:\ncat ./- NB: Dot . is used to refer current directory. The slash / is used at the end of directory name.\nWe get the password for bandit3 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit2/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called - located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eTry to understand why previous solution is not working as you expect.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eYou may be asking yourself why OverTheWire people are asking the same as previous level. Let\u0026rsquo;s try with our \u003ccode\u003ecat\u003c/code\u003e command:\n\u003cimg alt=\"bandit2\" loading=\"lazy\" src=\"/images/otw/bandit/bandit2/0.png\"\u003e\u003c/p\u003e\n\u003cp\u003eThe terminal is \u003cem\u003ewaiting\u003c/em\u003e for something else. This happens due to character \u003ccode\u003e-\u003c/code\u003e is used to pass arguments to our commands, and the linux shell is interpreting that.\nTo prevent that, we could use:\u003c/p\u003e","title":"Bandit1 -\u003e Bandit2"},{"content":"Level description The password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\nTips for beginners Think about how to escape the whitespaces. Solution After login in the machine as bandit3, we can see the filename \u0026ndash;spaces in this filename\u0026ndash;.\nNow we have 2 problems:\nSame as previous level, filename starts with --, so it will be interpreted as an argument. Address this problem using ./. Filename contains whitespaces. This is an issue, as bash interpretes whitespaces to separate commands. To solve the second problem, we must escape the whitespace character in some way. Here is the solution:\ncat ./--spaces\\ in\\ this\\ filename-- NB: Little trick, you can start writting filename and press Tab to autocomplete the name. The \\ is going to be inserted automatically.\nJust using the \\ we can escape the whitespace.\nNow we can continue with the bandit4 level.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit3/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file called \u0026ndash;spaces in this filename\u0026ndash; located in the home directory\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eThink about how to \u003cem\u003eescape\u003c/em\u003e the whitespaces.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAfter login in the machine as bandit3, we can see the filename \u003cem\u003e\u0026ndash;spaces in this filename\u0026ndash;\u003c/em\u003e.\u003c/p\u003e\n\u003cp\u003eNow we have 2 problems:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eSame as previous level, filename starts with \u003ccode\u003e--\u003c/code\u003e, so it will be interpreted as an argument. Address this problem using \u003ccode\u003e./\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003eFilename contains \u003cstrong\u003ewhitespaces\u003c/strong\u003e. This is an issue, as bash interpretes whitespaces to separate commands.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eTo solve the second problem, we must escape the whitespace character in some way. Here is the solution:\u003c/p\u003e","title":"Bandit2 -\u003e Bandit3"},{"content":"Level description The password for the next level is stored in a hidden file in the inhere directory.\nTips for beginners Learn how to navigate directories in Linux. First understand what a hidden file is. Solution Listing directory files inside bandit4\u0026rsquo;s home directory, show directory inhere.\nNB: How to distinguish files and directories in Linux? Use ls -l and see the difference.\nWe have 2 options now:\nMove to inhere directory and check contens again. Check contents directly. Moving to another directory can be done using cd \u0026lt;dirName\u0026gt;. If you prefer to check directory contents directly, use ls \u0026lt;dirName\u0026gt;.\nAfter checking inhere contents via ls, we see nothing. The reason is the file is a hidden file. A hidden file in Linux is everyfile whose name starts with dot .. Hidden files are not shown by default with ls command, so we must add a special flag -a to list all files: NB: Both flags -l and -a cna be combined into a single flag -al, which is shorter to type.\nAs you can see, filename is \u0026hellip;Hidding-From-You starting with three dots. Reading file contents should be easy at this point!\nNext level is bandit5.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit4/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a hidden file in the inhere directory.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to navigate directories in Linux.\u003c/li\u003e\n\u003cli\u003eFirst understand what a hidden file is.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eListing directory files inside bandit4\u0026rsquo;s home directory, show directory \u003cstrong\u003einhere\u003c/strong\u003e.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e How to distinguish files and directories in Linux? Use \u003ccode\u003els -l\u003c/code\u003e and see the difference.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eWe have 2 options now:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eMove to inhere directory and check contens again.\u003c/li\u003e\n\u003cli\u003eCheck contents directly.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eMoving to another directory can be done using \u003ccode\u003ecd \u0026lt;dirName\u0026gt;\u003c/code\u003e. If you prefer to check directory contents directly, use \u003ccode\u003els \u0026lt;dirName\u0026gt;\u003c/code\u003e.\u003c/p\u003e","title":"Bandit3 -\u003e Bandit4"},{"content":"Level description The password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\nTips for beginners What means human-readable file? Is there any way to check filetype at Linux?. Solution Checking inhere\u0026rsquo;s contents shows some files names \u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII here\nSo now, our goal is checking if file content of every file in the folder is ASCII or not. file \u0026lt;filename\u0026gt; does the job. Note the use of *. That called a wildcard regular expression, we\u0026rsquo;ll deep into it in later levels. An easy approach could be checking every file separately:\nfile ./--file00 file ./--file01 ... file ./--file09 But that\u0026rsquo;s not funny, imagine we have 100 files to check. All the files are in the same directory, so we can use cat ./* where ./* matches every filename in the directory, applying file to every file.\nNB: Another approach is to use find with certaing flags. Try to do in different ways, don\u0026rsquo;t stick to my solution.\nThe file \u0026ndash;file00 content is not readable, so get password from \u0026ndash;file07 and continue with bandit6.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit5/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the only human-readable file in the inhere directory. Tip: if your terminal is messed up, try the “reset” command.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eWhat means human-readable file?\u003c/li\u003e\n\u003cli\u003eIs there any way to check filetype at Linux?.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eChecking inhere\u0026rsquo;s contents shows some files names \u003cstrong\u003e\u0026ndash;file00, \u0026ndash;file01, \u0026hellip;, \u0026ndash;file09\u003c/strong\u003e. First things first, what is exactly a human-readable file? As you may be thinking, is a file whose content can be read by humans, i.e, ASCII text files. Check more about ASCII \u003ca href=\"https://en.wikipedia.org/wiki/ASCII\"\u003ehere\u003c/a\u003e\u003c/p\u003e","title":"Bandit4 -\u003e Bandit5"},{"content":"Level description The password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\nhuman-readable 1033 bytes in size not executable Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution The purpose of the level is showing us how to find for files. Listing contents of inhere, we can see some folders, containing a lot of files inside: NB: Adding -R to ls shows recursively the content of every folder inside the directory listed.\nSo this time, checking every file is not an option. We need to find a file with some properties, specific size, not excutable and human-readable. Let\u0026rsquo;s explain the command we\u0026rsquo;re using:\nfind inhere/ -size 1033c ! -executable First, we specify the directory, in this case inhere. The option -size 1033c returns files of 1033 bytes. Then, with -executable we would get executable files, but we want not executable files, that\u0026rsquo;s why we are adding ! before.\nNB: By default, the -size option takes as argument the number of blocks. For example, -size 2 means 2 blocks of 512 bytes, so its 1024. The c is used to specify exact bytes. Don\u0026rsquo;t ask me why it\u0026rsquo;s c and not b 😅.\nThe property of human-readability is not implemented in find. This is not an issue, previous command returns a single file and it is human readable (we could confirm using file): Get your password and continue with bandit7.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit6/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ehuman-readable\u003c/li\u003e\n\u003cli\u003e1033 bytes in size\u003c/li\u003e\n\u003cli\u003enot executable\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThe purpose of the level is showing us how to find for files. Listing contents of \u003cstrong\u003einhere\u003c/strong\u003e, we can see some folders, containing a lot of files inside:\n\u003cimg alt=\"bandit6_0\" loading=\"lazy\" src=\"/images/otw/bandit/bandit6/0.png\"\u003e\u003c/p\u003e","title":"Bandit5 -\u003e Bandit6"},{"content":"Level description The password for the next level is stored somewhere on the server and has all of the following properties:\nowned by user bandit7 owned by group bandit6 33 bytes in size Tips for beginners First learn different ways to find files at Linux. Understand basic file properties, such as name, size or owner. Solution This is very straightforward to do after completing previous level. Now we need to identify a file owned by user bandit7 and group bandi6. Furthermore, the file is somewhere on the server, which means we have to find in the root directory /.\nfind / -user bandit7 -group bandit6 -size 33c 2\u0026gt;/dev/null NB: I added that strange 2\u0026gt;/dev/null to filter error output. The reason why it works like that is more technical, for now just save this a fast way to filter errors in terminal. We get some errors because looking for files in the whole server may return some unaccesible files, as we don\u0026rsquo;t have root user permissions. We will study Linux permissions in later levels.\nWe should get a single file, containing password for bandit8.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit7/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored somewhere on the server and has all of the following properties:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eowned by user bandit7\u003c/li\u003e\n\u003cli\u003eowned by group bandit6\u003c/li\u003e\n\u003cli\u003e33 bytes in size\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst learn different ways to find files at Linux.\u003c/li\u003e\n\u003cli\u003eUnderstand basic file properties, such as name, size or owner.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis is very straightforward to do after completing previous level. Now we need to identify a file owned by user bandit7 and group bandi6. Furthermore, the file is \u003cstrong\u003esomewhere on the server\u003c/strong\u003e, which means we have to find in the root directory \u003ccode\u003e/\u003c/code\u003e.\u003c/p\u003e","title":"Bandit6 -\u003e Bandit7"},{"content":"Level description The password for the next level is stored in the file data.txt next to the word millionth.\nTips for beginners Learn how to filter file contents. Solution At previous levels, we discovered how to find for files. Now it\u0026rsquo;s time to find for content inside a file. grep command is going to help with that task.\nNB: Of course I don\u0026rsquo;t want to spoil you the password!\nNotice how this can achieved in different ways.\nUsing grep \u0026lt;keyword\u0026gt; \u0026lt;filename\u0026gt;. Using the pipe | to execute grep over the result of cat command. Take you favorite path to solve the level, and continue with bandit9.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit8/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the file \u003cstrong\u003edata.txt\u003c/strong\u003e next to the word \u003cstrong\u003emillionth\u003c/strong\u003e.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLearn how to filter file contents.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eAt previous levels, we discovered how to find for files. Now it\u0026rsquo;s time to find for content inside a file. \u003ccode\u003egrep\u003c/code\u003e command is going to help with that task.\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"bandit8\" loading=\"lazy\" src=\"/images/otw/bandit/bandit8/0.png\"\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e Of course I don\u0026rsquo;t want to spoil you the password!\u003c/p\u003e","title":"Bandit7 -\u003e Bandit8"},{"content":"Level description The password for the next level is stored in the file data.txt and is the only line of text that occurs only once.\nTips for beginners First, apply sort to file content. Solution This level is a bit tricky. First, examine the file contents. Using head shows the 10 first lines of a file:\nNB: If you want to show more lines: head -20 or the number of your choice.\nThere are tons of different passwords. The correct one is the only line of text that occurs only once. Try to research how to do on your own. You maybe find uniq. This command has a very interesting flag, -u, used to show only the uniq lines. Let\u0026rsquo;s try with that:\nFor some reason, is not working. The trick here is to sort the file contents before applying uniq. This can be achieved using sort, so the final command looks like this:\ncat data.txt | sort | uniq -u NB: You need to sort lines first because uniq only detects consecutive repetitions. First time I solved this it took a while 😅.\nAfter getting the password, we can continue with bandit10.\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit9/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the file \u003cstrong\u003edata.txt\u003c/strong\u003e and is the only line of text that occurs only once.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eFirst, apply \u003ccode\u003esort\u003c/code\u003e to file content.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThis level is a bit tricky. First, examine the file contents. Using \u003ccode\u003ehead\u003c/code\u003e shows the 10 first lines of a file:\u003c/p\u003e\n\u003cp\u003e\u003cimg alt=\"bandit9_0\" loading=\"lazy\" src=\"/images/otw/bandit/bandit9/0.png\"\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eNB:\u003c/strong\u003e If you want to show more lines: \u003ccode\u003ehead -20\u003c/code\u003e or the number of your choice.\u003c/p\u003e","title":"Bandit8 -\u003e Bandit9"},{"content":"Level description The password for the next level is stored in the file data.txt in one of the few human-readable strings, preceded by several \u0026lsquo;=\u0026rsquo; characters.\nTips for beginners strings can be used to retrieve human readable-content from a file. You can apply things from previous levels. Solution The file data.txt has mixed content, binary and ASCII. If the password is preceded by several \u0026lsquo;=\u0026rsquo; characters, we can simply filter by some of them. But there is a little problem, content is not fully ASCII, so grep won\u0026rsquo;t work. First you need to get content with strings to get only the human readable content.\nNB: Try to run both cat and strings separately. Observe the differences.\nNext level is bandit11 (in progress).\n","permalink":"http://localhost:1313/posts/otw/bandit/bandit10/","summary":"\u003ch2 id=\"level-description\"\u003eLevel description\u003c/h2\u003e\n\u003cp\u003eThe password for the next level is stored in the file \u003cstrong\u003edata.txt\u003c/strong\u003e in one of the few human-readable strings, preceded by several \u0026lsquo;=\u0026rsquo; characters.\u003c/p\u003e\n\u003ch2 id=\"tips-for-beginners\"\u003eTips for beginners\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003estrings\u003c/code\u003e can be used to retrieve human readable-content from a file.\u003c/li\u003e\n\u003cli\u003eYou can apply things from previous levels.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"solution\"\u003eSolution\u003c/h2\u003e\n\u003cp\u003eThe file \u003cstrong\u003edata.txt\u003c/strong\u003e has mixed content, binary and ASCII. If the password is preceded by several \u0026lsquo;=\u0026rsquo; characters, we can simply filter by some of them. But there is a little problem, content is not fully ASCII, so \u003ccode\u003egrep\u003c/code\u003e won\u0026rsquo;t work. First you need to get content with \u003ccode\u003estrings\u003c/code\u003e to get only the human readable content.\u003c/p\u003e","title":"Bandit9 -\u003e Bandit10"},{"content":"👨‍💻 whoami Hey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\nWhat is this❓​ This blog is basically my thoughts on several hacking topics. Here you’ll see:\nWriteups from CTF challenges, from platforms like HackTheBox or OverTheWire.\nWalkthroughs and notes on pentesting techniques I’m learning or testing.\nSome posts on cryptography — because math can be fun (sometimes).\nRandom topics that freaks like me may (just may) find interesting.\nThe idea is simple: share what I learn, document my journey, and maybe help others who are also diving into the exciting world of ethical hacking.\n📫 Contact Want to say hi, share ideas, or just geek out about hacking? Reach me here:\n📧 Email: mrb0b1073@proton.me 💻​ GitHub: mrb0b173 🟩​ HackTheBox: mrb0b1073 ","permalink":"http://localhost:1313/about/","summary":"\u003ch2 id=\"-whoami\"\u003e👨‍💻 whoami\u003c/h2\u003e\n\u003cp\u003eHey! I’m just a curious mind who loves digging into cybersecurity and ethical hacking. I enjoy tinkering with systems, breaking things (in a good way), and then figuring out how to put them back together. Most of the time you’ll find me messing around with pentesting tools, chasing flags, or exploring cryptography puzzles just for fun.\u003c/p\u003e\n\u003chr\u003e\n\u003ch2 id=\"what-is-this\"\u003eWhat is this❓​\u003c/h2\u003e\n\u003cp\u003eThis blog is basically my thoughts on several hacking topics. Here you’ll see:\u003c/p\u003e","title":"About"}]